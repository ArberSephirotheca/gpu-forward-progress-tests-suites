#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 ivec4 _f0;
 uint workgroup_id;
 uvec3 _f1;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 ivec3 _f0;
 _GLF_struct_1 _f1;
 vec4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat2x3(-3096.9174, -5.8, 747.249, 8.6, 6203.2969, -67.70)) : mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bool(bool(bool(_GLF_IDENTITY(false, (false) && true))))), ! (! (bool(bool(bool(bool(false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(310.977) : injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-3699.3032))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-4859.4921, 9700.9426)))).y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), max(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), _GLF_FUZZED(injectionSwitch))) : vec2(0.0, 0.0)))), max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, float(mat2x4(0.0, 0.0, 0.0, sqrt(1.0), 1.0, 1.0, 0.0, 0.0)))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))), _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), abs(vec2(0.0, 0.0)) + (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) / vec2(1.0, 1.0), min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(0.0, 0.0) + ((injectionSwitch)), clamp(vec2(0.0, 0.0) + ((injectionSwitch)), vec2(0.0, 0.0) + ((injectionSwitch)), vec2(0.0, 0.0) + ((injectionSwitch))))) / vec2(1.0, 1.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0) + ((injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - 0.0)) / 1.0)))) - _GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(0.0, 0.0)))), max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)))))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), ! (! (false || (false))))), bool(bvec2(! (false || (false)), true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), bool(bvec2(! (false || (false)), true)))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, sin(0.0)))).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(ivec3(1), _GLF_struct_1(_GLF_struct_0(ivec4(1), gl_WorkGroupID.x, uvec3(1u))), vec4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0)))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), true)), ! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, false, false))) || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (0u & 175475u) ^ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(uint(-3.5), (uint(-3.5)) ^ 0u)) : _GLF_IDENTITY(workgroup_size, (workgroup_size) * 1u))))), clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u), workgroup_size, workgroup_size)) * _GLF_struct_replacement_2._f1._f0.workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), clamp(uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(subgroup_size, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), max(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (true) || false))) && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true && (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.81) : injectionSwitch.y)))))))), true && (_GLF_IDENTITY(! (! (! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(! (! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false)), true && (bool(bvec3(! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, _GLF_IDENTITY(false, ! (! (false))))))))))))))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))) | (virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(subgroup_local_id, 1u))) >> 0u)))) + 1 < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) + 0), _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, 1u)), (true ? _GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) : _GLF_FUZZED(uvec3(13345u, 150365u, 82843u)))))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & 0u)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))), min(~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & 0u)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & 0u)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), true && ((subgroup_local_id + 1 < subgroup_size))), false || ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), ! (_GLF_IDENTITY(! (bool((true))), (! (bool((true)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), ! (_GLF_IDENTITY(! (bool((true))), (! (bool((true)))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(23913))), max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 0u), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)))))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))), max(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), _GLF_IDENTITY(((165522u & 0u)) | ((165522u & 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((165522u & 0u)), (((165522u & 0u))) - 0u) | ((165522u & 0u)))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size), false || ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))))))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))) + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x))))))))), false)))))), _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 0u), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((5.3 - injectionSwitch)) : injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7.8)), bool(false))))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0)), (float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0))) / 1.0))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))))))))))) || false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), 1u))), subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(min(_GLF_IDENTITY(-8295, min(-8295, -8295)), 94380)) : 1)))) < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1)))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false)))), bool(bvec2((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false)))), false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) * 1u) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.96))), injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), 1u))), subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))))), ! (! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false)))))))))), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0)))))))))), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | 0u) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.96))), injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.96))), injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / _GLF_IDENTITY(1u, 0u ^ (1u)))))))) | 0u))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(subgroup_local_id, 1u))) - (0u | 0u)), (uint(uvec2(subgroup_local_id, 1u))) >> 0u)))) + 1 < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)), (_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), max((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | 0u)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ((true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1, max(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (1) + 0), _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), 0u, _GLF_IDENTITY(0u, min(0u, 0u))), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), ~ (~ (_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), (uvec3(subgroup_local_id + 1, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) + (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, _GLF_IDENTITY(1u, ~ (~ (1u))), 1u)) : _GLF_FUZZED(uvec3(13345u, 150365u, 82843u)))))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), _GLF_IDENTITY(((165522u & 0u)) | ((165522u & 0u)), ~ (~ (((165522u & 0u)) | ((165522u & 0u))))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))), min(~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & 0u)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & _GLF_IDENTITY(0u, (0u) / 1u)), ((165522u & 0u)) | ((165522u & 0u)))), _GLF_IDENTITY(((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)))))))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, 1u)), (uint(uvec2(subgroup_local_id, 1u))) | (uint(uvec2(subgroup_local_id, 1u))))), subgroup_local_id)) + 1 < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), true && ((subgroup_local_id + 1 < subgroup_size))), _GLF_IDENTITY(false || ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), bool(bvec3(false || ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool((true))), (! (bool((true)))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (bool((true))), (! (bool((true)))) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bool((true)), ! (_GLF_IDENTITY(! (bool((true))), (! (bool(_GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), bool(bool((true))))), (! (_GLF_IDENTITY((true), bool(bool((true)))))) && true)))))) || false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(23913))), max(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(workgroup_size))), uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 0u), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u)))))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))), max(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x)))), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * (_GLF_ZERO(0.0, injectionSwitch.x))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))), _GLF_IDENTITY((subgroup_size), 0u ^ ((subgroup_size))), (subgroup_size))) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), _GLF_IDENTITY(((165522u & 0u)) | ((165522u & 0u)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((165522u & 0u)), (((165522u & 0u))) - 0u) | ((165522u & 0u)))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1 < subgroup_size, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < subgroup_size), false || ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u | ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), min((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u)))))))))), bool(bvec2(! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uint(subgroup_local_id)), clamp(uint(uint(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))), uint(uint(subgroup_local_id)), uint(uint(subgroup_local_id))))) + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x), mix(float(_GLF_FUZZED(-70.89)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x)), bool(true))))), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x))), _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), injectionSwitch.x))))))))), false)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 0u), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((5.3 - injectionSwitch)) : injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7.8)), bool(false))))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0)), (float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0))) / 1.0))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 0u), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((5.3 - injectionSwitch)) : injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7.8)), bool(false))))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0)), (float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0))) / 1.0))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))))))))), bool(bvec2(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && (! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, uint(_GLF_IDENTITY(uvec3(subgroup_local_id + 1, 0u, 0u), (uvec3(subgroup_local_id + 1, 0u, 0u)) * uvec3(1u, 1u, 1u)))))) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((5.3 - injectionSwitch)) : injectionSwitch)).x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0) * _GLF_IDENTITY((_GLF_ZERO(0.0, injectionSwitch.x)), ((_GLF_ZERO(0.0, injectionSwitch.x))) / _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-8.9)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), float(_GLF_FUZZED(-7.8)), bool(false))))), 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0)), (float(vec2(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0))) / 1.0))))))))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY((165522u & 0u), ((165522u & 0u)) | ((165522u & _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))))))))), true)))))))) || false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u)) : subgroup_local_id)), 1u)), min(uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u)) : subgroup_local_id)), 1u)), uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size))) | 0u)) : subgroup_local_id)), 1u))))), subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(min(_GLF_IDENTITY(-8295, min(-8295, -8295)), 94380)) : 1)))) < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1)))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), true && (! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false)))), bool(bvec2((_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), bool(bvec3(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false)))), false))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1) * 1u) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(172155u))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, float(float((injectionSwitch.x) / 1.0)))))))), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.96))), injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), 1u))), subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1 < subgroup_size, _GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false))))), ! (! (! (_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), bool(bool(_GLF_IDENTITY((subgroup_local_id + 1 < subgroup_size), ((subgroup_local_id + 1 < subgroup_size)) || false)))))))))), false || ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)))) < _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0)))))))))), true && (! (! _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, bool(bvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-20791)))) >> (0 >> _GLF_IDENTITY(int(3), int(3)))) < subgroup_size, true && (subgroup_local_id + 1 < subgroup_size)), false, false)))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) | 0u) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.96))), injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(177110u) : ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.96))), injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) - (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-52.96))), injectionSwitch.x)), (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) / _GLF_IDENTITY(1u, 0u ^ (1u)))))))) | 0u))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false)))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))) && true))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), injectionSwitch.x)) > injectionSwitch.y, false, false))) && true)))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   int i = 0;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bvec4((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false))), false, false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, (2) | 0)), 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(1242))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(abs(1.0), max(abs(1.0), abs(1.0))), mix(float(_GLF_IDENTITY(abs(1.0), max(abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8)))), abs(1.0)))), float(_GLF_FUZZED((+ -9.7))), bool(false)))) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(injectionSwitch)))).y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(_GLF_IDENTITY(_GLF_IDENTITY(abs(_GLF_IDENTITY(1.0, min(1.0, 1.0))), max(abs(1.0), abs(1.0))), mix(float(_GLF_IDENTITY(abs(1.0), max(abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.8)))), abs(1.0)))), float(_GLF_FUZZED((+ -9.7))), bool(false)))) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(injectionSwitch)))).y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_FUZZED(1.5)), vec2(_GLF_FUZZED(64.82), (injectionSwitch)[1]), bvec2(false, true))).y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) && true)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))))))), (! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0))))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))) && true), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((bool((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-3.2))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), bool(true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), false), false, true))))))))) || false))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) && true)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))))))), (! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0))))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))) && true), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((bool((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-3.2))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), bool(true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), false), false, true))))))))) || false))), ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) && true)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))))))), (! _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0))))).x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))) && true), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false), false, true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) && true)))))) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY((bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || ((bool((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((-3.2))), float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))), bool(true))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (bool(_GLF_IDENTITY(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool((! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), false), false, true))))))))) || false)))) && true)) || false))), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / abs(vec2(1.0, 1.0))).y)), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
