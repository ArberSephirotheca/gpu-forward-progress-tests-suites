#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 mat2x4 _f0;
 int _f1;
} ;

struct _GLF_struct_9 {
 mat4x3 _f0;
 uvec2 _f1;
 vec2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 int _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 mat4x2 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 mat2 _f1;
 uvec2 _f2;
 bvec4 _f3;
 float _f4;
 ivec2 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 mat3x2 _f1;
 float _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 uvec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_3 {
 mat3 _f0;
 mat2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 mat4x3 _f2;
 _GLF_struct_5 _f3;
 ivec4 _f4;
 vec3 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 uvec3 _f1;
 mat2 _f2;
 vec4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 int _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_2 {
 vec2 _f0;
 _GLF_struct_0 _f1;
 uvec2 _f2;
 mat2x4 _f3;
 _GLF_struct_1 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_2 _f0;
 _GLF_struct_7 _f1;
 uint virtual_gid;
 _GLF_struct_11 _f2;
 mat3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? length(normalize(vec4(1.0, 1.0, 1.0, 1.0))) : _GLF_FUZZED(27.88)))), determinant(mat2(sin(0.0), 0.0, 1.0, sqrt(0.0)))))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(sin(0.0), 0.0, 1.0, sqrt(0.0)))))).y, 1.0, exp(0.0), 0.0, 0.0, determinant(mat3(round(length(normalize(vec2(1.0, 1.0)))), 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(_GLF_IDENTITY(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))))))) : _GLF_FUZZED(27.88)))), determinant(mat2(sin(0.0), 0.0, 1.0, sqrt(0.0)))))).y, float(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(sin(0.0), 0.0, 1.0, sqrt(0.0)))))).y, 1.0, exp(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, 0.0, determinant(mat3(round(length(normalize(vec2(1.0, 1.0)))), 1.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))))) || false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(0u, 0u, 0u))) ^ (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(uvec3(gl_NumWorkGroups))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_2(vec2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) + 0.0)))), _GLF_struct_0(mat4x3(1.0), 1, ivec3(1)), uvec2(1u), mat2x4(1.0), _GLF_struct_1(bvec2(true), _GLF_IDENTITY(uvec3(1u), clamp(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), ~ (~ (uvec3(1u))))) | uvec3(0u, 0u, 0u)), uvec3(1u), uvec3(1u))), mat2(1.0), vec4(1.0), mat2x4(1.0)), mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_7(_GLF_struct_3(mat3(1.0), mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.4, 79.58, -8.5, _GLF_IDENTITY(5442.4796, float(mat4x3(_GLF_IDENTITY(5442.4796, mix(float(5442.4796), float(_GLF_FUZZED(-5.6)), bool(false))), log(1.0), length(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.4, 79.58, -8.5, 5442.4796)), mat2(mat2(true ? mat2(1.0) : _GLF_FUZZED(mat2(-9.4, 79.58, -8.5, 5442.4796)))))))))) - mat2(0.0, 0.0, 0.0, 0.0)))), (_GLF_IDENTITY(true ? mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((mat2(1.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (mat2(1.0)) - mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), (0.0) / 1.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) : _GLF_FUZZED(mat2(1.7, 1470.9254, 10.39, -73.50))))))) : _GLF_FUZZED(mat2(-346.014, 6.8, 2504.3112, 5.2)), (false ? _GLF_FUZZED(outerProduct(injectionSwitch, vec2(-557.841, 21.28))) : true ? mat2(mat2x4(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), mix(float(_GLF_FUZZED(-825.871)), float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))), bool(true))), 0.0)))) : _GLF_FUZZED(mat2(-346.014, 6.8, 2504.3112, 5.2))))))), mat2(mat2x4(mat2(1.0))))), _GLF_struct_4(mat2x4(1.0), uvec4(1u), mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), mat4x3(1.0), _GLF_struct_5(mat3x4(1.0), mat3x2(1.0), 1.0, mat4x3(1.0)), ivec4(1), vec3(1.0), _GLF_struct_6(mat4x2(1.0), mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), clamp(1.0, 1.0, 1.0)), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(0.2)), clamp(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(0.2), float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(0.2), (_GLF_FUZZED(0.2)) * 1.0), 1.0), (true ? vec2(_GLF_IDENTITY(_GLF_FUZZED(0.2), (_GLF_FUZZED(0.2)) * 1.0), 1.0) : _GLF_FUZZED(injectionSwitch)))))), mix(float(float(_GLF_FUZZED(0.2))), float(_GLF_FUZZED(-6.7)), bool(false))), float(_GLF_FUZZED(0.2)), float(_GLF_FUZZED(0.2)))), max(_GLF_IDENTITY(float(_GLF_FUZZED(0.2)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(0.2)), mix(float(float(_GLF_FUZZED(0.2))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.7, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(-6.7, (false ? _GLF_FUZZED(43.80) : -6.7)))))), bool(false))), float(_GLF_FUZZED(0.2)), float(_GLF_FUZZED(_GLF_IDENTITY(0.2, max(0.2, 0.2)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(0.2)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(0.2)), mix(float(float(_GLF_FUZZED(0.2))), float(_GLF_FUZZED(-6.7)), bool(false))), float(_GLF_FUZZED(0.2)), float(_GLF_FUZZED(0.2)))), (false ? _GLF_FUZZED(49.16) : _GLF_IDENTITY(float(_GLF_FUZZED(0.2)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(0.2)), mix(float(float(_GLF_FUZZED(0.2))), float(_GLF_FUZZED(-6.7)), bool(false))), float(_GLF_FUZZED(0.2)), float(_GLF_FUZZED(0.2)))))))), bool(false)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) >> 0u))))), ~ (~ _GLF_IDENTITY((uvec2(1u)), clamp((uvec2(1u)), (uvec2(1u)), (uvec2(1u)))))), bvec4(true), 1.0, ivec2(1), ivec3(1))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u)) + 0u) * subgroup_size))) + subgroup_local_id, _GLF_struct_11(_GLF_struct_8(uvec3(1u), 1, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) | uvec2(0u, 0u))), _GLF_struct_9(mat4x3(1.0), uvec2(1u), vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((false ? -977.010 : -4.8))), float(1.0), bool(true)))) + 0.0)), vec4(1.0)), mat4x2(1.0), _GLF_struct_10(mat2x4(1.0), 1)), mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.8)), bool(false))), max(1.0, 1.0))));
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false)) && true)), (bool(bool(_GLF_DEAD(false)))) && true)))
    barrier();
  }
 else
  {
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + subgroup_id * subgroup_size + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> _GLF_IDENTITY(0u, ~ (~ (0u)))), subgroup_local_id)) + 1) % subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec4(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size))), 1u, 0u, 1u))) | ((subgroup_local_id + 1) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) * 1u)) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))), ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), uint(uvec3(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), max(subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0), subgroup_local_id + _GLF_IDENTITY(1, (1) ^ 0))), 0u, (133857u & 0u)))))) | ((subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), (! _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec3(bvec2((false), false), true))))), false)))) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size))), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size), uint(uvec2(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size), 1u)))))), (false ? _GLF_FUZZED(uint(true)) : _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size), uint(uvec2(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size), 1u)))))), 0u | (((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size), uint(uvec2(max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (0u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (true ? uint(6u) : _GLF_FUZZED(workgroup_base))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) * 1)))))) | (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))) ? _GLF_FUZZED(subgroup_size) : subgroup_local_id + 1))))) % subgroup_size)), (subgroup_local_id + 1) % subgroup_size), 1u))))))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_struct_replacement_12.virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, sqrt(0.0), 0.0, 1.0, 0.0))).y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(subgroup_local_id + 1 < subgroup_size)
      {
       if(_GLF_DEAD(false))
        barrier();
       int i = 0;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true))), true))))), (bool(_GLF_IDENTITY(bvec3(false, true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), false))))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, false), false)), bvec3(bvec3(bvec3(bvec4(bvec3(false, true, false), false))))), false)), true)))), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, false), false)), true)))))) || false))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, (1 & 1), 1)), max(int(ivec3(4, (1 & 1), 1)), int(ivec3(4, (1 & 1), 1))))), _GLF_IDENTITY(4, 0 + (4)), 4)), 64, 4);
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))) && true)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) || false), (true && (false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), (true && (false)) || false), false, false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (false), (true && (false)) || false), _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), ((false)) || false)) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))))), false), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true && (false), (true && (false)) || false), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) && (false), (true && (false)) || false), false, false), false))))) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false)))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), false, true))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), false))), true))))))), true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), false, true))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), false))), true))))))), true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))))))))))) || false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), false, true), bvec3(bvec3(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false)))), false, true))))))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), false), false))), true))))))), true, true))), false))))))))))))
          {
           for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat3(7.2, 6462.8794, 9.8, 9895.8649, -0.3, -23.41, _GLF_IDENTITY(-667.155, sin(0.0) + (-667.155)), 5.6, 8.1))) : _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 1 * (_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))) * (_GLF_FUZZED(-22684))))), _GLF_IDENTITY(0, (0) << 0) ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), _GLF_IDENTITY(1 * (_GLF_FUZZED(-22684)), min(1 * (_GLF_FUZZED(-22684)), 1 * (_GLF_FUZZED(-22684)))))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED(_GLF_IDENTITY((59033 * -67010), ((59033 * -67010)) | ((59033 * -67010)))))))), 1))))) * 1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-22684, clamp(-22684, -22684, -22684))), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? _GLF_IDENTITY((int(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(ivec4((int(_GLF_IDENTITY(1, (1) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1, (0 << _GLF_IDENTITY(int(1), int(1))), 1))) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(_GLF_IDENTITY(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1), ~ (~ (ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1)))))))) * 1, 0 | (_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)) ? int(1) : _GLF_IDENTITY(_GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_FUZZED((59033 * -67010)), clamp(_GLF_IDENTITY(_GLF_FUZZED((59033 * -67010)), (_GLF_FUZZED((59033 * -67010))) | (_GLF_FUZZED((59033 * -67010)))), _GLF_FUZZED((59033 * -67010)), _GLF_IDENTITY(_GLF_FUZZED((59033 * -67010)), min(_GLF_FUZZED((59033 * -67010)), _GLF_FUZZED((59033 * -67010))))))) | 0))))), 1))))) * 1))), int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))))) * 1, 0 | (_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), clamp(_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | 0), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), false)))))) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) * 1))), 1, 0, 0), (false ? _GLF_FUZZED(ivec4(-76976, -36838, -22357, -43518)) : _GLF_IDENTITY(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))))) * 1, 0 | (_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), clamp(_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | 0), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), false)))))) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) * 1))), 1, 0, 0), max(ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))))) * 1, 0 | (_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), clamp(_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | 0), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), false)))))) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) * 1))), 1, 0, 0), ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1)))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))))) * 1, 0 | (_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | (_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), clamp(_GLF_IDENTITY(true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))) | 0), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))), true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x < injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x < injectionSwitch.y), false), false)))))) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) * 1))), 1, 0, 0))))), ~ (~ (ivec4(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))))), int(ivec2(~ _GLF_IDENTITY(((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010))))) ^ 0))))), (_GLF_IDENTITY(((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010))))) ^ 0))))), (_GLF_IDENTITY(((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010))))) ^ 0))))), int(int(((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010))))) ^ 0))))))))) | (((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010))))) ^ 0)))))))) | (_GLF_IDENTITY(((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010))))) ^ 0))))), 0 + (((_GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010))))) ^ 0))))))))), 1))))) * _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, min(1, 1)))), 0 | (_GLF_IDENTITY((int(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684))))), 0 ^ (_GLF_IDENTITY((int(1)), (true ? (int(1)) : _GLF_IDENTITY(_GLF_FUZZED(-22684), 1 * (_GLF_FUZZED(-22684)))))))), int(ivec2(~ ((_GLF_IDENTITY(int(1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? int(1) : _GLF_FUZZED((59033 * -67010)))))), 1))))) * 1))), 1, 0, 0))))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0)) ^ (1 ^ 1)))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
