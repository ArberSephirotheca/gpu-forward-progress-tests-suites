#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(_GLF_IDENTITY(mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0), mat2(1.0) * (mat3x2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_ONE(1.0, injectionSwitch.y)))) * (injectionSwitch), clamp(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), _GLF_IDENTITY(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), 1.0))), float(injectionSwitch[0])), clamp(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), clamp(_GLF_IDENTITY(float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), (true ? float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) : _GLF_FUZZED(4307.7715))), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), min(float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))))), _GLF_IDENTITY(float(injectionSwitch[0]), clamp(float(injectionSwitch[0]), float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)) * (float(injectionSwitch[0])))))), clamp(float(_GLF_IDENTITY(injectionSwitch[0], min(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), injectionSwitch[0]))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(489.454)), float(injectionSwitch[0]), bool(_GLF_IDENTITY(true, false || (true)))))), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), 1.0, 1.0)), 1.0, 1.0))), float(injectionSwitch[0]))))), float(_GLF_FUZZED(-684.347)), bool(false))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(float(injectionSwitch[0]), _GLF_IDENTITY(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), _GLF_IDENTITY(float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0)), clamp(float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0)), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))))), float(injectionSwitch[0])), clamp(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(dot(vec4(-6045.1260, -23.42, -9539.8065, -129.278), vec4(36.83, -1759.6496, -697.927, 656.948))) : 1.0)), 1.0, 1.0))), float(injectionSwitch[0]))))), float(_GLF_FUZZED(-684.347)), bool(false))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-9.5)), vec2(_GLF_FUZZED(float((-88.48 != -1.8))), (injectionSwitch)[1]), bvec2(false, true)))[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, determinant(mat2(0.0, 0.0, sin(0.0), 0.0)), 0.0, 0.0))).y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch[0]), mix(float(_GLF_FUZZED(-6.7)), float(float(injectionSwitch[0])), bool(true))), _GLF_IDENTITY(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), clamp(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), _GLF_IDENTITY(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), max(clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0])), clamp(float(injectionSwitch[0]), _GLF_IDENTITY(float(injectionSwitch[0]), float(mat3x2(float(injectionSwitch[0]), 1.0, 1.0, 1.0, 1.0, 1.0))), float(injectionSwitch[0]))))))), float(_GLF_FUZZED(-684.347)), bool(false))), injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch.x), bool(true))), 1.0)), 0.0 + (_GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (float(vec2(injectionSwitch.x, 1.0))) + 0.0)))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch.x), bool(true))), 1.0)), 0.0 + (_GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (float(vec2(injectionSwitch.x, 1.0))) + 0.0)))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5.7)), float(injectionSwitch.x), bool(true))), 1.0)), 0.0 + (_GLF_IDENTITY(float(vec2(injectionSwitch.x, 1.0)), (float(vec2(injectionSwitch.x, 1.0))) + 0.0)))) > injectionSwitch.y)))))) && true)), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))])).y, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(1.7))))) || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) && true, ! (! ((! (_GLF_DEAD(false))) && true))))) && true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u, (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), uint(uvec3((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), 1u, 1u))) ^ 0u)), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u, (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), uint(uvec3((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), 1u, 1u))) ^ 0u)), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u, (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), uint(uvec3((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), 1u, 1u))) ^ 0u)), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u, (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), uint(uvec3((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), 1u, 1u))) ^ 0u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u, (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), uint(uvec3((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), 1u, 1u))) ^ 0u)), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u, (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), uint(uvec3((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), 1u, 1u))) ^ 0u)))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * subgroup_size), (~ (subgroup_id * subgroup_size)) / 1u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u, (true ? (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), uint(uvec3((max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) | 0u))), 1u, 1u))) ^ 0u))))))), _GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (subgroup_id)) * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)), (uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size))) >> 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))), ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size))))))) | ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, (0u ^ 1u), 0u))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), subgroup_id * subgroup_size))), 1u * (_GLF_IDENTITY(max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (subgroup_id)) * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)), (uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size))) >> 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))), ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size))))))) | ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))))) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, (0u ^ 1u), 0u))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), subgroup_id * subgroup_size))), (true ? max(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(1u), uint(1u)), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) / 1u)) | (subgroup_id)) * subgroup_size) | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * _GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (uint(4u))))) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)), (uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size))) >> 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))), ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size))))))) | ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))))) / 1u)))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), min(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY(uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size)), (uint(max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), subgroup_id * subgroup_size))) >> 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))), ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size))))))) | ((uint(_GLF_IDENTITY(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), max(uint(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(max(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, subgroup_id * subgroup_size)))))))) / 1u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * subgroup_size), (max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)))), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 1u, (0u ^ 1u), 0u))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (subgroup_id * subgroup_size)), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(subgroup_id * subgroup_size, 1u))))), ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u))))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), 0u), (uvec2(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), 0u)) / uvec2(1u, 1u)), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_id * subgroup_size)), 0u ^ (_GLF_IDENTITY((~ (subgroup_id * subgroup_size)), max((~ (subgroup_id * subgroup_size)), (~ (subgroup_id * subgroup_size))))))), 0u)) << uvec2(0u, 0u)))), max(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u))), uvec2(uvec3(~ (_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u))), 0u)))) ^ uvec2(0u, 0u)))))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u))))) >> 0u) : _GLF_FUZZED(workgroup_size))))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uvec2(subgroup_id * subgroup_size, 0u), (uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u)) << uvec2(0u, 0u)))))), subgroup_id * subgroup_size))) : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), uint(uint(_GLF_IDENTITY(0u, (0u) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))) | 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u + (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u))) * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), (true ? _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)) : _GLF_FUZZED(subgroup_id))), 0u, 0u))), _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u | 0u), (_GLF_IDENTITY((0u | 0u), max((0u | 0u), _GLF_IDENTITY((0u | 0u), (true ? (0u | 0u) : _GLF_FUZZED(subgroup_id)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y))) | (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) >> 0u))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(0u | 0u, (false ? _GLF_FUZZED((workgroup_id)) : _GLF_IDENTITY(0u | 0u, ~ (~ (0u | 0u)))))) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (false ? _GLF_FUZZED(workgroup_base) : workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (0u | 0u) | (subgroup_id)) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) | (subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, (0u | 0u) | (subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u | 0u) | (subgroup_id))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u | 0u) | (subgroup_id)), (_GLF_IDENTITY(subgroup_id, (0u | 0u) | (subgroup_id))) | 0u))) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))))) << 0u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u) * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u | (_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) + 0u))), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), max(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))))) : subgroup_size), ((false ? _GLF_FUZZED(workgroup_size) : subgroup_size)) ^ 0u)), _GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (_GLF_IDENTITY(max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 0u ^ (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) ^ 0u)) | 0u)) - 0u)))))), (true ? ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_id, (subgroup_id) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))), uint(uint((_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) >> 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), uint(uvec3(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), 0u, 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) - 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))))))) : _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(false ? subgroup_size : num_workgroup, min(_GLF_IDENTITY(false ? subgroup_size : num_workgroup, (false ? subgroup_size : num_workgroup) * 1u), false ? subgroup_size : num_workgroup)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), 0u ^ (_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), min(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), _GLF_FUZZED((false ? subgroup_size : num_workgroup))))))), ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))))), min(~ (~ _GLF_IDENTITY((_GLF_FUZZED(_GLF_IDENTITY((false ? subgroup_size : num_workgroup), ((false ? subgroup_size : num_workgroup)) | ((false ? subgroup_size : num_workgroup))))), ((_GLF_FUZZED((_GLF_IDENTITY(false, true && (false)) ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_FUZZED((false ? subgroup_size : num_workgroup))), ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))))), (~ (~ _GLF_IDENTITY((_GLF_FUZZED((false ? subgroup_size : num_workgroup))), ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup))))))) / 1u))))), _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), ~ (~ _GLF_IDENTITY((_GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? subgroup_size : num_workgroup))), _GLF_IDENTITY(((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))), ~ (~ (((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))))))))))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(0u ^ ((_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), ~ (~ _GLF_IDENTITY((_GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? subgroup_size : num_workgroup))), _GLF_IDENTITY(((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))), ~ (~ (((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))))))))))), (0u ^ ((_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? subgroup_size : num_workgroup)), min(_GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? subgroup_size : num_workgroup)), _GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))) ? subgroup_size : num_workgroup))))), _GLF_IDENTITY(((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))), ~ (~ (((_GLF_FUZZED((false ? subgroup_size : num_workgroup)))) | ((_GLF_FUZZED((false ? subgroup_size : num_workgroup))))))))))))) / (1u & 1u))))) | (_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), (_GLF_IDENTITY(_GLF_FUZZED((false ? subgroup_size : num_workgroup)), (_GLF_FUZZED((false ? subgroup_size : num_workgroup))) | (_GLF_FUZZED((false ? subgroup_size : num_workgroup))))) >> 0u)))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))) * subgroup_size) >> 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))) * subgroup_size) >> 0u)) | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_base))) * subgroup_size) >> 0u))), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) >> 0u))) + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) + 0)) ^ 0, clamp((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) + 0)) ^ 0, _GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) + 0)) ^ 0, 0 + (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) + 0)) ^ 0, int(ivec3((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) + 0)) ^ 0, 0, 1))))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(int(4)))) + 0)) ^ 0))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(false)))))))) && true)) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false))))))), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true, true))) && true)) || false))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), false, false), bvec3(bvec4(bvec3(bool(false), false, false), true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, 0.0 + (1.0)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), true, true)), bvec3(bvec4(bvec3(bvec3((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false))), true, true)), false))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (false)), true, false)), bvec3(bvec3(bvec3(bvec3((! (false)), true, false)))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))), true && _GLF_IDENTITY((! (! (_GLF_DEAD(false)))), ! (! ((! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uint(uint(2))), (uint(uint(uint(2)))) | (uint(uint(uint(2)))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! _GLF_IDENTITY(((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))), ! (! _GLF_IDENTITY((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true)))), (bool(_GLF_IDENTITY((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true))))) || false)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true)))), (bool(_GLF_IDENTITY((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), bool(bvec2((((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), true))))) || false))) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))))))))), (false) || false)) && true)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false) || false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ((false) || false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) && true)), false || (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, false || (false)), ((false) || false) && true)))))), false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false)))))) || false))), false)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), bool(_GLF_IDENTITY(bvec2(false || ((false)), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(false || ((false)), false), bvec2(bvec2(bvec2(false || ((false)), false)))), false)))))) || false, bool(bool((_GLF_IDENTITY(false, bool(bool(false)))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))))), false))) || false)))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), bool(bool((false) || _GLF_IDENTITY(false, false || (false))))), false)), (bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false))) || false)))))), true && (! _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || _GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) || false))), bool(bool((false) || _GLF_IDENTITY(false, false || (false)))))))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false))) || false, false || (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false))) || false, bool(bvec4((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false))) || false, false, false, true))))), ! (! ((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) || false)) || false))), false))) || false))))))))), ((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) || false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bool((false) || _GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) || false))), bool(bool((false) || _GLF_IDENTITY(false, false || (false)))))))), false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false))) || false, false || (_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false))) || false, bool(bvec4((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((false) || false))), false))) || false, false, false, true))))), ! (! ((bool(bvec2(_GLF_IDENTITY((false) || false, bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)) || false)) || false))), false))) || false)))))))))) && true)))) && true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 1)))], injectionSwitch[1])).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(610.104), _GLF_FUZZED(7632.6128)), bvec2(false, false))), injectionSwitch)).x) * 1.0), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
