#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8597.2006, (true ? -8597.2006 : _GLF_FUZZED(82.83)))), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-8597.2006, (true ? -8597.2006 : _GLF_FUZZED(82.83)))), (_GLF_FUZZED(_GLF_IDENTITY(-8597.2006, (true ? -8597.2006 : _GLF_FUZZED(82.83))))) * 1.0))) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) ^ 0u), workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size))) << 0u) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(vec2(7.5, 7.6), _GLF_IDENTITY(mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 40.25)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 40.25)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), (uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4794.8265), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-4794.8265), 1.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_FUZZED(-4794.8265), 1.0, 0.0, 0.0)))))), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 40.25)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(abs(vec2(0.0, 0.0))))) - vec2(0.0, 0.0)))).y)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> uvec3(0u, 0u, 0u)), max(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size))) >> 0u) : _GLF_FUZZED(subgroup_size)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), uint(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u))))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)), uint(uvec2(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)), (1u | 1u)))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))), clamp((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u)))), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, ~ (~ (0u))) | (uint(7u))))) - 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(min(uint(7u), uint(7u)), uint(uvec3(_GLF_IDENTITY(min(uint(7u), uint(7u)), (false ? _GLF_FUZZED(workgroup_id) : min(uint(7u), uint(7u)))), 0u, 0u)))), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(vec2(7.5, 7.6), _GLF_IDENTITY(mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), clamp(mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 40.25)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), (_GLF_IDENTITY(uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), min(_GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_FUZZED(-4794.8265), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 40.25)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))), (uvec3(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | (0u)), 0u)))) ^ (subgroup_size)) + ((subgroup_local_id + 1) % subgroup_size), (0u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(max(_GLF_IDENTITY(vec2(7.5, 7.6), mix(vec2((vec2(7.5, 7.6))[0], (vec2(7.5, 7.6))[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(-4794.8265), float(_GLF_IDENTITY(mat2(_GLF_FUZZED(-4794.8265), 1.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_FUZZED(-4794.8265), 1.0, 0.0, 0.0)))))), _GLF_FUZZED(-8.2)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 40.25)) : _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(abs(vec2(0.0, 0.0))))) - vec2(0.0, 0.0)))).y)))) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> uvec3(0u, 0u, 0u)), max(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size)), (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size)), (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), clamp(0u, 0u, 0u)) ^ (subgroup_size))) >> 0u) : _GLF_FUZZED(subgroup_size)))) * uint(_GLF_ONE(1.0, injectionSwitch.y))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((_GLF_IDENTITY(0u, (0u) ^ 0u) << _GLF_IDENTITY(uint(7u), uint(7u)))) | (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), uint(uint(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u))))))), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))) / 1u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)), uint(uvec2(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) ^ (subgroup_size)), (1u | 1u)))) + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))), clamp((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u)))), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u, ~ (~ (0u))) | (uint(7u))))) - 0u)), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(min(uint(7u), uint(7u)), uint(uvec3(_GLF_IDENTITY(min(uint(7u), uint(7u)), (false ? _GLF_FUZZED(workgroup_id) : min(uint(7u), uint(7u)))), 0u, 0u)))), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), 0u | (uint(7u))))))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, 1 * (1))), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(67719) : 64)), 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | _GLF_IDENTITY((0u), ((0u)) << 0u))) - 0u) + (subgroup_size)))
  {
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY((0), 0 ^ ((0))))) | (0), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY((0), 0 ^ ((0))))) | (0)), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY((0), 0 ^ ((0))))) | (0)), max((_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY((0), 0 ^ ((0))))) | (0)), (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, 0, 0))) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY((0), 0 ^ ((0))))) | (0))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY((_GLF_IDENTITY(0, int(ivec2(0, 1)))), 0 ^ ((0))))) | (0), 1 * _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) + (_GLF_IDENTITY((0), 0 ^ ((0))))))) | (0)), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) + (_GLF_IDENTITY((0), 0 ^ ((0))))))) | (0)), int(int((_GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), max(_GLF_IDENTITY((0), ((0)) | 0), _GLF_IDENTITY(_GLF_IDENTITY((0), 0 ^ ((0))), ((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1))) + (_GLF_IDENTITY((0), 0 ^ ((0))))))) | (0)))))) ^ 0)))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-65.02)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
              barrier();
             return;
            }
           barrier();
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), true, true, false)), bool(bvec3(bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), true, true, false)), false, false))))))))))
          return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))))) || false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))) && true)) && true), true && (_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, (false) && true), false), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), true && (bool(bvec2(! (true), false)))))), ! (! (! (! (true))))))))), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))) || false))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bool((true)))))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))), bool(bool(! (bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, true, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y : _GLF_FUZZED(9.3))))))), false || (bool(bvec4(_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), false)), (_GLF_IDENTITY(bool(bvec3(false, false, false)), true && (bool(bvec3(false, false, _GLF_IDENTITY(false, (false) || false)))))) && true), _GLF_IDENTITY(true, ! (! (true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6582.7516 / -9.4)), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec3(false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6582.7516 / -9.4)), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), ! (! (! _GLF_IDENTITY((true), ((true)) && true)))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)))), false || _GLF_IDENTITY((bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true))), true))))))) && true))))), ((bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true))), true))))))) && true)))))) || false)))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6582.7516 / -9.4)), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec3(false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6582.7516 / -9.4)), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), ! (! (! _GLF_IDENTITY((true), ((true)) && true)))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)))), false || _GLF_IDENTITY((bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true))), true))))))) && true))))), ((bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true))), true))))))) && true)))))) || false)))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec3(false, false, false)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6582.7516 / -9.4)), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), bvec3(bvec4(bvec3(bool(bvec3(false, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((6582.7516 / -9.4)), _GLF_FUZZED(1.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))), true))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, false, false)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), ((true)) && true), ! (! (! _GLF_IDENTITY((true), ((true)) && true)))))), false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false)))), false || _GLF_IDENTITY((bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true))), true))))))) && true))))), ((bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), (! (! (! (true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x < injectionSwitch.y)))))))))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))), true))), true))))))) && true)))))) || false)))), true), false, true))))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(-9.2)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(mat4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(-9.2)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(-9.2)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(cos(-9.2)) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))))))))))))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-404.524, -740.221)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (true ? vec2(vec2(injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))))).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-404.524, -740.221)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (true ? vec2(vec2(injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-404.524, -740.221)) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), (true ? vec2(vec2(injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))))).y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y : _GLF_FUZZED(2986.1899))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (false)), bool(bvec2((! (false)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (mat2(1.0) * ((injectionSwitch))), vec2(mat2x4(mat2(1.0) * (mat2(1.0) * ((injectionSwitch))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y : _GLF_FUZZED(2986.1899))), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4.6)), bvec2(true, false))))[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(90.37), _GLF_FUZZED(9.6)), bvec2(false, false))))), injectionSwitch)).y))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, max(2, 2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(mat4(max(injectionSwitch, injectionSwitch), 0.0, tan(0.0), 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (false ? _GLF_FUZZED((vec2(29.47, -6461.4719) - 46.08)) : mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(-1.6, -5.8)))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))), mix(vec2(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], min(_GLF_IDENTITY((mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch)))), ((mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0))[0], (mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0])), (mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))))))[1]), vec2(_GLF_FUZZED(-431.119), _GLF_FUZZED(-56.75)), bvec2(false, false)))).x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), ! (! (bool(bvec3(false, false, false)))))), false || (false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) + vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
