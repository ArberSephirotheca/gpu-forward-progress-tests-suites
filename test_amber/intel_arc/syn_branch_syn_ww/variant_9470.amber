#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mix(vec2(_GLF_FUZZED(-7993.0623), _GLF_FUZZED(-4784.0009)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), (vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) + 0.0))) - vec2(0.0, 0.0)), bvec2(true, true))), injectionSwitch)).y))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))) && true), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))))))))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-424.070))) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))) && true))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))) && true), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))))))))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-424.070))) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y)))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))) && true), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))))))))), ((_GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (true ? (1.0) : _GLF_FUZZED(-424.070))) - _GLF_ZERO(0.0, injectionSwitch.x)), injectionSwitch.y))))) && true))))))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y)) || (false))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-88.93) : dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0), clamp(vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-88.93) : dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-88.93) : dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0), vec4(injectionSwitch, _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-88.93) : dot(vec3(sin(0.0), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0))))).y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.4)), bool(false))), 1.0)), 0.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))
        return;
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true)))))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), false, false, false))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))).y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, false, false))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))).x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), false || (! (! (_GLF_DEAD(false)))))), ! (! (_GLF_DEAD(false))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_DEAD(false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false || (_GLF_DEAD(false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (false))), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(false))), false), false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-15.58)), bool(false))))))), false, false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), 1u)) * (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) | (workgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((workgroup_size) | (workgroup_size), ~ (~ ((workgroup_size) | (workgroup_size)))))))) >> 0u))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) ^ 0u)) >> 0u), workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u) * subgroup_size, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) | (workgroup_base + subgroup_id * subgroup_size)))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           break;
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) * _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(46.83) : 1.0))) / determinant(mat3(sqrt(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0))), (true ? _GLF_IDENTITY((injectionSwitch.y), clamp((injectionSwitch.y), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))) * 1.0)), _GLF_IDENTITY((injectionSwitch.y), float(_GLF_IDENTITY(mat2x3((injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0), transpose(transpose(mat2x3((injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0)))))))) * 1.0 : _GLF_FUZZED(6900.8908))))))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)) | (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), max(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size))), (((subgroup_local_id + 1) % subgroup_size)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) + 1) % subgroup_size, ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % subgroup_size), clamp(~ ((subgroup_local_id + 1) % subgroup_size), ~ ((subgroup_local_id + 1) % subgroup_size), ~ ((subgroup_local_id + 1) % subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u), subgroup_local_id)) + 1, subgroup_local_id + 1))) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(26034u)))) | (((subgroup_local_id + 1) % subgroup_size))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))) >> 0u) % subgroup_size), _GLF_IDENTITY(max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), ((subgroup_local_id + 1) % subgroup_size)), uint(uvec3(max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) << 0u), ((subgroup_local_id + 1) % subgroup_size)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) - _GLF_IDENTITY(0u, 0u + (0u)));
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, 0 ^ (1))), 4, 64, 4);
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), ! _GLF_IDENTITY((! (bool(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), ((! (bool(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))) && true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), true && (bool(! (_GLF_DEAD(false))))), _GLF_IDENTITY(! (! (bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(! (_GLF_DEAD(false))))), ((! (bool(! (_GLF_DEAD(false)))))) && true), false || (! (! (bool(! (_GLF_DEAD(false))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), false)))))), false || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), false)))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))), ! (! (((_GLF_DEAD(false)))))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), (bool(! (_GLF_DEAD(false)))) || false), ! _GLF_IDENTITY((! (bool(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), ((! (bool(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))) && true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), true && (bool(! (_GLF_DEAD(false))))), _GLF_IDENTITY(! (! (bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(! (_GLF_DEAD(false))))), ((! (bool(! (_GLF_DEAD(false)))))) && true), false || (! (! (bool(! (_GLF_DEAD(false))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), false)))))), false || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), false)))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_DEAD(false))), true && (bool(! (_GLF_DEAD(false))))), _GLF_IDENTITY(! (! (bool(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((! (bool(! (_GLF_DEAD(false))))), ((! (bool(! (_GLF_DEAD(false)))))) && true), false || (! (! (bool(! (_GLF_DEAD(false))))))), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false, false), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), false)))))), false || (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), bool(bvec2(! (bool(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false), false)))))), false)))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))), true))))))))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
          }
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, clamp(0, 0, 0))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7076.2771)), float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), bool(true))), 0.0))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), mix(float(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(3629.7939) : 1.0)), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), float(_GLF_FUZZED(6.4)), bool(false))) : _GLF_FUZZED((_GLF_IDENTITY(4.8, (false ? _GLF_FUZZED(reflect(1.4, 7.6)) : _GLF_IDENTITY(4.8, clamp(4.8, 4.8, 4.8)))) - determinant(mat4(299.530, -70.49, -9.4, -306.490, -21.86, 4018.4227, -2.8, -2854.1815, -9.5, 167.097, 7.4, _GLF_IDENTITY(-3824.9897, max(-3824.9897, _GLF_IDENTITY(-3824.9897, clamp(-3824.9897, _GLF_IDENTITY(-3824.9897, max(-3824.9897, -3824.9897)), -3824.9897)))), -9.7, 45.90, 89.33, _GLF_IDENTITY(4.4, (_GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(_GLF_IDENTITY(4.4, clamp(4.4, 4.4, _GLF_IDENTITY(4.4, (true ? _GLF_IDENTITY(4.4, clamp(4.4, 4.4, 4.4)) : _GLF_FUZZED(-7.4))))), mix(float(4.4), float(_GLF_FUZZED(1304.1191)), bool(false)))))) * 1.0)))))))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0)))), vec2(1.0, 0.0)), dot(vec2(1.0, tan(0.0)), vec2(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(88.23) : 0.0))))), 1.0, 0.0)), max(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), clamp(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), min(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), min(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)))), float(mat2(_GLF_IDENTITY(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), min(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), min(dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)))))), dot(vec2(1.0, tan(0.0)), vec2(1.0, 0.0)))), dot(vec2(1.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) - 0.0)), vec2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(8.6)), bool(false))), 1.0)), 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(mat3(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0))), 1.0)), 0.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), (float(_GLF_FUZZED(-29.67))) - 0.0), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-934.701)), _GLF_IDENTITY(float(float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.8, abs(1.0) * (_GLF_IDENTITY(9.8, min(9.8, _GLF_IDENTITY(9.8, (9.8) - 0.0))))))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-7628.7526) : float(float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.8, abs(1.0) * (_GLF_IDENTITY(9.8, min(9.8, _GLF_IDENTITY(9.8, (9.8) - 0.0))))))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), bool(true)))), _GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0)))), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0)))))), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(-29.67)), float(0.0), bool(true)), 1.0, 1.0, 0.0, log(1.0), 1.0)))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-934.701)), float(float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-567.242 + -58.72))), bool(false))), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 0.0))), bool(true)))), _GLF_IDENTITY(float(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)), clamp(float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)), float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)), float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)))))), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(-29.67)), float(0.0), bool(true)), 1.0, 1.0, 0.0, log(1.0), 1.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67))))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((1.7 + mat3(3345.4852, -20.73, -27.40, -3.8, 4110.2335, -160.243, 238.895, 1583.4278, 1.8))) : mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67))))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-934.701)), float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.8), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(9.8), (_GLF_FUZZED(9.8)) - 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.8), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(9.8), (_GLF_FUZZED(9.8)) - 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0))))), bool(true)))), _GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, _GLF_IDENTITY(79.54, (79.54) / 1.0), 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(-29.67)), float(0.0), bool(true)), 1.0, 1.0, 0.0, log(1.0), 1.0)))))))), mat2(1.0) * (vec2(1.0, tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), (float(_GLF_FUZZED(-29.67))) - 0.0), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-934.701)), _GLF_IDENTITY(float(float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.8, abs(1.0) * (_GLF_IDENTITY(9.8, min(9.8, _GLF_IDENTITY(9.8, (9.8) - 0.0))))))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-7628.7526) : float(float(mat3(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67)))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(9.8, abs(1.0) * (_GLF_IDENTITY(9.8, min(9.8, _GLF_IDENTITY(9.8, (9.8) - 0.0))))))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), bool(true)))), _GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(vec3(_GLF_IDENTITY(1.0, float(mat3x2(_GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, abs(0.0)))), 1.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))))), 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0)))))), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(-29.67)), float(0.0), bool(true)), 1.0, 1.0, 0.0, log(1.0), 1.0)))), max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(-934.701)), float(float(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-567.242 + -58.72))), bool(false))), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 1.0, 0.0))), bool(true)))), _GLF_IDENTITY(float(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), _GLF_IDENTITY(float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)), clamp(float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)), float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)), float(mat4x2(float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, 79.54, 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0), mat3x2(mat3x4(mat3x2(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), max(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0))), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(1.0, 1.0, 0.0, exp(0.0)))))), 0.0, 1.0)))))), 0.0, 0.0, 1.0, 0.0, 0.0)))), 1.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)))))), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(-29.67)), float(0.0), bool(true)), 1.0, 1.0, 0.0, log(1.0), 1.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67))))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((1.7 + mat3(3345.4852, -20.73, -27.40, -3.8, 4110.2335, -160.243, 238.895, 1583.4278, 1.8))) : mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_FUZZED(9.8)), float(float(_GLF_IDENTITY(_GLF_FUZZED(-29.67), clamp(_GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67), _GLF_FUZZED(-29.67))))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(-934.701)), float(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.8), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(9.8), (_GLF_FUZZED(9.8)) - 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(_GLF_IDENTITY(float(_GLF_FUZZED(-29.67)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(9.8), float(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(9.8), (_GLF_FUZZED(9.8)) - 0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))), float(float(_GLF_FUZZED(-29.67))), bool(true))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0))))), bool(true)))), _GLF_IDENTITY(float(0.0), float(_GLF_IDENTITY(mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (false ? _GLF_FUZZED(mat3x4(-9.5, -19.13, 4831.0519, -9152.4665, 1.2, -8535.7346, -2.2, 3.3, -6.5, 348.600, _GLF_IDENTITY(79.54, (79.54) / 1.0), 6.9)) : mat3x4(float(0.0), 1.0, 1.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), bool(true)), float(mat2x3(mix(float(_GLF_FUZZED(-29.67)), float(0.0), bool(true)), 1.0, 1.0, 0.0, log(1.0), 1.0)))))))))), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, tan(0.0)), min(vec2(1.0, _GLF_IDENTITY(tan(0.0), _GLF_IDENTITY(float(vec2(tan(0.0), 1.0)), 1.0 * (float(vec2(tan(0.0), 1.0)))))), vec2(1.0, tan(0.0)))), vec2(1.0, 0.0))), 1.0, 0.0))))) > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, max(64, 64))) ^ 0), 64, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(-73405))))), _GLF_IDENTITY(4, clamp(4, 4, 4)));
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.7)), bool(false)))))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = ((1 | 0) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (min(0, 0)) ^ 0)), 0, 0)), 0))); _injected_loop_counter --)
          {
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))).x > injectionSwitch.y)))))))
          barrier();
         if(_GLF_DEAD(false))
          break;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), true)), (bool(bvec2(_GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false)))), true))) || false)), true && _GLF_IDENTITY((false || (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bool((false || (_GLF_DEAD(false))))), ! (! (bool(bool((false || (_GLF_DEAD(false))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
        barrier();
       for(int _injected_loop_counter = (((int(_GLF_ONE(1.0, injectionSwitch.y)) & 1) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)); _injected_loop_counter --)
        {
         return;
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)))) || false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(false, false, false)))));
        }
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, true, false))))) || false));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(2), 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) ^ (0 | 0)) >> 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) ^ (0 | 0)) >> 0))), 0 ^ (~ ((_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) ^ (0 | 0)) >> 0))))))), (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) ^ (0 | 0)) >> 0))) | (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), ((64)) ^ (0 | 0)) >> 0)))))), 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (true)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY(false, (false) && true))) || false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), true, false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))))))))), ! (! (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))))))))))))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
