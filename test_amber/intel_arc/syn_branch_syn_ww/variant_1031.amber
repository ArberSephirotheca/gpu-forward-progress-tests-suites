#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) | (int(4)), min((int(4)) | (int(4)), (int(4)) | (int(4))))), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, 0 ^ (4)))))))))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         for(int _injected_loop_counter = (0 & -37619); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), _GLF_IDENTITY(int(2), min(int(2), int(2)))))); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6424.4721))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false)))) || false))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6424.4721))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false)))) || false))), ! (! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))) && (false))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6424.4721))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(6424.4721))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.0)), float(injectionSwitch.y), bool(true))))), injectionSwitch.y, injectionSwitch.y))))))) && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))) || false))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))) | _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY(true ? (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(139329u, 11206u, 194317u)), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(139329u, 11206u, 194317u))) << ((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(139329u, 11206u, 194317u))))).x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | _GLF_IDENTITY((gl_WorkGroupSize), (true ? (gl_WorkGroupSize) : _GLF_FUZZED(uvec3(139329u, 11206u, 194317u))))).x));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))) | 0, int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec2(1, 1))) | 0, (_GLF_IDENTITY(1, int(ivec2(1, 1))) | 0) | (_GLF_IDENTITY(1, int(ivec2(1, 1))) | 0))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_IDENTITY(_GLF_FUZZED(uvec3(122365u, 160738u, 193354u)), min(_GLF_FUZZED(uvec3(122365u, 160738u, 193354u)), _GLF_FUZZED(uvec3(122365u, 160738u, 193354u)))) : gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u + (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u + (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), 0u + (workgroup_base + subgroup_id * subgroup_size)) + subgroup_local_id));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_injected_loop_counter)) != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, 0 | (1))) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1)))) % subgroup_size, ((111112u & 0u) | 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1)))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1)))) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), subgroup_local_id)) + 1)))) % subgroup_size)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), 1 * (_GLF_IDENTITY(int(5), int(5))))), ((1 << _GLF_IDENTITY(int(5), int(5)))) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) / 1), int(5))), (false ? _GLF_FUZZED(_GLF_IDENTITY(58448, (_GLF_IDENTITY(true, bool(bvec3(true, false, false))) ? _GLF_IDENTITY(58448, (58448) >> 0) : _GLF_FUZZED(-55973)))) : (1 << _GLF_IDENTITY(int(5), int(5))))))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), max(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sin(0.0)), injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = (1 ^ (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) << 0), int(3)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.0, 6.4)))), exp(vec2(0.0, 0.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.0, 6.4)))), (false ? _GLF_FUZZED(vec2(5984.5483, 392.816)) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(7.0, 6.4)))))))).y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0), clamp((_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0)))).x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0)).x, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), max(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))))) * vec2(1.0, 1.0)).x)), (float(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))) * vec2(1.0, 1.0)).x))) / 1.0)))) < injectionSwitch.y))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           atomicStore(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4))))) ^ 0), 4)) ^ 0)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (false ? _GLF_FUZZED(37672) : _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4))))) ^ 0, (_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4))))) ^ 0, ~ (~ ((_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, max(4, 4))))) ^ 0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))), 4)) ^ 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4))), ~ (~ (clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) - 0), 4, 4))))))))), 4, 4))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, 1, 1)))) + int(_GLF_ZERO(0.0, injectionSwitch.x))), 4))))), clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (4)))))), 4, 4))), (int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (4)))))), 4, 4)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), (_GLF_IDENTITY((4) | (4), clamp((4) | (4), (4) | (4), (4) | (4)))) - 0)))))), 4, 4))))), 0 + (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (4)))))), 4, 4))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (4)))))), 4, 4))))), (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 0 ^ (clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (4)))))), 4, 4)))))) - _GLF_IDENTITY((0 & -78481), clamp((0 & -78481), (0 & -78481), _GLF_IDENTITY((0 & -78481), max((0 & -78481), _GLF_IDENTITY((0 & -78481), ((0 & -78481)) * 1))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) + 0)) - 0), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), (_GLF_IDENTITY(int(4), (int(4)) | (int(4)))) / 1))), 4, 4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51422) : clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))))), 4, 4))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), 1 * ((4))) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, _GLF_IDENTITY(4, (4) / 1))), _GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(-51422) : clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))))), 4, 4))))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205), (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)) | (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4)), ~ (~ (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), ~ (~ (_GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(4, (4) * 1))), 4)))) | (int(4)))))))), 4, 4)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-51422) : clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), min(_GLF_IDENTITY(clamp(4, 4, 4), int(int(clamp(4, 4, 4)))), clamp(4, 4, 4)))))))), 4, 4))))))))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))) ^ (4))) >> 0) : _GLF_FUZZED(96205)), 0 | ((true ? _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (0 | _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) + 0)))) ^ (4))) >> 0) : _GLF_FUZZED(96205))))), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | 0), clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4)), (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))))), 4, _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), int(int(int(4)))))))), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))), min((_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))), (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))))))))), int(ivec3(~ (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))), 0, 1))))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4))) / 1))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) ^ 0) | (int(4))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) ^ 0) | (int(4))))), 0 | (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) ^ 0) | (int(4))))))), 1, 0, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), max(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) ^ 0) | (int(4))))), 0 | (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) ^ 0) | (int(4))))))), 1, 0, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) ^ 0) | (int(4))))), 0 | (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), ((int(4))) ^ 0) | (int(4))))))), 1, 0, ((int(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, (4) | _GLF_IDENTITY((_GLF_IDENTITY(4, (4) << (0 | _GLF_IDENTITY(0, ~ (~ (0)))))), min((_GLF_IDENTITY(4, (4) << (0 | _GLF_IDENTITY(0, ~ (~ (0)))))), (_GLF_IDENTITY(4, (4) << (0 | _GLF_IDENTITY(0, ~ (~ (0))))))))), _GLF_IDENTITY(4, int(int(4))), 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), (_GLF_IDENTITY(int(4), (int(4)) | (int(4)))) << 0))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, _GLF_IDENTITY(4, int(ivec3(4, 0, 0))), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)))), 4, 4), (true ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (int(4)) | (int(4)))), ((_GLF_IDENTITY(int(4), (int(4)) | (int(4))))) * int(_GLF_ONE(1.0, injectionSwitch.y))) << 0))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_IDENTITY(_GLF_FUZZED(96205), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_FUZZED(96205)), int(ivec2(int(_GLF_FUZZED(96205)), 0)))), 0 | (int(_GLF_IDENTITY(int(_GLF_FUZZED(96205)), int(ivec2(int(_GLF_FUZZED(96205)), 0))))))))), clamp(4, _GLF_IDENTITY(4, int(ivec3(4, 0, 0))), 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) ^ 0), 4)))), 4, 4) : _GLF_FUZZED(-34295))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), clamp((_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), clamp((_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(4, clamp(4, 4, 4))), (_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (_GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4))))) << (0 << _GLF_IDENTITY(int(7), int(7)))), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4))))))) | (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4))))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))))))) : _GLF_FUZZED(-91187))), 4, 4), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, min(_GLF_IDENTITY((4) >> 0, max((4) >> 0, (4) >> 0)), (4) >> 0))) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), clamp(4, 4, 4)))), 4, 4)) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), 1 * (clamp(4, 4, 4)))))), 4, 4))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)), (false ? _GLF_FUZZED(ivec3(89109, -8601, -85257)[2]) : (int(4)))) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)))), 4, 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4)))) | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 0 ^ (int(_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), (false ? _GLF_FUZZED(36992) : _GLF_IDENTITY(_GLF_IDENTITY((4), ((4)) | ((4))), (_GLF_IDENTITY((4), ((4)) | ((4)))) | 0))) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, (4) + 0))), 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), max(clamp(4, 4, 4), clamp(4, 4, 4)))))), 4, 4)))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4), (clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)) | (clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)))), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | ((4))) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, ~ (~ (4)))))))))), 4, 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (int(4))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205)))))))))), clamp(4, 4, _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) * 1) : _GLF_FUZZED(-28292))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-61873) : 4)), 4)), (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)))), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) | (int(4)), (_GLF_IDENTITY((int(4)) | (int(4)), int(ivec2((int(4)) | (int(4)), 0)))) | (_GLF_IDENTITY((int(4)) | (int(4)), max((int(4)) | (int(4)), (int(4)) | (int(4))))))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))), clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), clamp(4, 4, 4)))), 4, 4))))) ^ 0))))) | (int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), _GLF_IDENTITY((int(4)) | (int(4)), ~ (~ ((int(4)) | (int(4)))))))), 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ~ (~ ((4) >> 0)))) : _GLF_FUZZED(96205))), 0 | (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(96205))))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, min(4, 4)), 0, 0, (1 ^ 0))), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, min(4, 4)), 0, 0, (1 ^ 0))), int(ivec3(int(ivec4(_GLF_IDENTITY(4, min(4, 4)), 0, 0, (1 ^ 0))), 1, 0)))) + 0)), 4, 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))), 4, 4)))))))))))), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, int(ivec4(4, 0, 0, 0))))))), 4, 4), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4) : _GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(-5820)), clamp(_GLF_IDENTITY(_GLF_FUZZED(bitfieldReverse(-5820)), (_GLF_FUZZED(bitfieldReverse(-5820))) << (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_FUZZED(bitfieldReverse(-5820)), _GLF_FUZZED(bitfieldReverse(-5820))))))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), (_GLF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, true), bvec3(bvec4(bvec3(true, false, true), true))))), (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - (0 | 0)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4), (true ? clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4) : _GLF_FUZZED(21647)))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0, 0)), (int(ivec3(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0, 0))) - 0)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4) : _GLF_FUZZED(bitfieldReverse(-5820))))))), (_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4) : _GLF_FUZZED(bitfieldReverse(-5820))))), min(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4) : _GLF_FUZZED(bitfieldReverse(-5820))))), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4) : _GLF_FUZZED(bitfieldReverse(-5820))))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4) : _GLF_FUZZED(bitfieldReverse(-5820))))), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4) : _GLF_FUZZED(bitfieldReverse(-5820))))))))))), (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, 4), (_GLF_IDENTITY(clamp(4, 4, 4), (clamp(4, 4, 4)) | 0)) | (clamp(4, 4, 4)))))), 4, 4), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-85971))))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0), 4) : _GLF_FUZZED(bitfieldReverse(-5820)), (true ? _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (true ? ~ (4) : _GLF_FUZZED(-85971))))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0), 4) : _GLF_FUZZED(bitfieldReverse(-5820)) : _GLF_FUZZED((-85597)))))))))) | 0)) * 1)) | (int(int(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) ? clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, ~ (~ (4))), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) >> 0)), (~ (_GLF_IDENTITY(4, (4) >> 0))) << 0))))))), 4, 4) : _GLF_FUZZED(bitfieldReverse(-5820)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4))))), (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (_GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), 4, 4))))))), _GLF_IDENTITY(4, int(int(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) ^ 0))), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) + 0), 4)), 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-94660) : 4))))) ^ (0 << _GLF_IDENTITY(int(2), int(2)))), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(42487) : 4))), max(clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), min(clamp(4, 4, _GLF_IDENTITY(4, int(int(4)))), clamp(4, 4, 4)))))), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (false ? _GLF_FUZZED(58993) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), (_GLF_IDENTITY(4, clamp(4, 4, 4))) + 0), clamp(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) + 0), 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4))))) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), clamp(4, 4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(37239) : 4)))), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, 4, 4)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) - (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(int(ivec4(clamp(4, 4, 4), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (int(ivec4(clamp(4, 4, 4), 0, 0, 0))))))))))))) - 0, int(_GLF_IDENTITY(int((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) - (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(int(ivec4(clamp(4, 4, 4), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (int(ivec4(clamp(4, 4, 4), 0, 0, 0))))))))))))) - 0), (int((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) - (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(int(ivec4(clamp(4, 4, 4), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (int(ivec4(clamp(4, 4, 4), 0, 0, 0))))))))))))) - 0)) | (int((_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), clamp(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (4) | 0), 4)), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(clamp(4, 4, 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) - (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 | (int(0)))))), 4), clamp(clamp(4, 4, 4), clamp(4, 4, 4), _GLF_IDENTITY(clamp(4, 4, 4), _GLF_IDENTITY(int(ivec4(clamp(4, 4, 4), 0, 0, 0)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) * (int(ivec4(clamp(4, 4, 4), 0, 0, 0))))))))))))) - 0)))))))), 4, 4))))))))), 64, 4);
          }
        }
       else
        {
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))))));
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, true && _GLF_IDENTITY((subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ! (! ((_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), min(uint(2), _GLF_IDENTITY(uint(2), (uint(2)) << 0u))), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (1 ^ 0))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       for(int _injected_loop_counter = ((1 ^ 1) | (0 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), 1 * (int(0))), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
       atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), uint(uint(uint(2)))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) ^ 0), 2))), uint(uint(uint(2)))), _GLF_IDENTITY(uint(2), uint(uint(uint(2)))))), 4, 64, 4);
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
