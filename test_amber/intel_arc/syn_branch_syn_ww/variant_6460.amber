#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 uint workgroup_base;
 mat4x2 _f0;
} ;

struct _GLF_struct_25 {
 _GLF_struct_24 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_21 {
 mat3 _f0;
 mat2 _f1;
 vec3 _f2;
 mat2 _f3;
 mat2 _f4;
 vec3 _f5;
} ;

struct _GLF_struct_20 {
 mat2 _f0;
} ;

struct _GLF_struct_19 {
 ivec3 _f0;
 mat4x2 _f1;
 mat4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_22 {
 _GLF_struct_19 _f0;
 int _f1;
 _GLF_struct_20 _f2;
 bool _f3;
 _GLF_struct_21 _f4;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 mat2 _f1;
 bool _f2;
} ;

struct _GLF_struct_16 {
 uvec2 _f0;
} ;

struct _GLF_struct_15 {
 ivec3 _f0;
 mat3x2 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_14 {
 mat3x2 _f0;
 bool _f1;
 vec2 _f2;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 uvec3 _f1;
 mat2 _f2;
 ivec3 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_18 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
 _GLF_struct_14 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
} ;

struct _GLF_struct_10 {
 mat3x2 _f0;
 mat4x2 _f1;
 mat4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_10 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 ivec2 _f1;
 bool _f2;
 vec3 _f3;
 int _f4;
} ;

struct _GLF_struct_7 {
 int _f0;
 ivec2 _f1;
 vec3 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_6 {
 ivec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_5 {
 mat4 _f0;
 ivec3 _f1;
 int _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
 float _f3;
 _GLF_struct_8 _f4;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 ivec2 _f1;
 mat3x4 _f2;
 mat3x2 _f3;
 float _f4;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 uint _f3;
 _GLF_struct_3 _f4;
 mat3x4 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_23 {
 _GLF_struct_4 _f0;
 _GLF_struct_9 _f1;
 mat3x2 _f2;
 _GLF_struct_11 _f3;
 uint num_workgroup;
 mat4 _f4;
 _GLF_struct_18 _f5;
 _GLF_struct_22 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-8.1, -2774.7267)) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), false, true)))))), ! (! (bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(bool(injectionSwitch.x > injectionSwitch.y), true), false, true))))))))))))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) / abs(1.0))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))) ? _GLF_FUZZED(466.747) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))))), true, false, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, min(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(1.0)))).x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))))))))), true, false, true)))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, min(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(1.0)))).x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))))))))), true, false, true)))))) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, min(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(1.0)))).x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))))))))), true, false, true)))))) || false)), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.3)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)), bool(true))))) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, min(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))) ? _GLF_FUZZED(466.747) : injectionSwitch.x)))) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, false, true))), true && (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, abs(1.0)))).x, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(466.747) : injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, true, true))))))))), true, false, true)))))) || false)), true))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_4(_GLF_struct_0(uvec3(1u)), _GLF_struct_1(mat3x2(_GLF_IDENTITY(1.0, (1.0) * 1.0)), ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0)))), _GLF_IDENTITY(1, int(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.4) : 0.0)), injectionSwitch.x)) | (1))))), mat3x4(1.0), mat3x2(1.0), 1.0), _GLF_struct_2(_GLF_IDENTITY(mat4(1.0), (mat4(1.0)) * mat4(1.0))), 1u, _GLF_struct_3(ivec4(1)), mat3x4(1.0), uvec4(1u)), _GLF_struct_9(_GLF_struct_5(mat4(1.0), ivec3(1), 1), _GLF_struct_6(ivec4(1), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), min(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), 0.0 + (_GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), max(1.0, 1.0)))))))))), _GLF_struct_7(1, ivec2(1), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat2x3(1.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 0.0), vec3(1.0, 0.0, 0.0))), 0.0, abs(0.0), 1.0, 0.0)))), max(vec3(1.0), vec3(1.0))), mat2(1.0)), 1.0, _GLF_struct_8(mat2x3(1.0), ivec2(1), true, vec3(1.0), 1)), mat3x2(1.0), _GLF_struct_11(_GLF_struct_10(mat3x2(1.0), mat4x2(1.0), mat4(1.0), vec3(1.0)), mat3(1.0)), gl_NumWorkGroups.x, _GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * mat4(1.0)), _GLF_struct_18(_GLF_struct_12(bvec4(true), uvec3(1u), mat2(1.0), ivec3(1), vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), _GLF_struct_13(mat2x4(1.0)), _GLF_struct_14(mat3x2(1.0), true, vec2(1.0)), _GLF_struct_15(_GLF_IDENTITY(ivec3(1), clamp(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-2534) : 1))), ivec3(1), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((ivec3(1)), (_GLF_IDENTITY((ivec3(1)), clamp(_GLF_IDENTITY((ivec3(1)), max((ivec3(1)), (ivec3(1)))), (ivec3(1)), (ivec3(1))))) + ivec3(0, 0, 0)) | ivec3(0, 0, 0))) | (ivec3(1))))), mat3x2(1.0), vec2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 1.0))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))), max(1.0, 1.0)), (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(2399.3653))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))))) : _GLF_IDENTITY(_GLF_FUZZED(-869.732), mix(float(_GLF_FUZZED(-869.732)), float(_GLF_FUZZED(-1452.6478)), _GLF_IDENTITY(bool(false), (bool(false)) && true))))))), _GLF_struct_16(uvec2(1u)), _GLF_struct_17(mat4x2(1.0), mat2(1.0), true)), _GLF_struct_22(_GLF_struct_19(ivec3(1), mat4x2(1.0), mat4(1.0), vec3(1.0)), 1, _GLF_struct_20(mat2(1.0)), true, _GLF_struct_21(mat3(1.0), mat2(1.0), _GLF_IDENTITY(vec3(1.0), log(vec3(1.0, 1.0, 1.0)) + (vec3(1.0))), mat2(1.0), mat2(1.0), vec3(1.0))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u)))) ^ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize))))))), gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0))))), min(vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0))))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0, 0.0)))))))).y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false)), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), _GLF_IDENTITY(false, ! (! (false))), true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(0.3, 9970.9298), vec2(-1375.6263, 247.658), vec2(-0.7, -357.324))) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, (_GLF_IDENTITY(false ? _GLF_FUZZED(4.3) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(roundEven(injectionSwitch)) : injectionSwitch)).x, float(mat4(false ? _GLF_FUZZED(4.3) : injectionSwitch.x, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, abs(0.0), 1.0, exp(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)), dot(vec2(abs(1.0), 0.0), vec2(1.0, 0.0)))))))), injectionSwitch.x)) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.5)), float(injectionSwitch.x), bool(true))))) > injectionSwitch.y)), false), true, false))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), false || ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec4(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false, false))))), _GLF_IDENTITY(true, false || (true)), false))))), false, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), vec2(0.0, 0.0) + (vec2(0.0, 0.0)))).y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_25 _GLF_struct_replacement_25 = _GLF_struct_25(_GLF_struct_24(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)), mat4x2(1.0)), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false, true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_struct_replacement_25._f0.workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) | (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec3(subgroup_id, _GLF_IDENTITY(0u, min(0u, 0u)), 1u)), (uint(uvec3(subgroup_id, 0u, 1u))) + 0u)))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_struct_replacement_25._f0.workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u)))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, _GLF_IDENTITY(max((subgroup_size) / 1u, (subgroup_size) / 1u), (max((subgroup_size) / 1u, (subgroup_size) / 1u)) ^ 0u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), (subgroup_size) / 1u)) << 0u), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u)))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u)))))), 1u * (max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : subgroup_size))) / 1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / _GLF_IDENTITY(1u, (1u) << (0u | 0u)))))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, _GLF_IDENTITY((subgroup_size), clamp(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), (subgroup_size), (subgroup_size))) / 1u))))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u)), (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))) >> 0u))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, (1u) >> 0u), 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) << 0u), min((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / _GLF_IDENTITY(1u, (1u) >> 0u), max((subgroup_size) / 1u, (subgroup_size) / 1u))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ~ (~ ((subgroup_size)))) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u)))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), min((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))))) | (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / _GLF_IDENTITY(1u, (1u) << 0u)))))), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, 1u * (1u)))), (subgroup_size) / 1u)))))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, 0u + (_GLF_IDENTITY((subgroup_size) / 1u, max((subgroup_size) / 1u, (subgroup_size) / 1u))))))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) << 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, 0 ^ (1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(clamp(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-53206, (-53206) - 0)) : 64)), _GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) << 0)) >> 0)), 64), (clamp(_GLF_IDENTITY(64, (false ? _GLF_IDENTITY(_GLF_FUZZED(-53206), min(_GLF_FUZZED(-53206), _GLF_IDENTITY(_GLF_FUZZED(-53206), _GLF_IDENTITY(0 + (_GLF_FUZZED(-53206)), (true ? 0 + _GLF_IDENTITY((_GLF_FUZZED(-53206)), max(_GLF_IDENTITY((_GLF_FUZZED(-53206)), clamp((_GLF_FUZZED(-53206)), (_GLF_FUZZED(-53206)), _GLF_IDENTITY((_GLF_FUZZED(-53206)), (true ? (_GLF_FUZZED(-53206)) : _GLF_FUZZED(90872))))), (_GLF_FUZZED(-53206)))) : _GLF_FUZZED(-73832)))))) : 64)), _GLF_IDENTITY(64, (64) | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) << 0))))) | (64))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) << 0))))) | (64))) : _GLF_FUZZED(-12135))), max((64), (64)))), 64)) >> 0))) | (64), (false ? _GLF_FUZZED(-57412) : (_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(64300) : 64)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-53206) : 64)), 1 * (_GLF_IDENTITY(64, (false ? _GLF_FUZZED(-53206) : 64)))), _GLF_IDENTITY(64, (64) | _GLF_IDENTITY((64), ((64)) | 0)), 64))) | _GLF_IDENTITY(_GLF_IDENTITY((64), int(int((64)))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | 0), (_GLF_IDENTITY(64, (64) | 0)) | (_GLF_IDENTITY(64, (64) | 0)))) << _GLF_IDENTITY(0, (0) ^ 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) + int(_GLF_ZERO(0.0, injectionSwitch.x))), (4) | (_GLF_IDENTITY(4, min(4, 4)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec4(false, true, false, false)), true)), ! (! (bool(bvec2(bool(bvec4(false, true, false, false)), true)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), ! (! (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true)))) && true)), false || (! (_GLF_IDENTITY(! ((! (false))), (_GLF_IDENTITY(! ((! (false))), bool(bvec3(! ((! (false))), false, true)))) && true)))))), true && (! ((_GLF_IDENTITY(! (false), false || (! (false)))))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || _GLF_IDENTITY(false, ! (! (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))), ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))))) || false) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))) && true))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) && true)))), ! (! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && _GLF_IDENTITY((! ((! (false)))), ((! ((! (false))))) || false))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! _GLF_IDENTITY(((! (false))), ! (! (((! (false))))))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), true && (! ((! (false))))), false || (_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ((! (false))) && true)), true && (! ((! _GLF_IDENTITY((false), false || ((false)))))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (_GLF_IDENTITY((! (false)), ! (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! (_GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec3((! (false)), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3((! (false)), true, false)), (bool(bvec3((! (false)), true, false))) && true))))))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! ((! (false))), bool(bvec4(! ((! (false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(bool(bvec2(_GLF_IDENTITY(! ((! (false))), bool(bvec4(! ((! (false))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true), bvec3(bvec4(bvec3(bool(bvec2(_GLF_IDENTITY(! ((! (false))), bool(bvec4(! ((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false, true), true))))))))) || false, ((_GLF_IDENTITY(! _GLF_IDENTITY(((! (false))), (((! (false)))) && true), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))) && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || _GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))), ! (! (false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((! (false))), ! (! (! ((! (false)))))), true && (! ((! (false)))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && _GLF_IDENTITY((! ((! (false)))), ! (_GLF_IDENTITY(! ((! ((! (false))))), bool(bvec4(_GLF_IDENTITY(! ((! ((! (false))))), false || (! ((! ((! (false))))))), false, false, false))))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false, (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), false || ((! (false)))))))), true && (! ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))) || false, ((_GLF_IDENTITY(! ((! (false))), true && (! ((! (false)))))) || false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true)))))))), true, false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))) && true))))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   int i = 0;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(2, int(int(2)))), (false ? _GLF_FUZZED(workgroup_id) : uint(2))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), clamp((uint(2)), (uint(2)), (uint(2)))) | (uint(2))), uint(2))), 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), bool(bvec4(bool(bvec2(_GLF_DEAD(false), true)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false, false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid) | (next_virtual_gid), (true ? (next_virtual_gid) | (next_virtual_gid) : _GLF_FUZZED(next_virtual_gid))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), max(uint(2), uint(2))), (_GLF_IDENTITY(uint(2), max(uint(2), uint(2)))) ^ (0u << _GLF_IDENTITY(uint(5u), uint(5u)))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (((injectionSwitch.x > injectionSwitch.y))), (! (((injectionSwitch.x > injectionSwitch.y)))) && true)))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
