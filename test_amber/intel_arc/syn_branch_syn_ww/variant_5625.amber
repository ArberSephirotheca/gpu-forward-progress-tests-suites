#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 vec3 _f0;
 uint subgroup_base;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _injected_loop_counter)))) > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           barrier();
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
        }
       else
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_IF_FALSE(false), true), bvec2(bvec2(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))))
      barrier();
    }
  }
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y = subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y = subgroup_id));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.x = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false)))), _GLF_IDENTITY(false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))), _GLF_IDENTITY(bool(bool(false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(false, bool(bvec2(false, true)))))))))), bool(bool(bool(bool(false || (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), _GLF_IDENTITY(false, bool(bvec2(false, true))))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       barrier();
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.y = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id, (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id, (true ? GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id : _GLF_FUZZED(uvec2(uvec4(131556u, 166774u, 22290u, 111736u)))))) | (GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id)).x;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
      {
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x;
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
  {
   GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size.z = workgroup_size;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(clamp(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size)) : gl_WorkGroupID)))).x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x) - 0u);
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(3), int(3)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(3), int(int(int(3)))), int(3)))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0 | 0, 0 ^ (0 | 0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 uint workgroup_base = GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size.z * workgroup_id;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(vec3(1.0), GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size))) | uvec3(0u, 0u, 0u)).x, 0u + (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size)), clamp(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size)), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size)), clamp(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size)), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size)), _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size, (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size) | _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size), max((GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size), (GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size))))))))) | uvec3(0u, 0u, 0u)).x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(_GLF_FUZZED(9.9)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), bool(true)))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))), false || (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 1.5))), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.3) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), bool(bvec3(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))), true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.3) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / cos(vec2(0.0, 0.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(vec2(_GLF_IDENTITY((injectionSwitch.y), 0.0 + (_GLF_IDENTITY((injectionSwitch.y), float(mat4((injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0))))), sqrt(0.0)))) / 1.0)) || false)))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(((187.777 / 2.4) * 78.85))), vec2(_GLF_FUZZED(-5735.9214), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))) || false)))))))) && true)) || false))))) || false)))))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0)) | 0), max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (false ? _GLF_FUZZED((ivec3(9087, -56394, 41312) , _injected_loop_counter)) : _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (true ? min(_injected_loop_counter, _injected_loop_counter) : _GLF_IDENTITY(_GLF_FUZZED(28025), (_GLF_FUZZED(28025)) | (_GLF_FUZZED(28025)))))))))) < ((_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << 0), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) << 0)) | (0 ^ 0))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), ~ (~ (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))))), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) / 1, _GLF_IDENTITY(int(ivec3((int(0)) / 1, 0, 0)), ~ (~ (int(ivec3((int(0)) / 1, 0, 0)))))))), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, min(0, 0)))) / _GLF_IDENTITY(1, (false ? _GLF_FUZZED(8816) : 1))))) << 0)) << _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_injected_loop_counter) : 0))))), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), 0 ^ (_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1))) / 1))), (_GLF_IDENTITY(1, ~ (~ (1))) << _GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) ^ 0)), _GLF_IDENTITY(int(0), (int(0)) / 1))) << 0)) << 0) : _GLF_FUZZED(_injected_loop_counter)))) << ((0 >> _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(0, min(0, 0))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1)), 0 | (0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1)))), (0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1))) - 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1)) - 0)) >> 0))))))) | 0)), (true ? _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1))), _GLF_IDENTITY(min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, (0) << 0) ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1))), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1)), (true ? ~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1)) : _GLF_FUZZED(_injected_loop_counter)))))))), clamp(min(_GLF_IDENTITY(0, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 1, 1), min(ivec3(0, 1, 1), ivec3(0, 1, 1)))), 0 | (int(_GLF_IDENTITY(ivec3(0, 1, 1), min(ivec3(0, 1, 1), ivec3(0, 1, 1))))))) ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1))), _GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), min((0), (0))))) >> 0)) * 1)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), min((0), (0))))) >> 0)) * 1)), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), min((0), (0))))) >> 0)) * 1))) >> 0), 0, 0), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), min((0), (0))))) >> 0)) * 1)), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), min((0), (0))))) >> 0)) * 1))) >> 0), 0, 0))))))), min(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(91014) : 0))))) >> 0)) * 1))), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), 0 ^ (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)) * 1, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)) * 1, int(int((_GLF_IDENTITY(0, (0) >> 0)) * 1))), _GLF_IDENTITY((_GLF_IDENTITY(0, (0) >> 0)) * 1, ~ (~ ((_GLF_IDENTITY(0, (0) >> 0)) * 1))), (_GLF_IDENTITY(0, (0) >> 0)) * 1))))), _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) * 1))))))))) | 0)) : _GLF_FUZZED(-59323))))); _injected_loop_counter ++)
    {
     GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.z = _GLF_struct_replacement_0.subgroup_base;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, (0) | (0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
            {
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u) + GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.z + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size.y = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid)), (virtual_gid) >> 0u), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))), 0u | (_GLF_IDENTITY(virtual_gid, clamp(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid)), (virtual_gid) >> 0u), virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))))))))))), false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), false))), bvec2(bvec2(bvec2(bvec2(bvec2(! (false), false))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec2(bvec2(! (false), false)))))))))))))))), false, false, false)))) && true)))
  {
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - 0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(67.21)), float(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - 0.0), tan(0.0), 1.0, 1.0, 0.0, 1.0))), bool(true))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false)))))))))
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     else
      {
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))), ! (! (_GLF_IDENTITY(! (bool(false)), ! (! (! (bool(false))))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 | 0); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, _GLF_IDENTITY(bool(bool(_injected_loop_counter < 1)), true && (bool(bool(_injected_loop_counter < 1)))))), (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)) && true); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))) && true))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, determinant(mat2(0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(mat3x4(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec2(0.0, 1.0)), 0.0 + (dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec2(0.0, 1.0))))), 1.0)), (vec2(mat3x4(max(injectionSwitch, injectionSwitch), 0.0, 0.0, 0.0, cos(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec2(0.0, 1.0)), 0.0 + (dot(vec2(0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), vec2(0.0, 1.0))))), 1.0))) * mat2(1.0)))).y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.2), _GLF_FUZZED(-3.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), max(injectionSwitch, injectionSwitch)).y, 1.0, length(vec2(0.0, 0.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, tan(0.0), sqrt(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, 0.0), max(vec2(1.0, 0.0), vec2(1.0, 0.0))), vec2(1.0, abs(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0)))), 1.0), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 1.0, length(vec2(0.0, 0.0)), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, log(1.0), 1.0, 1.0, tan(0.0), sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-10.93)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, abs(0.0)))), 1.0))))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) - 0)], injectionSwitch[1])), injectionSwitch, injectionSwitch)).x > injectionSwitch.y))));
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.z, min(workgroup_base + GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.z, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))) + GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.z)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, min(1, 1))), ((subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), _GLF_IDENTITY(int(int(clamp(1, 1, 1))), (int(int(clamp(1, 1, 1)))) << 0))))))) ^ 0u) % GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size.x);
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.x = next_virtual_gid;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         atomicStore(buf[GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_size.y], uint(1), 4, 64, 4);
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-1808.4112))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! (injectionSwitch.x > injectionSwitch.y))) || false)), false, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (injectionSwitch.x > injectionSwitch.y))), false, false, true))) || false)))))))));
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-5123), _GLF_IDENTITY((_GLF_FUZZED(-5123)), ((_GLF_FUZZED(-5123))) << 0) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), int(2)))) : _GLF_IDENTITY(2, 0 + (2)))), _GLF_IDENTITY((2) << 0, ((2) << 0) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(-5123), _GLF_IDENTITY((_GLF_FUZZED(-5123)), ((_GLF_FUZZED(-5123))) << 0) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, 0 ^ (2))), int(2)))) : _GLF_IDENTITY(2, 0 + (2)))), _GLF_IDENTITY((2) << 0, ((2) << 0) >> 0))) >> 0)), min((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-82585) : 2)), _GLF_IDENTITY(2, (2) + 0), 2)), (2) << 0)), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (0)))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(2, (2) << 0))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) << 0))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ (_GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) << 0)), (~ (_GLF_IDENTITY((2), ((2)) << 0))) | 0))) << 0) | ((2) << 0))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))), ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0)))) | ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) * 1))), _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)) << uvec3(0u, 0u, 0u))))))))), max(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(2, (2) << 0))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) << 0))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ (_GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) << 0)), (~ (_GLF_IDENTITY((2), ((2)) << 0))) | 0))) << 0) | ((2) << 0))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))), ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0)))) | ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) * 1))), _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)) << uvec3(0u, 0u, 0u))))))))), (~ (~ ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(2, (2) << 0))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) << 0))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ (_GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) << 0)), (~ (_GLF_IDENTITY((2), ((2)) << 0))) | 0))) << 0) | ((2) << 0))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))), ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0)))) | ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) * 1))), _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))))) | 0u), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(2, (2) << 0))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) << 0))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ (_GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) << 0)), (~ (_GLF_IDENTITY((2), ((2)) << 0))) | 0))) << 0) | ((2) << 0))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))), ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0)))) | ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) * 1))), _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)) << uvec3(0u, 0u, 0u))))))))), (~ (~ ((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u)), max(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), min(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(2, (2) << 0))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), 0 ^ ((2))) << 0))), 0u, _GLF_IDENTITY(1u, 0u | (1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ (_GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((2), ((2)) << 0)), (~ (_GLF_IDENTITY((2), ((2)) << 0))) | 0))) << 0) | ((2) << 0))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), 0u, 1u), (uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, 0 ^ _GLF_IDENTITY((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))), ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0)))) | ((_GLF_IDENTITY((2) << 0, ((2) << 0) | ((2) << 0))))))), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) * 1))), _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)) << uvec3(0u, 0u, 0u)))))))))) / 1u))), ~ (~ (~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) | 0u), 0u)) | (subgroup_local_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(floatBitsToInt(2326.9034)))) ^ (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))), (((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))) ^ (0 >> _GLF_IDENTITY(int(5), int(5)))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, ~ (~ (2)))) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, min(2, 2))) | 0), (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | _GLF_IDENTITY(((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))), clamp(((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))), ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))), ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, 0))) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(uint(uint(max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)))), max(uint(uint(max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)))), uint(uint(max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)))))))), clamp(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, 0 ^ (2)), 2)), (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << _GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(52680))), _GLF_IDENTITY(0, ~ (~ (0))), 0))))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 0u | (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) << 0), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), 0 | (_GLF_IDENTITY(2, (2) << 0)))) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY((2), int(_GLF_IDENTITY(ivec3((2), 1, 1), ~ (~ (ivec3((2), 1, 1))))))) / 1) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u)) * uvec2(1u, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u)) ^ uvec2(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, (true) && true) ? 0u : _GLF_FUZZED(virtual_gid))))))))), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))), (subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) | _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u)))))), 0u, 1u))))))), clamp(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(floatBitsToInt(2326.9034)))) ^ (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), ~ (~ ((0 & 32735)))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) + 0), (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), (19220 & 0) + (_GLF_IDENTITY((0 & 32735), ((0 & 32735)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, int(ivec4(5, 1, 1, 1))), 5))) - 0)), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), 1 * ((0 & 32735))) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((_GLF_IDENTITY(0, (0) | (0)) & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), ~ (~ ((0 & 32735)))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) + 0), (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), (19220 & 0) + (_GLF_IDENTITY((0 & 32735), ((0 & 32735)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, int(ivec4(5, 1, 1, 1))), 5))) - 0)), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), 1 * ((0 & 32735))) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((_GLF_IDENTITY(0, (0) | (0)) & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))) | (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), ~ (~ ((0 & 32735)))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) + 0), (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), (19220 & 0) + (_GLF_IDENTITY((0 & 32735), ((0 & 32735)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, int(ivec4(5, 1, 1, 1))), 5))) - 0)), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), 1 * ((0 & 32735))) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((_GLF_IDENTITY(0, (0) | (0)) & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), 0u | (uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), ~ (~ ((0 & 32735)))) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) ^ 0)) + 0), (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), (19220 & 0) + (_GLF_IDENTITY((0 & 32735), ((0 & 32735)) + int(_GLF_ZERO(0.0, injectionSwitch.x))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, int(ivec4(5, 1, 1, 1))), 5))) - 0)), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), 1 * ((0 & 32735))) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((_GLF_IDENTITY(0, (0) | (0)) & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) - 0)), max(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u, ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u | 1u)), uvec4(0u, 0u, 0u, 0u) + (uvec4(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), 0u, ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u | 1u)))))) % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), clamp(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, (_GLF_IDENTITY((2) << _GLF_IDENTITY(0, clamp(0, 0, 0)), min((2) << _GLF_IDENTITY(0, clamp(0, 0, 0)), (2) << _GLF_IDENTITY(0, clamp(0, 0, 0))))) / 1)), subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), min(_GLF_IDENTITY((2), int(ivec2((2), 1))), (2))) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), uint(uvec4(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 0u, 1u, 0u))), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)))) ^ 0u), 0u | (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), clamp(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 0u | (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))))))), 1u), (uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u)) * _GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)), (uvec2(1u, _GLF_IDENTITY(1u, (1u) ^ 0u))) >> uvec2(0u, 0u)))) ^ uvec2(0u, 0u)), (uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u)) ^ uvec2(0u, 0u)))))), max(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), (subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1))) >> 0u), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))), (subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) | 0u))), 0u, 1u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY((2), 0 + ((2)))) >> 0) << 0), _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(floatBitsToInt(2326.9034)))) ^ (_GLF_IDENTITY(2, (2) << 0)), (_GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(floatBitsToInt(2326.9034)))) ^ (_GLF_IDENTITY(2, (2) << 0))) | 0)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY((0 & 32735), ((0 & 32735)) | 0) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), _GLF_IDENTITY(1, min(1, 1)), 0, _GLF_IDENTITY(1, ~ (~ (1))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, _GLF_IDENTITY(int(int(5)), clamp(_GLF_IDENTITY(int(int(5)), 0 ^ (int(int(5)))), _GLF_IDENTITY(int(int(5)), clamp(int(int(5)), int(int(5)), int(int(5)))), int(int(5))))))))))) | _GLF_IDENTITY(0, (0 << _GLF_IDENTITY(int(0), int(0))) | (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(41418)))))), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (1u), uint(uvec2((1u) | (1u), 0u)))), 1u)))), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), clamp(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) ^ 0)), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << _GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), int(ivec3(~ (2), 0, 1))))), (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2) << 0, ((2) << 0) / 1), clamp(_GLF_IDENTITY((2) << 0, ((2) << 0) / 1), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 0u | (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u)) * uvec2(1u, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u)) ^ uvec2(0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) ^ 0))), 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u)) * uvec2(1u, 1u))) ^ uvec2(0u, 0u)), (uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u)) ^ uvec2(0u, 0u))) / uvec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) | 0u, ((subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) | 0u) ^ 0u)))), 0u, 1u))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(floatBitsToInt(2326.9034)))) ^ (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) | (_GLF_IDENTITY(0, 0 ^ (0)))), (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))), (false ? _GLF_FUZZED((false ? -67044 : -50121)) : (0) | ((0 & 32735) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))))), int(5))))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), max((2), (2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), max(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))), _GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ~ (~ ((2)))) << 0, ((2) << 0) / 1)), (false ? _GLF_FUZZED(-4855) : _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)))))), subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0)))) | (_GLF_IDENTITY(0, 0 ^ (0)))), (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), max(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))))), (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) >> 0)) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1)), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5))), (false ? _GLF_FUZZED((false ? -67044 : -50121)) : (0) | ((0 & 32735) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), ~ (~ (int(5)))), int(5))))), int(5))))))), (_GLF_IDENTITY(2, (2) << _GLF_IDENTITY(0, (0) | ((0 & 32735) >> _GLF_IDENTITY(int(5), int(5)))))) | 0), 1, 0, 1))))))), 0u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))))) / 1u), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) ^ 0), 2))) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), clamp(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << _GLF_IDENTITY(0, clamp(0, 0, 0))) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), max(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), subgroup_local_id % _GLF_IDENTITY(2, (2) << 0))))), 0u, 1u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 0u | (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) << 0), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) - 0u)))), (uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(2, (2) << 0)), 0, 0)), (int(ivec3((_GLF_IDENTITY(2, (2) << 0)), 0, 0))) * 1)) | (_GLF_IDENTITY(2, (2) << 0))), 1u)) * uvec2(1u, 1u))) ^ uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u)), ((uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u))) ^ uvec2(0u, 0u)) ^ uvec2(0u, 0u)))))), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))), (subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) | 0u))), 0u, 1u)), min(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 0u | (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) << 0), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) - 0u)))), (uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(2, (2) << 0)), 0, 0)), (int(ivec3((_GLF_IDENTITY(2, (2) << 0)), 0, 0))) * 1)) | (_GLF_IDENTITY(2, (2) << 0))), 1u)) * uvec2(1u, 1u))) ^ uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u)), ((uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u))) ^ uvec2(0u, 0u)) ^ uvec2(0u, 0u)))))), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))), (subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) | 0u))), 0u, 1u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 0u | (_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) | (2))) << 0), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), 1u), (_GLF_IDENTITY(uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), (_GLF_IDENTITY(2, (2) << 0)) | (_GLF_IDENTITY(2, (2) << 0))), _GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) - 0u)))), (uvec2(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) << 0), _GLF_IDENTITY((_GLF_IDENTITY(2, (2) << 0)), _GLF_IDENTITY(int(ivec3((_GLF_IDENTITY(2, (2) << 0)), 0, 0)), (int(ivec3((_GLF_IDENTITY(2, (2) << 0)), 0, 0))) * 1)) | (_GLF_IDENTITY(2, (2) << 0))), 1u)) * uvec2(1u, 1u))) ^ uvec2(0u, 0u)), _GLF_IDENTITY((uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u)), ((uvec2(subgroup_local_id % _GLF_IDENTITY(2, (2) << 0), 1u))) ^ uvec2(0u, 0u)) ^ uvec2(0u, 0u)))))), max(subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY((2) << 0, ((2) << 0) / 1)), _GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), ((2)) >> 0) << _GLF_IDENTITY(0, int(ivec3(0, 0, 0)))), (subgroup_local_id % _GLF_IDENTITY(2, (2) << 0)) | 0u))), 0u, 1u)))))))))))))))))) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base, (GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base) | uvec3(0u, 0u, 0u)).x], uint(2), 4, _GLF_IDENTITY(64, (64) * 1), 4);
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) - 0)); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (injectionSwitch.x > injectionSwitch.y))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             barrier();
            }
          }
         for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-940.507)), bool(false))) > injectionSwitch.y))));
   atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_13next_virtual_gidnum_workgroupsubgroup_base.x], uint(2), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 ^ ((4)))) * 1) | 0));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
