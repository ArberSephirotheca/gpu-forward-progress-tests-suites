#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_6 {
 mat2x4 _f0;
 uint subgroup_base;
} ;

struct _GLF_struct_5 {
 uint _f0;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-771.136), min(_GLF_FUZZED(-771.136), _GLF_IDENTITY(_GLF_FUZZED(-771.136), (_GLF_FUZZED(-771.136)) - 0.0)))), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-771.136), min(_GLF_FUZZED(-771.136), _GLF_FUZZED(-771.136)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-771.136), min(_GLF_FUZZED(-771.136), _GLF_FUZZED(-771.136)))), float(injectionSwitch.y), bool(true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), float(_GLF_FUZZED(4904.2758)), bool(false))), mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true)))) || false)) && true)), bool(bool((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-771.136), min(_GLF_FUZZED(-771.136), _GLF_FUZZED(_GLF_IDENTITY(-771.136, min(-771.136, -771.136)))))), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-771.136), min(_GLF_FUZZED(-771.136), _GLF_FUZZED(-771.136)))), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-771.136), min(_GLF_FUZZED(-771.136), _GLF_FUZZED(-771.136)))), float(injectionSwitch.y), bool(true))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true)), max(mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-771.136)), float(injectionSwitch.y), bool(true)))) || false)) && true))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), ! (! (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), ! (! ((! (bool(false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0)))))) - _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(597.615))))), 0.0), (vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)) / vec2(1.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), true, false)))) || false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))) || false, bool(bool((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false)))))) || false))))), (! (_GLF_IDENTITY(false, (false) || false))) || false)))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, true)))))) && true)) || false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), (! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec4((false), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))) || false)))))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, true))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true, true, true))), false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, uint(uvec2(_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)), 1u))) * workgroup_id) | (workgroup_size * workgroup_id))) >> (1u ^ 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))))))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)))), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), 1u * (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))) >> (1u ^ 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(~ (~ (workgroup_size)), max(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) << 0u), _GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size))))))) * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))))))) - _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))), ((0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u)))) << 0u)), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))) >> (1u ^ 1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))) * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)))) * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), min(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id)))))) + 0u))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) ^ 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_4(_GLF_struct_0(bvec4(true), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(63.54))))), _GLF_struct_1(vec3(1.0), uvec2(1u)), _GLF_struct_2(mat3x4(1.0)), _GLF_struct_3(bvec3(true)), ivec4(1)), _GLF_struct_5(1u), _GLF_struct_6(mat2x4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(ivec2(6801, -85001).t))), float(1.0), bool(true)))), _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u) * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))))))), (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), true)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), true)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), true)))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, true)), true))))))))) || false))))) && true))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, 0u | _GLF_IDENTITY((_GLF_struct_replacement_7._f2.subgroup_base), ((_GLF_struct_replacement_7._f2.subgroup_base)) - 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))))) + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), clamp(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(subgroup_id)), (true ? _GLF_IDENTITY((true ? workgroup_base : _GLF_FUZZED(subgroup_id)), 1u * ((true ? workgroup_base : _GLF_FUZZED(subgroup_id)))) : _GLF_FUZZED(workgroup_size)))) + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), min(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), (0u ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, (_GLF_struct_replacement_7._f2.subgroup_base) << 0u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), min(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))))))))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), clamp(~ (_GLF_IDENTITY(uint(4u), uint(4u))), ~ (_GLF_IDENTITY(uint(4u), uint(4u))), ~ (_GLF_IDENTITY(uint(4u), uint(4u)))))) >> 0u))), _GLF_IDENTITY(uint(4u), uint(4u)))))), ~ (~ (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))))), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_id) : 1u)) * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, (_GLF_struct_replacement_7._f2.subgroup_base) - 0u)) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), 0u, 1u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), clamp(~ (_GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec2(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 1u))))), ~ (_GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(uint(4u), uint(4u))))), min(((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), clamp(~ (_GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec2(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 1u))))), ~ (_GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(uint(4u), uint(4u))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(uint(4u), uint(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) >> 0u))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), clamp(~ (_GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 0u ^ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec2(~ (_GLF_IDENTITY(uint(4u), uint(4u))), 1u))))), ~ (_GLF_IDENTITY(uint(4u), uint(4u))))))), _GLF_IDENTITY(uint(4u), uint(4u)))))))), ~ (~ (uvec4(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY((workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base), ((workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)) << 0u) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, (_GLF_struct_replacement_7._f2.subgroup_base) | 0u))), 0u, 1u, ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(uint(4u), uint(4u))))), _GLF_IDENTITY(uint(4u), uint(4u))))))))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, 1u * (_GLF_struct_replacement_7._f2.subgroup_base)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_IDENTITY(_GLF_FUZZED(120199u), (_GLF_FUZZED(120199u)) | (_GLF_FUZZED(120199u))) : _GLF_IDENTITY(workgroup_base, 0u + (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)))))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)))))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))), clamp(~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), _GLF_IDENTITY(0u + (workgroup_base), (_GLF_IDENTITY(0u + (workgroup_base), 0u + (0u + (workgroup_base)))) | (0u + (workgroup_base)))))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))), ~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, (_GLF_struct_replacement_7._f2.subgroup_base) ^ 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))), ~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_base) : workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + _GLF_struct_replacement_7._f2.subgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))) ^ (workgroup_base)), _GLF_IDENTITY(0u + (workgroup_base), clamp(_GLF_IDENTITY(0u + (workgroup_base), min(0u + (workgroup_base), 0u + (workgroup_base))), 0u + (workgroup_base), 0u + (workgroup_base)))))) + _GLF_struct_replacement_7._f2.subgroup_base, max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))) ^ (workgroup_base)), _GLF_IDENTITY(0u + (workgroup_base), clamp(_GLF_IDENTITY(0u + (workgroup_base), min(0u + (workgroup_base), 0u + (workgroup_base))), 0u + (workgroup_base), 0u + (workgroup_base)))))) + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u))) ^ (workgroup_base)), _GLF_IDENTITY(0u + (workgroup_base), clamp(_GLF_IDENTITY(0u + (workgroup_base), min(0u + (workgroup_base), 0u + (workgroup_base))), 0u + (workgroup_base), 0u + (workgroup_base)))))) + _GLF_struct_replacement_7._f2.subgroup_base)), (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(120199u, _GLF_IDENTITY(uint(uvec3(120199u, 1u, 1u)), (true ? uint(uvec3(120199u, 1u, 1u)) : _GLF_FUZZED(uint(false)))))) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) / 1u) + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)), 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, max(_GLF_struct_replacement_7._f2.subgroup_base, _GLF_struct_replacement_7._f2.subgroup_base)), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))), (0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)))) - _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(atomicMax(subgroup_local_id, workgroup_base)))))), 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)))))))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), (0u ^ (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))) + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) + _GLF_struct_replacement_7._f2.subgroup_base, min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) + _GLF_struct_replacement_7._f2.subgroup_base, max(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) + _GLF_struct_replacement_7._f2.subgroup_base, _GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + _GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))) + _GLF_struct_replacement_7._f2.subgroup_base))))) - 0u), (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (false ? _GLF_FUZZED(subgroup_size) : workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) << 0u), _GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) >> 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, 0u | (_GLF_struct_replacement_7._f2.subgroup_base))) / 1u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, 0u | (_GLF_struct_replacement_7._f2.subgroup_base))) / 1u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))), uint(uvec2((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_base, 0u | (_GLF_struct_replacement_7._f2.subgroup_base))) / 1u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))), 0u))))))) - (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base, min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 1u))) << 0u) + _GLF_struct_replacement_7._f2.subgroup_base, workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(120199u) : _GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))) + _GLF_struct_replacement_7._f2.subgroup_base, (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base) << 0u), workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base))) | (workgroup_base + _GLF_struct_replacement_7._f2.subgroup_base)), _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), ~ (~ (uvec3(0u, 1u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))))))))), 1u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), ~ _GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))), max(_GLF_IDENTITY((~ (~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))), max((~ (~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))), (~ (~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))))), (~ (~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))))))))), 0u ^ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u)))), ~ (~ (~ ((_GLF_IDENTITY(1u, (1u) * 1u) << _GLF_IDENTITY(uint(4u), uint(4u))))))))))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))))))))) | 0u) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))) | (workgroup_base)), (workgroup_base) | (workgroup_base)) + _GLF_struct_replacement_7._f2.subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))))) | (workgroup_base)), (workgroup_base) | (workgroup_base)) + _GLF_struct_replacement_7._f2.subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) * 1u)))))) | (workgroup_base)), (workgroup_base) | (workgroup_base)) + _GLF_struct_replacement_7._f2.subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) % subgroup_size) : _GLF_FUZZED(usubBorrow(workgroup_id, floatBitsToUint(7.6), workgroup_size))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(95.26) : injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, bool(bool(false))) ? _GLF_FUZZED(95.26) : injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(max(virtual_gid, virtual_gid), 0u ^ _GLF_IDENTITY((max(virtual_gid, virtual_gid)), (false ? _GLF_FUZZED(subgroup_id) : (max(virtual_gid, virtual_gid))))))], uint(_GLF_IDENTITY(1, (1) << (0 >> _GLF_IDENTITY(int(4), int(4))))), 4, 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH((_GLF_IDENTITY(0, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), (false ? _GLF_FUZZED(-14553) : ~ (_GLF_IDENTITY(0, min(0, 0))))), min(~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)) | (ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, min(0, 0)), 1), (ivec2(_GLF_IDENTITY(0, min(0, 0)), 1)) | (ivec2(_GLF_IDENTITY(0, min(0, 0)), 1))))) >> 0)))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), ((~ (_GLF_IDENTITY(0, min(0, 0))))) | ((~ (_GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), ((~ (_GLF_IDENTITY(0, min(0, 0))))) | ((~ (_GLF_IDENTITY(0, min(0, 0))))))) / 1)), (int(_GLF_IDENTITY(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), ((~ (_GLF_IDENTITY(0, min(0, 0))))) | ((~ (_GLF_IDENTITY(0, min(0, 0)))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), ((~ (_GLF_IDENTITY(0, min(0, 0))))) | ((~ (_GLF_IDENTITY(0, min(0, 0))))))) / 1))) | 0)), max(int(int(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(((~ (_GLF_IDENTITY(0, min(0, 0))))) | ((~ (_GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), 0 | (min(0, 0))))))), ((_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), _GLF_IDENTITY(int(int(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), max((~ (_GLF_IDENTITY(0, min(0, 0)))), (~ (_GLF_IDENTITY(0, min(0, 0)))))))), int(ivec2(int(int(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), max((~ (_GLF_IDENTITY(0, min(0, 0)))), (~ (_GLF_IDENTITY(0, min(0, 0)))))))), 0))))) | ((~ (_GLF_IDENTITY(0, min(0, 0)))))) >> 0)))), int(int(_GLF_IDENTITY((~ (_GLF_IDENTITY(0, min(0, 0)))), ((~ (_GLF_IDENTITY(0, min(0, 0))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, min(0, 0))) + (-97663 & 0)))))))))))))) << _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, int(ivec3(2, 1, 0))))))))
    {
     case 54:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(bool _GLF_SWITCH_0_0v[69], _GLF_SWITCH_0_1v[94]; false; uvec4(22006u, 186518u, 165094u, _GLF_IDENTITY(54260u, _GLF_IDENTITY(uint(uint(54260u)), ~ (~ (uint(uint(54260u))))))).abar)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (true ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(unpackUnorm2x16((subgroup_size % num_workgroup))))))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(1.0), 0.0 + (_GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_IDENTITY(sqrt(1.0), clamp(sqrt(1.0), sqrt(1.0), sqrt(1.0)))), float(_GLF_FUZZED(-837.205)), bool(false))))), 0.0))).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))), 1.0, cos(0.0), 1.0, determinant(mat2(tan(0.0), 0.0, abs(1.0), tan(0.0))), 0.0, exp(0.0), 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 0.0, log(1.0))), vec2(mat3(vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, cos(0.0)))), 1.0, cos(0.0), 1.0, determinant(mat2(tan(0.0), 0.0, abs(1.0), tan(0.0))), 0.0, exp(0.0), 1.0, sqrt(round(length(normalize(vec2(1.0, 1.0))))), 0.0, log(1.0))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0)))).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     case 14:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     mat2(-2666.3112, -5426.8114, -741.422, _GLF_IDENTITY(8.8, mix(float(_GLF_IDENTITY(8.8, _GLF_IDENTITY(mix(float(8.8), float(_GLF_FUZZED(-5.9)), bool(false)), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (bool(true)))))) && true) ? _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(8.8, min(8.8, 8.8))), mix(float(_GLF_FUZZED(vec2(-414.384, -8991.9024).s)), float(float(_GLF_IDENTITY(8.8, min(8.8, 8.8)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), float(_GLF_FUZZED(-5.9)), bool(false)), max(mix(float(8.8), float(_GLF_FUZZED(-5.9)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) && true)), ! (! (true && (_GLF_IDENTITY(false, (false) && true))))))))))), _GLF_IDENTITY(mix(float(8.8), float(_GLF_FUZZED(-5.9)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1.2), max(_GLF_FUZZED(-1.2), _GLF_FUZZED(-1.2)))), float(mix(float(8.8), float(_GLF_FUZZED(-5.9)), bool(false))), bool(true))))) : _GLF_FUZZED(-8.6))))), float(_GLF_FUZZED(-2.0)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bool(bvec3(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false)), bvec3(bvec3(bvec3(bvec3(bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), true, false))))))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))) && true)) && true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat2x4(injectionSwitch.x, 1.0, sin(0.0), 0.0, 0.0, 0.0, 1.0, 0.0)))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 0:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false)))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     case 67:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 41:
     case 75:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], _GLF_FUZZED(4.4)), vec2(_GLF_FUZZED(-8.9), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) / vec2(1.0, 1.0))[1]))), bvec2(false, true))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), true && (false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     case 5:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(9.2) : _GLF_IDENTITY(injectionSwitch[0], float(mat3(injectionSwitch[0], 1.0, 1.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, abs(length(vec4(0.0, 0.0, 0.0, 0.0)))))))), injectionSwitch[0])), injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), max(vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])))).y, (injectionSwitch.y) + 0.0)), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     default:
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))) || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) / 1.0))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     1;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED(5.8), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0)), bvec2(false, true))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 0.0 + (_GLF_IDENTITY((injectionSwitch.x), (true ? (injectionSwitch.x) : _GLF_FUZZED(_GLF_IDENTITY(-5.5, (-5.5) / 1.0)))))) / _GLF_ONE(1.0, injectionSwitch.y)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0), clamp(vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0), vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0), vec3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0))) : _GLF_FUZZED(vec3(9271.4328, 0.1, -572.959)))))).x > injectionSwitch.y))))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false)))
          return;
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)) * (injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
          barrier();
        }
       barrier();
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), next_virtual_gid, _GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))))], uint(2), 4, 64, 4);
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(false, _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, 0 | (0)) : _GLF_FUZZED(-60991)))], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(32.66) : (injectionSwitch)[0]))), float(_GLF_FUZZED(6980.1295)), _GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))), ! (! (bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(false), false || (bool(false))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true, true)))))))))))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-8.3, (-8.3) - 0.0)), _GLF_FUZZED(-5317.1860)), bvec2(false, false)))[1]) / 1.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
