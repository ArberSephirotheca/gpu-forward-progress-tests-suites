#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_39 {
 vec4 _f0;
 mat3x2 _f1;
 vec3 _f2;
 uint workgroup_id;
} ;

struct _GLF_struct_37 {
 vec3 _f0;
} ;

struct _GLF_struct_35 {
 uint _f0;
 mat3x2 _f1;
 mat3 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_34 {
 mat2x3 _f0;
 bool _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_36 {
 ivec3 _f0;
 bvec2 _f1;
 bvec4 _f2;
 uint virtual_gid;
 _GLF_struct_34 _f3;
 _GLF_struct_35 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_32 {
 mat3x2 _f0;
 mat2x3 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_31 {
 vec3 _f0;
 mat3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_33 {
 float _f0;
 ivec2 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_32 _f3;
 uvec4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_38 {
 mat4x3 _f0;
 _GLF_struct_33 _f1;
 _GLF_struct_36 _f2;
 _GLF_struct_37 _f3;
} ;

struct _GLF_struct_28 {
 mat2x4 _f0;
 bvec4 _f1;
 float _f2;
 vec2 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_27 {
 mat4 _f0;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
 float _f1;
 ivec2 _f2;
 mat4x2 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 vec2 _f1;
 vec2 _f2;
 bvec2 _f3;
 vec3 _f4;
 mat2x4 _f5;
 bvec2 _f6;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 mat3x4 _f1;
 mat4 _f2;
 uvec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_29 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 _GLF_struct_26 _f2;
 mat4x2 _f3;
 _GLF_struct_27 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_22 {
 mat4 _f0;
 mat4x2 _f1;
 bvec3 _f2;
 mat4x2 _f3;
 mat3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_21 {
 mat4x3 _f0;
} ;

struct _GLF_struct_20 {
 vec3 _f0;
} ;

struct _GLF_struct_19 {
 mat4x3 _f0;
 uvec3 _f1;
 mat3 _f2;
 uvec4 _f3;
 bvec3 _f4;
 uvec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_18 {
 uvec3 _f0;
 ivec4 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_17 {
 mat4x2 _f0;
 bvec4 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_23 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 int _f2;
 _GLF_struct_19 _f3;
 _GLF_struct_20 _f4;
 _GLF_struct_21 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_15 {
 int _f0;
 ivec3 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_14 {
 bool _f0;
 mat3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_13 {
 vec4 _f0;
 int _f1;
} ;

struct _GLF_struct_12 {
 mat3x2 _f0;
 mat3 _f1;
 uvec3 _f2;
 mat3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_16 {
 ivec3 _f0;
 uvec2 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
 _GLF_struct_15 _f5;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 mat2x4 _f1;
 mat3x2 _f2;
 uint _f3;
 mat2 _f4;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 mat3x2 _f1;
 mat2x4 _f2;
 mat2 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_8 {
 bvec3 _f0;
 bvec2 _f1;
 bvec4 _f2;
 uint _f3;
 bvec3 _f4;
 int _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
 bool _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_6 {
 mat4 _f0;
 ivec2 _f1;
 bool _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_5 {
 mat4x3 _f0;
 uvec2 _f1;
 mat4x3 _f2;
 vec4 _f3;
 ivec2 _f4;
 vec4 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 _GLF_struct_6 _f1;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 mat2x4 _f1;
 float _f2;
 mat4 _f3;
 mat2 _f4;
 float _f5;
 uint _f6;
} ;

struct _GLF_struct_2 {
 uint _f0;
 vec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 ivec2 _f1;
 bvec2 _f2;
 int _f3;
 mat3x2 _f4;
 bvec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 ivec2 _f1;
 bool _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_30 {
 float _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_23 _f5;
 uint workgroup_size;
 _GLF_struct_29 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-6391.7733), _GLF_FUZZED(340.027)), bvec2(false, false))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true))), true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, false)))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, true), true)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (false)), true, true)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(float((73266u & 189676u)))), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6664.2792, 0.5)) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch))[0], (false ? _GLF_FUZZED(98.00) : _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(9.6, -622.448)))) * mat2(1.0))[0])), injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)))))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[0], (injectionSwitch[0]) - 0.0), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)))))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[0], (injectionSwitch[0]) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)))))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[0], (injectionSwitch[0]) - 0.0)) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0)))))) - _GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))))[0], (injectionSwitch[0]) - 0.0))), injectionSwitch[1]))) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec4(1, int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat3x2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 0.0 + (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(79.82))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0)))), 1, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), 0 + (int(_GLF_IDENTITY(2, (2) - 0)))), int(2)), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) * (2), max(int(_GLF_ONE(1.0, injectionSwitch.y)) * (2), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) * (2), (int(_GLF_ONE(1.0, injectionSwitch.y)) * (2)) - 0))))), 0 ^ (int(2)))) ^ 0)) << (_GLF_IDENTITY(0, int(int(0))) & -41232)), int(2)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 | (int(2)))), (_GLF_IDENTITY(int(2), int(2))) << 0)))))), 0 ^ (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) - 0)), int(2)), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_ONE(1.0, injectionSwitch.y)) * (2))), 0 ^ (int(2)))) ^ 0)) << (_GLF_IDENTITY(0, int(int(0))) & -41232)), int(2)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) << 0))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) << 0)))) / (0 ^ 1))))), ~ (~ (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), (2) - 0)), int(2)), (_GLF_IDENTITY(1 & 1, ~ (~ (1 & 1)))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), 0 ^ (int(2)))) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_ONE(1.0, injectionSwitch.y)) * (2))), 0 ^ (int(2)))) ^ 0)) << (_GLF_IDENTITY(0, int(int(0))) & -41232)), int(2)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) << 0))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((_GLF_IDENTITY(int(2), int(2))) << 0, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(2), int(2))) << 0), min(~ ((_GLF_IDENTITY(int(2), int(2))) << 0), ~ ((_GLF_IDENTITY(int(2), int(2))) << 0))))))))) / (0 ^ 1))))))))))))), (int(ivec4(1, int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y)), 1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 ^ (int(2))), int(2)), (1 & 1) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) - 0) | (_GLF_IDENTITY(2, (2) ^ 0)), (_GLF_IDENTITY(0 | (_GLF_IDENTITY(2, (2) ^ 0)), (false ? _GLF_FUZZED(max(-33719, -6845)) : _GLF_IDENTITY(0 | (_GLF_IDENTITY(2, (2) ^ 0)), (0 | (_GLF_IDENTITY(2, (2) ^ 0))) << 0)))) | (_GLF_IDENTITY(0 | (_GLF_IDENTITY(2, (2) ^ 0)), min(0 | (_GLF_IDENTITY(2, (2) ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, _GLF_IDENTITY(0, (0) | (0)))))), 0 | (_GLF_IDENTITY(2, (2) ^ 0)))))))), int(2))) / (0 ^ 1))) / 1), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, (2) | (2)))), _GLF_IDENTITY((_GLF_IDENTITY(int(2), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0), (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0)) | (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0)))) - 0), _GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0), ~ (~ (_GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (2) | 0)), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (2) | 0)), clamp(~ (_GLF_IDENTITY(2, (2) | 0)), ~ (_GLF_IDENTITY(2, (2) | 0)), ~ (_GLF_IDENTITY(2, (2) | 0))))))))), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))))) << 0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(_GLF_IDENTITY(2, min(2, 2))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1), max(ivec4((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1), ivec4((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) >> 0)))), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-798.384)), bool(false))), injectionSwitch.x)))), 1, 1)))), max(int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1), max(ivec4((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1), ivec4((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1)))), int(_GLF_IDENTITY(ivec4((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1), max(ivec4((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec4(2, 1, 0, 1))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec4(2, 1, 0, 1))), ~ (~ (_GLF_IDENTITY(2, int(ivec4(2, 1, 0, 1)))))))))), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x)))), 1, _GLF_IDENTITY(1, 0 + (1))), ivec4((_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (_GLF_IDENTITY(int(2), (int(2)) | 0)) ^ 0))) << 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 1))))))))))))))))) / 1), (int(ivec4(1, int(_GLF_ONE(1.0, injectionSwitch.y)), 1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), (_GLF_IDENTITY(int(2), int(2))) | 0))))))) | (int(ivec4(1, int(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), injectionSwitch.y)), 1, (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(2), int(2)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(min(ivec4(_GLF_IDENTITY(int(2), int(2)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(2), int(2)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec4(_GLF_IDENTITY(int(2), int(2)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec4(_GLF_IDENTITY(int(2), int(2)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (true ? min(ivec4(_GLF_IDENTITY(int(2), int(2)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x))), (ivec4(_GLF_IDENTITY(int(2), int(2)), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (ivec4(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(1, (1) - 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))) : _GLF_FUZZED((-69784 % ivec4(-35602, 44664, 22465, -56113))))))))))))))])))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! ((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, cos(0.0), 1.0, 1.0, 0.0, 0.0, abs(1.0))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), bvec3(bvec4(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))))), bool(_GLF_IDENTITY(bool(! (! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))), (bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true))))), (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (! (! ((_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), (bool(! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, true))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true, ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, false, false, false)), true, false), bvec3(bvec4(bvec3(bool(bvec4(false, false, false, false)), true, false), true))))))) && true))))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0), clamp(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0), _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0), (true ? _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0) : _GLF_FUZZED((true ? -4377.1468 : -8.5)))))), mix(float(_GLF_FUZZED(-5522.9574)), float(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || false)) ? _GLF_IDENTITY(_GLF_FUZZED(-8.0), 1.0 * (_GLF_FUZZED(-8.0))) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0)), bool(true))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))), ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))))))))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])) : _GLF_FUZZED(sqrt(injectionSwitch))))[1], injectionSwitch[1])), _GLF_IDENTITY((false ? _GLF_FUZZED(-11.72) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0), mix(float(_GLF_FUZZED(-5522.9574)), float(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(986.596) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0)), bool(true))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))), true), false, true)))))))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])) : _GLF_FUZZED(sqrt(injectionSwitch))))[1], injectionSwitch[1]))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(-11.72) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0), mix(float(_GLF_FUZZED(-5522.9574)), float(_GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[1], (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(986.596) : injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || false)) || false)) ? _GLF_FUZZED(-8.0) : _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-3.1)), float(injectionSwitch[1]), bool(true)))))) + 0.0)), bool(true))), min(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, tan(0.0) + (injectionSwitch.y)), bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false))), true), false, true)))))))))) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])) : _GLF_FUZZED(sqrt(injectionSwitch))))[1], injectionSwitch[1]))) : _GLF_FUZZED(0.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(_GLF_DEAD(false))))), false || (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (bool(_GLF_DEAD(false)))))))), false || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) || false)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 _GLF_struct_30 _GLF_struct_replacement_30 = _GLF_struct_30(1.0, _GLF_struct_4(_GLF_struct_0(uvec2(1u), ivec2(1), true, mat2x4(1.0)), _GLF_struct_1(bvec2(true), ivec2(1), bvec2(true), 1, mat3x2(1.0), bvec4(true), bvec4(true)), _GLF_struct_2(1u, vec3(1.0), 1u), _GLF_struct_3(vec4(1.0), mat2x4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(max(2.9, (-5.2)))))), 1.0, mat4(1.0), mat2(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, _GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, (1u) | 0u)), (min(1u, _GLF_IDENTITY(1u, (1u) | 0u))) - 0u))), uvec2(1u)), _GLF_struct_7(_GLF_struct_5(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), uvec2(1u), mat4x3(1.0), vec4(1.0), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(0, 0), ivec2(0, 0) ^ (_GLF_IDENTITY(ivec2(0, 0), (ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)) >> ivec2(0, 0)))) | (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY((ivec2(1)) ^ ivec2(0, 0), min((ivec2(1)) ^ ivec2(0, 0), (ivec2(1)) ^ ivec2(0, 0)))))), vec4(1.0)), _GLF_struct_6(mat4(1.0), ivec2(1), true, mat3x4(1.0))), _GLF_struct_11(_GLF_struct_8(bvec3(true), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec4(_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), (! (_GLF_IDENTITY(true, ! (! (true))))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true)))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false, _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false, true, true, false)), (bool(bvec4((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false, true, true, false))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true)) || false)))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), true && ((! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool((! (true)))))))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(true, ! (! (true)))))) || false, _GLF_IDENTITY(bool(bvec4(((! _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, true && (true))))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, true && (true))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(true, true && (true)))))))))))))) || false))) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(((! (_GLF_IDENTITY(true, ! (! (true)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4((_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), ((! (_GLF_IDENTITY(true, ! (! (true)))))) || false)) && true)) || false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true)))))), ((_GLF_IDENTITY(bool(bvec4(((! (_GLF_IDENTITY(true, ! (! (true)))))) || _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4((_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), ((! (_GLF_IDENTITY(true, ! (! (true)))))) || false)) && true)) || false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), 1u, bvec3(_GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, bool(bool(true))), true)))), 1, uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, ~ (~ (1u))))))), _GLF_struct_9(mat3x2(1.0), mat3x2(1.0), mat2x4(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, 0.0, 0.0, 1.0)), max(float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0), (true ? mat2(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat2(-4643.1079, -8454.5805, -68.43, -236.413))))), float(mat2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), max(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))))), 0.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)) ? _GLF_FUZZED(degrees(-23.51)) : 1.0))))))), 1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(7.4), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_IDENTITY(_GLF_FUZZED(7.4), (_GLF_FUZZED(7.4)) + 0.0))), 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, cos(0.0)), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_FUZZED(7.4), max(_GLF_FUZZED(7.4), _GLF_IDENTITY(_GLF_FUZZED(7.4), (_GLF_FUZZED(7.4)) + 0.0))), 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 1.0, cos(0.0))))))) : _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.3)))))), transpose(transpose(_GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-4087.9790, 5.3, -9.5, -9.3))))))), uvec2(1u)), true, _GLF_struct_10(mat4x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), min(vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), dot(vec2(0.0, 1.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), mat2x4(1.0), mat3x2(1.0), 1u, mat2(1.0))), _GLF_struct_16(ivec3(1), uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(0u + (_GLF_IDENTITY(1u, max(1u, 1u))), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(1u, max(1u, 1u))), (false ? _GLF_FUZZED(num_workgroup) : 0u + (_GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(1u, max(1u, 1u))), clamp(0u + (_GLF_IDENTITY(1u, max(1u, 1u))), 0u + (_GLF_IDENTITY(1u, max(1u, 1u))), 0u + (_GLF_IDENTITY(1u, max(1u, 1u))))))))), _GLF_struct_12(mat3x2(1.0), mat3(1.0), uvec3(1u), mat3(1.0), ivec4(1)), _GLF_struct_13(vec4(1.0), 1), _GLF_struct_14(true, mat3(1.0), uvec4(1u)), _GLF_struct_15(1, ivec3(1), ivec3(1))), _GLF_struct_23(_GLF_struct_17(mat4x2(1.0), bvec4(true), mat3(1.0)), _GLF_struct_18(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), (true ? min(1, 1) : _GLF_FUZZED(-11557)))), max(_GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(1, min(1, 1))))), mat4x2(1.0), mat2x3(1.0)), 1, _GLF_struct_19(mat4x3(_GLF_IDENTITY(1.0, (1.0) - 0.0)), uvec3(1u), mat3(1.0), uvec4(1u), bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (true ? uvec2(1u) : _GLF_FUZZED(uvec2(4681u, 160228u)))))), 1u), _GLF_struct_20(vec3(1.0)), _GLF_struct_21(mat4x3(1.0)), _GLF_struct_22(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(mat4(1.0)), (transpose(mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), mat4x2(1.0), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec3(bvec3(true, true, _GLF_IDENTITY(true, false || (true))))))), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, _GLF_IDENTITY(true, (true) || false)), bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(true, true, false))), true && (! (bool(bvec3(true, true, false)))))))), true)))))))))), mat4x2(1.0), mat3(1.0), bvec4(true))), gl_WorkGroupSize.x, _GLF_struct_29(_GLF_struct_24(ivec4(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-68392) : _GLF_IDENTITY(1, (1) - 0)))), mat3x4(1.0), mat4(1.0), uvec4(1u), ivec3(_GLF_IDENTITY(1, (1) << 0))), _GLF_struct_25(vec2(1.0), vec2(1.0), vec2(1.0), bvec2(true), vec3(1.0), mat2x4(1.0), bvec2(true)), _GLF_struct_26(mat4x3(1.0), _GLF_IDENTITY(1.0, (1.0) + 0.0), ivec2(1), mat4x2(1.0), vec3(1.0)), mat4x2(1.0), _GLF_struct_27(mat4(1.0)), _GLF_struct_28(mat2x4(1.0), bvec4(true), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(float(false))), float(1.0), bool(true)), (mix(float(_GLF_FUZZED(float(false))), float(1.0), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), true, true, true))))) / 1.0)) / 1.0)), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(7.3))))), max(1.0, 1.0)))), vec2(1.0), ivec4(1))));
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(vec4(1.0), mat3x2(1.0), vec3(1.0), _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID)))) / uvec3(1u, 1u, 1u)).x);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) - 0.0) > injectionSwitch.y))) || false), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_30.workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_39.workgroup_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(1683u) : _GLF_IDENTITY(0u, (0u) | 0u)))), (false ? _GLF_FUZZED(subgroup_id) : (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(1683u) : _GLF_IDENTITY(0u, (0u) | 0u)))))) >> 0u) + (_GLF_struct_replacement_39.workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_struct_33(1.0, _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0)), (_GLF_IDENTITY(ivec2(1), ~ (_GLF_IDENTITY(~ (ivec2(1)), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (1)), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), ~ (~ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))))))) | ivec2(0, 0)), ivec2(0, 0) | (ivec2(1))))), min(ivec2(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))), _GLF_IDENTITY(((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)), (((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572))))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) | (0 >> _GLF_IDENTITY(int(4), int(4))))))), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), 1))))))), ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))), 0 ^ (0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(1))), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(1))), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(85073) : 1))) ^ 0), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(1))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(1))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), (true ? _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572))))))))) : _GLF_FUZZED(findLSB((-4737 / ivec2(69391, 20110)))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(1))), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(1)))) | ivec2(0, 0))))))))), ivec2(ivec2(ivec2(_GLF_IDENTITY(ivec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-38621) : 1)))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(9572)), (true ? (true ? 1 : _GLF_FUZZED(9572)) : _GLF_FUZZED(-8391))))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))), max(_GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))), (0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572))))) >> 0), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))), clamp(0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))), (0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572))))) << 0), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))))))), ~ (~ (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572))))), (_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))) ^ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) - 0), 0)), 0)) | 0))))))) | ivec2(0, 0), ivec2(0, _GLF_IDENTITY(0, (0) << (0 << _GLF_IDENTITY(int(0), int(0))))) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-25348) : 1)), 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))))))) | ivec2(0, 0), (true ? (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), ~ (~ (ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))))))) | ivec2(0, 0) : _GLF_FUZZED(ivec2(66639, -31597))))))), ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0) | (ivec2(_GLF_IDENTITY(1, 1 * (1))))))), min(ivec2(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(9572)), ((true ? 1 : _GLF_FUZZED(9572))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1)))), int(_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(9572)), ((true ? 1 : _GLF_FUZZED(9572))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1)))), 0, 0), (_GLF_IDENTITY(ivec3((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(9572)), ((true ? 1 : _GLF_IDENTITY(_GLF_FUZZED(9572), min(_GLF_IDENTITY(_GLF_FUZZED(9572), min(_GLF_FUZZED(9572), _GLF_FUZZED(9572))), _GLF_FUZZED(9572))))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1)))), 0, 0), ivec3(0, 0, 0) | (ivec3((_GLF_IDENTITY(1, _GLF_IDENTITY((true ? 1 : _GLF_FUZZED(9572)), ((true ? 1 : _GLF_FUZZED(9572))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) * 1)))), 0, 0)))) >> ivec3(0, 0, 0)))), ((_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) - 0), 1, 1))) | 0) : _GLF_FUZZED(9572))))) ^ int(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED((114.463 / -92.18))), bool(false))) : _GLF_FUZZED(1694.6195))), exp(0.0), 0.0)), float(mat3x2(float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED((114.463 / -92.18))), bool(false))) : _GLF_FUZZED(1694.6195))), exp(0.0), 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED((114.463 / -92.18))), bool(false))) : _GLF_FUZZED(1694.6195))), exp(0.0), 0.0)), float(mat3x2(float(mat3x4(0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED((114.463 / -92.18))), bool(false))) : _GLF_FUZZED(1694.6195))), exp(0.0), 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)))), float(_GLF_FUZZED(-8.1)), bool(false)))), injectionSwitch.x))))), ivec2(0, 0) | (ivec2(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, 0 | (1)), _GLF_IDENTITY(1, int(int(1)))))))))), ivec2(~ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(9572)))))), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (ivec2(1))))))))))))))) >> ivec2(0, _GLF_IDENTITY(0, _GLF_IDENTITY((0) * 1, max(_GLF_IDENTITY((0) * 1, ((0) * 1) | ((0) * 1)), (0) * 1))))), _GLF_struct_31(vec3(1.0), mat3(1.0), mat3x4(1.0)), _GLF_struct_32(mat3x2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), min(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) * 1.0, max((1.0) * 1.0, (1.0) * 1.0)))))), mat3x2(1.0)), uvec4(1u), mat4x2(1.0)), _GLF_struct_36(ivec3(_GLF_IDENTITY(1, (1) - 0)), bvec2(true), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true)))), workgroup_base + subgroup_base + subgroup_local_id, _GLF_struct_34(mat2x3(1.0), true, mat3x4(1.0)), _GLF_struct_35(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), _GLF_IDENTITY(clamp((1u), _GLF_IDENTITY((1u), ((1u)) / 1u), _GLF_IDENTITY((1u), ((1u)) ^ 0u)), (clamp((1u), _GLF_IDENTITY((1u), _GLF_IDENTITY(((1u)), clamp(((1u)), ((1u)), ((1u)))) / 1u), _GLF_IDENTITY((1u), ((1u)) ^ 0u))) | 0u)) + 0u), mat3x2(1.0), mat3(1.0), uvec3(1u)), vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(1.0, 0.0, 1.0, 0.0, cos(abs(0.0)), 0.0)), (true ? float(mat3x2(1.0, 0.0, 1.0, 0.0, cos(abs(0.0)), 0.0)) : _GLF_FUZZED(3819.8836))), (float(mat3x2(1.0, 0.0, 1.0, 0.0, cos(abs(0.0)), 0.0))) - 0.0)))), _GLF_struct_37(vec3(1.0)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false))))), ! (! ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))))))))))))))) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))) + vec2(0.0, 0.0))).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-97.53)), bvec2(true, false))), injectionSwitch)), 1.0, 1.0))).y)), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (_GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0)), min(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0)), min(vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0)), vec2(mat3x2(injectionSwitch, 1.0, 1.0, 0.0, 0.0))))))).y))) && true))))) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))
  barrier();
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) >> 0u)) - 0u)) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u)) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, sqrt(1.0), length(vec2(0.0, 0.0)), abs(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0))), 1.0, 0.0)), abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5221.5203)))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))), true))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, sqrt(1.0), length(vec2(0.0, 0.0)), abs(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0))), 1.0, 0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, 0.0)))))))).x > injectionSwitch.y), true), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))), true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))), true)), false), bvec3(bvec4(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true))), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))), true)), false), true)))))), false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, sqrt(1.0), length(vec2(0.0, 0.0)), abs(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, sin(sin(0.0)), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0))), 1.0, 0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y), true), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true), true, true))), bvec2(bvec4(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))), false, true))), true))), false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, sqrt(1.0), length(vec2(0.0, 0.0)), abs(0.0), sqrt(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0)), (_GLF_IDENTITY(float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0))), (float(float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0)))) - 0.0)), (float(_GLF_IDENTITY(float(float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0))), (float(float(mat2(0.0, sin(sin(0.0)), 1.0, 0.0)))) - 0.0))) * 1.0))) + 0.0)), 1.0, 0.0)), abs(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y), true), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true))), true))), false)), true)), true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_38._f2.virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(_GLF_struct_replacement_38._f2.virtual_gid, (_GLF_struct_replacement_38._f2.virtual_gid) | (1u ^ 1u))))], uint(1), 4, _GLF_IDENTITY(64, max(64, 64)), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, false || ((true) || false))), _GLF_IDENTITY((true), ! (! ((true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? injectionSwitch.x : _GLF_FUZZED(-67.95))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)))) / cos(vec2(0.0, 0.0))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), false, true, false))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % _GLF_IDENTITY(2, (2) << 0)) == 0)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), (_GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uint(uint(2))), clamp(uint(uint(uint(_GLF_IDENTITY(2, max(2, 2))))), uint(uint(uint(2))), uint(uint(uint(2))))))) ^ 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), false || (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, sin(0.0), 0.0, 0.0)), max(float(mat2x3(injectionSwitch.x, 0.0, 0.0, sin(0.0), 0.0, 0.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, 0.0, sin(0.0), 0.0, 0.0)), 0.0 + (float(mat2x3(injectionSwitch.x, 0.0, 0.0, sin(0.0), 0.0, 0.0))))))) > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true))), bvec2(bvec4(bvec2(bvec2(bvec3(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), true))), true, false))))))))) && true))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) && true))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) && true)))) || false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) && (false))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false || (bool(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (false || (bool(bool((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))))))))) || false))), _GLF_IDENTITY(false, true && (false)), true, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(2, _GLF_IDENTITY(clamp(2, 2, 2), ~ (~ (_GLF_IDENTITY(clamp(2, _GLF_IDENTITY(2, 0 ^ (2)), 2), (false ? _GLF_FUZZED(73109) : clamp(2, 2, 2)))))))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7804.3719), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(234.621)), bvec2(true, false)))), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0) * (((injectionSwitch)) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), min((_GLF_IDENTITY(1.0, 1.0 * (1.0))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, 1.0 * (1.0))), 0.0 + ((_GLF_IDENTITY(1.0, 1.0 * (1.0)))))))) / 1.0) / 1.0))))) - vec2(0.0, 0.0)).y))), (false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7804.3719), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(37.83), _GLF_FUZZED(vec2(678.811, 8.6).y)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], min(((injectionSwitch))[1], ((injectionSwitch))[1]))), bvec2(true, true)))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(234.621)), bvec2(true, false)))), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), vec2(1.0, 1.0) * (((injectionSwitch)) * mat2(1.0)))) - vec2(0.0, 0.0)).y)))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))), (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(567.707, -3113.0249, -7.3, -51.93)) : mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), mat2(mat2x4((false ? _GLF_FUZZED(mat2(567.707, -3113.0249, -7.3, -51.93)) : mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), false))))), true, false, false))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.8), _GLF_FUZZED((+ -600.219))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
