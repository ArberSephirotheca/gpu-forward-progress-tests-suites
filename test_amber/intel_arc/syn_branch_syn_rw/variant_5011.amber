#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec4(_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false), true, true, false)))), bool(bvec3(false, true, false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, false)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, false))), true))), false)))), true))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))), ((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true))), false || (bool(bool((_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), false))))))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bool(bvec3(false, true, false)))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false)))))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) || false), false))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (! ((_GLF_IDENTITY(false, false || (false))) || false)))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-380.015, 7.6)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || false)), true))), bool(bvec3(false, true, false)))), false || (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))), ! (! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), false))))))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8545.9760), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.3)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false)))), true, true))))).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_IDENTITY(false, false || (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bvec2(bvec4(bvec2(false, false), true, true)))))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bvec2(bvec4(bvec2(false, false), true, true)))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))))), bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bvec2(bvec4(bvec2(false, false), true, true)))))), true))))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, true)))))), bvec3(bvec4(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), true))))))), true))))))), false))))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), false), true, true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(_GLF_IDENTITY(bvec2(! ((true)), true), bvec2(bvec4(bvec2(! ((true)), true), true, false))))))) && true))))))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), false))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))))))), false)))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), true))), false))))))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), false), true, true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(_GLF_IDENTITY(bvec2(! ((true)), true), bvec2(bvec4(bvec2(! ((true)), true), true, false))))))) && true))))))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), false))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))))))), false)))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), true))), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), false), true, true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(_GLF_IDENTITY(bvec2(! ((true)), true), bvec2(bvec4(bvec2(! ((true)), true), true, false))))))) && true))))))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), false))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))))))), false)))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), true))), false)))))))))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), false), true, true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(_GLF_IDENTITY(bvec2(! ((true)), true), bvec2(bvec4(bvec2(! ((true)), true), true, false))))))) && true))))))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), false))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))))))), false)))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), true))), false))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), (bool(bvec3(false, true, true))) || false)), false), true, true))))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! ((true)), bool(_GLF_IDENTITY(bvec2(! ((true)), true), bvec2(bvec4(bvec2(! ((true)), true), true, false))))))) && true))))))))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), bvec3(bvec4(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)))))))))))))), false))), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bvec2(_GLF_IDENTITY(true, (true) && true), true))))))))))), false)))), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false)), bvec3(bvec3(bvec3(bvec3(bvec2(bvec4(bvec2(false, false), true, true)), false))))))))))))))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && true))))))))), false)))), true))), false)))))))))), false))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), min(_GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u), _GLF_IDENTITY(subgroup_id, (subgroup_id) << 0u))) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, true), true)), false, true))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint((subgroup_local_id + 1)))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) << (1 ^ _GLF_IDENTITY(1, int(int(1))))), ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), max(_GLF_IDENTITY((64), ((64)) - 0), _GLF_IDENTITY((64), 0 + ((64))))) << (1 ^ 1))))), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY((64), 1 * ((64))) << (1 ^ 1))) + 0, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(64, (64) << (1 ^ 1))) + 0, max((_GLF_IDENTITY(64, (64) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)))) + 0, (_GLF_IDENTITY(64, (64) << (1 ^ 1))) + 0))) | ((_GLF_IDENTITY(64, (64) << _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0))) + 0), min((_GLF_IDENTITY((_GLF_IDENTITY(64, (64) << (1 ^ 1))) + 0, max((_GLF_IDENTITY(64, (64) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)))) + 0, (_GLF_IDENTITY(64, (64) << (1 ^ 1))) + 0))) | ((_GLF_IDENTITY(64, (64) << _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0))) + 0), (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) << (1 ^ 1))) + 0, max((_GLF_IDENTITY(64, (64) << (_GLF_IDENTITY(1 ^ 1, (1 ^ 1) - 0)))) + 0, (_GLF_IDENTITY(64, (64) << (1 ^ 1))) + 0))) | ((_GLF_IDENTITY(64, (64) << _GLF_IDENTITY((1 ^ 1), ((1 ^ 1)) - 0))) + 0))))), 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), false || (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 0 ^ _GLF_IDENTITY((0), ((0)) / 1))) | 0, ~ (~ ((_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) * 1))) | 0))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u), (false ? _GLF_FUZZED(workgroup_id) : virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), max(_GLF_IDENTITY(read, 0u ^ (read)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (false ? _GLF_FUZZED(workgroup_id) : read)), 0u ^ (read)), (_GLF_IDENTITY(read, 0u ^ (read))) << 0u))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(-0.3, max(-0.3, -0.3))), mix(float(_GLF_FUZZED(-3.0)), float(true ? injectionSwitch.y : _GLF_FUZZED(-0.3)), bool(true)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, tan(0.0) + (injectionSwitch.x)), mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), true && (_GLF_IDENTITY(((false)), false || (((false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 1.0)), (float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((- 36.48))), float(injectionSwitch.y), bool(true))))), injectionSwitch.y)), 1.0))) / 1.0))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, (false) || false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), clamp(float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), float(mat2x4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))) * 1.0) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0)), max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0)), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0)))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0))))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0))))), ! (! (bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(distance(vec3(845.969, -144.309, -2.0), vec3(1.8, -8568.6036, 8.4))) : injectionSwitch.y)), _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(length(vec4(-1.8, 361.487, -0.7, 767.012))) : float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), clamp(float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))) / abs(1.0))))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
