#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    continue;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), false, false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uvec4 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (false), (! (false)) && true))), false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(482.108)), float(injectionSwitch.y), bool(true))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), max(_GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec4(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) * mat2(1.0)), 0.0, 1.0))), vec2(1.0, 1.0))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((+ -1.0)), _GLF_FUZZED(-2.6)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], (((injectionSwitch))[1]) - 0.0)), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
    barrier();
   for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 | (1))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.z = subgroup_id, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.z = subgroup_id) << 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))), false)))))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, (false) && true))), true, false, true))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     return;
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && true))
      barrier();
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x2(injectionSwitch.x, 1.0, 1.0, 1.0, 1.0, 0.0)))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), true)))))))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          return;
        }
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) || false))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), (bool((injectionSwitch.x < injectionSwitch.y))) || false))))), true && (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(234.518)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0)))), bool(true))) < injectionSwitch.y) && true))) && true)), ! (! ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(234.518)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 0.0, sqrt(0.0), 1.0, 0.0)))), bool(true))) < injectionSwitch.y) && true))) && true))))))), (bool((injectionSwitch.x < injectionSwitch.y))) || false))))))))))
      {
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(false, true, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(161.430, 0.3), vec2(_GLF_IDENTITY(mat2x3(vec2(161.430, 0.3), 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat2x3(vec2(161.430, 0.3), 0.0, 1.0, 1.0, 0.0))))))) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))
    {
     barrier();
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, false)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-48.03), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5175.2271)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-0.4 / 809.280))), bool(false)))), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) + abs(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y), true, false)))))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), true, false))))))))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))) || false), false, true, false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false)), bool(bool(bool(bvec2(_GLF_IDENTITY(! (false), (! (false)) && true), false)))))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), 0 ^ (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), max((0 << _GLF_IDENTITY(int(6), int(6))), (0 << _GLF_IDENTITY(int(6), int(6))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), int(ivec2(_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), max((0 << _GLF_IDENTITY(int(6), int(6))), (0 << _GLF_IDENTITY(int(6), int(6))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)), (int(ivec4(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(6), int(6))), max((0 << _GLF_IDENTITY(int(6), int(6))), (0 << _GLF_IDENTITY(int(6), int(6))))), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0))) << 0), 0)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), bool(bvec2(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))), true)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      continue;
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     break;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
        barrier();
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     return;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || false)) || false))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.x = num_workgroup;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = (0 & -83723); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) | (int(5)))), (_GLF_IDENTITY(int(5), _GLF_IDENTITY(_GLF_IDENTITY(int(5), (int(5)) | (int(5))), (_GLF_IDENTITY(int(5), (int(5)) | (int(5)))) << 0))) + 0)) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(int(5), 0), max(ivec2(int(5), 0), ivec2(int(5), 0)))), (int(_GLF_IDENTITY(ivec2(int(5), 0), max(ivec2(int(5), 0), ivec2(int(5), 0))))) | (int(_GLF_IDENTITY(ivec2(int(5), 0), max(ivec2(int(_GLF_IDENTITY(5, (5) | (5))), 0), ivec2(int(5), 0))))))), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y)))))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))) || false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), bvec2(false, true))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.6)), vec2(_GLF_FUZZED(8.7), (injectionSwitch)[1]), bvec2(false, true))).y)), min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(13.55) : injectionSwitch.y)))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, injectionSwitch.y), 0.0 + (min(injectionSwitch.y, injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), bool(bvec2((! (injectionSwitch.x > injectionSwitch.y)), true))) && true)))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(8725.3139, float(mat2x4(_GLF_IDENTITY(8725.3139, (8725.3139) * 1.0), 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))), -6.2)))).y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), _GLF_IDENTITY(bool(bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))))), _GLF_IDENTITY((bool(bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(injectionSwitch.y, injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((bool(bool(bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), min(injectionSwitch.y, injectionSwitch.y)))))))))))) || false)), (bool(bool((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6.2)), float(0.0), bool(true))))), (0.0) / 1.0))), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)) * (injectionSwitch), mat2(1.0) * (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-834.947)), float(_GLF_ONE(1.0, injectionSwitch.y)), bool(true)))), (false ? _GLF_FUZZED(mat2(-3.9, -1.4, 419.248, 6000.5235)) : mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(236.494) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, sqrt(1.0)))), injectionSwitch.y)))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0)), 1.0)), float(mat2x3(float(vec2(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0)), 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0, exp(0.0), 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-873.261)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0)).x), (float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch[1])), _GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(1711.7635), (injectionSwitch)[1]), bvec2(false, true))), injectionSwitch)) : _GLF_FUZZED(vec2(-868.095, -233.026)))))) * mat2(1.0)) * mat2(1.0))) - vec2(0.0, 0.0)).x)) / 1.0), bool(true))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, _GLF_IDENTITY((_injected_loop_counter ++), 0 + (_GLF_IDENTITY((_injected_loop_counter ++), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (true ? mat2(1.0) * (injectionSwitch) : _GLF_FUZZED(vec2(647.559, 7984.0152))))))), vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)) ? (_injected_loop_counter ++) : _GLF_FUZZED(_injected_loop_counter))))) / 1))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
        {
         barrier();
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(false, false, true, true)), true, false, true)), ! (! (bool(bvec4(bool(bvec4(false, false, true, true)), true, false, true)))))))) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, true, true)), true, false, true)), ! (! (bool(bvec4(bool(bvec4(false, false, true, true)), true, false, true)))))))) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.w * workgroup_id, 0u | (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.w * workgroup_id));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3119.0407), _GLF_IDENTITY(_GLF_FUZZED(-0.5), _GLF_IDENTITY(clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5)), float(mat3x2(clamp(_GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5), _GLF_FUZZED(-0.5)), 0.0, 1.0, 0.0, 1.0, 0.0))))), vec2((injectionSwitch)[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - int(_GLF_ZERO(0.0, injectionSwitch.x)))]), vec2(_GLF_FUZZED(-47.19), _GLF_FUZZED(7.1)), bvec2(false, false))), (injectionSwitch) * vec2(1.0, 1.0)))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(638.126) : injectionSwitch.y)), injectionSwitch.y)))))))) - vec2(0.0, 0.0)).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size) / uvec4(1u, 1u, 1u, 1u))) >> uvec4(0u, 0u, 0u, 0u)).z * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.z * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false || (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) / vec2(1.0, 1.0)))), _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(mat4(-366.069, -3.5, -7608.2830, 9990.8640, -7.6, -373.302, -1098.3341, 552.625, 631.203, -41.82, 376.957, 107.568, -72.34, 0.4, -735.642, -92.73))))) * (vec2(injectionSwitch)))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) + vec2(0.0, 0.0)), mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), clamp((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(88.90), ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1]), vec2(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(-1221.1546)), bvec2(true, false))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(-99.60), _GLF_FUZZED(9.5)), vec2(((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[0], ((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1]), bvec2(true, true)))))))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), (_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), max(vec2(injectionSwitch), vec2(injectionSwitch)))))) + vec2(0.0, 0.0)), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)))), min(mat2(1.0) * _GLF_IDENTITY((vec2(injectionSwitch)), max((vec2(injectionSwitch)), _GLF_IDENTITY((vec2(injectionSwitch)), max((vec2(injectionSwitch)), (vec2(injectionSwitch)))))), mat2(1.0) * (vec2(injectionSwitch)))))), clamp(vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch)), min(mat2(1.0) * _GLF_IDENTITY((vec2(injectionSwitch)), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch)), mix(vec2(((vec2(injectionSwitch)))[0], ((vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED(2925.5422), _GLF_FUZZED((false ? -61.26 : -5.5))), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0)), mat2(1.0) * (vec2(mat2x3(_GLF_IDENTITY((vec2(injectionSwitch)), mix(vec2(((vec2(injectionSwitch)))[0], ((vec2(injectionSwitch)))[1]), vec2(_GLF_FUZZED(2925.5422), _GLF_FUZZED((false ? -61.26 : -5.5))), bvec2(false, false))), 1.0, 1.0, 0.0, 1.0))))), mat2(1.0) * (vec2(injectionSwitch)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch)), min(mat2(1.0) * (vec2(injectionSwitch)), mat2(1.0) * (vec2(injectionSwitch)))))), vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), _GLF_IDENTITY(vec2(injectionSwitch), min(_GLF_IDENTITY(vec2(injectionSwitch), (vec2(injectionSwitch)) - vec2(0.0, 0.0)), vec2(injectionSwitch))), vec2(injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch)), min(mat2(1.0) * (vec2(injectionSwitch)), mat2(1.0) * (vec2(injectionSwitch)))))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-33.46, 2789.5227)) : injectionSwitch))))), mat2(1.0) * (vec2(injectionSwitch)))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (vec2(injectionSwitch)), vec2(_GLF_IDENTITY(vec3(mat2(1.0) * _GLF_IDENTITY((vec2(injectionSwitch)), clamp((vec2(injectionSwitch)), _GLF_IDENTITY((vec2(injectionSwitch)), (false ? _GLF_FUZZED(vec2(-0.8, 5.1)) : (vec2(injectionSwitch)))), (vec2(injectionSwitch)))), abs(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5910.0837), 0.0 + (_GLF_FUZZED(-5910.0837))) : 0.0)), 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), (vec4(1.0, 0.0, 0.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(sin(vec3(8.5, -4633.6438, _GLF_IDENTITY(688.002, max(688.002, 688.002))))) : vec3(mat2(1.0) * (vec2(injectionSwitch)), abs(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), min(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 1.0, 1.0, 1.0))), vec4(1.0, 0.0, 0.0, 0.0))))))))))), max(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mat2(1.0) * (vec2(injectionSwitch)))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1], max(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) + 0.0)))))), mat2(1.0) * (vec2(injectionSwitch))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          continue;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, cos(0.0), 0.0)))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)), false)))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false))), true, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))), true)), (bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))), (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false))))))))))) || false))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, max(1, 1)) ^ 0))) && true); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, ! (! (true))), true, false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        break;
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), ! (! (_GLF_DEAD(false)))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (false)))))
                return;
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             do
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              {
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec4(bvec2(injectionSwitch.x > injectionSwitch.y, false), false, false))))), true, false)))))))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true));
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  continue;
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  break;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), bool(bvec4(false, true, false, false)))))))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 continue;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) && true)))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false))), ! (! (false)))))
              break;
             for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), ~ (~ (_GLF_IDENTITY(int(0), int(0)))))), _GLF_IDENTITY(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0)))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0)))), _GLF_IDENTITY(int(ivec2(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0)))), (0 << _GLF_IDENTITY(int(5), int(5))))), ~ (~ (int(ivec2(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0)))), (0 << _GLF_IDENTITY(int(5), int(5))))))))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0)))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0))))))) >> _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0))))), int(0))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0))))), int(0)))) | (_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0))))), int(0))), ~ (~ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, min(0, 0))))), int(0))))))))) | ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), _GLF_IDENTITY(max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ ((1 << _GLF_IDENTITY(int(0), int(0))))), (1 << _GLF_IDENTITY(int(0), int(0)))), (true ? max(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))), 0 ^ _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0))))))))), (((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(_GLF_IDENTITY(int(int(0)), min(int(int(0)), int(int(0)))))))))) - 0)), (1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED((-58340))))))) : _GLF_FUZZED(-27377)))) >> _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(false))
                        break;
                       barrier();
                       if(_GLF_DEAD(false))
                        break;
                      }
                    }
                   else
                    {
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))))))))
                continue;
              }
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)) + sqrt(0.0)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.0, -4485.4997)))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && true)))))), true && ((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-2.0, -4485.4997)))).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) && true))))))))))))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true)) || false)), (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
            {
             for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3)))), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3)))), (1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3))))) / 1), _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3)))), (true ? _GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3)))), (true ? 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3)))) : _GLF_FUZZED(89492))) : _GLF_FUZZED(_injected_loop_counter))), 1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (false ? _GLF_FUZZED(_injected_loop_counter) : int(3))))))) >> _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              break;
             do
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y = read, 0u ^ (_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y = read, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y = read) | 0u))), (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y = read) | 0u);
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), _GLF_IDENTITY(float((injectionSwitch)[1]), (true ? _GLF_IDENTITY(float((injectionSwitch)[1]), (float((injectionSwitch)[1])) * 1.0) : _GLF_FUZZED(4598.8709))), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, true && (false))))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(40.37)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), _GLF_IDENTITY(float((injectionSwitch)[1]), (true ? _GLF_IDENTITY(float((injectionSwitch)[1]), (float((injectionSwitch)[1])) * 1.0) : _GLF_FUZZED(4598.8709))), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, true && (false))))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(40.37)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), _GLF_IDENTITY(float((injectionSwitch)[1]), (true ? _GLF_IDENTITY(float((injectionSwitch)[1]), (float((injectionSwitch)[1])) * 1.0) : _GLF_FUZZED(4598.8709))), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, true && (false))))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(40.37)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), _GLF_IDENTITY(float((injectionSwitch)[1]), (true ? _GLF_IDENTITY(float((injectionSwitch)[1]), (float((injectionSwitch)[1])) * 1.0) : _GLF_FUZZED(4598.8709))), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, true && (false))))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(40.37)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false))))), (true ? _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), _GLF_IDENTITY(float((injectionSwitch)[1]), (true ? _GLF_IDENTITY(float((injectionSwitch)[1]), (float((injectionSwitch)[1])) * 1.0) : _GLF_FUZZED(4598.8709))), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, true && (false))))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(40.37)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false))))) : _GLF_FUZZED(vec2(-0.5, -83.01))))) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1])), mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), min(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), _GLF_IDENTITY(float((injectionSwitch)[1]), (true ? _GLF_IDENTITY(float((injectionSwitch)[1]), (float((injectionSwitch)[1])) * 1.0) : _GLF_FUZZED(4598.8709))), _GLF_IDENTITY(bool(true), (bool(true)) || _GLF_IDENTITY(false, true && (false))))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false)), mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_FUZZED(-22.16)), float((injectionSwitch)[1]), bool(true))), (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(40.37)), float((injectionSwitch)[0]), bool(true))), _GLF_FUZZED((7673.3269 + 8.9))), bvec2(true, false))))))).x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-87.39) : injectionSwitch[0])), injectionSwitch[1])).y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
            barrier();
           do
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, false, false))), false, true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec4(bool(_GLF_DEAD(false)), false, false, false))), false, true, false))))))))
                barrier();
               continue;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_IDENTITY(bool(bvec3(false || (false), _GLF_IDENTITY(false, ! (! (false))), true)), (bool(bvec3(false || (false), _GLF_IDENTITY(false, ! (! (false))), true))) || false)))));
          }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
            barrier();
          }
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-599.019), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED(8751.2897)), float(((injectionSwitch))[1]), bool(true))), _GLF_IDENTITY(((injectionSwitch))[1], 0.0 + (((injectionSwitch))[1]))))), vec2(((injectionSwitch))[0], _GLF_FUZZED(4.3)), bvec2(true, false)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.2), max(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (true ? float(_GLF_FUZZED(3.2)) : _GLF_FUZZED(949.206))) : _GLF_FUZZED(-1332.5992))), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3.8)), float(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(3.2), mix(float(_GLF_FUZZED(-5.1)), float(_GLF_FUZZED(3.2)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), bool(true))))), bool(false)))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(7.2, 9704.8916)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-89.47)), bool(false))), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, max(_GLF_IDENTITY(3.2, float(_GLF_IDENTITY(mat4x3(3.2, 1.0, 0.0, 0.0, 0.0, abs(0.0), abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(3.2, 1.0, 0.0, 0.0, 0.0, abs(0.0), abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0)))))), 3.2)))), bool(false)))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))))), (injectionSwitch)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true)))))))))), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(-864.006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))))) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-792.191, mix(float(_GLF_IDENTITY(-792.191, (true ? -792.191 : _GLF_FUZZED(665.037)))), float(_GLF_FUZZED(-166.737)), bool(false)))), _GLF_FUZZED(_GLF_IDENTITY(-84.93, max(_GLF_IDENTITY(-84.93, (false ? _GLF_FUZZED(-8.4) : -84.93)), -84.93)))), bvec2(false, false)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), mix(float(_GLF_FUZZED(3.2)), float(_GLF_FUZZED(0.0)), bool(false)))), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-2147.0245, 5.2)) : injectionSwitch)), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, true && (false)))))), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-2147.0245, 5.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-5.2)), float(injectionSwitch[1]), bool(true))))))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), (vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(80.33)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[0], _GLF_FUZZED(-7861.3737)), vec2(_GLF_FUZZED(6.3), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1])), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1]) / 1.0)))), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(+ -5.1, min(+ -5.1, + -5.1))))), 1.0 * (float(_GLF_FUZZED((_GLF_IDENTITY(+ -5.1, min(+ -5.1, + -5.1))))))), float(_GLF_FUZZED(6.7)), bool(true)))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(8.9, _GLF_IDENTITY(9.4, (9.4) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-6621.8072, (-6621.8072) / 1.0), clamp(_GLF_IDENTITY(-6621.8072, max(_GLF_IDENTITY(-6621.8072, 0.0 + (_GLF_IDENTITY(-6621.8072, float(mat2x4(-6621.8072, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -6621.8072)), -6621.8072, _GLF_IDENTITY(-6621.8072, _GLF_IDENTITY(float(float(-6621.8072)), clamp(_GLF_IDENTITY(float(float(-6621.8072)), (_GLF_IDENTITY(float(float(-6621.8072)), float(mat4(float(float(-6621.8072)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float(float(-6621.8072)), _GLF_IDENTITY(float(float(-6621.8072)), min(float(float(-6621.8072)), float(float(-6621.8072))))))))), -444.502)) : mat2(injectionSwitch, 0.0, 0.0)), ((false ? _GLF_FUZZED(mat2(8.9, _GLF_IDENTITY(9.4, (9.4) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-6621.8072, (-6621.8072) / 1.0), clamp(_GLF_IDENTITY(-6621.8072, max(_GLF_IDENTITY(-6621.8072, 0.0 + (_GLF_IDENTITY(-6621.8072, float(mat2x4(-6621.8072, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -6621.8072)), -6621.8072, _GLF_IDENTITY(-6621.8072, _GLF_IDENTITY(float(float(-6621.8072)), clamp(_GLF_IDENTITY(float(float(-6621.8072)), (_GLF_IDENTITY(float(float(-6621.8072)), float(mat4(float(float(-6621.8072)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float(float(-6621.8072)), _GLF_IDENTITY(float(float(-6621.8072)), min(float(float(-6621.8072)), float(float(-6621.8072))))))))), -444.502)) : mat2(injectionSwitch, 0.0, 0.0))) * mat2(1.0)))), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))), mix(vec2((min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[0], _GLF_FUZZED(1.0)), vec2(_GLF_FUZZED(-15.93), _GLF_IDENTITY((min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, _GLF_IDENTITY(-6621.8072, (_GLF_IDENTITY(-6621.8072, clamp(-6621.8072, -6621.8072, -6621.8072))) + 0.0), -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[1], float(vec2((min(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[1], 0.0)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, false)))))))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-599.019), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED(8751.2897)), float(((injectionSwitch))[1]), bool(true))), _GLF_IDENTITY(((injectionSwitch))[1], 0.0 + (((injectionSwitch))[1]))))), vec2(((injectionSwitch))[0], _GLF_FUZZED(4.3)), bvec2(true, false)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.2), max(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (true ? float(_GLF_FUZZED(3.2)) : _GLF_FUZZED(949.206))) : _GLF_FUZZED(-1332.5992))), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3.8)), float(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(3.2), mix(float(_GLF_FUZZED(-5.1)), float(_GLF_FUZZED(3.2)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), bool(true))))), bool(false)))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(7.2, 9704.8916)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-89.47)), bool(false))), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, max(_GLF_IDENTITY(3.2, float(_GLF_IDENTITY(mat4x3(3.2, 1.0, 0.0, 0.0, 0.0, abs(0.0), abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(3.2, 1.0, 0.0, 0.0, 0.0, abs(0.0), abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0)))))), 3.2)))), bool(false)))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))))), (injectionSwitch)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true)))))))))), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(-864.006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))))) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-792.191, mix(float(_GLF_IDENTITY(-792.191, (true ? -792.191 : _GLF_FUZZED(665.037)))), float(_GLF_FUZZED(-166.737)), bool(false)))), _GLF_FUZZED(_GLF_IDENTITY(-84.93, max(_GLF_IDENTITY(-84.93, (false ? _GLF_FUZZED(-8.4) : -84.93)), -84.93)))), bvec2(false, false)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), mix(float(_GLF_FUZZED(3.2)), float(_GLF_FUZZED(0.0)), bool(false)))), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-2147.0245, 5.2)) : injectionSwitch)), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, true && (false)))))), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-2147.0245, 5.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-5.2)), float(injectionSwitch[1]), bool(true))))))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), (vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(80.33)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[0], _GLF_FUZZED(-7861.3737)), vec2(_GLF_FUZZED(6.3), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1])), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1]) / 1.0)))), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(+ -5.1, min(+ -5.1, + -5.1))))), 1.0 * (float(_GLF_FUZZED((_GLF_IDENTITY(+ -5.1, min(+ -5.1, + -5.1))))))), float(_GLF_FUZZED(6.7)), bool(true)))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(8.9, _GLF_IDENTITY(9.4, (9.4) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-6621.8072, (-6621.8072) / 1.0), clamp(_GLF_IDENTITY(-6621.8072, max(_GLF_IDENTITY(-6621.8072, 0.0 + (_GLF_IDENTITY(-6621.8072, float(mat2x4(-6621.8072, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -6621.8072)), -6621.8072, _GLF_IDENTITY(-6621.8072, _GLF_IDENTITY(float(float(-6621.8072)), clamp(_GLF_IDENTITY(float(float(-6621.8072)), (_GLF_IDENTITY(float(float(-6621.8072)), float(mat4(float(float(-6621.8072)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float(float(-6621.8072)), _GLF_IDENTITY(float(float(-6621.8072)), min(float(float(-6621.8072)), float(float(-6621.8072))))))))), -444.502)) : mat2(injectionSwitch, 0.0, 0.0)), ((false ? _GLF_FUZZED(mat2(8.9, _GLF_IDENTITY(9.4, (9.4) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-6621.8072, (-6621.8072) / 1.0), clamp(_GLF_IDENTITY(-6621.8072, max(_GLF_IDENTITY(-6621.8072, 0.0 + (_GLF_IDENTITY(-6621.8072, float(mat2x4(-6621.8072, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -6621.8072)), -6621.8072, _GLF_IDENTITY(-6621.8072, _GLF_IDENTITY(float(float(-6621.8072)), clamp(_GLF_IDENTITY(float(float(-6621.8072)), (_GLF_IDENTITY(float(float(-6621.8072)), float(mat4(float(float(-6621.8072)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float(float(-6621.8072)), _GLF_IDENTITY(float(float(-6621.8072)), min(float(float(-6621.8072)), float(float(-6621.8072))))))))), -444.502)) : mat2(injectionSwitch, 0.0, 0.0))) * mat2(1.0)))), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))), mix(vec2((min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[0], _GLF_FUZZED(1.0)), vec2(_GLF_FUZZED(-15.93), _GLF_IDENTITY((min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, _GLF_IDENTITY(-6621.8072, (_GLF_IDENTITY(-6621.8072, clamp(-6621.8072, -6621.8072, -6621.8072))) + 0.0), -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[1], float(vec2((min(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[1], 0.0)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, false)))))))))))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(-599.019), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], mix(float(_GLF_FUZZED(8751.2897)), float(((injectionSwitch))[1]), bool(true))), _GLF_IDENTITY(((injectionSwitch))[1], 0.0 + (((injectionSwitch))[1]))))), vec2(((injectionSwitch))[0], _GLF_FUZZED(4.3)), bvec2(true, false)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(3.2), max(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), mix(float(_GLF_FUZZED(-5.1)), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (true ? _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (true ? float(_GLF_FUZZED(3.2)) : _GLF_FUZZED(949.206))) : _GLF_FUZZED(-1332.5992))), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-3.8)), float(float(mat3(_GLF_IDENTITY(_GLF_FUZZED(3.2), mix(float(_GLF_FUZZED(-5.1)), float(_GLF_FUZZED(3.2)), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0))), bool(true))))), bool(false)))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(7.2, 9704.8916)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(-89.47)), bool(false))), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, max(_GLF_IDENTITY(3.2, float(_GLF_IDENTITY(mat4x3(3.2, 1.0, 0.0, 0.0, 0.0, abs(0.0), abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat4x3(3.2, 1.0, 0.0, 0.0, 0.0, abs(0.0), abs(1.0), 1.0, 1.0, 1.0, 1.0, 0.0)))))), 3.2)))), bool(false)))), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))))), (injectionSwitch)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), true)))))))))), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), _GLF_FUZZED(-864.006)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))))))) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-792.191, mix(float(_GLF_IDENTITY(-792.191, (true ? -792.191 : _GLF_FUZZED(665.037)))), float(_GLF_FUZZED(-166.737)), bool(false)))), _GLF_FUZZED(_GLF_IDENTITY(-84.93, max(_GLF_IDENTITY(-84.93, (false ? _GLF_FUZZED(-8.4) : -84.93)), -84.93)))), bvec2(false, false)))[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), mix(float(_GLF_FUZZED(3.2)), float(_GLF_FUZZED(0.0)), bool(false)))), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-2147.0245, 5.2)) : injectionSwitch)), mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, true && (false)))))), bvec2(false, true))), mix(vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-2147.0245, 5.2)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-5.2)), float(injectionSwitch[1]), bool(true))))))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), (vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7))) - vec2(0.0, 0.0)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7.4), _GLF_FUZZED(80.33)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[0], _GLF_FUZZED(-7861.3737)), vec2(_GLF_FUZZED(6.3), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], clamp((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], min((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1])), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1], ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(vec2(-2147.0245, _GLF_IDENTITY(5.2, min(5.2, 5.2)))) : injectionSwitch)), mix(vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(5.9), _GLF_FUZZED(-7.2)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[_GLF_IDENTITY(0, (0) | (0))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))[1]) / 1.0)))), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) * 1.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), mix(_GLF_IDENTITY(float(_GLF_FUZZED((_GLF_IDENTITY(+ -5.1, min(+ -5.1, + -5.1))))), 1.0 * (float(_GLF_FUZZED((_GLF_IDENTITY(+ -5.1, min(+ -5.1, + -5.1))))))), float(_GLF_FUZZED(6.7)), bool(true)))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat2(8.9, _GLF_IDENTITY(9.4, (9.4) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-6621.8072, (-6621.8072) / 1.0), clamp(_GLF_IDENTITY(-6621.8072, max(_GLF_IDENTITY(-6621.8072, 0.0 + (_GLF_IDENTITY(-6621.8072, float(mat2x4(-6621.8072, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -6621.8072)), -6621.8072, _GLF_IDENTITY(-6621.8072, _GLF_IDENTITY(float(float(-6621.8072)), clamp(_GLF_IDENTITY(float(float(-6621.8072)), (_GLF_IDENTITY(float(float(-6621.8072)), float(mat4(float(float(-6621.8072)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float(float(-6621.8072)), _GLF_IDENTITY(float(float(-6621.8072)), min(float(float(-6621.8072)), float(float(-6621.8072))))))))), -444.502)) : mat2(injectionSwitch, 0.0, 0.0)), ((false ? _GLF_FUZZED(mat2(8.9, _GLF_IDENTITY(9.4, (9.4) * sqrt(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(-6621.8072, (-6621.8072) / 1.0), clamp(_GLF_IDENTITY(-6621.8072, max(_GLF_IDENTITY(-6621.8072, 0.0 + (_GLF_IDENTITY(-6621.8072, float(mat2x4(-6621.8072, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0))))), -6621.8072)), -6621.8072, _GLF_IDENTITY(-6621.8072, _GLF_IDENTITY(float(float(-6621.8072)), clamp(_GLF_IDENTITY(float(float(-6621.8072)), (_GLF_IDENTITY(float(float(-6621.8072)), float(mat4(float(float(-6621.8072)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)))) - 0.0), float(float(-6621.8072)), _GLF_IDENTITY(float(float(-6621.8072)), min(float(float(-6621.8072)), float(float(-6621.8072))))))))), -444.502)) : mat2(injectionSwitch, 0.0, 0.0))) * mat2(1.0)))), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))), mix(vec2((min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[0], _GLF_FUZZED(1.0)), vec2(_GLF_FUZZED(-15.93), _GLF_IDENTITY((min(vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, _GLF_IDENTITY(-6621.8072, (_GLF_IDENTITY(-6621.8072, clamp(-6621.8072, -6621.8072, -6621.8072))) + 0.0), -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[1], float(vec2((min(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0)))), vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (false ? _GLF_FUZZED(mat2(8.9, 9.4, -6621.8072, -444.502)) : mat2(injectionSwitch, 0.0, 0.0))))))[1], 0.0)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(false, true))), bvec2(bvec4(bvec2(bvec2(bvec2(false, true))), true, false)))))))))))).y) + 0.0)) / 1.0), bool(bool(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(7.2, 9704.8916)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4681.5310)), vec2(_GLF_FUZZED(42.45), ((injectionSwitch))[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(-625.041), _GLF_FUZZED(5.1)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), bvec2(false, true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (_GLF_FUZZED(6.7)) / 1.0)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0)))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), clamp(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), clamp(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), clamp(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))))))).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(53421) : 1))]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))), (false ? _GLF_FUZZED(vec2(7.2, 9704.8916)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), (_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), (float((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1])) - 0.0)) * 1.0), float(_GLF_FUZZED(3.2)), bool(false)))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4681.5310)), vec2(_GLF_FUZZED(42.45), ((injectionSwitch))[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(-625.041), _GLF_FUZZED(5.1)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true)), (mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], (_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_IDENTITY(_GLF_FUZZED(-4681.5310), (_GLF_FUZZED(-4681.5310)) - _GLF_ZERO(0.0, injectionSwitch.x))), vec2(_GLF_FUZZED(42.45), ((injectionSwitch))[1]), bvec2(false, true))))[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-625.041, clamp(-625.041, -625.041, -625.041))), _GLF_FUZZED(5.1)), bvec2(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, true))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(mat2((injectionSwitch)[0], 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0))), mat2(mat3(mat2((injectionSwitch)[0], 0.0, 1.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0)))))))), _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)) || (false)))))), bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (_GLF_FUZZED(6.7)) / 1.0)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, _GLF_IDENTITY(true, true && (true))))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, int(ivec4(0, 0, 1, 0)))], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, max(3.2, _GLF_IDENTITY(3.2, (3.2) + 0.0))))), bool(false)))), bvec2(false, true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)) : _GLF_FUZZED(cos(injectionSwitch)))))[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (true))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), min(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), min((false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), 1.0 * ((false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), (_GLF_FUZZED(-2.6)) + 0.0) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[1]), clamp(float((injectionSwitch)[1]), float((injectionSwitch)[1]), float((injectionSwitch)[1]))), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_FUZZED(3.2), min(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0))), max(float(mat4(_GLF_IDENTITY(_GLF_FUZZED(3.2), min(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0))), float(mat4(_GLF_IDENTITY(_GLF_FUZZED(3.2), min(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, exp(0.0))))))), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(837.306, -6.4)) : injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], float(mat4((injectionSwitch)[1], 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 0.0, sqrt(1.0), 1.0, abs(0.0)))), _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(7791.1007)), vec2(((injectionSwitch))[0], _GLF_IDENTITY(((injectionSwitch))[1], float(mat4x2(((injectionSwitch))[1], 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), clamp(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(_GLF_IDENTITY(float((injectionSwitch)[1]), min(_GLF_IDENTITY(float((injectionSwitch)[1]), (float((injectionSwitch)[1])) - 0.0), float((injectionSwitch)[1]))), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), true, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, true), true, false)), true)))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), (_GLF_IDENTITY(_GLF_FUZZED(3.2), max(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2)))) / 1.0)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float(_GLF_IDENTITY((injectionSwitch)[1], float(_GLF_IDENTITY(vec3((injectionSwitch)[1], determinant(mat2(sqrt(1.0), 0.0, 1.0, sqrt(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0))), vec3(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(vec3((injectionSwitch)[1], determinant(mat2(sqrt(1.0), 0.0, 1.0, sqrt(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0))), vec3(1.0, 1.0, 1.0) * (vec3((injectionSwitch)[1], determinant(mat2(sqrt(1.0), 0.0, 1.0, sqrt(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0), mat2x3(mat3x4(mat2x3(_GLF_IDENTITY(vec3((injectionSwitch)[1], determinant(mat2(sqrt(1.0), 0.0, 1.0, sqrt(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0))), vec3(1.0, 1.0, 1.0) * (vec3((injectionSwitch)[1], determinant(mat2(sqrt(1.0), 0.0, 1.0, sqrt(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0))))))))), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(_GLF_IDENTITY(-2.6, 0.0 + (-2.6))) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(_GLF_IDENTITY(float((injectionSwitch)[1]), _GLF_IDENTITY(float(float(float((injectionSwitch)[1]))), float(mat4x2(float(float(float((injectionSwitch)[1]))), 1.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))))))), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-54.74, -6.1)), vec2(mat4x3(_GLF_FUZZED(vec2(-54.74, -6.1)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), 1.0 * (dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))))), 0.0, _GLF_IDENTITY(tan(0.0), (tan(0.0)) + 0.0), 1.0, 0.0, 0.0, 1.0, 1.0, exp(0.0), 1.0))) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), true, false))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.7), mix(float(_GLF_FUZZED(6.7)), float(_GLF_FUZZED(-443.276)), bool(false))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(6.7), mix(float(_GLF_FUZZED(6.7)), float(_GLF_FUZZED(-443.276)), bool(false))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(9.5, float(mat2(_GLF_IDENTITY(9.5, (9.5) / 1.0), cos(0.0), sin(0.0), 0.0)))), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-14001) : 1))]), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, max(3.2, 3.2)))), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), clamp(false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-54.74, -6.1), max(_GLF_IDENTITY(vec2(-54.74, -6.1), min(vec2(-54.74, -6.1), vec2(-54.74, -6.1))), vec2(-54.74, -6.1)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), clamp((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), clamp((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), min((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), true, false), bvec3(bvec3(bvec3(bool(false), true, false))))))), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), mix(float(float(_GLF_FUZZED(3.2))), float(_GLF_FUZZED((+ 4863.3327))), bool(false))), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), max(_GLF_FUZZED(-2.6), _GLF_FUZZED(-2.6))) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), min(_GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (_GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (float(_GLF_FUZZED(3.2))) + 0.0)) * 1.0), float(_GLF_FUZZED(3.2)))), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (float(_GLF_FUZZED(3.2))) - _GLF_ZERO(0.0, injectionSwitch.x)), bool(false)), (mix(float(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat4((injectionSwitch), 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0), (mat4((injectionSwitch), 1.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), clamp(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2), _GLF_FUZZED(3.2)))), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))), false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (0) | (0))], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, clamp(_GLF_IDENTITY(3.2, clamp(3.2, 3.2, 3.2)), 3.2, 3.2)))), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.7)), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) / 1))))], mix(float(_GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(9.9) : (injectionSwitch)[1]))), float(_GLF_FUZZED(3.2)), bool(false)))), bvec2(false, _GLF_IDENTITY(true, true && (true))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(8.1)), vec2(_GLF_FUZZED(5.6), ((injectionSwitch))[1]), bvec2(false, true)))[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(_GLF_IDENTITY(false, (false) || false))), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float(_GLF_IDENTITY((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(33700)))], float(_GLF_IDENTITY(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(33700)))], _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), _GLF_IDENTITY(mat4x2(mat4(_GLF_IDENTITY(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(33700)))], _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), (mat4x2((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(33700)))], _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat2(1.0) * (mat4x2(mat4(_GLF_IDENTITY(mat4x2((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(33700)))], _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0), (mat4x2((injectionSwitch)[_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(33700)))], _GLF_ZERO(0.0, injectionSwitch.x), length(vec2(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0)) + mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))))), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(_GLF_IDENTITY(3.2, (false ? _GLF_FUZZED(0.7) : 3.2)))), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), min(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) / 1.0)))) - 0.0), mix(float(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-3.3), _GLF_FUZZED(-3.3)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), clamp(false ? _GLF_FUZZED(vec2(-54.74, -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(6.7, mix(float(6.7), float(_GLF_FUZZED(-4.4)), bool(false)))), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true), true, false))))), false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-54.74, mix(float(-54.74), float(_GLF_FUZZED(9.1)), bool(false))), -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), true), true, false))))), _GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-54.74, min(-54.74, _GLF_IDENTITY(-54.74, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-54.74, mix(float(-54.74), float(_GLF_FUZZED(-4.2)), bool(false))), 0.0, 1.0, tan(0.0)), (true ? mat2(_GLF_IDENTITY(-54.74, mix(float(-54.74), float(_GLF_FUZZED(-4.2)), bool(false))), 0.0, 1.0, tan(0.0)) : _GLF_FUZZED(mat2(-9.2, -9285.6554, 25.67, -739.584)))))))), -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), mix(float((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7))))), float(_GLF_FUZZED((false ? 94.00 : 391.343))), bool(false))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(3.2), min(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), _GLF_FUZZED(3.2), _GLF_IDENTITY(_GLF_FUZZED(3.2), 1.0 * (_GLF_FUZZED(3.2)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), max(float(_GLF_FUZZED(3.2)), float(_GLF_FUZZED(3.2)))), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-54.74, min(-54.74, _GLF_IDENTITY(-54.74, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-54.74, mix(float(-54.74), float(_GLF_FUZZED(-4.2)), bool(false))), 0.0, 1.0, tan(0.0)), (true ? mat2(_GLF_IDENTITY(-54.74, mix(float(-54.74), float(_GLF_FUZZED(-4.2)), bool(false))), 0.0, 1.0, tan(0.0)) : _GLF_FUZZED(mat2(-9.2, -9285.6554, 25.67, -739.584)))))))), -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), mix(float((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7))))), float(_GLF_FUZZED((false ? 94.00 : 391.343))), bool(false))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(3.2), min(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), _GLF_FUZZED(3.2), _GLF_IDENTITY(_GLF_FUZZED(3.2), 1.0 * (_GLF_FUZZED(3.2)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), max(float(_GLF_FUZZED(3.2)), float(_GLF_FUZZED(3.2)))), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), (false ? _GLF_FUZZED(injectionSwitch) : false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-54.74, min(-54.74, _GLF_IDENTITY(-54.74, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(-54.74, mix(float(-54.74), float(_GLF_FUZZED(-4.2)), bool(false))), 0.0, 1.0, tan(0.0)), (true ? mat2(_GLF_IDENTITY(-54.74, mix(float(-54.74), float(_GLF_FUZZED(-4.2)), bool(false))), 0.0, 1.0, tan(0.0)) : _GLF_FUZZED(mat2(-9.2, -9285.6554, 25.67, -739.584)))))))), -6.1)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), _GLF_IDENTITY((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7)))), mix(float((false ? _GLF_FUZZED(-2.6) : _GLF_IDENTITY(_GLF_FUZZED(6.7), max(_GLF_FUZZED(6.7), _GLF_FUZZED(6.7))))), float(_GLF_FUZZED((false ? 94.00 : 391.343))), bool(false))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_IDENTITY(_GLF_FUZZED(3.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(3.2), min(_GLF_FUZZED(3.2), _GLF_FUZZED(3.2))), _GLF_FUZZED(3.2), _GLF_IDENTITY(_GLF_FUZZED(3.2), 1.0 * (_GLF_FUZZED(3.2)))))), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), max(float(_GLF_FUZZED(3.2)), float(_GLF_FUZZED(3.2)))), bool(false)))))), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))) / vec2(1.0, 1.0)))), false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-54.74, -6.1)), (false ? _GLF_FUZZED(vec2(80.05, -35.35)) : _GLF_FUZZED(vec2(-54.74, -6.1)))) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_IDENTITY(_GLF_FUZZED(-2.6), float(mat3x2(_GLF_FUZZED(-2.6), 1.0, abs(1.0), 1.0, log(1.0), log(1.0)))) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(6.7, max(6.7, _GLF_IDENTITY(6.7, (6.7) / 1.0)))), max(_GLF_FUZZED(6.7), _GLF_IDENTITY(_GLF_FUZZED(6.7), (false ? _GLF_FUZZED(max(float(true), -31.27)) : _GLF_FUZZED(6.7)))))))), vec2(_GLF_FUZZED(9.5), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), clamp(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))))), (_GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), (true ? float(_GLF_FUZZED(3.2)) : _GLF_FUZZED(vec4(-9166.6994, -7.6, 598.081, -1774.3681).b))), bool(false)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0), mix(float(_GLF_IDENTITY(mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), (mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false))) - 0.0)), float(_GLF_FUZZED(-89.03)), bool(false))), mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(3.2)), bool(false)), mix(float((injectionSwitch)[1]), _GLF_IDENTITY(float(_GLF_FUZZED(3.2)), max(_GLF_IDENTITY(float(_GLF_FUZZED(3.2)), mix(float(_GLF_FUZZED(2.7)), float(float(_GLF_FUZZED(3.2))), bool(true))), float(_GLF_FUZZED(3.2)))), bool(false)))))) - 0.0)), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))))))))))))).y) || false))))))));
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), max(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), exp(0.0))))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-73.54)), bool(false))), injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), true && (bool((injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) ^ 0), _GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) | _GLF_IDENTITY(0, (0) | (0))) | (1)), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(-47903))), 1)))))) ^ 0)))), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
  }
 for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)), (true ? int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) | 0)) : _GLF_FUZZED(50137)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(8.7), _GLF_FUZZED(99.32)), bvec2(false, false))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), ! (! (bool(bvec2(true, false)))))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)));
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, false || (false))))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) / 1)))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3((_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true)))), false || (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false))))), true, true)))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true, false), true)), false))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) || false), true, false), true)), false)))))))), (bool(_GLF_IDENTITY(false, (false) && true))) && true)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false))))))), (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   for(int _injected_loop_counter = (((1 ^ 0) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) << 0)))), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (42288 & 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   int i = 0;
   atomicStore(checker[virtual_gid], GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 else
  {
   do
    {
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size, (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size) << uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) ^ (GLF_merged4_0_1_13_1_1_4_2_1_11_3_1_14num_workgroupreadsubgroup_idworkgroup_size.y)), 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-41338) : _GLF_IDENTITY(int(4), max(int(4), int(4)))))))) << _GLF_IDENTITY(0, int(int(0)))))));
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(false, false || (false)))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), true), bvec3(bvec3(bvec3(bvec2(false, false), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true), bvec3(bvec3(bvec3(bvec2(false, false), true)))))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            barrier();
           continue;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
