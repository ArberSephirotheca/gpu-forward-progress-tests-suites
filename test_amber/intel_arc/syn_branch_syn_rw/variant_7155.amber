#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), _GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true))), (_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true))), ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (! (true)))) || false)) && true))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-2547.7686)), bool(false))))))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.0) : injectionSwitch.y))), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) && true)))), bool(_GLF_IDENTITY(bvec2(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), false), bvec2(bvec3(bvec2(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), false), true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true), false), false, false)))))))), bool(bvec2(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) && true)))), false))), bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), _GLF_IDENTITY(bool(bvec2(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))) && true)))), false)), bool(bool(_GLF_IDENTITY(bool(bvec2(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), false)), ! (! (bool(bvec2(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), _GLF_IDENTITY(bool(false), (bool(false)) && true)))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), false))))))))), false, true, false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec2(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false))), false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))))) && true)), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, log(1.0), 0.0))), round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), (dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))) - 0.0), dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0)))), (false ? _GLF_FUZZED(mat4(3082.2783, 6.0, -36.89, 525.641, -6419.0545, 8691.0554, -6.1, -6337.7866, -904.884, 1581.2328, 307.984, -849.418, -8428.3647, 327.344, 2.0, 656.915)) : _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, log(1.0), 0.0))), round(_GLF_IDENTITY(length(normalize(1.0)), min(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0)))), _GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) - 0.0)))), 1.0, _GLF_IDENTITY(dot(vec2(cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.8)), float(0.0), bool(true)))), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0)))), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, log(1.0), 0.0))), round(_GLF_IDENTITY(length(normalize(1.0)), min(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0)))), _GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) - 0.0)))), 1.0, _GLF_IDENTITY(dot(vec2(cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.8)), float(0.0), bool(true)))), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0)))), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, log(1.0), 0.0))), round(_GLF_IDENTITY(length(normalize(1.0)), min(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0)))), _GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) - 0.0)))), 1.0, _GLF_IDENTITY(dot(vec2(cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.8)), float(0.0), bool(true)))), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0)))), (true ? mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, log(1.0), 0.0))), round(_GLF_IDENTITY(length(normalize(1.0)), min(_GLF_IDENTITY(length(normalize(1.0)), max(length(normalize(1.0)), length(normalize(1.0)))), _GLF_IDENTITY(length(normalize(1.0)), (length(normalize(1.0))) - 0.0)))), 1.0, _GLF_IDENTITY(dot(vec2(cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.8)), float(0.0), bool(true)))), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0)))) : _GLF_FUZZED(mat4(18.95, -9593.5992, 647.024, 16.02, 6.4, 71.06, 741.823, -1363.8786, -2532.1449, 1.7, 6.9, 9.9, -88.56, -401.904, -665.633, 2850.3498)))) : _GLF_FUZZED(mat4(2273.4329, -184.230, 646.437, 4.5, -581.017, 1.3, -55.56, -160.896, 239.530, 5892.1276, -3.1, 11.40, -9157.4975, -9.8, 9.4, 5.9))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, 0.0, log(1.0), 0.0))), round(length(normalize(1.0))), 1.0, _GLF_IDENTITY(dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0)), dot(vec2(cos(0.0), 0.0), vec2(1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 0.0, length(sqrt(vec2(0.0, 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) && true)))), false))), bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false)))) || false)), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), bool(bvec2(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false))) : _GLF_FUZZED(5.8)))), (! (injectionSwitch.x > injectionSwitch.y)) && true))), (bool((_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false))), (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-2547.7686)), bool(false))) : _GLF_FUZZED(5.8)))), (! (injectionSwitch.x > injectionSwitch.y)) && true)))) || false)), false))), false, true, false))))) || false))))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true), false || (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))), ! (! (! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-515.617), _GLF_FUZZED((73.95 + 74.32))), bvec2(false, false))).y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) && true)))) || false)))), false))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), min(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-76.05), _GLF_FUZZED(75.76)), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), (true ? _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), vec2(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(((injectionSwitch) * mat2(1.0))))))) : _GLF_FUZZED(vec2(401.634, -712.236))))[1]), bvec2(true, true))), _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0), mat2(mat2(mat2(1.0))))))), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), exp(vec2(0.0, 0.0)) * ((injectionSwitch)))[0], (injectionSwitch)[1]), max(vec2(_GLF_IDENTITY((injectionSwitch), exp(vec2(0.0, 0.0)) * ((injectionSwitch)))[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), exp(vec2(0.0, 0.0)) * ((injectionSwitch)))[0], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(1296.6838)), bvec2(false, false))))).y, (injectionSwitch.y) + 0.0)))))), (_GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), (true ? _GLF_IDENTITY(mat2(1.0) * ((injectionSwitch)), min(mat2(1.0) * ((injectionSwitch)), mat2(1.0) * ((injectionSwitch)))) : _GLF_FUZZED(vec2(-49.76, -5126.8860)))))[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(1296.6838)), bvec2(false, false)))), (true ? min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(1296.6838)), bvec2(false, false)))) : _GLF_FUZZED(vec2(-366.980, -5.9))))).y, (injectionSwitch.y) + 0.0)))))), bool(bvec4((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(6.7), _GLF_FUZZED(1296.6838)), bvec2(false, false))))).y, (injectionSwitch.y) + 0.0)))))), true, true, true)))) || _GLF_IDENTITY(false, ! (! (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))) || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(946.589)), bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(4.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.0)), bool(false)))))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(946.589)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1.4), _GLF_FUZZED(_GLF_IDENTITY(4.3, min(4.3, 4.3)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4411.1091))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)) && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec4(gl_NumWorkGroups, 1u)), (uvec3(uvec4(gl_NumWorkGroups, 1u))) << uvec3(0u, 0u, 0u)))[1], 0u | (gl_NumWorkGroups[1])), gl_NumWorkGroups[2])), gl_NumWorkGroups, gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])), ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))))), gl_NumWorkGroups, gl_NumWorkGroups))) | uvec3(0u, 0u, 0u)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8139.4244) : injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true)))), false))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (_GLF_DEAD(false))), true), true)))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (false || (_GLF_DEAD(false)))))), true), true)), bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))))), ! (! (false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), false || (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))))))))))), true), true)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(~ (~ (gl_WorkGroupID.x)), (~ (~ (gl_WorkGroupID.x))) | (~ (~ (gl_WorkGroupID.x)))));
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), clamp(_GLF_IDENTITY((workgroup_size), uint(uvec3((workgroup_size), 0u, 1u))), (workgroup_size), (workgroup_size)))) >> 0u) | (workgroup_size))) | 0u), min(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))) | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), min((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), clamp((_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)))))) / 1u))))) | 0u), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) | 0u))), workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_id * subgroup_size)), min(_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)), subgroup_id * subgroup_size)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bvec2(true, true))) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (subgroup_local_id))) ^ 0u) + 1) % subgroup_size, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (subgroup_local_id))) ^ 0u) + 1) % subgroup_size, (true ? (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (subgroup_local_id))) ^ 0u) + 1) % subgroup_size : _GLF_FUZZED(workgroup_size)))) << 0u), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size))), 0u ^ (clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (subgroup_local_id + 1) | 0u)) % subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), max(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))) : (subgroup_local_id + 1) % subgroup_size)))))) << 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))) << 0u) ^ 1u), 0u)), _GLF_IDENTITY((true ? _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u) : _GLF_FUZZED(154773u))) % subgroup_size))), (_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size))))), 0u ^ (clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) | 0u)) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) | 0u)) % subgroup_size) | 0u), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)))))) << 0u), (0u ^ 1u), 0u)), (uint(uvec3(_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size))), 0u ^ (clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) | 0u)) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)))))) << 0u), (0u ^ 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) + 0u)))) >> 0u) : _GLF_FUZZED(subgroup_local_id)), ((true ? _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((subgroup_local_id + 1), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u) : _GLF_FUZZED(154773u))) % subgroup_size))), (_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size), ~ (~ ((false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) >> 0u)) : (subgroup_local_id + 1) % subgroup_size))))), 0u ^ (clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) | 0u)) % subgroup_size, ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) | 0u)) % subgroup_size) | 0u), (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)))))) << 0u), (0u ^ 1u), 0u)), (uint(uvec3(_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size))), (_GLF_IDENTITY(clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size))), 0u ^ (clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_local_id + 1) | 0u)) % subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : (subgroup_local_id + 1) % subgroup_size)))))) << 0u), (0u ^ 1u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) << 0u)) + 0u)))) >> 0u) : _GLF_FUZZED(subgroup_local_id))) << 0u)))), ((subgroup_local_id + 1) % subgroup_size) * 1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))]) | 0u), _GLF_IDENTITY(4, 0 ^ (4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, sqrt(1.0)))), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 0.0, sin(0.0), 1.0, 1.0, 0.0, sqrt(1.0)))), false, true)), bool(bool(bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, float(float(1.0))))), 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(561.857)), bool(false))), 0.0, sqrt(1.0)))), false, true))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (true ? injectionSwitch : _GLF_FUZZED(vec2(9.1, 9.1)))).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.1, 9.1)))).y, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.1, 9.1)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.1, 9.1)))).y, (false ? _GLF_FUZZED(881.949) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9.1, 9.1)))).y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))) && true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) || false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(5180.7183)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), true, false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) | 0))), (_GLF_IDENTITY(1, ~ (~ (1)))) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) << _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) | (0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(1, ~ (~ (1)))) << _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) | (0))), ~ (~ (~ ((_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | 0))) << _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) | (0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (1)))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (1))))))))))))))) << 0), _GLF_IDENTITY(1, ~ (~ (1)))), ~ (~ (clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))) << _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) | (0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(bitCount(83343)) : (_GLF_IDENTITY(1, ~ (~ (1)))) << _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) | (0))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))))))) << 0), _GLF_IDENTITY(1, ~ (~ (1))))))), min(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) + 0))), (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), (true ? (~ (1)) : _GLF_FUZZED(_GLF_IDENTITY(-43423, min(_GLF_IDENTITY(-43423, _GLF_IDENTITY(int(int(_GLF_IDENTITY(-43423, max(-43423, -43423)))), (int(int(_GLF_IDENTITY(-43423, max(-43423, -43423))))) / 1)), -43423))))))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (true ? 0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), _GLF_IDENTITY(int(7), 0 | (int(7)))))) : _GLF_FUZZED(25211)))) | (0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 ^ ((1)))) | _GLF_IDENTITY(((1)), min(_GLF_IDENTITY(((1)), (((1))) ^ 0), _GLF_IDENTITY(((1)), max(((1)), ((1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, 0 + (0)), 1, (0 | 0), 1))), 0, _GLF_IDENTITY(0, max(0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (~ (~ (1))))), 1 * (~ (_GLF_IDENTITY(~ (~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (~ (~ (1)))))))))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) - 0), ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), (_GLF_IDENTITY((1), (true ? (1) : _GLF_FUZZED(26817)))) | ((1))))), min(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) << 0)), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), clamp(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), _GLF_IDENTITY(min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), (min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))) - 0), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), ~ (~ (~ (~ (1))))))))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))))))) * 1))))))) << 0), _GLF_IDENTITY(1, ~ (~ (1)))), 0 + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), 0 + (~ (~ (1)))))) << _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) | (0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & _GLF_IDENTITY(0, (0) - (0 >> _GLF_IDENTITY(int(3), int(3))))) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) | 0)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), min(~ (~ (1)), ~ (~ (1))))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))))))) << 0), _GLF_IDENTITY(1, ~ (~ (1)))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), int(ivec3(0 >> _GLF_IDENTITY(int(7), int(7)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)))))) | _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) >> 0)), ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) >> 0))) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)))))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))), (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(61414)))))), ~ (~ (1)))))))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)))))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))), (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(61414)))))), ~ (~ (1))))))))))))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (1)), 1, 1)))))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1))))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), max(~ (1), _GLF_IDENTITY(~ (1), max(~ (1), ~ (1))))))), (_GLF_IDENTITY(1, ~ (~ (1)))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(61414)))))), ~ (~ (1)))))))))))))) ^ 0))) << 0), _GLF_IDENTITY(1, ~ (~ (1)))), max(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) >> 0)), (_GLF_IDENTITY(1, ~ (~ (1)))) << _GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))) | (0), ((0 >> _GLF_IDENTITY(int(7), int(7))) | (0)) << 0)), (_GLF_IDENTITY(0, _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))) | (0), min(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))) | (0), ~ (~ ((0 >> _GLF_IDENTITY(int(7), int(7))) | (0)))), (0 >> _GLF_IDENTITY(int(7), int(7))) | (0))))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, max(7, 7))), int(7))) | (0)), (_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) | (0))) ^ (0 & 35142))))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0, ~ (~ (0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 1 * ((~ (1))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), _GLF_IDENTITY(1, ~ (~ (1)))))))))))) << 0, ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY(0, ~ (~ (0))))) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(26762) : 1))) | 0)))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), 1 * ((~ (1))))), min(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, 0 ^ (1))))), _GLF_IDENTITY(1, ~ (~ (1)))))))))))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (1)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))) * (_GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), min((_GLF_IDENTITY(1, ~ (~ (1)))), (_GLF_IDENTITY(1, ~ (~ (1)))))))) << _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) >> 0))) | (0))), _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(0, ((-1905 & 0) << _GLF_IDENTITY(int(5), int(5))) | (0)) + (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) ^ (0 | 0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), min(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))))))))))) << 0), _GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), ~ (1)))), (~ (~ (1))) >> 0)), _GLF_IDENTITY(0, int(ivec3(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), (ivec2(_GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), 1)) | (ivec2(0, 1))))), (1 | 1), 0))) | (_GLF_IDENTITY(1, ~ (~ (1))))))))), _GLF_IDENTITY(1, 0 ^ (1)), _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY(_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), 0 + ((1))), (1), (1))), (_GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), 0 + ((1))), (1), (_GLF_IDENTITY(1, (1) | 0))))) << 0)))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), false, false))))), false)))))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), (! (! (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)) || false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))), true && ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-754.286)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-754.286)))), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-754.286)))), true, false), true)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-754.286)))), true, false), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-754.286)))), true, false), true)))), true, false, true)))))), true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
