#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))), true && (_GLF_IDENTITY(! (false), true && (! (false)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.y = _GLF_IDENTITY(num_workgroup, (num_workgroup) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / (1u & 1u)), (workgroup_size) ^ 0u) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u)))) ^ 0u)) - 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u)) - 0u), (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), min(_GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u)), ((_GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u))) + 0u), (workgroup_id))), (workgroup_id))) ^ 0u)) - 0u) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, (((1u & 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), min(uint(uvec2(subgroup_local_id, (((1u & 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))), uint(uvec2(subgroup_local_id, (((1u & 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) : _GLF_FUZZED(subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) / 1.0) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) / 1.0) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) / 1.0) > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-892.072) : injectionSwitch.x)))), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(8.3) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0)))) / 1.0) > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)))) << (0u | 0u)) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(subgroup_size) : subgroup_size))))), 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))))), clamp(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), 0u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 1u, (0u | 0u)))) * subgroup_size + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))) << 0u)) % subgroup_size), 0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) - 0))), (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size, ~ (~ ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) - 0))), (subgroup_local_id + 1) | (subgroup_local_id + 1))) % subgroup_size))))))));
 GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY((false), ((false)) && true), true, true, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2635.0485), _GLF_FUZZED((-8.6 * -6553.8869))), bvec2(false, false)), mix(vec2(_GLF_FUZZED(62.10), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(2635.0485), _GLF_FUZZED((-8.6 * -6553.8869))), bvec2(false, false)))[1]), vec2((mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(1, 0 | (1))))]), vec2(_GLF_FUZZED(2635.0485), _GLF_FUZZED((-8.6 * -6553.8869))), bvec2(false, false)))[0], _GLF_FUZZED(60.15)), bvec2(true, false)))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z = read, (GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z = read) ^ 0u);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec3(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false)), false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8530.0952) : injectionSwitch.x))) - 0.0) < injectionSwitch.y)))))))
  barrier();
 atomicStore(buf[GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.x], _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(0, 0, 0) ^ (ivec3(1, 0, 1))))), clamp(ivec3(1, 0, 1), ivec3(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))), (false ? _GLF_FUZZED(22216) : (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))), ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))) << 0) : _GLF_FUZZED(-4372))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)))), ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0), (false ? _GLF_FUZZED(53322) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) + 0)))))), 0, 1)))))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))) - 0))), uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, _GLF_IDENTITY(1, (1) | (1)), 1)) ^ ivec3(0, 0, 0))), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))))), (min(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))) - 0))), uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) / _GLF_IDENTITY(ivec3(1, 1, 1), (ivec3(1, _GLF_IDENTITY(1, (1) | (1)), 1)) ^ ivec3(0, 0, 0))), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))))))) ^ 0u)), 0u | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(0, 0, 0) ^ (_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(0, 0, 0) ^ (ivec3(1, 0, 1))))), clamp(ivec3(1, 0, 1), ivec3(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) << 0)))))), 1))) ^ 0), _GLF_IDENTITY(0, int(ivec3(0, (0 >> _GLF_IDENTITY(int(2), int(2))), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), clamp(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1), _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), int(_GLF_IDENTITY(ivec3(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), 1, 0), ivec3(ivec4(ivec3(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), 1, 0), 1))))))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), 0 | (~ (~ (1))))), 1))) >> (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))) ^ 0), _GLF_IDENTITY(0, int(ivec3(0, 1, 1))) ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))) : _GLF_FUZZED(87011)))))), 1))) ^ 0))), (false ? _GLF_FUZZED(43143) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 1))))), 1))) ^ 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 1))))), 1))) ^ 0), 1), min(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 1))))), 1))) ^ 0), 1), ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 1))))), 1))) ^ 0), 1))))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), max((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0))) / 1)))) * 1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ ((1)))))), 1))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ ((1)))))), 1))), ((_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ~ (~ ((1)))))), 1)))) / 1) : _GLF_FUZZED(71847))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0)), 0 ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0)), (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0))) | (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0)))))))), ~ (~ (1))), 1))) ^ 0)))))), ivec3(1, 0, 1)))), 1 * (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), _GLF_IDENTITY(ivec3(0, 0, 0), (ivec3(0, 0, 0)) << ivec3(0, 0, 0)) ^ (_GLF_IDENTITY(ivec3(1, 0, 1), ivec3(0, 0, 0) ^ (ivec3(1, 0, 1))))), clamp(ivec3(1, 0, 1), ivec3(1, 0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), clamp(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1), _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), clamp(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1), _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))))), (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), clamp(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1), _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(max(_GLF_IDENTITY(1, ~ (~ (1))), 1), max(_GLF_IDENTITY(1, ~ (~ (1))), 1)))))))) << 0)))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) >> (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))) : _GLF_FUZZED(87011)))))), 1))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) >> (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))) : _GLF_FUZZED(87011)))))), 1))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) >> (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))) : _GLF_FUZZED(87011)))))), 1))) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), max(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1)), (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) >> (0 << _GLF_IDENTITY(int(1), int(1)))), _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) >> 0)) | 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) | (~ (~ (1))))) : _GLF_FUZZED(87011)))))), 1))) ^ 0)))))) - 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(43143) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 1))))), 1))) ^ 0), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), (_GLF_IDENTITY(0, (0) << 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), 0 + ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0))))) * 1)), (false ? _GLF_FUZZED(43143) : _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 1))))), 1))) ^ 0), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), (_GLF_IDENTITY(0, (0) << 0) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0)), 0 + ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0))))) * 1))) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (~ (1))), 1))) ^ 0), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) << 0), ~ (~ (1))), 1))) ^ 0)))))), ivec3(1, 0, 1)))))))), min(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, _GLF_IDENTITY(1, (1) | (1)))) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))), (_GLF_IDENTITY(ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))), min(ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))), ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1)))))) | (ivec3(1, 0, _GLF_IDENTITY(1, max(1, 1))))), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))), 0 | ((_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), (0 | 0) | (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, clamp(1, 1, 1)), 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))))))) - 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1))))))) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), _GLF_IDENTITY((ivec3(1, 0, 1)), max(_GLF_IDENTITY((ivec3(1, 0, 1)), ivec3(_GLF_IDENTITY(ivec4((ivec3(1, 0, 1)), 1), max(ivec4((ivec3(1, 0, 1)), 1), ivec4((ivec3(1, 0, 1)), 1))))), (ivec3(1, 0, 1)))) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))), 0 | ((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))))) - 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(_GLF_IDENTITY(1, (1) * 1), 0, _GLF_IDENTITY(1, (1) | (1)))) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))), 0 | ((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))))) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, _GLF_IDENTITY(1, (1) | (1)))) | _GLF_IDENTITY(ivec3(0, 0, 0), ivec3(0, 0, 0) ^ (ivec3(0, 0, 0)))), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) / ivec3(1, 1, 1)), ivec3(1, 0, 1), ivec3(1, 0, 1))))), 0 | ((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), _GLF_IDENTITY((ivec3(1, 0, 1)) | ivec3(0, 0, 0), min((ivec3(1, 0, 1)) | ivec3(0, 0, 0), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)))), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))))) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), _GLF_IDENTITY(ivec3(1, 0, 1), ivec3(ivec4(ivec3(1, 0, 1), 1))))), (ivec3(1, 0, _GLF_IDENTITY(1, (1) | (1)))) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))), _GLF_IDENTITY((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) / 1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) / 1)), (int(_GLF_IDENTITY(int(1), (int(1)) / 1))) >> 0)) / 1)), 0, 1))))), 0 | ((int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(1, 0, 1), (ivec3(1, 0, 1)) | ivec3(0, 0, 0)), clamp(ivec3(1, 0, _GLF_IDENTITY(1, min(1, 1))), ivec3(1, 0, 1), ivec3(1, 0, 1))))))) - 0))), 0))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), _GLF_IDENTITY(clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)), (clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))) | (clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)))))))), uint(uint(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 0, 1), _GLF_IDENTITY(clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1)), (clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))) | (clamp(ivec3(1, 0, 1), ivec3(1, 0, 1), ivec3(1, 0, 1))))))))))))))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), min(_GLF_IDENTITY((4), 0 | ((4))), (4))) | _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | 0)) | 0))))), min(4, _GLF_IDENTITY(4, ~ (~ (4))))));
 if(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) | (_GLF_IDENTITY(0, ~ (~ (0))))))) | (1), min(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, 0, 1, 0))))) | (1), 0 ^ ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))) - 0, 0, 1, 0))))) | (1))), (_GLF_IDENTITY(1, (1) - 0)) | _GLF_IDENTITY((1), max((1), (1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, min(1, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (1) | (1))) >> 0), (1) - 0)) | (1), min((_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, int(ivec4((1) - 0, 0, 1, 0))))) | (1), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, (_GLF_IDENTITY((1) - 0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + ((1) - 0))) ^ 0))) | _GLF_IDENTITY(_GLF_IDENTITY((1), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY((1), max((1), (1))), 1, 0, (0 << _GLF_IDENTITY(int(1), int(1)))), (ivec4(_GLF_IDENTITY((1), max((1), (1))), 1, 0, (0 << _GLF_IDENTITY(int(1), int(1))))) << ivec4(0, 0, 0, 0)))), max((1), (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (1) << 0)))))))))) ^ 0) < subgroup_size)
  {
   int i = 0;
   atomicStore(checker[virtual_gid], GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 else
  {
   atomicStore(checker[virtual_gid], GLF_merged3_0_1_16_1_1_13_2_1_4next_virtual_gidnum_workgroupread.z, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0), int(ivec3(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0), 0, 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 | (4))), (int(_GLF_IDENTITY(4, 0 | (4)))) >> 0)) >> 0)))))) / (1 | 0)), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
