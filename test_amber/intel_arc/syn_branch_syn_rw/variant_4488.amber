#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09)), _GLF_IDENTITY((vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09))) * mat2(1.0), vec2(vec2(_GLF_IDENTITY((vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09))) * mat2(1.0), min((vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09))) * mat2(1.0), (vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09))) * mat2(1.0))))))), bvec2(false, _GLF_IDENTITY(false, (false) && true)))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], sin(0.0), 0.0)))), vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09)), bvec2(false, false))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09)), bvec2(false, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0]) - 0.0)), float(_GLF_FUZZED(-295.339)), bool(false))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09)), bvec2(false, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09)), bvec2(false, false))).x)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-88.94), _GLF_FUZZED(-20.09)), bvec2(false, false))).x))), float(_GLF_FUZZED(5.6)), bool(false))) > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true && _GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))) && true) || ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), true && (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(82.50, 4.8, 6.6).x), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(33.68)), bvec2(true, false))).x, (false ? _GLF_FUZZED(9556.5132) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(82.50, 4.8, 6.6).x), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(33.68)), bvec2(true, false))).x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) && true)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0))), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, length(0.0), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(fma(vec4(8437.1211, 49.79, -48.68, -53.64), vec4(3.3, -9.4, -3090.6450, 2.7), vec4(5.9, 7.9, -7.6, -7.6)))))), dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, length(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 0.0, 1.0)))), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(3.8, 504.701, -1.7, -7.0).s)), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), (dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) - 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0))).y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))))), true && _GLF_IDENTITY((bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))), (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) && true)))) && true) || ((_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))), true && (bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(82.50, 4.8, 6.6).x), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(33.68)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(82.50, 4.8, 6.6).x), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(33.68)), bvec2(true, false))).x) - determinant(mat3(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(9556.5132) : _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(82.50, 4.8, 6.6).x), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(33.68)), bvec2(true, false))).x)))) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))))) && true)))))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))), vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), _GLF_IDENTITY(vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0), (vec3(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 1.0)) - vec3(0.0, 0.0, 0.0)))), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))), 0.0), _GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (true ? vec4(0.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(fma(vec4(8437.1211, 49.79, -48.68, -53.64), vec4(3.3, -9.4, -3090.6450, 2.7), vec4(5.9, 7.9, -7.6, -7.6)))))), dot(vec4(determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, length(0.0), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), min(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 0.0, 1.0)))), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(3.8, 504.701, -1.7, -7.0).s)), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), min(dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 0.0, 1.0)))), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(3.8, 504.701, -1.7, -7.0).s)), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))), dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(0.0, 0.0, 1.0)))), vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec4(3.8, 504.701, -1.7, -7.0).s)), bool(false))), determinant(mat2(1.0, 0.0, 0.0, 1.0)))))), (dot(vec2(0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), max(_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(mat4(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), vec3(0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), vec2(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))) - 0.0)), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0))).y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))), _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), sin(0.0))), mix(vec2(_GLF_FUZZED(float(-55471)), _GLF_FUZZED(-5473.5864)), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))), sqrt(1.0), 1.0, 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), sin(0.0))))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_ZERO(0.0, injectionSwitch.x), 0.0), vec2(1.0, 1.0))), sqrt(1.0), 1.0, 1.0, 1.0, length(sqrt(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), float(_GLF_FUZZED(6.2)), bool(false))))))[1]), bvec2(true, true)))).y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) >> _GLF_IDENTITY(0u, (0u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, 0u + (0u)))))) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uint(workgroup_base), (uint(workgroup_base)) >> 0u))) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-2114.7674)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))), true, false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_IDENTITY(true, false || (true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) + 0u), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, clamp(_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, 0 ^ (_GLF_IDENTITY((64) + 0, (_GLF_IDENTITY((64) + 0, ((64) + 0) >> 0)) ^ 0)))) ^ 0), (64) + 0, (64) + 0))) | ((_GLF_IDENTITY(64, int(int(64)))) + 0))), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 0 | (64))) + 0)) ^ 0), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, false))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), max(_GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(_GLF_IDENTITY(uint(subgroup_local_id + 1), (_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1)))) | (_GLF_IDENTITY(uint(subgroup_local_id + 1), (_GLF_IDENTITY(uint(subgroup_local_id + 1), 0u | (uint(subgroup_local_id + 1)))) << 0u))))) >> 0u), uint(uint(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(-79965)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u)) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u), _GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), 1u * (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, subgroup_local_id + _GLF_IDENTITY(1, (false ? _GLF_FUZZED(-54513) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(1, 0, 1, 0)), 0 | (int(ivec4(1, _GLF_IDENTITY(0, (0) - 0), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (1)), 1)), 0)))))))))))), max(~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1))), ~ (_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)))))) / 1u))))))) ^ 0u)) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), max(_GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))), (true ? min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) : _GLF_FUZZED(vec2(6.9, -7.3)))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))) && true)))
      return;
     barrier();
    }
   int i = 0;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) >> 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), max((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u), (uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u)) | (uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u)))) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u), (uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u)) | (uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u)))) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u))), ((false ? _GLF_FUZZED(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u), (uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u)) | (uvec4(_GLF_IDENTITY(58826u, min(58826u, 58826u)), 107281u, 139332u, 77277u)))) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)))) | uvec4(0u, 0u, 0u, 0u))) / uvec4(1u, 1u, 1u, 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(7u))), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(uvec4(58826u, 107281u, 139332u, 77277u)) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u))))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(7u))), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(uvec4(58826u, 107281u, 139332u, 77277u)) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u))))), (uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(7u))), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(uvec4(58826u, 107281u, 139332u, 77277u)) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)))))) * 1u)))), _GLF_IDENTITY((true ? uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(uvec4(58826u, 107281u, 139332u, 77277u)) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u))))) : _GLF_FUZZED(subgroup_id)), (false ? _GLF_FUZZED(154788u) : (true ? uint(_GLF_IDENTITY(uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u)), (false ? _GLF_FUZZED(uvec4(58826u, 107281u, 139332u, 77277u)) : uvec4(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u, _GLF_IDENTITY(0u, (0u) - 0u))))) : _GLF_FUZZED(subgroup_id)))))) ^ 0u))), uint(uvec4(uint(0u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u << _GLF_IDENTITY(uint(6u), uint(6u)))))))) >> _GLF_IDENTITY(uint(0u), uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (0u) - 0u)))))], read, 4, _GLF_IDENTITY(64, 0 ^ (64)), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(0.0, -246.468), vec2(_GLF_IDENTITY(mat3x4(vec2(0.0, -246.468), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(vec2(0.0, -246.468), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))) : injectionSwitch)).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(1u, 0u | (1u)) * (virtual_gid)), (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))) | (_GLF_IDENTITY(virtual_gid, 1u * (virtual_gid))))], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
