#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_17 {
 uvec2 _f0;
 ivec2 _f1;
 bvec2 _f2;
 bvec2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_16 {
 bvec4 _f0;
 uvec4 _f1;
 bvec2 _f2;
 int _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_18 {
 bvec2 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
} ;

struct _GLF_struct_19 {
 mat3x2 _f0;
 ivec4 _f1;
 bool _f2;
 uint workgroup_base;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_13 {
 int _f0;
 mat2 _f1;
 mat3x4 _f2;
 mat4 _f3;
 bool _f4;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 mat3 _f1;
 _GLF_struct_13 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
 int _f1;
 uint read;
} ;

struct _GLF_struct_11 {
 mat4x3 _f0;
 vec4 _f1;
 uint subgroup_base;
} ;

struct _GLF_struct_12 {
 uvec4 _f0;
 _GLF_struct_11 _f1;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 uint workgroup_id;
} ;

struct _GLF_struct_8 {
 bool _f0;
 ivec2 _f1;
 vec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_5 _f0;
 vec4 _f1;
 bvec2 _f2;
 _GLF_struct_6 _f3;
 int _f4;
} ;

struct _GLF_struct_3 {
 mat2 _f0;
 uvec4 _f1;
 bvec3 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 ivec3 _f1;
 vec3 _f2;
 mat2x4 _f3;
 mat2 _f4;
 ivec4 _f5;
 float _f6;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 mat2x4 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 bool _f4;
 ivec2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 int _f1;
 uvec2 _f2;
 mat4x2 _f3;
 vec4 _f4;
 mat4x2 _f5;
 float _f6;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 uvec3 _f1;
 _GLF_struct_4 _f2;
 _GLF_struct_7 _f3;
 _GLF_struct_8 _f4;
 bool _f5;
 uint subgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), min(float(mat2(injectionSwitch.y, 1.0, 0.0, 0.0)), float(mat2(_GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, tan(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0)), (dot(vec4(0.0, log(1.0), determinant(mat2(1.0, 1.0, 0.0, 1.0)), 1.0), vec4(1.0, 1.0, 0.0, 0.0))) / 1.0)), 0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), 0.0))), 1.0, 0.0, 0.0)))))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) - vec2(0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0)))).x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), false, true))))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(2.9, -1261.9686)) : _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0), max((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))))) / vec2(1.0, 1.0)))))))).x > injectionSwitch.y))), false)))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, abs(vec2(0.0, 0.0)) + (injectionSwitch)))).y)))) || false))
    barrier();
   barrier();
  }
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(_GLF_struct_0(mat3x4(1.0), 1, uvec2(1u), mat4x2(1.0), vec4(1.0), mat4x2(1.0), 1.0)), uvec3(1u), _GLF_struct_4(ivec2(1), mat2x4(1.0), _GLF_struct_2(bvec3(true), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) / 1, max(_GLF_IDENTITY((1) / 1, min(_GLF_IDENTITY((1) / 1, max((1) / 1, (1) / 1)), _GLF_IDENTITY((1) / 1, ((1) / 1) ^ 0))), (1) / 1)))) << (0 << _GLF_IDENTITY(int(4), int(4))))), (ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) << (0 << _GLF_IDENTITY(int(4), int(4)))))) ^ ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(clamp(16763, (-47696 / -12218), -32112)) : 0)), 0, 0)), vec3(1.0), mat2x4(1.0), mat2(1.0), ivec4(1), 1.0), _GLF_struct_3(mat2(1.0), uvec4(1u), bvec3(true), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(true), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), true)))))))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(true), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec2(true), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec2(true), true)))))))))))), true))))))), true, _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(false, bool(bvec3(false, true, false))) ? _GLF_IDENTITY(_GLF_FUZZED(ivec2(-2677, 22207)), (_GLF_FUZZED(ivec2(-2677, 22207))) | ivec2(0, 0)) : _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(-25970)))), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(-25970))), clamp(_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(-25970))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(-25970))), _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 + (1)) : _GLF_FUZZED(-25970))))))) / ivec2(1, 1)))), ivec4(1)), _GLF_struct_7(_GLF_struct_5(mat4x2(1.0), _GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true)))))))), vec4(1.0), bvec2(true), _GLF_struct_6(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) >> 0u), (false ? _GLF_FUZZED(_GLF_IDENTITY(123401u, max(123401u, 123401u))) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ (subgroup_id))), 0u ^ (_GLF_FUZZED(subgroup_id))) : 1u))) >> 0u))) : _GLF_FUZZED(_GLF_IDENTITY(atomicXor(subgroup_id, 149409u), 0u | (atomicXor(subgroup_id, 149409u))))))), _GLF_IDENTITY((uvec3(1u)) / uvec3(1u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 0u, 0u), (uvec3(1u, 0u, 0u)) ^ uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | 0u, min((1u) | 0u, _GLF_IDENTITY((1u) | 0u, ((1u) | 0u) >> 0u))))), ((uvec3(1u)) / uvec3(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (true ? ~ (1u) : _GLF_FUZZED(141728u))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) ^ uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(uvec4(1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u), (uvec4(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (true ? ~ (1u) : _GLF_FUZZED(141728u))))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))))))) | 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u, 1u)), 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u))))), _GLF_IDENTITY((clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u))) : _GLF_FUZZED(64816u)))))), ((clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u))) : _GLF_FUZZED(64816u))))))) | ((clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, (1u) >> 0u), _GLF_IDENTITY(1u, (1u) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | 0u), 1u)), 1u))) : _GLF_FUZZED(64816u)))))))) | (clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, max(1u, 1u)))))))))) / uvec3(1u, _GLF_IDENTITY(1u, 0u | (1u)), 1u)))), 1), _GLF_struct_8(true, ivec2(1), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))))), _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bvec2((! (true)), false))))), true, gl_SubgroupSize);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)))), min(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(-86.56) : (injectionSwitch.y)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (false))))))) || false) || (false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))) || false) || (false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), true && (_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(false, true, true)), true, false)), bool(bool(bool(bvec3(bool(bvec3(false, true, true)), true, false)))))))))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), true && (bool(bvec3(false, true, true)))))) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))), bool(bool(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, false, true))))))))))), true && (bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, true)))))) && true)) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)) || (true))) && true) && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_IDENTITY(_GLF_FUZZED(2.6), (false ? _GLF_FUZZED(floor(-8.8)) : _GLF_FUZZED(2.6)))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-38.05, (-38.05) - 0.0)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)), (false ? _GLF_FUZZED(vec2(563.967, 5.3)) : mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(3.7), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))[1]), vec2((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))[0], _GLF_FUZZED((45.65 / -2.1))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y))))))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.4) : injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.5, -58.61)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9035.0011)), vec2(_GLF_FUZZED(-605.375), (injectionSwitch)[1]), bvec2(false, true))))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(775.996), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4.7)), bvec2(true, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))) && true), bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(_GLF_IDENTITY(bvec3(false || (true), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false || (true), true, true), bvec3(bvec4(bvec3(false || (true), true, true), true))), true))))))) && true) && ((injectionSwitch.x > injectionSwitch.y))))))) && true))))))))), false)))) && true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.4))))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (injectionSwitch)).y)))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, sqrt(1.0) * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)) || (true))) && true) && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(2.6), min(_GLF_FUZZED(2.6), _GLF_IDENTITY(_GLF_FUZZED(2.6), (false ? _GLF_FUZZED(floor(-8.8)) : _GLF_FUZZED(2.6)))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(-38.05, (-38.05) - 0.0)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)), (false ? _GLF_FUZZED(vec2(563.967, 5.3)) : mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(3.7), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))[1]), vec2((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(2.6)), vec2(_GLF_FUZZED(-38.05), ((injectionSwitch) * mat2(1.0))[1]), bvec2(false, true))))[0], _GLF_FUZZED((45.65 / -2.1))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))).y)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y))))))) && true), true && (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.4) : injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))), false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.5, -58.61)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(9035.0011)), vec2(_GLF_FUZZED(-605.375), (injectionSwitch)[1]), bvec2(false, true))))).x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y))))))) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + vec2(0.0, 0.0)).y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(775.996), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(4.7)), bvec2(true, false)))) / vec2(1.0, 1.0)).x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))) && true), bool(bool(! ((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) && ((injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), bool(_GLF_IDENTITY(bvec3(false || (true), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false || (true), true, true), bvec3(bvec4(bvec3(false || (true), true, true), true))), true))))))) && true) && ((injectionSwitch.x > injectionSwitch.y))))))) && true))))))))), false)))) && true), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.4))))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))) + (injectionSwitch)).y)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))) || ((_GLF_IDENTITY(false, (false) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || ((_GLF_IDENTITY(false, (false) || false))))))) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))) || ((_GLF_IDENTITY(false, (false) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || ((_GLF_IDENTITY(false, (false) || false))))))) || false)), bool(bvec2((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))) || ((_GLF_IDENTITY(false, (false) || false))), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) || ((_GLF_IDENTITY(false, (false) || false))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y)), injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(vec4(1.0), _GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u)))).x);
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, false)))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), false || (bool(bvec4(false, true, false, true)))))) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) - 0.0))) || (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY((bool(bool(_GLF_DEAD(false)))), ! (! ((bool(bool(_GLF_DEAD(false))))))) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bool(bvec3(bool(bool(_GLF_DEAD(false))), false, false))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(mat3x2(1.0), ivec4(1), true, _GLF_IDENTITY(workgroup_size, (0u | 0u) | (workgroup_size)) * _GLF_struct_replacement_10.workgroup_id, _GLF_struct_18(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))) && true)), _GLF_struct_16(bvec4(true), uvec4(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))) + (1u)), 1u))), bvec2(true), 1, bvec4(true)), _GLF_struct_17(_GLF_IDENTITY(uvec2(1u), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), max(_GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (clamp(uvec2(1u), uvec2(1u), uvec2(1u))) - uvec2(0u, 0u)), _GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (clamp(uvec2(1u), uvec2(1u), uvec2(1u))) >> (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u)))))), ~ (~ (clamp(uvec2(1u), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u)))), min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (false ? _GLF_FUZZED((workgroup_size << subgroup_id)) : _GLF_IDENTITY(1u, (1u) - 0u))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), max(_GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (clamp(uvec2(1u), uvec2(1u), uvec2(1u))) - uvec2(0u, 0u)), _GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (clamp(uvec2(1u), uvec2(1u), uvec2(1u))) >> (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(3u), uvec2(3u)))))), ~ (~ (clamp(uvec2(1u), uvec2(_GLF_IDENTITY(1u, max(1u, 1u))), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u)))), min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) - 0u), (false ? _GLF_FUZZED((workgroup_size << subgroup_id)) : _GLF_IDENTITY(1u, (1u) - 0u)))))))))))))) + uvec2(0u, 0u))))), ivec2(1), bvec2(true), bvec2(true), vec2(1.0))));
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ~ (~ ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(workgroup_size) : 7u)))))))))), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) + 0u))), uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((0u)))))) | 0u), 0u) ^ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(uint(uvec2((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), (uint(uvec2((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u))) - 0u)))))) : _GLF_FUZZED(max(uvec4(91825u, 40500u, 50612u, 13281u), uvec4(39656u, 167582u, 120447u, 175314u))))), uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(7u, 7u))) >> 0u)))))), uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(_GLF_IDENTITY(uint(7u), 0u | (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u))), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), _GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(subgroup_local_id))))))))))))))))), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ~ (~ ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(workgroup_size) : 7u)))))))))), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) + 0u))), uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((0u)))))) | 0u), 0u) ^ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(uint(uvec2((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), (uint(uvec2((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u))) - 0u)))))) : _GLF_FUZZED(max(uvec4(91825u, 40500u, 50612u, 13281u), uvec4(39656u, 167582u, 120447u, 175314u))))), uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(7u, 7u))) >> 0u)))))), uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(_GLF_IDENTITY(uint(7u), 0u | (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u))), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), _GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(subgroup_local_id))))))))))))))))), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(7u), uint(7u))), ~ (~ ((0u << _GLF_IDENTITY(uint(7u), uint(7u)))))))), clamp(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, ~ (~ (_GLF_IDENTITY(7u, (false ? _GLF_FUZZED(workgroup_size) : 7u)))))))))), (true ? _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), ((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u)))) + 0u))), uvec4(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u)), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (_GLF_IDENTITY(~ ((0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (~ ((0u)))))) | 0u), 0u) ^ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), _GLF_IDENTITY(uint(uvec2((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u)), (uint(uvec2((1u) << (0u << _GLF_IDENTITY(uint(7u), uint(7u))), 1u))) - 0u)))))) : _GLF_FUZZED(max(uvec4(91825u, 40500u, 50612u, 13281u), uvec4(39656u, 167582u, 120447u, 175314u))))), uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, max(7u, 7u))) >> 0u)))))), uvec4(_GLF_IDENTITY(1u, (1u) << (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(7u)), max(_GLF_IDENTITY(uint(7u), uint(7u)), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), max(_GLF_IDENTITY(uint(7u), 0u | (_GLF_IDENTITY(uint(7u), (uint(7u)) >> 0u))), _GLF_IDENTITY(uint(7u), clamp(uint(7u), uint(7u), _GLF_IDENTITY(uint(7u), (true ? uint(7u) : _GLF_FUZZED(subgroup_local_id))))))))))))))))))), _GLF_struct_11(mat4x3(1.0), vec4(1.0), subgroup_id * _GLF_struct_replacement_9.subgroup_size));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base + subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_19.workgroup_base, (_GLF_struct_replacement_19.workgroup_base) | (_GLF_struct_replacement_19.workgroup_base)) + _GLF_struct_replacement_12._f1.subgroup_base, (_GLF_IDENTITY(_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base, max(_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base, _GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base))) | (_GLF_IDENTITY(_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base, min(_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base, _GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base)))) + subgroup_local_id, uint(uvec4(_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base + subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, uint(uvec2(_GLF_IDENTITY((0u) << 0u, max((0u) << 0u, (0u) << 0u)), 0u)))), 1u, 1u))), _GLF_IDENTITY(_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base, (_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base) | (_GLF_struct_replacement_19.workgroup_base + _GLF_struct_replacement_12._f1.subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true)))))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true))))))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true)))))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true))))))) || false), false)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true)))))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true))))))) || false), false))) || false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), true))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), true))))) || false), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (false) || false), false, true), true))))) || false), true)))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_struct_replacement_19.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_12._f1.subgroup_base))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_12._f1.subgroup_base)))) + 0u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_12._f1.subgroup_base))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_12._f1.subgroup_base)))) + 0u)), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_12._f1.subgroup_base))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_12._f1.subgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_12._f1.subgroup_base)))) + 0u))))) + 0u)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_id)), ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) ^ 0u)) + 1) % _GLF_struct_replacement_9.subgroup_size), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))) ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) + 1) % _GLF_struct_replacement_9.subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (0u | 0u) + (_GLF_FUZZED(subgroup_id))))) + 1) % _GLF_struct_replacement_9.subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) + 1) % _GLF_struct_replacement_9.subgroup_size))))), ((~ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))) ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) + 1) % _GLF_struct_replacement_9.subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (0u | 0u) + (_GLF_FUZZED(subgroup_id))))) + 1) % _GLF_struct_replacement_9.subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(subgroup_id))) + 1) % _GLF_struct_replacement_9.subgroup_size)))))) | 0u));
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_14(mat2x3(1.0), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-84.73, 2.7, 397.635, -65.41, -1.1, 0.0, 3.6, 1.5, 5703.8153)))), _GLF_struct_13(_GLF_IDENTITY(1, int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1, 0 ^ (1)))), _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 1.0, 1.0, 1.0, log(1.0), 1.0), mat3x2(mat3x4(mat3x2(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(log(1.0), mix(float(_GLF_FUZZED(77.94)), float(log(1.0)), bool(true))), 1.0)))))))))), mat3x4(1.0), mat4(1.0), true), mat2x3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), max(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(4.1))), 1.0)), 1.0)))), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))))))), 1, atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (_GLF_IDENTITY((~ (4)), 0 ^ ((~ (4))))) << 0)), clamp(4, 4, 4)), 64, 2));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)) % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) / 1)) | (_GLF_IDENTITY(~ (1), 1 * (~ (1)))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (false ? _GLF_FUZZED(64546) : _GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), int(_GLF_IDENTITY(ivec3(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), 0, 0), max(ivec3(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), 0, 0), ivec3(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), 0, 0))))), int(ivec3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), int(_GLF_IDENTITY(ivec3(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), 0, 0), max(ivec3(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), 0, 0), ivec3(clamp(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1)))), 0, 0))))), 1, 1))), 0, (_GLF_IDENTITY(1, clamp(1, 1, 1)) ^ 1), 1)))))) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), 0u | (uint(_GLF_IDENTITY(1, ~ (~ (1)))))))), clamp(uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1, 0 ^ (1)))), ~ (~ ((~ (1))))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) | (1)))), ~ (~ (1)))), clamp(uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ~ (~ ((~ (1))))))))), 0u)), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (uint(_GLF_IDENTITY(1, ~ (~ (1))))) / 1u), clamp(uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ~ (~ ((~ (1))))))))), 0u))) - 0u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, max(1, 1)) : _GLF_FUZZED(findLSB(num_workgroup)))))), ~ (~ (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), max((~ (1)), (~ (1))))))))))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) - 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (injectionSwitch.x))))))) / 1.0), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 1.0, 0.0))), injectionSwitch)), mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((+ atan(injectionSwitch))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, 0.0, cos(0.0), exp(0.0), 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_struct_replacement_15.read, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_15.read, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_15.read, 0u), (uvec2(_GLF_struct_replacement_15.read, 0u)) | (uvec2(_GLF_struct_replacement_15.read, 0u)))))) >> 0u, ((_GLF_IDENTITY(_GLF_struct_replacement_15.read, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_15.read, 0u), (uvec2(_GLF_struct_replacement_15.read, 0u)) | (uvec2(_GLF_struct_replacement_15.read, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_15.read, 0u), (uvec2(_GLF_struct_replacement_15.read, 0u)) | (uvec2(_GLF_struct_replacement_15.read, 0u))), uvec2(0u, 0u) | (_GLF_IDENTITY(uvec2(_GLF_struct_replacement_15.read, 0u), (uvec2(_GLF_struct_replacement_15.read, 0u)) | (uvec2(_GLF_struct_replacement_15.read, 0u))))), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_15.read, 0u), (uvec2(_GLF_struct_replacement_15.read, 0u)) | (uvec2(_GLF_struct_replacement_15.read, 0u)))))))) >> 0u) | ((_GLF_IDENTITY(_GLF_struct_replacement_15.read, uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_15.read, _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) >> 0u)))), (uvec2(_GLF_struct_replacement_15.read, 0u)) | (uvec2(_GLF_struct_replacement_15.read, 0u)))))) >> 0u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
