#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uvec3 _f0;
 uvec3 _f1;
 float _f2;
 float _f3;
 mat3x4 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_1 {
 uint subgroup_size;
 mat4x3 _f0;
 mat3x4 _f1;
 ivec4 _f2;
 _GLF_struct_0 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat2 _f1;
 mat2x4 _f2;
 int _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(211.671) : injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))))))) && (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (true)), false)), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, false || (true)), false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (true))))), false || (true)), false)), true && (bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(false, ! (! (false))))))))), ! (! (bool(bvec4(_GLF_DEAD(false), true, true, false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(1.9)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y)), (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), (! _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-2621.4501)))))), ((_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-2621.4501))))))) || false)) || false))) ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-2.3, 9.2)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), false, false, true)))))) && true), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false)), bool(bvec4(bool(bvec3(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false)), true, false, false))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.7) : injectionSwitch.y))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, (false) && true)), false), bvec2(bvec4(bvec2(bool(_GLF_IDENTITY(false, (false) && true)), false), true, false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(278.572), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-5162.5299)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y))))) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(41.99)), float(injectionSwitch.y), bool(true)))))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(gl_SubgroupSize, mat4x3(1.0), mat3x4(1.0), ivec4(1), _GLF_struct_0(uvec3(_GLF_IDENTITY(1u, (1u) | 0u)), uvec3(1u), 1.0, 1.0, mat3x4(1.0), vec2(1.0))), _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), mat2x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1);
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), true, false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec2((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), false))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(68.67)), float(injectionSwitch.y), bool(true)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) && true))))) && true)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y) && true))), (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true))), ! (! ((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163))), (false ? _GLF_FUZZED(vec2(-1.6, 6997.2232)) : _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163))), max((true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))))))).x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), ! (! ((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))), ! (! ((! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-7.8, -851.163)))).x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))) && true)))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))))) && true))), true))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)), false || (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false)), false, true, false))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && true))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))), false, false), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y))))))) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && true))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))), false, false)), bvec3(bvec4(bvec3(bvec3(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7204.7229, 1931.9208)) : injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(7204.7229, 1931.9208)) : injectionSwitch)).y, (injectionSwitch.x > injectionSwitch.y) || false))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && true))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))), false, false)), true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && true))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))), false, false)), bvec3(bvec4(bvec3(bvec3(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false)))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), false, false)))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))) || false))), false, false)), true)))), false)))), bvec3(bvec4(bvec3(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y), true)), false, false), true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, ! (! (true))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) / 1u)) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) / 1u), 0u ^ (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), 1u), 1u), clamp(uvec3(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), 1u), 1u), uvec3(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), 1u), 1u), uvec3(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), 1u), 1u)))))), min(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) + 0u)))))), 1u)), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_local_id)), (_GLF_FUZZED((subgroup_local_id))) - 0u) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), clamp((_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED((subgroup_local_id)) : workgroup_size)) * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))))), 1u))))) + 0u)) / 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), min(workgroup_id, workgroup_id)), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (uint(0u)) | 0u))) & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))), (0u & (194726u / 85006u)) | (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u))))) / 1u)) << 0u), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)) >> 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))) - 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, (1u) | (1u))))))), 0u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED((subgroup_local_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))), min((_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED((subgroup_local_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))), (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) : _GLF_FUZZED((subgroup_local_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))) / 1u)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u))))) / 1u)) << 0u), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u))), 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED((subgroup_local_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)), ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))) | ((workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))) + 0u)))) / 1u)), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))), clamp((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))), (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id))), (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u))))) / 1u)) << 0u), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), min(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) ^ 0u)))) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)), uint(uint(_GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)), 0u ^ (clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED((subgroup_local_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, uint(uvec3(workgroup_id, (0u & 90640u), 0u))), workgroup_id))) + 0u), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, ~ (~ ((workgroup_id) + 0u)))))), ((~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, ~ (~ ((workgroup_id) + 0u))))))) | ((~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, ~ (~ ((workgroup_id) + 0u)))))))))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u))))) / 1u)) << 0u), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED((subgroup_local_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id))) + 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)))) || false))) ? _GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id : _GLF_FUZZED(20056u)))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(_GLF_IDENTITY(0.0, (0.0) / exp(0.0)))) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_IDENTITY(_GLF_FUZZED(20056u), 1u * (_GLF_FUZZED(20056u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / exp(0.0), (true ? _GLF_IDENTITY((injectionSwitch.x) / exp(0.0), mix(float(_GLF_FUZZED(2.4)), float((injectionSwitch.x) / exp(0.0)), bool(true))) : _GLF_FUZZED(-0.8)))) < injectionSwitch.y))) || false) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u))))) / 1u)) << 0u), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), workgroup_id))) + 0u)) + _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(subgroup_local_id) : uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) / 1u)))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec4(workgroup_id, 1u, 0u, 0u))), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED((subgroup_local_id)), 1u * (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED((subgroup_local_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED((subgroup_local_id))) << 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))) / 1u))) + 0u)))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), uint(uvec3(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)))), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y) || false))) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), ((_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u))))) / 1u)) << 0u), 1u, 0u))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u), uint(uvec4(workgroup_id, 1u, _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(0u, (0u) << 0u), 0u)), 0u))), (_GLF_IDENTITY(workgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? workgroup_size : _GLF_FUZZED(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id)))) * ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) + 0u, ((workgroup_id) + 0u) | 0u)), ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, 1u * (workgroup_id)), workgroup_id)), (workgroup_id) + 0u)) + 0u)))) / 1u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u))), workgroup_id)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_id)), workgroup_id)), workgroup_id)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_id))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_id)), workgroup_id)), workgroup_id)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_id))))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_id)), workgroup_id)), workgroup_id)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : workgroup_id)), workgroup_id)), workgroup_id)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(_GLF_IDENTITY(workgroup_id, 0u ^ (workgroup_id)), workgroup_id)))))))) - 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_size * workgroup_id, 0u + (workgroup_size * workgroup_id)) : _GLF_FUZZED(20056u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u), clamp(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u), min(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u), clamp(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, (workgroup_id) + (1u ^ 1u))))) + 0u)))))) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(uvec4(0u, 0u, 1u, 1u), uvec4(0u, 0u, 1u, 1u)))))), (false ? _GLF_FUZZED(workgroup_size) : uint(_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), max(uvec4(0u, 0u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 1u, 1u), (true ? uvec4(0u, 0u, 1u, 1u) : _GLF_FUZZED(uvec4(140738u, 83559u, 124345u, 2421u))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), max(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u))), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))) / 1u)))), 0u + ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), min(workgroup_id, workgroup_id)), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | 0u)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))), uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | 0u)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))), max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | 0u)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(min(workgroup_id, workgroup_id), (min(workgroup_id, workgroup_id)) | 0u)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), 0u))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), max(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), min(workgroup_id, workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u + (workgroup_id)), min(workgroup_id, workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))))))) + 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)), true, true, false))) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)), true, true, false))) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))) + 0u, ((_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id)))) + 0u) | 0u))) + _GLF_IDENTITY(0u, min(0u, 0u))), _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), max(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))), (uint(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), max(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) ^ 0u), max(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))), (uint(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), max(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u), workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u))))) | _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1u)) + 0u)))) / 1u))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, _GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)))), (0u & 30534u) ^ (_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | (workgroup_size * workgroup_id))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(vec3(-3955.8069, 4.6, -6.7)[2]))), (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), 1u * ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))))), (0u | 0u), 1u, 1u)), (uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) * 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))), 1u * ((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(workgroup_id))), (workgroup_id) * 1u), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / exp(0.0)) < injectionSwitch.y)) ? workgroup_size * workgroup_id : _GLF_FUZZED(20056u)))))), (0u | 0u), 1u, 1u))) << 0u)) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, determinant(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), 0.0, 1.0, 0.0, 0.0), mat3(mat4(_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), 0.0, 1.0, 0.0, 0.0), (mat3(0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(float(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), 0.0, 1.0, 0.0, 0.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u), _GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)) + 0u)))) / 1u)))))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(min(injectionSwitch, 412.323)) : injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((injectionSwitch - vec2(-0.6, 7223.2944))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))))) && true))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))), true && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(false, (false) || false), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0), mat3x2(mat4x3(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0), mat3x2(mat4x3(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0))))))))), max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), bool(bvec4(_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-579.233) : injectionSwitch.x)) > injectionSwitch.y)))), ! (! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), bool(bool(_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-988.196), _GLF_FUZZED(8.7)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).y))))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), bool(bvec3(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true, true))))) || false)))))))), bool(bvec2((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))))), true))))))), true && (_GLF_IDENTITY(! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.9)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) || false))))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), false, false, false))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 1u, 1u, 1u))), subgroup_id)) * _GLF_struct_replacement_2._f0.subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(419.845), _GLF_FUZZED(-4734.0311)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))), (injectionSwitch) - vec2(0.0, 0.0))) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(workgroup_base), 1u, 1u, 1u)), (true ? uint(uvec4(_GLF_FUZZED(workgroup_base), 1u, 1u, 1u)) : _GLF_FUZZED(virtual_gid))))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u & 64433u), (1u | 1u))))))) % _GLF_struct_replacement_2._f0.subgroup_size), ~ (~ ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(uint(uvec4(_GLF_FUZZED(workgroup_base), 1u, 1u, 1u)), (true ? uint(uvec4(_GLF_FUZZED(workgroup_base), 1u, 1u, 1u)) : _GLF_FUZZED(virtual_gid))))))), 0u ^ ((_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u & 64433u), (1u | 1u))))))) % _GLF_struct_replacement_2._f0.subgroup_size))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), bool(bool(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false)))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), (1 & 1)), ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 0) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(1 & _GLF_IDENTITY(1, min(1, 1)), 0 | (1 & 1)))), ~ (~ (ivec2(_GLF_IDENTITY(0, (0) / 1), (1 & _GLF_IDENTITY(1, min(1, 1)))))))))), (int(ivec2(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(1 & 1, _GLF_IDENTITY((false ? _GLF_FUZZED(73822) : _GLF_IDENTITY(1 & 1, max(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)), (1 & 1) / 1)))), ~ (~ ((false ? _GLF_FUZZED(73822) : _GLF_IDENTITY(1 & 1, max(1 & 1, _GLF_IDENTITY(_GLF_IDENTITY(1 & 1, min(1 & 1, 1 & 1)), (1 & 1) / 1)))))))))))) | 0)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), ! (! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(5579.8614, (5579.8614) / 1.0)) : injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, 0 | (1))), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) - ((true ? -40199 : 65438) & 0))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), ! (! (bool(false)))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false, true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), false, true)))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)))), true)))), false, true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y, 1.0 * (injectionSwitch.y)))) || (false)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), false, true))))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), true)), true, true, true)), (bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), true)), true, true, true))) || false))), false, true)))))), ! (! (bool(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), false, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), true)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), true)), true, true, true)), (bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))) || (false)), true)), true, true, true))) || false))), false, true))))))))))))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || (false))))), false, true))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-4.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(_GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false))))), (_GLF_IDENTITY((bool(bool(false))), true && ((bool(bool(false)))))) && true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(878.079)), float(injectionSwitch.x), bool(true)))) - 0.0) > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))) || false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-7.4 - 9202.8985)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-9.1)), bvec2(true, false))).y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
