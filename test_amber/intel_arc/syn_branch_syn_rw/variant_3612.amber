#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 & -69736); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true)), (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true))) && true))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.8))), injectionSwitch.y))))))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               continue;
              }
             return;
             if(_GLF_DEAD(false))
              continue;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true, true)))))
              return;
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(1, (1) * 1) & 1)); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), bool(_GLF_IDENTITY(bool((false) && _GLF_IDENTITY(true, (true) || false)), true && (bool((false) && _GLF_IDENTITY(true, (true) || false)))))))))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                return;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0)))), min(_GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), max(int(3), _GLF_IDENTITY(int(3), (int(3)) << 0)))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, max(3, _GLF_IDENTITY(3, (3) - 0)))), int(3))) | 0)), min((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0)), (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0)))), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0, _GLF_IDENTITY(int(int(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0, (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0, (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0) | 0)) | (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0)))), (int(int(_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0, (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0, (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0) | 0)) | (((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0))))) - 0)))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), int(3))) | 0))) >> 0))) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && ((false)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (false ? _GLF_FUZZED(66903) : 0))); _injected_loop_counter --)
              {
               return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               return;
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false || (false))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), bool(bvec4(bool(bvec2(! (_GLF_DEAD(false)), true)), true, false, false)))))))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      break;
     return;
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) | (1u ^ 1u)), max(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))) | (1u ^ 1u)), max(~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)), ~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))))) ^ 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(min(_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) >> 0u))), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1)))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), clamp(min(_GLF_IDENTITY((subgroup_local_id + 1), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) >> 0u))), (subgroup_local_id + _GLF_IDENTITY(1, 0 | (1)))), min((subgroup_local_id + 1), (subgroup_local_id + 1)), min((subgroup_local_id + 1), (subgroup_local_id + 1))))))) % subgroup_size) / 1u)) - 0u)), _GLF_IDENTITY((0u | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_base))) + 1), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1))) % subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), max(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), uint(uvec4(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), 0u, 1u, 1u)))))) << 0u) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)), (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)))) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size)) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size, max(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1)) : _GLF_FUZZED(bitfieldReverse(virtual_gid))))), (subgroup_local_id + 1))) % subgroup_size)))))))))), clamp(_GLF_IDENTITY((0u | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))), (subgroup_local_id + 1))) % subgroup_size), (false ? _GLF_FUZZED(_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(workgroup_base) : virtual_gid))) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size)))), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), _GLF_IDENTITY(0u, (0u) << 0u))) | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, uint(uvec4(subgroup_local_id + 1, 1u, 0u, 0u)))) | 0u), (subgroup_local_id + 1) | (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) | (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)))))) + 1))))), (subgroup_local_id + 1))) % subgroup_size)))))), (0u | 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u)))))) / 1u)) | 0u)) + 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u)))))) / 1u)) | 0u)) + 0u)), min((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u)))))) / 1u)) | 0u)) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u)))))) / 1u)) | 0u)) + 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u)))))) / 1u)) | 0u)) + 0u))) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u)))))) / 1u)) | 0u)) + 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((subgroup_local_id + 1))), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ (1))), _GLF_IDENTITY(1, ~ (~ (1))))), subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)))))) % subgroup_size), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((subgroup_local_id + 1) / 1u, 0u + ((subgroup_local_id + 1) / 1u)))))))) % subgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec2(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) - 0u), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))), (subgroup_local_id + 1))) % subgroup_size), 0u, 0u)))))) / 1u)) | 0u)) + 0u))))))), _GLF_IDENTITY((0u | 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), min((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1), (subgroup_local_id + 1))) % subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (true ? _GLF_FUZZED(virtual_gid) : _GLF_FUZZED(virtual_gid))) : (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), (subgroup_local_id + 1))))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size) - 0u))))))), uint(uint(_GLF_IDENTITY((0u | 0u), 0u + ((0u | 0u))) ^ (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(min((subgroup_local_id + 1), (subgroup_local_id + 1)), uint(uvec4(min((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))), 1u, 0u, ((_GLF_IDENTITY(0u, 0u + (0u)) | 0u) >> _GLF_IDENTITY(uint(8u), uint(8u))))))) % subgroup_size), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(virtual_gid) : (_GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size))))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(sin(vec2(0.0, 0.0))) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), bvec2(true, false))), injectionSwitch)).y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(803.792)), bool(false))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(sin(vec2(0.0, 0.0))) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(mat2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), bvec2(true, false))), injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(sin(vec2(0.0, 0.0))) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(mat2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), bvec2(true, false))), injectionSwitch)).y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(sin(vec2(0.0, 0.0))) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), vec2(mat2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))), 0.0, 0.0)))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2.6)), bvec2(true, false))), injectionSwitch)).y, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sin(sin(vec2(0.0, 0.0))) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(48.56), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[0], _GLF_FUZZED(102.104)), bvec2(true, false))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), (_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), vec4(mat3(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_FUZZED(2.6)), bvec2(true, false)), max(_GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), (_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), vec4(mat3(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_FUZZED(2.6)), bvec2(true, false)), (mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), (_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), vec4(mat3(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_FUZZED(2.6)), bvec2(true, false))) * vec2(1.0, 1.0)), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), (_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), vec4(mat3(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_FUZZED(2.6)), bvec2(true, false)), vec2(vec4(mix(vec2(_GLF_FUZZED(-4.9), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), (_GLF_IDENTITY(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), vec4(mat3(vec4((injectionSwitch)[0], exp(0.0), 0.0, 1.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)))), _GLF_FUZZED(2.6)), bvec2(true, false)), 1.0, 1.0)))))), injectionSwitch)).y) || false)))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((4.1 - _GLF_IDENTITY(129.382, clamp(129.382, 129.382, 129.382))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0))); _injected_loop_counter --)
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), (bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))) || false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) - 0.0)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
            return;
           for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 << _GLF_IDENTITY(int(0), int(0))) & 2683)); _injected_loop_counter --)
            {
             return;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))))))
        return;
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY(1, (1) ^ ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), int(5)), (true ? _GLF_IDENTITY(int(5), int(5)) : _GLF_FUZZED(80723)))) ^ 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true)))) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        break;
       break;
      }
     break;
    }
   if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))))) == 0, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) << 0u), (subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(2)), (int(int(2))) - 0))) | (_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, subgroup_local_id % 2))))) == 0))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))))), false, true, false))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false), (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))
            continue;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        continue;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (next_virtual_gid))) + 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), min(uint(1), uint(1))), 4, 64, 4);
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
      break;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) << 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - int(_GLF_ZERO(0.0, injectionSwitch.x))) != _GLF_IDENTITY(1, (1) | 0)); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
            break;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | 0u), 4, 64, 4);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        continue;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(bvec3(false, true, true), false))))))));
     if(_GLF_DEAD(false))
      break;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(9.9, 403.590, -1.3, 26.95, -917.057, 0.2, 4.7, -6.1, -4.0, -309.524, -9.4, 9454.9518)))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, (false) || false))), false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), (! (false)) || false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), bool(bool(_GLF_IDENTITY(! (false), (! (false)) || false)))))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, true, true))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8020.7141)), float(injectionSwitch.y), bool(true)))))), true, false)))))), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) << 0)])))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))), vec2(0.0, 1.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 0.0, sin(0.0)))))), 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y), false)))) || false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       do
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
      return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) && true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), mix(vec2((vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[0], (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))[1]), vec2(_GLF_FUZZED(-1.6), _GLF_FUZZED(51.67)), bvec2(false, false))))) - vec2(0.0, 0.0)).x), max(_GLF_IDENTITY(float(injectionSwitch.x), (false ? _GLF_FUZZED(42.85) : float(injectionSwitch.x))), float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), mix(float(_GLF_FUZZED(2.9)), float(max(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true)))), (_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), mix(float(_GLF_FUZZED(2.9)), float(max(float(injectionSwitch.x), float(injectionSwitch.x))), bool(true))))) / _GLF_ONE(1.0, injectionSwitch.y))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x), max(float(injectionSwitch.x), float(injectionSwitch.x))))))) : _GLF_FUZZED(3719.6514)), max((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), float(injectionSwitch.x)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(mat3x4(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), clamp(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))))), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), (false ? _GLF_FUZZED(-760.180) : float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))))))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), (float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))) * 1.0), float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(_GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), (false ? _GLF_FUZZED(-5.4) : max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), (_GLF_IDENTITY(max(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(265.315)), float(float(injectionSwitch.x)), bool(true))), float(injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), _GLF_IDENTITY(max(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x))), (max(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x)))) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-9.4) : (_GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), _GLF_IDENTITY(max(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x))), (max(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(injectionSwitch.x)))) - 0.0))))) - 0.0)) - 0.0)))))) : _GLF_FUZZED(3719.6514)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) * mat2(1.0), min((mat2(1.0) * (injectionSwitch)) * mat2(1.0), (mat2(1.0) * (injectionSwitch)) * mat2(1.0))))).y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x)), _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, exp(0.0), 1.0, 1.0, 1.0, 1.0, abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))).x)), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(0.0, 1.0, 0.0, 0.0))), abs(0.0), 0.0, 0.0, 1.0, 0.0)))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sin(vec2(0.0, 0.0))).x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(injectionSwitch.x)))), mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true))), 1.0, 1.0, length(vec2(0.0, 0.0))), vec4(mat3x2(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), (_GLF_IDENTITY(vec3(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), max(vec3(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0), vec3(injectionSwitch.x, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)))) * vec3(1.0, 1.0, 1.0))))), float(injectionSwitch.x)))), mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true))), 1.0, 1.0, length(vec2(0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0)))), max(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), max(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0)))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), max(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0)))), max(float(_GLF_IDENTITY(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), max(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0)))), float(_GLF_IDENTITY(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), max(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0)))))), float(_GLF_IDENTITY(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), max(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0), vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x)))) - 0.0)), mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(257.846) : 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-4436.5820), _GLF_FUZZED(917.394)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true))), 1.0, 1.0, length(vec2(0.0, 0.0))), vec4(mat3x2(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0)) * mat2(1.0), transpose(transpose((mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0)) * mat2(1.0)))))), min(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0)) * mat2(1.0), transpose(transpose((mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0)) * mat2(1.0)))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0)) * mat2(1.0), transpose(transpose((mat2x3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, sqrt(1.0), 1.0, 1.0, 0.0)) * mat2(1.0))))))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-9.0))))))), mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(injectionSwitch.x))))), bool(true))), 1.0, 1.0, length(vec2(0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0)))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), clamp(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), (true ? float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)) : _GLF_FUZZED(66.47))))), float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), _GLF_IDENTITY(float(mat2x4(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), max(float(mat2x4(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0)), float(mat2x4(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))))))), float(vec2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).y), 1.0)), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).y), 1.0)), (float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).y), 1.0))) / 1.0), 1.0, 1.0, 0.0, sin(0.0), 0.0), (mat3x2(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).y), 1.0)), (float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x3(injectionSwitch[0], 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).y), 1.0))) / 1.0), 1.0, 1.0, 0.0, sin(0.0), 0.0)) * mat3(1.0)))), 0.0))))), float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.2)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(_GLF_IDENTITY(vec3(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), 0.0, 0.0), mix(vec3(_GLF_FUZZED(-70.16), (vec3(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), 0.0, 0.0))[1], (vec3(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), 0.0, 0.0))[2]), vec3((vec3(float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), 0.0, 0.0))[0], _GLF_FUZZED((false ? -894.029 : 876.371)), _GLF_FUZZED(347.915)), bvec3(true, false, false))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((6.7)), _GLF_FUZZED(3018.1449)), bvec2(false, false))).x))))), bool(true))), 1.0, 1.0, length(vec2(0.0, 0.0))), vec4(mat3x2(vec4(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-649.268)), bool(false))), injectionSwitch.x)), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true)), mix(float(_GLF_FUZZED(-1522.1520)), float(mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true))), bool(true))), mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true)), mix(float(_GLF_FUZZED(-782.745)), float(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), float(vec2(float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0)), 0.0))))), float(injectionSwitch.x))), max(float(injectionSwitch.x), float(injectionSwitch.x))))), bool(true))))), 1.0, 1.0, length(vec2(0.0, 0.0))), length(vec2(0.0, 0.0)), 1.0))))))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))))) : _GLF_FUZZED(3719.6514)), min((_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), max(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) - 0.0), injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))))))), min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(max(float(injectionSwitch.x), float(injectionSwitch.x)), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), (max(float(injectionSwitch.x), float(injectionSwitch.x))) - 0.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)))))))))) / 1.0))))) : _GLF_FUZZED(3719.6514)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))))) : _GLF_FUZZED(3719.6514))))))), float(mat4(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / 1.0), float(_GLF_IDENTITY(vec4(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), mix(vec4(_GLF_FUZZED(2550.1289), _GLF_FUZZED(-4737.7294), (vec4(float(injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - tan(0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0)))))[2], _GLF_IDENTITY((vec4(float(injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))[3], mix(float(_GLF_FUZZED(8.1)), float((vec4(float(injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), min(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))))))[3]), bool(true)))), vec4((vec4(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).x), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0), (_GLF_IDENTITY((0.0), mix(float(_GLF_FUZZED(36.19)), float((0.0)), bool(true)))) * round(length(normalize(vec3(1.0, 1.0, 1.0))))) - 0.0))))))[0], (_GLF_IDENTITY(vec4(float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0)))), 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), (vec4(float(injectionSwitch.x), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(_GLF_IDENTITY(0.0, float(mat3x2(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, exp(0.0)))), 1.0, 0.0), vec3(0.0, 1.0, 0.0))))) + vec4(0.0, 0.0, 0.0, 0.0)))[1], _GLF_FUZZED(1.4), _GLF_FUZZED(-6.9)), bvec4(true, true, false, false)))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(-8683.0268)), float(float(injectionSwitch.x)), bool(true))), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(6.3))))))))) : _GLF_FUZZED(3719.6514)), max((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-118.715)), float(injectionSwitch.y), bool(true))))) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), max(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))))), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), clamp(max(float(injectionSwitch.x), float(injectionSwitch.x)), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)), max(float(injectionSwitch.x), float(injectionSwitch.x))))))))) : _GLF_FUZZED(3719.6514)), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))), max(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), 0.0 + (max(float(injectionSwitch.x), float(injectionSwitch.x))))))))), mix(float(_GLF_FUZZED(4.9)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)))), max(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(max(float(injectionSwitch.x), float(injectionSwitch.x)), 0.0 + (max(float(injectionSwitch.x), float(injectionSwitch.x)))))))))), bool(true))) : _GLF_FUZZED(3719.6514)), min((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0), mat4x2(mat4x2(mat4x2(injectionSwitch, tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0)))))).x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))), false, true)))) ? _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).x))) : _GLF_FUZZED(-48.31)))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))))) : _GLF_FUZZED(3719.6514)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7.0), _GLF_FUZZED(2.8)), bvec2(false, false))), injectionSwitch, injectionSwitch)).x), max(float(injectionSwitch.x), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), max(float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x)))), float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))))) : _GLF_IDENTITY(_GLF_FUZZED(3719.6514), float(mat3(_GLF_FUZZED(3719.6514), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y), _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.4)), float(1.0), bool(true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4.9) : 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-9.2) : 1.0)), 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED((mat3x2(-5796.5352, 72.36, -7.5, -8795.2300, -6.8, 0.2) * vec3(-103.902, -7.0, 7764.7713)).s)), float(dot(vec3(1.0, 1.0, abs(1.0)), vec3(0.0, 0.0, 0.0))), bool(true))), dot(_GLF_IDENTITY(vec3(1.0, 1.0, abs(1.0)), max(vec3(1.0, 1.0, abs(1.0)), vec3(1.0, 1.0, abs(1.0)))), vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), determinant(mat3(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-13.86)), bool(false))), 0.0, 1.0, 0.0, sqrt(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(5424.8248) : 0.0)), 0.0)), 1.0))))))))))), 1.0, 1.0, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, log(1.0), 0.0, 1.0, 1.0, 0.0, 1.0, cos(0.0), 1.0))) > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
