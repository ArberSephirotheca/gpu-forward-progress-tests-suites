#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 bvec4 _f0;
 uint next_virtual_gid;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 int _f1;
 uvec2 _f2;
 uint subgroup_local_id;
} ;

struct _GLF_struct_1 {
 bvec4 _f0;
 vec4 _f1;
 uvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_0 {
 vec4 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
 mat3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 mat3 _f2;
 _GLF_struct_2 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_4 {
 mat2x4 _f0;
 bool _f1;
 _GLF_struct_3 _f2;
 vec4 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.2, -1.2)))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, true, true))))))), (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(1.6, -7382.0445)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (! ((_GLF_DEAD(false))))))) || false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(bvec2(bvec2(injectionSwitch.x > injectionSwitch.y, true))), bvec2(bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7)))) / 1.0))) > injectionSwitch.y, true)))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) / 1.0), (injectionSwitch.x) / 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), 0.0)), min(_GLF_IDENTITY(float(vec2(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), 0.0)), min(float(vec2(_GLF_IDENTITY((injectionSwitch.x) / 1.0, _GLF_IDENTITY(min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0), (true ? min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(-58.00)))), 0.0)), float(vec2(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), 0.0)))), float(vec2(_GLF_IDENTITY((injectionSwitch.x) / 1.0, min((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0)), 0.0)))))) > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat2x4(1.0), true, _GLF_struct_3(_GLF_struct_0(vec4(1.0), uvec2(1u), mat3x2(1.0), mat2x4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0, clamp(_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))), (_GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))), (false ? _GLF_FUZZED(334.269) : (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002))))))) * cos(0.0)) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0, 1.0 * ((_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-7851.6002)), mix(float((true ? 1.0 : _GLF_FUZZED(-7851.6002))), float(_GLF_FUZZED(-89.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) / 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0, ((_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0) - 0.0)))), 0.0, 0.0, tan(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(6.9, -1822.9570, _GLF_IDENTITY(97.95, mix(float(_GLF_FUZZED(2.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(97.95, (false ? _GLF_FUZZED(461.752) : 97.95)), (true ? _GLF_IDENTITY(97.95, (false ? _GLF_IDENTITY(_GLF_FUZZED(461.752), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(461.752), (_GLF_FUZZED(461.752)) - 0.0))) : 97.95)) : _GLF_FUZZED(-157.329)))), bool(true))), -7.1, 100.490, -9924.1143, -989.278, _GLF_IDENTITY(9788.7821, (9788.7821) / 1.0))) : mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-7851.6002)), float(vec4(_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-7851.6002)), mix(float(_GLF_FUZZED(-4.9)), float((true ? 1.0 : _GLF_FUZZED(-7851.6002))), bool(true))), 1.0, abs(0.0), 1.0))))) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0)))), clamp(float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x < injectionSwitch.y)))), true))) ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0), 0.0, 0.0, tan(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-10.88) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(6.9, -1822.9570, 97.95, -7.1, 100.490, -9924.1143, -989.278, 9788.7821)) : mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002))), mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))), _GLF_IDENTITY(bool(true), (bool(true)) || false)))) / 1.0, mix(float(_GLF_FUZZED(591.337)), float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002))), mix(float(_GLF_FUZZED(-1.1)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))), _GLF_IDENTITY(bool(true), (bool(true)) || false)))) / 1.0), bool(true)))), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-65.86)), bool(false)))), (false ? _GLF_FUZZED(mat4x2(_GLF_IDENTITY(6.9, (false ? _GLF_FUZZED(-579.232) : 6.9)), _GLF_IDENTITY(-1822.9570, clamp(-1822.9570, _GLF_IDENTITY(-1822.9570, 0.0 + (-1822.9570)), _GLF_IDENTITY(-1822.9570, (false ? _GLF_FUZZED(4.0) : -1822.9570)))), 97.95, -7.1, 100.490, -9924.1143, -989.278, 9788.7821)) : mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0), 0.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, (0.0) / cos(_GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, 0.0)))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-7851.6002)))) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(6.9, -1822.9570, 97.95, -7.1, _GLF_IDENTITY(100.490, clamp(_GLF_IDENTITY(100.490, min(100.490, 100.490)), _GLF_IDENTITY(100.490, (true ? 100.490 : _GLF_FUZZED(3.0))), _GLF_IDENTITY(100.490, mix(float(100.490), float(_GLF_FUZZED(5.2)), bool(false))))), -9924.1143, _GLF_IDENTITY(-989.278, float(mat3x4(_GLF_IDENTITY(-989.278, min(-989.278, -989.278)), 0.0, cos(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sqrt(0.0), 1.0))), 9788.7821)) : mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(-7851.6002, max(-7851.6002, -7851.6002)))))) / 1.0), 0.0, 0.0, tan(0.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))))), mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), mix(float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), float(_GLF_FUZZED(_GLF_IDENTITY(-2.6, (-2.6) / 1.0))), bool(false)))), mat3(1.0), mat4x3(1.0)), _GLF_struct_1(bvec4(true), vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec3(1u), vec2(1.0)), mat3(1.0), _GLF_struct_2(bvec3(true), 1, _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u))), (_GLF_IDENTITY(max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u))), min(max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u))), max(uvec2(1u), _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) >> uvec2(0u, 0u)))))) | uvec2(0u, 0u))), gl_SubgroupInvocationID), bvec4(true)), vec4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-99.97)), bool(false)), (mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-99.97)), bool(false))) * 1.0)), injectionSwitch[1])).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)) - 0.0)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))))))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), max((subgroup_id), (subgroup_id))) / 1u) * subgroup_size + _GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, (_GLF_struct_replacement_4._f2._f3.subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(bvec4(true), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), subgroup_size), (clamp(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_size, subgroup_size)) << 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 0u, 1u)), (uint(uvec4(subgroup_size, 0u, 0u, 1u))) >> 0u)))) + _GLF_IDENTITY(((_GLF_struct_replacement_4._f2._f3.subgroup_local_id + 1) % subgroup_size), 0u ^ (((_GLF_struct_replacement_4._f2._f3.subgroup_local_id + 1) % subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_struct_replacement_5.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, (_GLF_struct_replacement_4._f2._f3.subgroup_local_id) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 1u), _GLF_IDENTITY((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u), ((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)) >> uvec2(0u, 0u)))), _GLF_IDENTITY(min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_struct_replacement_4._f2._f3.subgroup_local_id), clamp(~ (_GLF_struct_replacement_4._f2._f3.subgroup_local_id), _GLF_IDENTITY(~ (_GLF_struct_replacement_4._f2._f3.subgroup_local_id), ~ (~ (~ (_GLF_struct_replacement_4._f2._f3.subgroup_local_id)))), ~ (_GLF_struct_replacement_4._f2._f3.subgroup_local_id))))), 1u)) - _GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u)))) << uvec2(0u, 0u))), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, (_GLF_struct_replacement_4._f2._f3.subgroup_local_id) * 1u)))), 1u)) * uvec2(1u, 1u))), (uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u))), _GLF_IDENTITY((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) | uvec2(0u, 0u)), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)))), ((uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) | uvec2(0u, 0u)), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u))))) / 1u) - 0u)))), (true ? min(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)), max(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)))), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)))))), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u * (_GLF_struct_replacement_4._f2._f3.subgroup_local_id)), 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, (_GLF_struct_replacement_4._f2._f3.subgroup_local_id) | (_GLF_struct_replacement_4._f2._f3.subgroup_local_id)), uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u)), 1u, 1u, 0u)))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u))) - uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, uint(uvec3(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u, 0u))), 1u), _GLF_IDENTITY((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u), max((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u))))))))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), uvec2(uvec2(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u))))) - uvec2(0u, 0u), uvec2(0u, 0u) + ((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), uvec2(uvec2(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u))))) - uvec2(0u, 0u)))), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) * uvec2(1u, 1u)))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) | (1u))))), _GLF_IDENTITY(_GLF_IDENTITY((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)), (false ? _GLF_FUZZED(uvec2(workgroup_base, usubBorrow(read, _GLF_IDENTITY(2058u, (_GLF_IDENTITY(2058u, clamp(2058u, 2058u, 2058u))) | (2058u)), workgroup_base))) : _GLF_IDENTITY((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)), uvec2(0u, 0u) ^ ((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)))))))), (true ? _GLF_IDENTITY((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)), (false ? _GLF_FUZZED(uvec2(workgroup_base, usubBorrow(read, _GLF_IDENTITY(2058u, (_GLF_IDENTITY(2058u, _GLF_IDENTITY(clamp(2058u, 2058u, 2058u), uint(uvec4(clamp(2058u, 2058u, 2058u), 1u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (2058u)), workgroup_base))) : _GLF_IDENTITY((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)), uvec2(0u, 0u) ^ ((uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, min(1u, 1u)))))))) : _GLF_FUZZED(uvec2(22214u, 78487u)))) * uvec2(1u, 1u))), (uint(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u), min(_GLF_IDENTITY(uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u), ~ (~ _GLF_IDENTITY((uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u)), uvec3(uvec4((uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u)), 0u))))), uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u))), uvec3(1u, 1u, 1u) * (uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u))))), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) << uvec2(0u, 0u)), uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)))), uvec2(_GLF_IDENTITY(uvec2((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, (1u) / 1u)), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (1u)))))), 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u) * (uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u)), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u) * (uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u))), (~ (uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u) * (uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u)))) >> uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) << _GLF_IDENTITY(uvec2(0u, 0u), (uvec2(0u, 0u) | uvec2(0u, 0u)) | (uvec2(0u, 0u)))), uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u))))), min(uvec2((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, (1u) / 1u)), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u), uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u) * (uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u))))), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) << uvec2(0u, 0u)), uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u))))), _GLF_IDENTITY(uvec2((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, (1u) / 1u)), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u), uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, 0u), (uvec4(1u, 0u, 1u, 0u)) - uvec4(0u, 0u, 0u, 0u)))))), 1u, 1u) * (uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u))))), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) << uvec2(_GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(read) : ~ (0u))))), 0u)), 0u)), uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u))))), (uvec2((_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, _GLF_IDENTITY(1u, (1u) / 1u)), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u), uvec3(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u) * (uvec3(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), 1u))))), _GLF_IDENTITY(uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u), (uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)) << uvec2(0u, 0u)), uvec2(_GLF_struct_replacement_4._f2._f3.subgroup_local_id, 1u)))))) - uvec2(0u, 0u)))))) * uvec2(1u, 1u)))) - 0u)))) : _GLF_FUZZED(read))))) + 1 < _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_struct_replacement_4._f2._f3.subgroup_local_id + 1 < subgroup_size) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.1), max(_GLF_FUZZED(-3.1), _GLF_FUZZED(-3.1)))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.1), max(_GLF_FUZZED(-3.1), _GLF_FUZZED(_GLF_IDENTITY(-3.1, clamp(-3.1, _GLF_IDENTITY(-3.1, clamp(-3.1, -3.1, -3.1)), -3.1)))))), float(injectionSwitch.x), bool(true))))), max(float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.1), max(_GLF_FUZZED(-3.1), _GLF_FUZZED(-3.1)))), float(injectionSwitch.x), bool(true))))), float(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-3.1), max(_GLF_FUZZED(-3.1), _GLF_FUZZED(-3.1)))), float(injectionSwitch.x), bool(true)))))))), injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   int i = 0;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, abs(0.0), exp(0.0), sqrt(1.0), 1.0, 0.0, 1.0, 1.0, 0.0, log(1.0), 0.0, 0.0, 1.0, 0.0, 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), clamp(mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mat2(1.0) * (clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))))), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false)), true && (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), false), bvec2(bvec2(bvec2((false), false))))))))), _GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false, true && (false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), bool(bvec2(_GLF_IDENTITY((false), bool(bool((false)))), true))))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false)))))), true)))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false)), ! (! (bool(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false))))))), false, _GLF_IDENTITY(false, true && (false))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bool((false)))), false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bool((false)))), false, _GLF_IDENTITY(false, true && (false)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), bool(bool((false)))), false, _GLF_IDENTITY(false, true && (false))))))))))))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! ((false)), _GLF_IDENTITY(false, true && (false)), false), bvec3(bvec3(bvec3(! ((false)), false, false))))))))))), false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! ((false)), false, false), bvec3(bvec3(bvec3(! ((false)), false, false))))))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! ((false)), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(! ((false)), (! ((false))) || false), false, false))))))), (! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))))), false, false), bvec3(bvec3(bvec3(! ((false)), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), false)))))), false)))))))) || false))))))), false, _GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! ((false)), false, false), bvec3(bvec3(bvec3(! ((false)), false, false))))))))))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! ((false)), false, false), bvec3(bvec3(bvec3(! ((_GLF_IDENTITY(false, ! (! (false))))), false, false))))))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(! ((false)), false, false), bvec3(bvec3(bvec3(! ((_GLF_IDENTITY(false, ! (! (false))))), false, false))))))))))), ! (! (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! ((false)), ! (! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), false, false), bvec3(bvec3(bvec3(! ((_GLF_IDENTITY(false, ! (! (false))))), false, false)))))))))))))))), false, _GLF_IDENTITY(false, true && (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))), false)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), bool(bool((false)))), false, _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), true && (false))))))), true, false, false))), false, false)))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || false)))) && true), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false))))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * vec2(1.0, 1.0)))).y), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), vec2(injectionSwitch[0], injectionSwitch[1])))).y))), true, true)), (bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.5), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-938.533)), bvec2(true, false)))[_GLF_IDENTITY(0, min(0, 0))], injectionSwitch[1])))).y))), true, true))) && true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
