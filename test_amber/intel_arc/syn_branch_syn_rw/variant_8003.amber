#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) - 0.0))), (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) - 0.0))), min((true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) - 0.0))), (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-9.0, (-9.0) - 0.0))))))))) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, float(float(1.0))), 1.0))) / 1.0)) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), tan(0.0) + ((injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) * 1.0))) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (injectionSwitch.x) / 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(vec4(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, tan(0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(step(-8544.0883, length(vec4(-523.952, -796.399, -223.694, -152.151))))))))) : _GLF_IDENTITY(_GLF_FUZZED(-8628.6088), (true ? _GLF_IDENTITY(_GLF_FUZZED(-8628.6088), min(_GLF_FUZZED(-8628.6088), _GLF_FUZZED(-8628.6088))) : _GLF_FUZZED(-9.6)))))), 1.0, 0.0, 1.0)))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, abs(1.0)))), injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(sign(length(injectionSwitch))) : _GLF_IDENTITY(1.0, 0.0 + (1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (1.0) * 1.0)), float(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), injectionSwitch.x)), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, tan(0.0), 1.0))) : _GLF_FUZZED(-8628.6088)))), 1.0, 0.0, 1.0)))) - 0.0) > injectionSwitch.y)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)))) && true))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) ? (injectionSwitch.x) / 1.0 : _GLF_FUZZED(1046.6570)))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))) || false)) && true)))), (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) - 0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat2x3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, sqrt(0.0), sqrt(0.0), _GLF_ONE(1.0, injectionSwitch.y))))))), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), vec2(injectionSwitch[0], injectionSwitch[1])).y), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? injectionSwitch.x : _GLF_FUZZED(1551.5724))), (injectionSwitch.x) / 1.0) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), ! (! (bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))) ? injectionSwitch.x : _GLF_FUZZED(1551.5724))), (injectionSwitch.x) / _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(475.786)))) > injectionSwitch.y)))) && true))))) || false)))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (false) || false), false, false), bvec3(bvec4(bvec3(false, false, _GLF_IDENTITY(false, true && (false))), true))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false, false), true))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))))))))), bool(bvec4(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))) && true)))))))))), true, true, false))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), false), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), false), true))))))))))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), false), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), bool(bool(bool(_GLF_IDENTITY(false, (false) || false))))))), false), true)))))))))))))), false || (bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), true, false))), false), true))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))))))))) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(4.1)))) / 1.0)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(150869u, 34650u, 188743u))), (_GLF_IDENTITY((true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(150869u, 34650u, 188743u))), ((true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(150869u, 34650u, 188743u)))) | ((true ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(150869u, 34650u, 188743u)))))) ^ uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize)))))), 1u), min(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)), min(gl_WorkGroupSize, gl_WorkGroupSize)), ~ (~ (gl_WorkGroupSize)))))), 1u), uvec4(_GLF_IDENTITY(gl_WorkGroupSize, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))))), _GLF_IDENTITY(uvec3(uvec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(uvec3(uvec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uvec3(uvec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uvec3(uvec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(uvec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uvec3(uvec4((~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), ~ (~ (gl_WorkGroupSize))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), 1u))))).x, clamp(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize.x, max(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), _GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)))), gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (false)), _GLF_IDENTITY(false || (_GLF_IDENTITY(false, false || (false))), bool(bvec3(false || (_GLF_IDENTITY(false, false || (false))), true, false))))))) ? _GLF_FUZZED(vec2(8.0, -76.60)) : injectionSwitch)).x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(9807.5662) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-5.0)), bool(false))) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), float(vec2(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), 0.0))))), false, true, true)))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), float(vec2(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), 0.0))))), false, true, true)))))), ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), float(vec2(float(mat4x2(injectionSwitch.y, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0)), 0.0))))), false, true, true))))))) || false)) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x)))) > injectionSwitch.y))), ! (! (! _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), false || (_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), ((! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))) && true)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (false)))))), true)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, sqrt(1.0), 0.0, 0.0)), float(mat3x2(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), sqrt(1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-8573.5781, 5650.4050, -2.8, 4.0)))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-8573.5781, 5650.4050, -2.8, 4.0)))))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-8573.5781, 5650.4050, -2.8, 4.0)))))).x, float(mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-8573.5781, 5650.4050, -2.8, 4.0)))))).x, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-8573.5781, 5650.4050, -2.8, 4.0)))))).x, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-8573.5781, 5650.4050, -2.8, 4.0)))))).x)), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, 0.0, 0.0), (true ? mat2(injectionSwitch, 0.0, 0.0) : _GLF_FUZZED(mat2(-8573.5781, 5650.4050, -2.8, 4.0)))))).x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, round(length(normalize(1.0)))))), injectionSwitch.y)), sqrt(1.0), 0.0, 0.0)), float(mat3x2(float(mat2(injectionSwitch.y, sqrt(1.0), 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))))), false))))))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))))).x, 0u | (_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)), gl_WorkGroupID))))).x));
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) + uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1580.9713) : _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0) : _GLF_FUZZED(-4653.5554))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), false, true)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))) - 0.0) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), max(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)), _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : workgroup_base + subgroup_id * subgroup_size + subgroup_local_id))));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) + 0u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(144708u, (0u | 0u) | (144708u))) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, min(0u, 0u))))))), ((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) >> 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68062) : 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))) << 0u)) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, (6u) >> 0u), _GLF_IDENTITY(6u, uint(uvec2(6u, 1u)))))), uint(6u)), clamp(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))) | (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))))), uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))))), uint(6u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), uint(6u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) + 0u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(144708u, (0u | 0u) | (144708u))) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, min(0u, 0u))))))), ((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) >> 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68062) : 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))) << 0u)) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, (6u) >> 0u), _GLF_IDENTITY(6u, uint(uvec2(6u, 1u)))))), uint(6u)), clamp(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))) | (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))))), uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))))), uint(6u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), uint(6u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) + 0u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(144708u, (0u | 0u) | (144708u))) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, min(0u, 0u))))))), ((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) >> 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68062) : 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))) << 0u)) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, (6u) >> 0u), _GLF_IDENTITY(6u, uint(uvec2(6u, 1u)))))), uint(6u)), clamp(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))) | (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))))), uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))))), uint(6u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), uint(6u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) + 0u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(144708u, (0u | 0u) | (144708u))) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, min(0u, 0u))))))), ((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) >> 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68062) : 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))) << 0u)) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, (6u) >> 0u), _GLF_IDENTITY(6u, uint(uvec2(6u, 1u)))))), uint(6u)), clamp(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))) | (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))))), uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))))), uint(6u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), uint(6u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u))))))), (false ? _GLF_FUZZED(workgroup_base) : uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), _GLF_IDENTITY((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) + 0u))))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(144708u, (0u | 0u) | (144708u))) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, min(0u, 0u))))))), ((false ? _GLF_FUZZED(144708u) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) - 0u) + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) >> 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))) % _GLF_IDENTITY(subgroup_size, clamp(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u)), (uint(uvec4(_GLF_IDENTITY(subgroup_size, 0u + (subgroup_size)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, 0u))) >> 0u)), subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))), uint(uint((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-68062) : 1))) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))))))) << 0u)) >> (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, min(_GLF_IDENTITY(6u, (6u) >> 0u), _GLF_IDENTITY(6u, uint(uvec2(6u, 1u)))))), uint(6u)), clamp(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), clamp(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))), (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))) | (uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u)))))), uint(_GLF_IDENTITY(uvec2(uint(6u), 0u), uvec2(0u, 0u) ^ (uvec2(uint(6u), 0u))))))), uint(6u)), 0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), max(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) / 1u))), uint(6u)) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) / 1u)))))))))))));
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, min(_GLF_IDENTITY(virtual_gid, uint(uvec3(virtual_gid, 1u, 1u))), virtual_gid))], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), uint(_GLF_IDENTITY(uvec3(~ (buf[virtual_gid]), 1u, 1u), clamp(uvec3(~ (buf[virtual_gid]), 1u, 1u), _GLF_IDENTITY(uvec3(~ (buf[virtual_gid]), 1u, 1u), (uvec3(~ (buf[virtual_gid]), 1u, 1u)) ^ uvec3(0u, 0u, 0u)), uvec3(~ (buf[virtual_gid]), 1u, 1u))))))), (buf[virtual_gid]) | 0u)) | (_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), min(~ (buf[virtual_gid]), ~ (buf[virtual_gid])))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, _GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, (virtual_gid) + 0u))), virtual_gid))], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid) | (0u | 0u), ((virtual_gid) | (_GLF_IDENTITY(0u | 0u, max(0u | 0u, 0u | 0u)))) + 0u))) ^ 0u)]) | 0u)) | (buf[virtual_gid]), ((_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) * 1u)]) | 0u)) | (buf[virtual_gid])) | 0u)), ~ (~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))))) | (buf[virtual_gid]), ((_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u)) | (buf[virtual_gid])) | 0u)))))))), 4, 64, 0);
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) || false), (bool((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))) && true))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), ~ (_GLF_IDENTITY(~ (uvec2(next_virtual_gid, 1u)), (~ (uvec2(next_virtual_gid, 1u))) ^ uvec2(0u, 0u))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, (_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, bool(bvec2((! (_GLF_DEAD(false))) || false, false)))) || false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || false))), _GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || false))))), false || (_GLF_IDENTITY(bool(bool(((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || false))))), (bool(bool(((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false)))))) || false)))))) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), min(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))), uint(uvec2(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) / 1u, ((subgroup_size) / 1u) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))))), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), max((0u >> _GLF_IDENTITY(uint(2u), uint(2u))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))))))) ^ (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), (0u >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) ^ 0u)) ^ 0u)), clamp(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(0u, (0u) ^ 0u) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), min(0u >> _GLF_IDENTITY(uint(5u), uint(5u)), 0u >> _GLF_IDENTITY(uint(5u), uint(5u)))), 0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), _GLF_IDENTITY(1u * (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), uint(uint(uint(5u))))), (1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), (0u | 0u) | (_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u))), uint(uint(uint(5u)))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(5u)))))) * 1u)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   int i = _GLF_IDENTITY(0, _GLF_IDENTITY((0) >> (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))), (_GLF_IDENTITY((0) >> (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), clamp(_GLF_IDENTITY(int(1), 1 * (int(1))), _GLF_IDENTITY(int(1), 1 * (int(1))), _GLF_IDENTITY(_GLF_IDENTITY(int(1), 1 * (int(1))), (_GLF_IDENTITY(int(1), 1 * (int(1)))) * 1))))), int(ivec2((0) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 1 * (int(1)))), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 1 * (int(1))))) ^ 0)), 0)))) >> 0));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], read, _GLF_IDENTITY(4, (4) << (_GLF_IDENTITY(0 | 0, _GLF_IDENTITY((0 | 0) ^ 0, clamp((0 | 0) ^ 0, (0 | 0) ^ 0, (0 | 0) ^ 0))))), _GLF_IDENTITY(64, int(ivec3(64, 0, (0 ^ 1)))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((read), max((read), (read))), ((read)) / 1u) | (_GLF_IDENTITY(_GLF_IDENTITY(read, max(read, read)), ~ (~ (read))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
