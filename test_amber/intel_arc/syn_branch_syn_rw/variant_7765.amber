#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) / 1u);
 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(ivec3(int(8), 1, 1)), max(_GLF_IDENTITY(int(ivec3(int(8), 1, 1)), (int(ivec3(int(8), 1, 1))) | 0), int(ivec3(int(8), 1, 1))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), (int(int(0))) ^ 0), _GLF_IDENTITY(clamp(int(int(0)), int(int(0)), int(int(0))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), min(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0)))))), int(int(0)), int(int(0))), (true ? clamp(int(int(0)), int(int(0)), int(int(0))) : _GLF_FUZZED(-68901)))) | (clamp(int(int(0)), int(int(0)), int(int(0))))))) | _GLF_IDENTITY((int(2)), ((int(_GLF_IDENTITY(2, min(2, 2))))) + 0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), (int(int(0))) ^ 0), _GLF_IDENTITY(clamp(int(int(0)), int(int(0)), int(int(0))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), min(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0)))))), int(int(0)), int(int(0))), (true ? clamp(int(int(0)), int(int(0)), int(int(0))) : _GLF_FUZZED(-68901)))) | (clamp(int(int(0)), int(int(0)), int(int(0))))))) | _GLF_IDENTITY((int(2)), ((int(_GLF_IDENTITY(2, min(2, 2))))) + 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), (int(int(0))) ^ 0), _GLF_IDENTITY(clamp(int(int(0)), int(int(0)), int(int(0))), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(int(int(_GLF_IDENTITY(0, max(0, 0)))), min(int(int(_GLF_IDENTITY(0, max(0, 0)))), int(int(_GLF_IDENTITY(0, max(0, 0)))))), int(int(0)), int(int(0))), (true ? clamp(int(int(0)), int(int(0)), int(int(0))) : _GLF_FUZZED(-68901)))) | (clamp(int(int(0)), int(int(0)), int(int(0))))))) | _GLF_IDENTITY((int(2)), ((int(_GLF_IDENTITY(2, min(2, 2))))) + 0)))))) >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(2, _GLF_IDENTITY(min(_GLF_IDENTITY(2, 0 | (2)), 2), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(2, 0 | (2)), 2), (min(_GLF_IDENTITY(2, 0 | (2)), 2)) | (min(_GLF_IDENTITY(2, 0 | (2)), 2)))))))))), int(int(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec4(2, 1, 0, 0), _GLF_IDENTITY(~ (~ (ivec4(2, 1, 0, 0))), (~ (~ (ivec4(2, 1, 0, 0)))) | (~ (~ (ivec4(2, 1, 0, 0)))))))), (2) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, min(_GLF_IDENTITY(2, (2) << 0), 2)), 2))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))) | _GLF_IDENTITY((int(2)), ((int(_GLF_IDENTITY(2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 2 : _GLF_FUZZED(ivec2(-12598, 74299).g)))))) + 0))), int(_GLF_IDENTITY(ivec2(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), _GLF_IDENTITY(clamp(int(int(0)), int(int(0)), int(int(0))), (true ? clamp(int(int(0)), int(int(0)), int(int(0))) : _GLF_FUZZED(bitCount(num_workgroup)))))) | _GLF_IDENTITY((int(2)), ((int(2))) + 0))), 0), (_GLF_IDENTITY(ivec2(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))) | _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(2))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(2))) + 0), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(2))) + 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(2))) + 0))), 0, 0)), max(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(2))) + 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(2))) + 0))), 0, 0)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0 | ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))), ivec2(1, 1) * (ivec2(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), (0 | ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))))), ((int(2))) + 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY((int(2)), ((int(2))) * int(_GLF_ONE(1.0, injectionSwitch.y))), ((int(2))) + 0))), 0, 0)))))) - (0 | 0)))), 0), clamp(ivec2(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))) | _GLF_IDENTITY((int(2)), _GLF_IDENTITY(((int(2))), (_GLF_IDENTITY(((int(2))), (((int(2)))) ^ 0)) | (((int(2))))) + 0))), 0), ivec2(1 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(_GLF_IDENTITY(int(0), (int(0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(_GLF_IDENTITY(int(0), (int(0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | _GLF_IDENTITY((int(2)), ((int(2))) + 0))), 0), ivec2(_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) >> 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(2, max(2, 2))), _GLF_IDENTITY(0, _GLF_IDENTITY(int(int(0)), clamp(int(int(0)), int(int(0)), int(int(0))))) | _GLF_IDENTITY((int(2)), _GLF_IDENTITY(((int(2))), clamp(((int(2))), _GLF_IDENTITY(((int(2))), max(((int(2))), ((int(2))))), (_GLF_IDENTITY((int(2)), int(int((int(2)))))))) + 0))), 0)))) >> ivec2(0, 0))))) >> _GLF_IDENTITY(int(2), int(2))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(uint(5u), uint(5u))))))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, clamp(_GLF_IDENTITY(5u, (5u) + 0u), 5u, _GLF_IDENTITY(5u, (0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (5u)))))))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)) | (uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), (true ? uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uvec3(0u, 0u, 0u) | ((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-147.437) : 0.0)), injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))), uint(5u))))))), (_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), (true ? (1u & 1u) : _GLF_FUZZED(subgroup_local_id))), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uvec3(0u, 0u, 0u) | ((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) ^ ((uvec3(0u, 0u, 0u) ^ uvec3(0u, 0u, 0u)) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u)))))) : _GLF_FUZZED(workgroup_id)))), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)) | (uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), (true ? uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, ~ (~ (0u))), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, ~ (~ (1u & 1u)))), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uvec3(0u, 0u, 0u) | ((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u))) | (1u)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) | 0u) & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))) : _GLF_FUZZED(workgroup_id)))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, ~ (~ (1u))))), 1u)) | (uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), _GLF_IDENTITY((true ? uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(workgroup_base))), uint(5u))))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), clamp((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (uvec4(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (uvec4(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u))), 0u | (uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))) | (uvec4(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))))) ^ 0u)), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), max(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u))))) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY(uint(5u), uint(5u))) | 0u)) | 0u)))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u), max(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.9)), bool(false)))))), min(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.9)), bool(false)))))), _GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.9)), bool(false)))))), clamp(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.9)), bool(false)))))), uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.9)), bool(false)))))), uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.9)), bool(false))))))))))))) / uvec4(1u, 1u, 1u, 1u), ((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)) | ((_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u))), (_GLF_IDENTITY(uvec4(1u, 0u, _GLF_IDENTITY(1u, (1u) | 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) : _GLF_FUZZED(workgroup_id)), (_GLF_IDENTITY((true ? uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(59615u) : _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, _GLF_IDENTITY(0u, 1u * (0u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) | (_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-142.706)), bool(false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), 0u | (uint(5u))), uint(5u))))), clamp((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u)), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u + (_GLF_IDENTITY(1u, (1u) | 0u)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), _GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ 0u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) + (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))) : _GLF_FUZZED(workgroup_id)), 0u + ((true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), min((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), min((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), clamp((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), 0u)))))) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), max(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), _GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), 0u ^ (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))))))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), min((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), min((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), clamp((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), 0u)))))) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), max(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), _GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), 0u ^ (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))))))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))))))))), (~ (uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), min((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u)), (_GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), min((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))), (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (_GLF_IDENTITY(1u & 1u, (false ? _GLF_FUZZED(virtual_gid) : 1u & 1u))))) << _GLF_IDENTITY(uint(5u), uint(5u))))) >> _GLF_IDENTITY(uint(5u), uint(5u))) | 0u)))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x)))))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), clamp((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)), ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), 0u)))))) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u))) << (uint(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1u)), 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), max(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), _GLF_IDENTITY(_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))), 0u ^ (_GLF_IDENTITY((1u & 1u), max((1u & 1u), (1u & 1u))))))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))))))))) ^ 0u))) : _GLF_FUZZED(workgroup_id))))) >> (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) / 1u)) / 1u)), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), (uvec3(1u, 1u, 1u) ^ uvec3(1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, ~ (~ (1u)))) << 0u))), 1u)) | (uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))), (true ? uint(_GLF_IDENTITY(uvec3(subgroup_size, 0u, (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), _GLF_IDENTITY(_GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0)))), (vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0))))) * mat2(1.0))).x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ 0u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), _GLF_IDENTITY(uvec3(uvec4((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), (vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0))))) * mat2(1.0))).x))), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))), (vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0))))) * mat2(1.0))).x))))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ 0u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), min(uvec3(uvec4((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0)))), (vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, _GLF_IDENTITY(0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (0.0)), 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0))))) * mat2(1.0))).x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ 0u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), uvec3(uvec4((_GLF_IDENTITY(uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0)))), (vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0))))) * mat2(1.0))).x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u), uvec3(1u, 1u, 1u) * (uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0)))), (vec2(mat4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(_GLF_IDENTITY(0.0, (0.0) - abs(0.0)), abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, length(vec2(0.0, 0.0))))) * mat2(1.0))).x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat2(0.0, sin(0.0), length(0.0), 0.0)))) + 0.0), injectionSwitch.x)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, 1u, 1u, 1u)))), 1u, 1u)))) | (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((1u & 1u), max(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ 0u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(5u))), uint(5u))))), uint(_GLF_ONE(1.0, injectionSwitch.y))))))), uvec3(0u, 0u, 0u) | ((uvec3(1u, 1u, 1u) ^ uvec3(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, _GLF_IDENTITY(1u, min(1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ((uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - uvec4(0u, 0u, 0u, 0u)))) | (uvec4(1u, 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) / uvec4(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u, 1u)))), 1u, 1u)) | (_GLF_IDENTITY(uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (1u & 1u) >> 0u)), _GLF_IDENTITY(max((1u & 1u), (1u & 1u)), uint(uint(max((1u & 1u), (1u & 1u)))))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)), max(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u)))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (1u & 1u) >> 0u)), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, min(5u, 5u))), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) - 0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (uvec3(subgroup_size, 0u, ((_GLF_IDENTITY((_GLF_IDENTITY(1u & 1u, (1u & 1u) >> 0u)), max((1u & 1u), (1u & 1u))) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), (uint(5u)) - 0u))))) : _GLF_FUZZED(uvec3(17336u, 158074u, 37850u)))) / uvec3(1u, 1u, 1u))))))) : _GLF_FUZZED(workgroup_id)))))) + 0u);
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) / 1u) + 1 < subgroup_size)
    {
     int i = 0;
     atomicStore(checker[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), _GLF_IDENTITY(uint(uvec3(0u | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), 0u + (uint(uvec3(0u | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), 1u, (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))))))], read, 4, 64, 4);
    }
   else
    {
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
    }
  }
 else
  {
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
