#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)), true && (bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), false || ((! (! (false)))))))), false, false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) && true))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.3), _GLF_FUZZED(-3914.3770)), vec2(_GLF_IDENTITY((injectionSwitch)[0], 1.0 * ((injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))) || _GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.6, 543.945)))).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true, false)))), false, false, false))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) && true)), (bool(_GLF_IDENTITY(false, (false) && true))) && true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.6, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (_GLF_IDENTITY(-0.6, (-0.6) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))))), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (true ? mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))) : _GLF_FUZZED(mat3(8607.4192, 0.9, 1.8, -1.6, -251.819, -4.0, 614.088, -5982.0653, 74.31))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), max(_GLF_FUZZED(_GLF_IDENTITY(-0.6, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (_GLF_IDENTITY(-0.6, (-0.6) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))))), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (true ? mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))) : _GLF_FUZZED(mat3(8607.4192, 0.9, 1.8, -1.6, -251.819, -4.0, 614.088, -5982.0653, 74.31))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-0.6, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (_GLF_IDENTITY(-0.6, (-0.6) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))))), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (true ? mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))) : _GLF_FUZZED(mat3(8607.4192, 0.9, 1.8, -1.6, -251.819, -4.0, 614.088, -5982.0653, 74.31))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), (_GLF_FUZZED(_GLF_IDENTITY(-0.6, _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (_GLF_IDENTITY(-0.6, (-0.6) * _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0)))))))), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), clamp(float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))), (true ? mat3(_GLF_IDENTITY(-0.6, 1.0 * (-0.6)), 0.0, sqrt(1.0), 1.0, sqrt(1.0), 0.0, 0.0, round(length(normalize(abs(vec4(1.0, 1.0, 1.0, 1.0))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0))) : _GLF_FUZZED(mat3(8607.4192, 0.9, 1.8, -1.6, -251.819, -4.0, 614.088, -5982.0653, 74.31))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) - 0.0))), _GLF_FUZZED(-8.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), (_GLF_IDENTITY((false), ! (! ((false))))) || false)), bool(bvec3(! (false || (false)), false, true)))))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), ((false)) && true))), bool(bvec2((! (_GLF_IDENTITY((false), ((false)) && true))), true)))), false || (! (false)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x, 1u, 1u, 1u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), cos(0.0))), length(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 1.0, 0.0, 0.0, 0.0)), min(float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 1.0, cos(0.0), length(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4.9))), 0.0)), 1.0, 0.0, 0.0, 0.0)), float(mat3x4(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.1) : _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(51.17))))) + (1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))), cos(0.0), length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)))))))))), (_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))) - mat2x4(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), (mat2(0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))) / mat2(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))))) || _GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))), uvec3(1u, 1u, 1u) * ((_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x))) - 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(0u, 0u, 0u)))))) | (gl_WorkGroupID)).x, (_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(subgroup_size) : gl_WorkGroupID.x))) - 0u)))) / (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ _GLF_IDENTITY((22173u & 0u), (_GLF_IDENTITY((22173u & 0u), ((22173u & 0u)) >> 0u)) >> 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) | (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ _GLF_IDENTITY((22173u & 0u), (_GLF_IDENTITY((22173u & 0u), ((22173u & 0u)) >> 0u)) >> 0u)))))), (_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)))) | 0u), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)))) | 0u))))), uint(uint(~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)))) | 0u))))))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY(clamp((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) ^ (22173u & 0u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) ^ (22173u & 0u))), max(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u)))) ^ (22173u & 0u))), _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), max(uint(_GLF_IDENTITY(2u, 0u ^ (2u))), uint(_GLF_IDENTITY(2u, (true ? 2u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), clamp(_GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size), _GLF_FUZZED(subgroup_size))))))))) ^ (22173u & 0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)))), ((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))))) << 0u)), _GLF_IDENTITY(1u, ~ (~ (1u)))), max(clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)))), ((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))))) << 0u)), _GLF_IDENTITY(1u, ~ (~ (1u)))), clamp(_GLF_IDENTITY(1u, ~ (~ (1u))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u)))), ((~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(workgroup_size) : 1u))))) << 0u)), _GLF_IDENTITY(1u, ~ (~ (1u))))))) << _GLF_IDENTITY(uint(2u), uint(2u))), _GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), _GLF_IDENTITY(uint(2u), 0u ^ _GLF_IDENTITY((uint(2u)), ((uint(2u))) ^ 0u)))), uint(2u))), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, (2u) | 0u), min(2u, 2u))), _GLF_IDENTITY(uint(2u), uint(uvec4(uint(2u), (0u | _GLF_IDENTITY(0u, (0u) - 0u)), _GLF_IDENTITY(1u, (1u) - 0u), 0u)))))) | 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (clamp(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, (2u) | (2u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (~ (_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), clamp(uint(2u), uint(2u), uint(2u)))) / 1u), 0u ^ (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) : _GLF_FUZZED(105397u))))))))) ^ (22173u & 0u)))), max((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(_GLF_IDENTITY(2u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * (2u))))), ~ (~ (_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), (true ? _GLF_IDENTITY(uint(2u), 0u ^ (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) : _GLF_FUZZED(105397u))))))))) ^ (22173u & 0u)))), (1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), max(uint(2u), uint(2u))), ~ (~ (_GLF_IDENTITY(uint(2u), max(uint(2u), _GLF_IDENTITY(uint(2u), (true ? _GLF_IDENTITY(uint(2u), 0u ^ (_GLF_IDENTITY(uint(2u), (uint(2u)) | (uint(2u))))) : _GLF_FUZZED(105397u))))))))) ^ (22173u & 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(2u), uint(2u)), ~ (~ (_GLF_IDENTITY(1u, ~ (~ (1u))) << _GLF_IDENTITY(uint(2u), uint(2u)))))), _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(2u), uint(2u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(2u), uint(2u)), (1u << _GLF_IDENTITY(uint(2u), uint(2u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u))), clamp((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u))), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)))))) | 0u))))))))) - 0u) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2u, 0u ^ (_GLF_IDENTITY(2u, uint(uvec3(2u, 0u, 0u))))), (2u) / ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))), uint(2u))))) | (_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) ^ uvec3(0u, 0u, 0u)))))))) + uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, _GLF_IDENTITY(0u, (0u) | 0u)), (max(0u, _GLF_IDENTITY(0u, (0u) | 0u))) << 0u)), 0u, 0u)), (gl_WorkGroupID) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))).x) >> (0u | _GLF_IDENTITY(0u, (0u) << 0u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false)), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) - (0u | 0u)), min(workgroup_id, _GLF_IDENTITY(workgroup_id, max(_GLF_IDENTITY(workgroup_id, (true ? workgroup_id : _GLF_FUZZED(subgroup_id))), workgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))))), ! _GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), (false || (! (false))) || false))) || false)), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), false, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, true), bvec3(bvec4(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), true, true), false))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), false, true)))))))), ! (! ((! (! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))), _GLF_IDENTITY(false || (! (false)), ! (! (_GLF_IDENTITY(false || _GLF_IDENTITY((! (false)), false || ((! (false)))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (! (false))))))))), true, true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), false || (false || (! (false)))))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), false || (! (false)))), true, true))), true))), false, true)))))))))))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true)), true))))))), false, true)))))))), ! (! ((! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), false))))))), true))))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, false)))))), true, true))), true))), false, true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), false))))))), true))))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, false)))))), true, true))), true))), false, true))))))))))))))), ((_GLF_IDENTITY((! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! ((false)))), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true)), true), bvec3(bvec3(bvec3(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true)), true))))))), false, true)))))))), ! (! ((! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), false))))))), true))))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, false)))))), true, true))), true))), false, true))))))), ! (! ((! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), ((! (false))) && true), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false), false))))))), true))))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (! (false)))), true, true))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec3((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, false)))))), true, true))), true))), false, true)))))))))))))))) || false))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), clamp(vec2(injectionSwitch), vec2(injectionSwitch), vec2(injectionSwitch))))).y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 1.0, abs(1.0), 1.0, tan(log(1.0)), 0.0, 1.0, 0.0, 0.0))), vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, true, false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), true, true, false)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), true)))), (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))) || false)), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch[1], float(mat3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(-5392.4293)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))[1], 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 1.0, 0.0, 0.0)), clamp(float(mat3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 1.0, 0.0, 0.0)), float(mat3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 1.0, 0.0, 0.0)), float(mat3(injectionSwitch[1], 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 1.0, 0.0, 0.0))))))))).y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), true)), true && (bool(bvec2(false, true)))), true && (_GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true)))))), true, false, true))))), true)))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(7.4) : injectionSwitch.x)) > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true))))) || false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED(float(192139u))), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u ^ _GLF_IDENTITY((workgroup_base), uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (1u ^ 0u) * (_GLF_IDENTITY(uint((_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)))), (uint((workgroup_base))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)), false || (bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true, true, true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)) ? 1.0 : _GLF_FUZZED(-877.790)))) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (true))), false)))), true, true, true)), false || (bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), true, true)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)))), true, true, true)), false || (bool(bvec4((_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))), true, true)))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(-877.790)))) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(-877.790)))) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), vec2(vec2(_GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(-877.790)))) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))))))) / vec2(1.0, 1.0))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(-877.790)))) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(-877.790)))) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y) / 1.0), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))), injectionSwitch)), mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), false || (injectionSwitch.x < injectionSwitch.y)))) ? 1.0 : _GLF_FUZZED(-877.790)))) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y))) - 0.0)))))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), ~ (~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id) | 0u, ((workgroup_id) | 0u) | ((workgroup_id) | 0u))))))), ~ (~ (_GLF_FUZZED(workgroup_id)))) : uint((workgroup_base)), ~ (~ (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false)))))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0))).y) || false)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), clamp(_GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0)), clamp(_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0)), _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((_GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), (clamp(injectionSwitch, injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0))), mat2(1.0) * ((clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((ivec3(-8263, 67266, -32026) , vec2(972.575, -7.3))) : injectionSwitch)), injectionSwitch, injectionSwitch)))) / vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1.2)))), float(_GLF_FUZZED(-6.1)), bool(false))), 1.0))))) / vec2(1.0, 1.0))).y)))))))), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), _GLF_IDENTITY((clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mat2(1.0) * ((clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), (true ? vec2(1.0, 1.0) : _GLF_FUZZED(vec2(9.3, -7.8)))), vec2(1.0, 1.0))))).y)))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (_GLF_IDENTITY(~ (0u), 0u + (~ (0u)))) << 0u)))), ~ (~ (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), min((workgroup_id), (workgroup_id))) | 0u))))), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), min(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), clamp(_GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id), _GLF_FUZZED(workgroup_id))))), _GLF_FUZZED(workgroup_id)))))) : uint((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_id * subgroup_size), ((subgroup_id * subgroup_size)) / _GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))))), 0u + (~ (~ (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (0u & 142255u) ^ (subgroup_size)), _GLF_IDENTITY(~ (~ (subgroup_id * subgroup_size)), uint(_GLF_IDENTITY(uvec3(~ (~ (subgroup_id * subgroup_size)), (0u & 110680u), (1u ^ 1u)), (_GLF_IDENTITY(uvec3(~ (~ (subgroup_id * subgroup_size)), (_GLF_IDENTITY(0u & 110680u, min(0u & 110680u, 0u & 110680u))), (1u ^ 1u)), (false ? _GLF_FUZZED(uvec3(177970u, 152046u, 148061u)) : uvec3(~ (~ (subgroup_id * subgroup_size)), (0u & 110680u), (1u ^ 1u))))) + uvec3(0u, 0u, 0u)))))))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(num_workgroup)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(uvec3(buf[virtual_gid], 1u, ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), min(uint(5u), uint(5u)))))))), 4, 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true)) || false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(4, 4)))), ~ (~ (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, min(4, 4))))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! ((! (_GLF_DEAD(false))) || false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! ((! (_GLF_DEAD(false))) || false)))))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! ((! (_GLF_DEAD(false))) || false)))))), false, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! (_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ! (! ((! (_GLF_DEAD(false))) || false)))))), false, false))), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) || false)))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), (! (_GLF_DEAD(false))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) || false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) || false))))))) || false), true, false, true)))) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) && true)) || false)))) || false)) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && ((_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), false || (! (true)))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) && true)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))) || false)) || false) && true))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) && true)) || false)))) || false)) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && ((_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), false || (! (true)))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) && true)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))) || false)) || false) && true))))), true, true)), true && (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || _GLF_IDENTITY(false, ! (! (false))))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y)))))))) || false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false)), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false)), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(26.44)), float(injectionSwitch.x), bool(true))) < injectionSwitch.y)))))))) || false))))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (! (true))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) && true)) || false)))) || false)) || false, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_DEAD(false)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), true && ((_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (_GLF_IDENTITY(! (true), false || (! (true)))))))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))) && true)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))))))) || false)) || false) && true))))), true, true)))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(1.0), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - tan(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(1.0), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - tan(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, round(length(normalize(vec2(1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0)), dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0))), 0.0))), 0.0, 0.0)))) : _GLF_FUZZED(vec4(77.13, 7.1, -55.89, 199.296))))), (false ? _GLF_FUZZED(vec4(-55.63, 5466.2261, 15.85, 2.1)) : _GLF_IDENTITY(_GLF_IDENTITY(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, round(length(normalize(vec2(1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0)), dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0))), 0.0))), 0.0, 0.0)))) : _GLF_FUZZED(vec4(77.13, 7.1, -55.89, 199.296))))), mix(vec4(_GLF_FUZZED(-21.03), (_GLF_IDENTITY(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, round(length(normalize(vec2(1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0)), dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0))), 0.0))), 0.0, 0.0)))) : _GLF_FUZZED(vec4(77.13, 7.1, -55.89, 199.296))))))[1], (_GLF_IDENTITY(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, round(length(normalize(vec2(1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0)), dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0))), 0.0))), 0.0, 0.0)))) : _GLF_FUZZED(vec4(77.13, 7.1, -55.89, 199.296))))))[2], (_GLF_IDENTITY(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, round(length(normalize(vec2(1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0)), dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0))), 0.0))), 0.0, 0.0)))) : _GLF_FUZZED(vec4(77.13, 7.1, -55.89, 199.296))))))[3]), vec4((_GLF_IDENTITY(vec4(injectionSwitch, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0), (vec4(injectionSwitch, sqrt(1.0), 0.0)) - _GLF_IDENTITY(tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? tan(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), mat4(1.0) * (vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0))), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), 0.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.8)), bool(false))), 0.0)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, round(length(normalize(vec2(1.0, 1.0)))), length(vec3(0.0, 0.0, 0.0)), determinant(mat4(0.0, sqrt(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0)), dot(vec2(determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0), vec2(1.0, 0.0))), 0.0))), 0.0, 0.0)))) : _GLF_FUZZED(vec4(77.13, 7.1, -55.89, 199.296))))))[0], _GLF_FUZZED(62.19), _GLF_FUZZED(-5885.2081), _GLF_FUZZED(-869.606)), bvec4(true, false, false, false))))))).y)))) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((42.39 - -156.252))), vec2(_GLF_FUZZED(-71.99), (injectionSwitch)[1]), bvec2(false, true))).y), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((42.39 - -156.252))), vec2(_GLF_FUZZED(-71.99), (injectionSwitch)[1]), bvec2(false, true))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((42.39 - -156.252))), vec2(_GLF_FUZZED(-71.99), (injectionSwitch)[1]), bvec2(false, true))).y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(clamp(injectionSwitch, vec2(-93.26, -5.8), injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   int i = 0;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), clamp(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3(((injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), vec2(vec4(vec2(mat3(((injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 0.0, 0.0)))))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), clamp(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), clamp(((injectionSwitch) * mat2(1.0)), ((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(vec2(mat3(((injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), vec2(vec4(vec2(mat3(((injectionSwitch) * mat2(1.0)), 0.0, 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0)), 0.0, 0.0)))))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0))))).y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), true), false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) / 1u), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, min(64, 64))) | (0 | 0)), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-209.657))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), (clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-209.657))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) / 1.0))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
