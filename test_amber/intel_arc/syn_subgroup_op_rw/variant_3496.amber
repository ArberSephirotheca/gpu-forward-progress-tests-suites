#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, exp(0.0), 1.0))), injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           barrier();
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)))))) && true))
  {
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), true, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))), true, true), true)))))))), true)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_DEAD(false), false, true))), true && ((bool(bvec3(_GLF_DEAD(false), false, true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true, true)))), (! (_GLF_DEAD(false))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), true))))))))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(false, ! (! (false)))))), ! (! (bool(bool((false))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)), uvec3(uvec3(gl_WorkGroupID))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (true ? _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED((mat2(1.3, -5150.9132, -7.2, -9542.9529) + mat2(197.195, -3.8, 8.3, 9.4))))) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
      {
       barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) || false), false, false)))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), (uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))))) | (uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))))))) / 1u)), uint(uint(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base))))), (uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))))) | (uint(_GLF_IDENTITY(uint(workgroup_base), ~ (~ (uint(workgroup_base)))))))) / 1u))))) + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), min(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, abs(0.0) + (injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)) : _GLF_FUZZED(workgroup_base))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) | (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))), virtual_gid))) << (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u)))))) - ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u + (_GLF_IDENTITY(uint(8u), uint(8u))))) | 0u)) >> _GLF_IDENTITY(uint(6u), uint(6u)))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u)))))) * 1u) | 0u), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, clamp((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u))))), (true ? true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u) * 1u)) : _GLF_FUZZED(subgroup_local_id))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), max((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, _GLF_IDENTITY(((0u) * 1u) | ((0u) * 1u), clamp(((0u) * 1u) | ((0u) * 1u), ((0u) * 1u) | ((0u) * 1u), _GLF_IDENTITY(((0u) * 1u) | ((0u) * 1u), (((0u) * 1u) | ((0u) * 1u)) / 1u))))) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) * 1u) | ((0u) * 1u))) | 0u), max((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u)), 1u * (_GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))))) ^ 0u)) | 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u))) * 1u) | _GLF_IDENTITY(((0u) * 1u), (((0u) * 1u)) ^ 0u))) | 0u)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)))))) - 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) - ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (uint(_GLF_IDENTITY(6u, (6u) + 0u)))), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))))))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(24179u, 10693u) / uvec2(95060u, 10793u))))), min(uvec2(0u, 0u), uvec2(0u, 0u)))))) * 1u) | 0u), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) * 1u), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u), (true ? _GLF_IDENTITY(true ? (_GLF_IDENTITY(0u, (0u) * 1u) | _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + _GLF_IDENTITY(0u, ~ (~ (0u)))), min(true ? (_GLF_IDENTITY(0u, (0u) * 1u) | _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + _GLF_IDENTITY(0u, ~ (~ (0u)))), true ? (_GLF_IDENTITY(0u, (0u) * 1u) | _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + _GLF_IDENTITY(0u, ~ (~ (0u)))))) : _GLF_FUZZED(subgroup_local_id)))))))))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u))) | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) - ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) / 1u))))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 0u, 1u)))))))), uvec2(0u, 0u)))))) * _GLF_IDENTITY(1u, (1u) + 0u)) | 0u), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u), (true ? true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u) : _GLF_FUZZED(subgroup_local_id))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (_GLF_IDENTITY((0u), 0u | ((0u))) * 1u) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u)) * 1u))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), max((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * _GLF_IDENTITY(1u, (0u | 0u) | (1u))))) | 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, _GLF_IDENTITY(((0u) * 1u), (true ? ((0u) * 1u) : _GLF_FUZZED(next_virtual_gid))) | ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))) * 1u))) | 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) - ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (uint(6u))), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), max(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))))))))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(24179u, 10693u) / uvec2(95060u, 10793u))))), min(uvec2(0u, 0u), uvec2(0u, 0u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(24179u, 10693u) / uvec2(95060u, 10793u))))), min(uvec2(0u, 0u), uvec2(0u, 0u)))))) ^ 0u)) * 1u) | 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) | 0u), min((_GLF_IDENTITY(0u, (0u) * 1u) | 0u), (_GLF_IDENTITY(0u, (0u) * 1u) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))), ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))))) - (0u & 27166u)) + 0u), (true ? true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), ~ (~ (~ (_GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY(~ (~ (_GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (~ (_GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (~ (_GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(93868u) : ~ (~ (_GLF_FUZZED(subgroup_local_id)))))) >> 0u)) << 0u))) + _GLF_IDENTITY(0u, ~ (~ (0u)))) : _GLF_FUZZED(subgroup_local_id)))))))))))) << _GLF_IDENTITY(uint(6u), uint(6u))))], (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (true ? _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid)) : _GLF_FUZZED(workgroup_base))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))), (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)))) | (~ (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))), virtual_gid))) << (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / 1u)))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u), clamp(uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u), uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 1u, 0u)))))) - ((0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u + (_GLF_IDENTITY(uint(8u), uint(8u))))) | 0u)) >> _GLF_IDENTITY(uint(6u), uint(6u)))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, 0u), uvec2(0u, 0u)))))) * 1u) | 0u), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, clamp((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u))))), (true ? true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u, ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u) * 1u)) : _GLF_FUZZED(subgroup_local_id))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), max((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u))))), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, _GLF_IDENTITY(((0u) * 1u) | ((0u) * 1u), clamp(((0u) * 1u) | ((0u) * 1u), ((0u) * 1u) | ((0u) * 1u), _GLF_IDENTITY(((0u) * 1u) | ((0u) * 1u), (((0u) * 1u) | ((0u) * 1u)) / 1u))))) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (_GLF_IDENTITY((0u), clamp((0u), (0u), (0u))) * 1u) | ((0u) * 1u))) | 0u), max((_GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u)), 1u * (_GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))))) ^ 0u)) | 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) | (0u))) * 1u) | _GLF_IDENTITY(((0u) * 1u), (((0u) * 1u)) ^ 0u))) | 0u)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)))))) - 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) - ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (uint(_GLF_IDENTITY(6u, (6u) + 0u)))), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))))))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(24179u, 10693u) / uvec2(95060u, 10793u))))), min(uvec2(0u, 0u), uvec2(0u, 0u)))))) * 1u) | 0u), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_size))), (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) * 1u), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u), (true ? _GLF_IDENTITY(true ? (_GLF_IDENTITY(0u, (0u) * 1u) | _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + _GLF_IDENTITY(0u, ~ (~ (0u)))), min(true ? (_GLF_IDENTITY(0u, (0u) * 1u) | _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + _GLF_IDENTITY(0u, ~ (~ (0u)))), true ? (_GLF_IDENTITY(0u, (0u) * 1u) | _GLF_IDENTITY(0u, (0u) ^ 0u)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))))), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + _GLF_IDENTITY(0u, ~ (~ (0u)))))) : _GLF_FUZZED(subgroup_local_id)))))))))), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | (1u))) | 0u), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) - ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) / 1u))))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 0u), min(uvec2(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), max(~ (0u), _GLF_IDENTITY(~ (0u), uint(uvec3(~ (0u), 0u, 1u)))))))), uvec2(0u, 0u)))))) * _GLF_IDENTITY(1u, (1u) + 0u)) | 0u), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(0u, (0u) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u | (_GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (true ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), 0u ^ (_GLF_FUZZED(subgroup_local_id))) : _GLF_FUZZED(subgroup_local_id))), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u), (true ? true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))) + 0u) : _GLF_FUZZED(subgroup_local_id))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, (_GLF_IDENTITY((0u), 0u | ((0u))) * 1u) | ((_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | 0u)) * 1u))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), (_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u), max((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * _GLF_IDENTITY(1u, (0u | 0u) | (1u))))) | 0u), (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, ((0u) * 1u) | ((0u) * 1u))) | 0u)))) | ((_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) * 1u, _GLF_IDENTITY(((0u) * 1u), (true ? ((0u) * 1u) : _GLF_FUZZED(next_virtual_gid))) | ((_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_id) : 0u))) * 1u))) | 0u))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) * 1u), (_GLF_IDENTITY(0u, (0u) * 1u)) - ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u | (uint(6u))), _GLF_IDENTITY(uint(6u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), max(_GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))))), _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u))))))))))) | 0u)) | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(24179u, 10693u) / uvec2(95060u, 10793u))))), min(uvec2(0u, 0u), uvec2(0u, 0u))))), (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(0u, 0u), (true ? uvec2(0u, 0u) : _GLF_FUZZED((uvec2(24179u, 10693u) / uvec2(95060u, 10793u))))), min(uvec2(0u, 0u), uvec2(0u, 0u)))))) ^ 0u)) * 1u) | 0u), (_GLF_IDENTITY(true ? _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) * 1u) | 0u), min((_GLF_IDENTITY(0u, (0u) * 1u) | 0u), (_GLF_IDENTITY(0u, (0u) * 1u) | 0u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id))))), ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (~ (_GLF_FUZZED(subgroup_local_id)))))) - (0u & 27166u)) + 0u), (true ? true ? (_GLF_IDENTITY(0u, (0u) * 1u) | 0u) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), (_GLF_FUZZED(subgroup_local_id)) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(subgroup_local_id)), ~ (~ (~ (_GLF_FUZZED(subgroup_local_id))))))), _GLF_IDENTITY(~ (~ (_GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (~ (_GLF_FUZZED(subgroup_local_id))), (_GLF_IDENTITY(~ (~ (_GLF_FUZZED(subgroup_local_id))), (false ? _GLF_FUZZED(93868u) : ~ (~ (_GLF_FUZZED(subgroup_local_id)))))) >> 0u)) << 0u))) + _GLF_IDENTITY(0u, ~ (~ (0u)))) : _GLF_FUZZED(subgroup_local_id)))))))))))) << _GLF_IDENTITY(uint(6u), uint(6u))))]) ^ 0u), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (false ? _GLF_FUZZED(-53519) : 6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)) < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), 0u ^ (subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), max(0u ^ (subgroup_size), 0u ^ (subgroup_size)))), subgroup_size)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ _GLF_IDENTITY((subgroup_size), (false ? _GLF_FUZZED(subgroup_id) : (subgroup_size)))), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), subgroup_size))))), (true ? _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))))) : _GLF_FUZZED(workgroup_id)))), _GLF_IDENTITY(uint(uvec3(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), clamp(min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), (min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)) ^ 0u), min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) | (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)))), subgroup_size))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))) | ((_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)))))))))) : _GLF_FUZZED(workgroup_id)))), 1u, 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_local_id))), min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))) | (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), clamp(min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size), min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size))))))) : _GLF_FUZZED(workgroup_id)))), 1u, 1u)))))), 0u ^ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), 0u ^ (subgroup_size)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), subgroup_size)), 0u ^ (subgroup_size))))) - 0u)))), true && (subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u ^ (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), 0u ^ (subgroup_size))) ^ (1u ^ 1u)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0) & 1), (true ? (1 & _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))) : _GLF_FUZZED(13320))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) - 0)))); _injected_loop_counter --)
      {
       do
        {
         atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], _GLF_IDENTITY(_GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, (read) ^ 0u))), max(_GLF_IDENTITY(read, min(read, read)), read)), _GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), (~ (4)) ^ 0)) / (1 & 1)))), ~ (~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 1), clamp(ivec2(4, 1), _GLF_IDENTITY(ivec2(4, 1), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(4, 1), clamp(_GLF_IDENTITY(ivec2(4, 1), (ivec2(4, 1)) | (ivec2(4, 1))), ivec2(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, _GLF_IDENTITY(1, 0 + (1))))), ivec2(4, 1)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(ivec2(4, 1), clamp(_GLF_IDENTITY(ivec2(4, 1), (ivec2(4, 1)) | (ivec2(4, 1))), ivec2(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, _GLF_IDENTITY(1, 0 + (1))))), ivec2(4, 1))))), (~ ((_GLF_IDENTITY(ivec2(4, 1), clamp(_GLF_IDENTITY(ivec2(4, 1), (ivec2(4, 1)) | (ivec2(4, 1))), ivec2(_GLF_IDENTITY(4, 0 ^ (4)), _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 ^ (1)), 1, _GLF_IDENTITY(1, 0 + (1))))), ivec2(4, 1)))))) | ivec2(0, 0)))) | (ivec2(4, 1))), ivec2(4, 1)))))))), 64, 4);
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), false || (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0))) > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false)))) && true)), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), false)), (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec3(bvec3(false, false, false)))))))))), false))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
              barrier();
            }
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), bool(bvec3(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.7)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))), 0.0))), injectionSwitch.x), 0.0 + (min(_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), max(float(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))), float(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(_GLF_IDENTITY(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), transpose(transpose(mat2x3(1.0, sqrt(1.0), 0.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))))))))))), vec2(1.0, 0.0))), 0.0))), injectionSwitch.x)))) > injectionSwitch.y)), true)))); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) ^ 0))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           for(int _injected_loop_counter = (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), cos(0.0), log(1.0), 0.0, 0.0, 0.0)))) >> _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (false ? _GLF_FUZZED(_injected_loop_counter) : 8))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)))) < ((_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) | (1)), 1, (1 & _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(_injected_loop_counter)))), 0))) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-91630) : int(4))))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-91630) : int(4))))), (_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(_GLF_IDENTITY(-91630, (false ? _GLF_FUZZED(_injected_loop_counter) : -91630))) : int(4)))))) | (_GLF_IDENTITY(int(4), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-91630) : int(4))), max(_GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-91630) : int(4))), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-91630) : int(4))))))))))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = _GLF_IDENTITY((((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) - 0)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) << 0), 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))), max((int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))), (int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))))) ^ 0))) >> _GLF_IDENTITY(int(0), int(0))), ((((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) - 0)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) << 0), 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))), max((int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))), (int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))))) ^ 0))) >> _GLF_IDENTITY(int(0), int(0)))) | ((((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) - 0)) << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY((0), ~ (~ ((0)))) << 0), 0))), _GLF_IDENTITY((int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))), max((int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))), (int(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-43217) : 0)))))) ^ 0))) >> _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 + (_injected_loop_counter)) > (0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
              }
            }
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
          }
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), true, false))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), true, false))))), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), bvec2(bvec4(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), false), true, false)))))))), true, true)))))); _injected_loop_counter --)
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((injectionSwitch.x > injectionSwitch.y)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))))))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)))), float(_GLF_FUZZED(((bvec2(true, true) != bvec2(true, true)) ? -6.2 : 2.0))), bool(false))) > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0)))), float(_GLF_FUZZED(((bvec2(true, true) != bvec2(true, true)) ? -6.2 : 2.0))), bool(false))) > injectionSwitch.y)))), bool(bvec2(! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))))) && true)))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             subgroupAll(false);
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(663.392) : injectionSwitch.y))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-366.006)), bool(false)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)))[0], _GLF_FUZZED(vec4(-6.2, -3723.4423, 76.73, -28.29).r)), vec2(_GLF_FUZZED(460.053), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-366.006, mix(float(_GLF_IDENTITY(-366.006, (true ? -366.006 : _GLF_FUZZED(7612.0027)))), float(_GLF_FUZZED(-4907.1875)), bool(false))))), bool(false)))), false || ((injectionSwitch.x > injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)))[0], _GLF_FUZZED(vec4(-6.2, -3723.4423, 76.73, -28.29).r)), vec2(_GLF_FUZZED(460.053), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0)), mat3x2(mat3x2(mat3x2(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0)))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(_GLF_IDENTITY(mat3x2(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0)), mat3x2(mat3x2(mat3x2(mat2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_IDENTITY(dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), dot(vec2(0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), vec2(1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))), 0.0))))))))))) > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec4(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-210.273), _GLF_FUZZED((-5.8 - 7.5))), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), 0.0, abs(1.0), 0.0, 0.0)))[0], _GLF_FUZZED(vec4(-6.2, -3723.4423, 76.73, -28.29).r)), vec2(_GLF_FUZZED(460.053), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), 0.0, abs(1.0), 0.0, 0.0)))[1]), bvec2(false, true)))).x > injectionSwitch.y)))))) && true)))))))) || false))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))), true), false, false)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), true), false, false)))))))), (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((4.3 - injectionSwitch)))).x < injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, true))))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, min(read, read)), 4, 64, 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, 0.0 + (1.0))) > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ _GLF_IDENTITY((~ (int(8))), ((~ (int(8)))) >> 0)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(0 ^ (int(8)), (0 ^ (int(8))) | (0 ^ (int(8))))))), clamp(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), _GLF_IDENTITY(int(8), 0 ^ (_GLF_IDENTITY(int(8), (int(8)) >> 0))))), int(_GLF_IDENTITY(int((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), _GLF_IDENTITY(int(8), 0 ^ (int(8)))))), int(ivec2(_GLF_IDENTITY(int((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), _GLF_IDENTITY(int(8), 0 ^ (int(8)))))), (int((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), _GLF_IDENTITY(int(8), 0 ^ (int(8))))))) | (int((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), _GLF_IDENTITY(int(8), 0 ^ (int(8)))))))), 1))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), (_GLF_IDENTITY(int(8), ~ _GLF_IDENTITY((~ (int(8))), (_GLF_IDENTITY((~ (int(8))), clamp((~ (int(8))), (~ (int(8))), (~ (int(8)))))) | (_GLF_IDENTITY((~ (int(8))), (1 ^ 1) | (_GLF_IDENTITY((~ (int(8))), min((~ (int(8))), (~ (int(8))))))))))) + 0), _GLF_IDENTITY(int(8), 0 ^ (int(8))))), 0 ^ ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ _GLF_IDENTITY((~ (int(8))), max(_GLF_IDENTITY((~ (int(8))), max(_GLF_IDENTITY((~ (int(8))), ((~ (int(8)))) | ((~ (int(8))))), (~ (int(8))))), _GLF_IDENTITY((~ (int(8))), (false ? _GLF_FUZZED(14321) : (~ (int(8)))))))), _GLF_IDENTITY(int(8), 0 ^ _GLF_IDENTITY((int(8)), ((int(8))) << 0)))))), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) - 0)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) - 0)), int(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(int(8), (int(8)) - 0)), (~ (_GLF_IDENTITY(int(8), (int(8)) - 0))) | 0), 1, 1, 1)))) - 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(8), 0 ^ (int(8))), (_GLF_IDENTITY(int(8), 0 ^ (int(8)))) | _GLF_IDENTITY(0, 1 * (0))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-14340) : (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), _GLF_IDENTITY(int(8), 0 ^ (int(8))))), (false ? _GLF_FUZZED(90785) : false ? _GLF_FUZZED(-14340) : (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ~ (~ (int(8)))), _GLF_IDENTITY(int(8), 0 ^ (int(8))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), bool(bvec2(false, false)))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (true ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))).y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! ((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(true, (true) && true)), bool(bvec4(false || _GLF_IDENTITY((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))))), ! (! ((_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x), 1.0 * (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))) < injectionSwitch.y)), false, false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true)), false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)))))), true))), _GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((true), ((true)) || false), ! (! (_GLF_IDENTITY((true), ((true)) || false)))), true, false, false))) && true))), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, ! (! (true)))) && true)), (false || (_GLF_IDENTITY(true, (true) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true)))), 1.0))).x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY(true, true && (true)), false, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY(true, true && (true)), false, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, ! (! (true)))) && true), _GLF_IDENTITY(true, true && (true)), false, true)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))), bool(bvec2((false || (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))), false))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * sqrt(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED((+ -4761.0410))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true)))), bool(true)))), bool(true)))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])), injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))) * sqrt(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED((+ -4761.0410))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true)))), bool(true)))), bool(true)))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])), injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat3x4(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)) * ((injectionSwitch))) * sqrt(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED((+ -4761.0410))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED(-0.5)), float(_GLF_IDENTITY(float(vec2(1.0, 1.0)), mix(float(_GLF_FUZZED(2.6)), float(float(vec2(1.0, 1.0))), bool(true)))), bool(true)))), bool(true)))), 1.0))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], injectionSwitch[1])), injectionSwitch)).y))) || false)))))))))))));
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))), false))), false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))), false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, true && (false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec3(bvec3(! (_GLF_DEAD(false)), false, false)))), false))), false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(false, true, true, false))), false), bvec3(bvec4(bvec3(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), false, false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true), false))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false)))) && true), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))) || false)) && true)), false, false), false))))), true), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, (false) && true), false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, true, true))), false, false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), false, false), false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true, false), true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true, false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true, false), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false)), false)))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true, false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))), true), false))), true, true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, (false) && true)), false))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), true, false)))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), true, false)))), false)), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, _GLF_IDENTITY(false, (false) && true)), false))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), true, false)))), false)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), _GLF_IDENTITY(false, ! (! (false)))))))), true), true)), true, false)))), false)), false)))), true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), false, false), false))))), true), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))), false, false), false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(! (_GLF_DEAD(false)), false, false), bvec3(bvec4(bvec3(! (_GLF_DEAD(false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), false), false))))), true), false))), true))), true, true)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))), false))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           barrier();
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))) || false)))), (! (_GLF_IDENTITY(false, bool(bool(false))))) || false)))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
