#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_22 {
 mat2 _f0;
} ;

struct _GLF_struct_21 {
 mat4x3 _f0;
 bool _f1;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 mat2x3 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_19 {
 mat4x2 _f0;
 float _f1;
 mat3x4 _f2;
 bvec4 _f3;
 mat2x3 _f4;
 mat4x3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_18 {
 mat4x3 _f0;
 ivec3 _f1;
 bvec4 _f2;
 vec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 mat3x4 _f1;
 uint workgroup_id;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 mat3x4 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_24 {
 mat3 _f0;
 uvec3 _f1;
 _GLF_struct_20 _f2;
 _GLF_struct_23 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_16 {
 uint read;
 ivec2 _f0;
} ;

struct _GLF_struct_14 {
 bool _f0;
} ;

struct _GLF_struct_12 {
 mat2 _f0;
 vec3 _f1;
 bool _f2;
 ivec4 _f3;
 ivec3 _f4;
} ;

struct _GLF_struct_13 {
 uint _f0;
 uvec2 _f1;
 _GLF_struct_12 _f2;
 ivec4 _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_10 {
 uvec3 GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base;
 ivec2 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_9 {
 bool _f0;
 vec2 _f1;
 ivec4 _f2;
 ivec2 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_8 {
 mat2 _f0;
 mat4 _f1;
 uint _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_8 _f0;
 mat3x2 _f1;
 vec3 _f2;
 mat2x4 _f3;
 mat3x2 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
} ;

struct _GLF_struct_15 {
 mat4x3 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_11 _f2;
 _GLF_struct_13 _f3;
 _GLF_struct_14 _f4;
} ;

struct _GLF_struct_4 {
 mat4x3 _f0;
 vec2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4 _f1;
 bvec2 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 bool _f1;
 int _f2;
 _GLF_struct_3 _f3;
 _GLF_struct_4 _f4;
} ;

struct _GLF_struct_1 {
 bvec2 _f0;
 uint workgroup_size;
 ivec3 _f1;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat4x2 _f1;
 ivec2 _f2;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 _GLF_struct_1 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_2 _f0;
 mat3 _f1;
 mat3x4 _f2;
 _GLF_struct_5 _f3;
 mat4x2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 _GLF_struct_15 _GLF_struct_replacement_15;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_2(_GLF_struct_0(true, mat4x2(1.0), ivec2(1)), vec3(1.0), _GLF_struct_1(bvec2(true), gl_WorkGroupSize.x, ivec3(1)), uvec3(1u)), mat3(1.0), mat3x4(1.0), _GLF_struct_5(bvec2(true), true, 1, _GLF_struct_3(1.0, mat4(1.0), bvec2(true), vec3(1.0)), _GLF_struct_4(mat4x3(1.0), vec2(1.0), uvec4(1u))), mat4x2(1.0));
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(mat3(1.0), uvec3(1u), _GLF_struct_20(bvec3(true), mat3x4(1.0), _GLF_struct_17(bvec4(true), mat3x4(1.0), gl_WorkGroupID.x), _GLF_struct_18(mat4x3(1.0), ivec3(1), bvec4(true), vec4(1.0), ivec2(1)), _GLF_struct_19(mat4x2(1.0), 1.0, mat3x4(1.0), bvec4(true), mat2x3(1.0), mat4x3(1.0), mat4x2(1.0))), _GLF_struct_23(_GLF_struct_21(mat4x3(1.0), true), _GLF_struct_22(mat2(1.0)), mat2x3(1.0), mat3x4(1.0)), mat3x2(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_struct_replacement_6._f0._f2.workgroup_size * _GLF_struct_replacement_24._f2._f2.workgroup_id;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
 uint virtual_gid = _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + subgroup_id * _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + subgroup_local_id;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x;
 uint next_virtual_gid = _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.z + subgroup_id * _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x + ((subgroup_local_id + 1) % _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x);
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(atomicLoad(buf[_GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], 4, 64, 0), ivec2(1));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(subgroup_local_id + 1 < _GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.x)
  {
   atomicStore(checker[_GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], _GLF_struct_replacement_16.read, 4, 64, 4);
   subgroupAll(false);
  }
 else
  {
   atomicStore(buf[_GLF_struct_replacement_15._f2._f6.GLF_merged3_0_1_13_1_1_11_2_1_14subgroup_sizevirtual_gidworkgroup_base.y], _GLF_struct_replacement_16.read, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
