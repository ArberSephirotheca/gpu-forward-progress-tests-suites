#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_local_id)));
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) / ((_GLF_IDENTITY(uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u)), (_GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), max(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), uvec3(uvec4(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), 0u))))) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))))) >> _GLF_IDENTITY(uvec3(_GLF_IDENTITY(6u, (6u) - (0u | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(6u), (true ? uvec3(6u) : _GLF_FUZZED(uvec3(19981u, 120229u, 114068u)))), (true ? _GLF_IDENTITY(uvec3(6u), (true ? uvec3(6u) : _GLF_FUZZED(uvec3(19981u, 120229u, 114068u)))) : _GLF_FUZZED(uvec3(189488u, 38051u, 112173u))))))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)).x)), injectionSwitch.x)) > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.2)))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-5.2))))))))), (_GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))), false || ((! ((injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y))), _GLF_IDENTITY(false, ! (! (false))) || ((! ((injectionSwitch.x > injectionSwitch.y))))), false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(false || _GLF_IDENTITY(((! ((injectionSwitch.x > injectionSwitch.y)))), false || (((! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (false || _GLF_IDENTITY(_GLF_IDENTITY(((! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(((! ((injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (((! ((injectionSwitch.x > injectionSwitch.y)))))))))), false), false, false)), true, true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), sqrt(0.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), sqrt(0.0)))), cos(0.0))), min(vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), sqrt(0.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), sqrt(0.0)))), cos(0.0))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, tan(0.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(abs(0.0), sqrt(0.0))), dot(vec2(1.0, 1.0), vec2(abs(0.0), sqrt(0.0)))), cos(0.0)))))), min(injectionSwitch, injectionSwitch)), mat2(1.0) * (injectionSwitch)))).y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) && true))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))))), false, true)), (_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-552.903), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(97522u))), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-552.903), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(float(97522u))), bvec2(true, false))).x > injectionSwitch.y)))))))))))), false, true)), false || (bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.3) : injectionSwitch.y)))) || (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! _GLF_IDENTITY((! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)), false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)), false))))))) || false))))), true, true, false)), false || (bool(bvec4((! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))), true, true, false))))))))), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.3) : injectionSwitch.y)))) || (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), ! _GLF_IDENTITY((! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4((! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)), false)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)), false))))))) || false))))), true, true, false)), false || (bool(bvec4((! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))), true, true, false)))))))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)) || (injectionSwitch.x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), ! (! ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(cosh(injectionSwitch), injectionSwitch)) : injectionSwitch.x)) > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(cosh(injectionSwitch), injectionSwitch)) : injectionSwitch.x)) > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))))), (! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.2) : injectionSwitch.y)))))) || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true))))))), _GLF_IDENTITY(false || (! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6335.5741), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 368.515 : -3.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6335.5741), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 368.515 : -3.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6335.5741), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 368.515 : -3.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6335.5741), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 368.515 : -3.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6335.5741), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 368.515 : -3.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)), ! (! (bool(bvec2(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6335.5741), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((true ? 368.515 : -3.9))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), false)))))))))))))))))), false)))))))), false, true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) > injectionSwitch.y))), ! (! (bool(bvec3(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, true), false)), bvec2(bvec4(bvec2(bvec3(bvec2(true, true), false)), true, true)))))))))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), sqrt(1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-584.301) : 1.0)), length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, sqrt(1.0)), mat3x4(0.0, _GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8214.4713) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)))), 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))), (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))) || false)) ? _GLF_FUZZED(-584.301) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0))), length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, sqrt(1.0)))))), sqrt(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, sqrt(0.0), determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(step(-6565.6197, 17.27))))) - sin(0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))).x > injectionSwitch.y))), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ((_GLF_IDENTITY(false, true && (false))) && true) || false), ! (! ((_GLF_IDENTITY(false, true && (false))) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ((_GLF_IDENTITY(false, true && (false))) && true) || false), ! (! ((_GLF_IDENTITY(false, true && (false))) && true))))))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), sqrt(1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-584.301) : 1.0)), length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, sqrt(1.0)), mat3x4(0.0, _GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8214.4713) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)))), 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))), (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))) || false)) ? _GLF_FUZZED(-584.301) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0))), length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, sqrt(1.0)))))), sqrt(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, sqrt(0.0), determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(step(-6565.6197, 17.27))))) - sin(0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))).x > injectionSwitch.y))), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ((_GLF_IDENTITY(false, true && (false))) && true) || false), ! (! ((_GLF_IDENTITY(false, true && (false))) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ((_GLF_IDENTITY(false, true && (false))) && true) || false), ! (! ((_GLF_IDENTITY(false, true && (false))) && true))))))))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), sqrt(1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-584.301) : 1.0)), length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, sqrt(1.0)), mat3x4(0.0, _GLF_IDENTITY(0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8214.4713) : _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(3.8) : 0.0)))), 0.0, 0.0, 0.0, 0.0) + (mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))), (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))) || false)) ? _GLF_FUZZED(-584.301) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - 0.0))), length(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 1.0, sqrt(1.0)))))), sqrt(0.0), determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, sqrt(1.0), 1.0, sqrt(0.0), determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(step(-6565.6197, 17.27))))) - sin(0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 0.0))).x > injectionSwitch.y))), false, false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ((_GLF_IDENTITY(false, true && (false))) && true) || false), ! (! ((_GLF_IDENTITY(false, true && (false))) && true)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) && true, ((_GLF_IDENTITY(false, true && (false))) && true) || false), ! (! ((_GLF_IDENTITY(false, true && (false))) && true))))))))))))))) || false)))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u)) | (workgroup_size)) * workgroup_id, workgroup_size * workgroup_id));
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))) + 0u)))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base))))) ^ 0u))) | (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), _GLF_IDENTITY(((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))), 0u | (((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))), clamp(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))), _GLF_IDENTITY(1u, (1u) * 1u) * ((subgroup_base))))) | ((~ (subgroup_base))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_size)))))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), max(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))) + 0u)))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base))))) ^ 0u))) | (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), _GLF_IDENTITY(((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))), 0u | (((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))), clamp(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))), _GLF_IDENTITY(1u, (1u) * 1u) * ((subgroup_base))))) | ((~ (subgroup_base))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_size)))))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), max(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))))))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))) + 0u)))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base))))) ^ 0u))) | (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), _GLF_IDENTITY(((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))), 0u | (((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))), clamp(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))), _GLF_IDENTITY(1u, (1u) * 1u) * ((subgroup_base))))) | ((~ (subgroup_base))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_size)))))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), max(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))))))))), (true ? workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), 0u ^ (~ (subgroup_base))))), (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)), (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))) + 0u)))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base)))), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, 0u + (subgroup_base))))), ((subgroup_base)) | ((subgroup_base))), 0u ^ (~ (subgroup_base))))) ^ 0u))) | (_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), _GLF_IDENTITY(((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))), 0u | (((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))), clamp(_GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), clamp((subgroup_base), (subgroup_base), (subgroup_base))), _GLF_IDENTITY(1u, (1u) * 1u) * ((subgroup_base))))) | ((~ (subgroup_base))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (_GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) : _GLF_FUZZED(workgroup_size)))))))), _GLF_IDENTITY(~ (subgroup_base), 0u ^ _GLF_IDENTITY(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), max(_GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base)))), _GLF_IDENTITY((~ (subgroup_base)), ((~ _GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))))) | ((~ (subgroup_base))))))))))))) : _GLF_FUZZED(subgroup_size)))) << 0u)) | 0u) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id, 0u, 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(subgroup_local_id, 0u, 0u, 0u))))) * 1u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : subgroup_local_id)), subgroup_local_id, subgroup_local_id))) ^ 0u)) | 0u)) | (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)) | 0u)))))) + 0u))), _GLF_IDENTITY(subgroup_local_id, uint(uint(subgroup_local_id)))))) - 0u);
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id))) / 1u))) : _GLF_FUZZED(uvec2(89044u, 180082u).g))), subgroup_local_id))) / 1u) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 + (1))) | (1))) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(uint(uvec2(buf[virtual_gid], uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))))))), 0u ^ (uint(uvec2(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))), 4, 64, 2);
 if((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, ~ (~ (0u))) ^ (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))))) % 2) == 0)
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY(0u, (0u) / 1u) | (next_virtual_gid))], uint(1), _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), ~ (~ ((0))))) | (_GLF_IDENTITY((0), ((0)) ^ 0))) | (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(0, max(0, 0)))), 0, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, 0))) / 1), 0))))))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0))), ((0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))) | ((0) | (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, max(0, 0)), 0)))))))) * 1))), 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, _GLF_IDENTITY((next_virtual_gid), (_GLF_IDENTITY((next_virtual_gid), min((next_virtual_gid), (next_virtual_gid)))) | ((next_virtual_gid))) | (next_virtual_gid))], uint(1), _GLF_IDENTITY(4, int(ivec3(4, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(4, ~ (~ (4))));
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
