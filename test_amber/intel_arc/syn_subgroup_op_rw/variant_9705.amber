#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 float _f0;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 ivec3 _f1;
 mat2x3 _f2;
 uint virtual_gid;
 mat3 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (bool(bvec3(_GLF_DEAD(false), true, false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-1.7)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y)), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-4.6)), clamp(float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)), float(_GLF_FUZZED(-4.6)))), float(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], 1.0 * (injectionSwitch[0])), injectionSwitch[1])).y))), clamp(min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(1.0 * (injectionSwitch.y), float(mat2x3(1.0 * (injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 1.0))))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), clamp(_GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)) * (injectionSwitch.y))), min(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))))), bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, round(length(normalize(sqrt(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.0)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))) + (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, round(length(normalize(sqrt(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))), 1.0, 0.0, 0.0, 1.0))))) > injectionSwitch.y))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec2(bvec2(_GLF_DEAD(false), true))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(_GLF_DEAD(false), true))), false))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, _GLF_IDENTITY(false, false || (false)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-74.31))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((mat2x3(-0.2, -0.3, 5.9, -155.243, -74.53, 710.104) , -6034.0631)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true, false))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-74.31))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED((mat2x3(-0.2, -0.3, _GLF_IDENTITY(5.9, (5.9) / 1.0), -155.243, -74.53, 710.104) , -6034.0631)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, true, false)))))))) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (false)), false)))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (false)), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true && (false)), false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.7)), float(injectionSwitch.y), bool(true))), false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! (true)) || false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((! (false))))), true, false))))))))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), _GLF_IDENTITY(true, (true) || false) && (false))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), true && ((_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), true && ((_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)), true)), ! (! (bool(bvec2(bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), true && ((_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)), true))))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(2448.9893), _GLF_FUZZED((341.995 / -3031.7153))), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(6.3)))) + tan(0.0)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(2448.9893), _GLF_FUZZED((341.995 / -3031.7153))), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(6.3)))) + tan(0.0)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x, sqrt(0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(2448.9893), _GLF_FUZZED((341.995 / -3031.7153))), vec2(_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (_GLF_IDENTITY(((injectionSwitch) * mat2(1.0))[0], (true ? ((injectionSwitch) * mat2(1.0))[0] : _GLF_FUZZED(6.3)))) + tan(0.0)), ((injectionSwitch) * mat2(1.0))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))).x))) - determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0))) > injectionSwitch.y)), bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)) || (true)), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && ((_GLF_IDENTITY(! (false), true && (! (false))))))), true, false)))))))))))))) && true)))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(47.46)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(_GLF_IDENTITY(47.46, _GLF_IDENTITY(float(_GLF_IDENTITY(float(47.46), clamp(float(47.46), float(47.46), float(47.46)))), max(float(_GLF_IDENTITY(float(47.46), clamp(float(47.46), float(47.46), float(47.46)))), float(_GLF_IDENTITY(float(47.46), clamp(float(47.46), float(47.46), float(47.46))))))))), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(_GLF_IDENTITY(43.41, min(43.41, _GLF_IDENTITY(43.41, mix(float(_GLF_FUZZED(0.2)), float(43.41), bool(true))))), -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), _GLF_IDENTITY(bool(false), false || (bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), bool(false))), (false ? _GLF_FUZZED(-1.0) : _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), bool(false))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), bool(false))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451))), mix(float((true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))), float(_GLF_FUZZED((true ? 9.1 : 185.592))), bool(false)))) : _GLF_FUZZED(atanh(1.8))))), float(_GLF_FUZZED(47.46)), bool(false)))), float(_GLF_FUZZED(4.5)), bool(false))))))) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(47.46)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8)), max(true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8)), true ? _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(reflect(43.41, -329.451)))) : _GLF_FUZZED(atanh(1.8))))))), float(_GLF_FUZZED(47.46)), bool(false))))) > injectionSwitch.y))))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))) && (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), (log2(vec2(-5500.5767, -2.0))) - vec2(0.0, 0.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), ! (! (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY((log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))), max((log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))), (log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))))) + vec2(0.0, 0.0))))) : injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch), min((false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), mix(vec2((log2(vec2(-5500.5767, -2.0)))[0], (log2(vec2(-5500.5767, -2.0)))[1]), vec2(_GLF_FUZZED(-38.15), _GLF_FUZZED(-3.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(_GLF_IDENTITY(-5500.5767, 0.0 + (-5500.5767)), -2.0)), max(log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), mix(vec2(_GLF_FUZZED((-4203.4023 * 7.3)), (vec2(-5500.5767, -2.0))[1]), vec2((vec2(-5500.5767, -2.0))[0], _GLF_FUZZED(-6438.1369)), bvec2(true, false)))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)), mix(vec2((vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-809.096)), vec2(_GLF_FUZZED((false ? -6.3 : -8.1)), (vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(false, true))))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(_GLF_IDENTITY(-5500.5767, 0.0 + (-5500.5767)), -2.0)), max(log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), mix(vec2(_GLF_FUZZED((-4203.4023 * 7.3)), (vec2(-5500.5767, -2.0))[1]), vec2((vec2(-5500.5767, -2.0))[0], _GLF_FUZZED(-6438.1369)), bvec2(true, false)))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)), mix(vec2((vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-809.096)), vec2(_GLF_FUZZED((false ? -6.3 : -8.1)), (vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(false, true))))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), false)))))))))))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), (log2(vec2(-5500.5767, -2.0))) - vec2(0.0, 0.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), ! (! (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY((log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))), max((log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))), (log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))))) + vec2(0.0, 0.0))))) : injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch), min((false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), mix(vec2((log2(vec2(-5500.5767, -2.0)))[0], (log2(vec2(-5500.5767, -2.0)))[1]), vec2(_GLF_FUZZED(-38.15), _GLF_FUZZED(-3.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(_GLF_IDENTITY(-5500.5767, 0.0 + (-5500.5767)), -2.0)), max(log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), mix(vec2(_GLF_FUZZED((-4203.4023 * 7.3)), (vec2(-5500.5767, -2.0))[1]), vec2((vec2(-5500.5767, -2.0))[0], _GLF_FUZZED(-6438.1369)), bvec2(true, false)))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)), mix(vec2((vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-809.096)), vec2(_GLF_FUZZED((false ? -6.3 : -8.1)), (vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(false, true))))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(_GLF_IDENTITY(-5500.5767, 0.0 + (-5500.5767)), -2.0)), max(log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), mix(vec2(_GLF_FUZZED((-4203.4023 * 7.3)), (vec2(-5500.5767, -2.0))[1]), vec2((vec2(-5500.5767, -2.0))[0], _GLF_FUZZED(-6438.1369)), bvec2(true, false)))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)), mix(vec2((vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-809.096)), vec2(_GLF_FUZZED((false ? -6.3 : -8.1)), (vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(false, true))))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), false)))))))))))) || false), bool(bvec4(_GLF_IDENTITY((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), (log2(vec2(-5500.5767, -2.0))) - vec2(0.0, 0.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), ! (! (((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), ((! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY((log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))), max((log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))), (log2(vec2(-5500.5767, _GLF_IDENTITY(-2.0, mix(float(_GLF_FUZZED(9945.5148)), float(-2.0), bool(true)))))))) + vec2(0.0, 0.0))))) : injectionSwitch)).x > injectionSwitch.y)), ! (! _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch), min((false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch), (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), min(_GLF_IDENTITY(vec2(-5500.5767, -2.0), vec2(0.0, 0.0) + (vec2(-5500.5767, -2.0))), _GLF_IDENTITY(vec2(-5500.5767, -2.0), (true ? vec2(-5500.5767, -2.0) : _GLF_FUZZED(vec2(4655.2285, 8320.4511)))))))))) : injectionSwitch)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), mix(vec2((log2(vec2(-5500.5767, -2.0)))[0], (log2(vec2(-5500.5767, -2.0)))[1]), vec2(_GLF_FUZZED(-38.15), _GLF_FUZZED(-3.9)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(_GLF_IDENTITY(-5500.5767, 0.0 + (-5500.5767)), -2.0)), max(log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), mix(vec2(_GLF_FUZZED((-4203.4023 * 7.3)), (vec2(-5500.5767, -2.0))[1]), vec2((vec2(-5500.5767, -2.0))[0], _GLF_FUZZED(-6438.1369)), bvec2(true, false)))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)), mix(vec2((vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-809.096)), vec2(_GLF_FUZZED((false ? -6.3 : -8.1)), (vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(false, true))))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), false)))), ! (! (bool(_GLF_IDENTITY(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(_GLF_IDENTITY(-5500.5767, 0.0 + (-5500.5767)), -2.0)), max(log2(_GLF_IDENTITY(vec2(-5500.5767, -2.0), mix(vec2(_GLF_FUZZED((-4203.4023 * 7.3)), (vec2(-5500.5767, -2.0))[1]), vec2((vec2(-5500.5767, -2.0))[0], _GLF_FUZZED(-6438.1369)), bvec2(true, false)))), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), bvec2(bvec3(bvec2(((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), _GLF_IDENTITY(vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)), mix(vec2((vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[0], _GLF_FUZZED(-809.096)), vec2(_GLF_FUZZED((false ? -6.3 : -8.1)), (vec2(mat2x3(log2(vec2(-5500.5767, -2.0)), 1.0, 0.0, 1.0, 0.0)))[1]), bvec2(false, true))))))) : injectionSwitch)).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(log2(vec2(-5500.5767, -2.0)), max(log2(vec2(-5500.5767, -2.0)), log2(vec2(-5500.5767, -2.0))))) : injectionSwitch)).x > injectionSwitch.y)))))), true), false)))))))))))) || false), true, true, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! (! (_GLF_DEAD(false))))), true))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! (! (_GLF_DEAD(false))))), true))))), (_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! (! (_GLF_DEAD(false))))), true)))))) && true), true, false, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! (! (_GLF_DEAD(false))))), true))))), (_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true), ! (! (! (_GLF_DEAD(false))))), true)))))) && true), true, false, false)), true))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x), ((gl_WorkGroupSize.x)) ^ 0u) >> 0u);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) : _GLF_FUZZED(num_workgroup))), (workgroup_size) >> 0u), _GLF_IDENTITY(max(workgroup_size, workgroup_size), min(_GLF_IDENTITY(max(workgroup_size, workgroup_size), (max(workgroup_size, workgroup_size)) | 0u), max(workgroup_size, workgroup_size)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), clamp(uvec4(workgroup_id, 1u, 1u, 1u), uvec4(workgroup_id, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), clamp(uvec4(workgroup_id, 1u, 1u, 1u), _GLF_IDENTITY(uvec4(workgroup_id, 1u, 1u, 1u), (uvec4(workgroup_id, 1u, 1u, 1u)) / uvec4(1u, 1u, 1u, 1u)), uvec4(workgroup_id, 1u, 1u, 1u))))))), (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> (135986u & 0u))) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(77.33, 7.4)) : injectionSwitch)).y)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(77.33, 7.4)) : injectionSwitch)).y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(77.33, 7.4)) : injectionSwitch)).y))))))) || false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(77.33, 7.4)) : injectionSwitch)).y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(77.33, 7.4)) : injectionSwitch)).y))))))) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(77.33, 7.4)) : injectionSwitch)).y)))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), sin(0.0), sqrt(1.0), 0.0, round(length(normalize(1.0))), 0.0, abs(0.0)))))) > injectionSwitch.y))) || false)), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(2.5)), bool(false))) < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(77.33, 7.4)) : injectionSwitch)).y))))))) || false))))), false)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(1.0), ivec3(1), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(8.0) : _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))), (true ? (false ? _GLF_FUZZED(8.0) : _GLF_IDENTITY(1.0, float(vec2(1.0, 0.0)))) : _GLF_FUZZED(-5.1))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u), min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_id)), subgroup_id, subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | (subgroup_id * subgroup_size))) >> 0u), uint(uvec4(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u ^ (subgroup_id * subgroup_size)), (subgroup_id * subgroup_size) | (_GLF_IDENTITY(subgroup_id * subgroup_size, clamp(subgroup_id * subgroup_size, subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, subgroup_id * subgroup_size))))))) >> 0u), 0u, 1u, 0u))), subgroup_id * subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), (1u & 1u)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))) >> 0u) + subgroup_local_id, mat3(1.0)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false)), true && (_GLF_IDENTITY((_GLF_DEAD(false)) || false, false || ((_GLF_DEAD(false)) || false))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, (false) || false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || _GLF_IDENTITY((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), false || ((! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), float(vec4(sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 0.0, 0.0, 1.0))), 0.0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u), max(uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u), uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u))), uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u))))) - 0u), (true ? workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))) * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u) + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) | 0u)))) : ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))), (_GLF_IDENTITY((subgroup_local_id + 1), uint(uvec2((subgroup_local_id + 1), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) ^ 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(subgroup_size))))), ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u), _GLF_IDENTITY(max(uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u), uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u)), (max(uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), max((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + _GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))) % subgroup_size)))))), (0u | 0u), 1u, 0u), uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) / 1u)))))), (0u | 0u), 1u, 0u))) + uvec4(0u, 0u, 0u, 0u))), uvec4(_GLF_IDENTITY((((subgroup_local_id + 1) % subgroup_size)), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) : (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))), ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u)) ^ 0u)) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size)))))), (0u | 0u), 1u, 0u))))) - 0u) : _GLF_FUZZED(workgroup_size)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-668.977)), float(injectionSwitch.y), bool(true))))) && true), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))), injectionSwitch, injectionSwitch)))).y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), (bool(bool((injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[_GLF_struct_replacement_2._f0.virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4)), 4, _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, (false ? _GLF_FUZZED(mix(71231, -16514, true)) : 4)), 4)), min(4, 4)))), (_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, _GLF_IDENTITY(4, min(4, 4)))), max(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, _GLF_IDENTITY(4, min(4, 4)))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, max(4, 4)), 4, _GLF_IDENTITY(4, min(4, 4))))))) ^ 0), 64, 0);
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(71659) : _GLF_IDENTITY(4, (4) << 0))), (4) * 1), _GLF_IDENTITY((4), ((4)) | 0) ^ 0))), 0, 1)), _GLF_IDENTITY(0 ^ (int(ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (4) ^ 0))), 0, 1))), int(ivec4(0 ^ (int(ivec3(_GLF_IDENTITY(4, min(4, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), (4) ^ 0))), 0, 1))), 1, 0, 0))))), 64, _GLF_IDENTITY(4, (4) / 1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 0u, 0u)), max(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), (false ? _GLF_FUZZED(134020u) : _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))))), _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))), 0u, 0u)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), 0u, 0u)), 0u ^ _GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))))), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)))))) | 0u)), 0u, 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY((uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), 0u | _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(max((subgroup_local_id), (subgroup_local_id)), (_GLF_IDENTITY(max((subgroup_local_id), (subgroup_local_id)), ~ (~ (max((subgroup_local_id), (subgroup_local_id)))))) | (max((subgroup_local_id), (subgroup_local_id)))))), 0u, _GLF_IDENTITY(0u, (0u) >> 0u)))), _GLF_IDENTITY(clamp((uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), 0u, 0u))), (uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), (_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))) + 0u), 0u, 0u))), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), 0u, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), 0u, 0u)), 1u * (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), 0u, 0u))))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))) ? _GLF_FUZZED(187973u) : clamp((uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), 0u, 0u))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))), (_GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 0u))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, 0u | _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id)))), 0u, 0u))))))))))))) + 1 < subgroup_size, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))) + 1, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))) + 1)) < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ~ (~ ((subgroup_local_id)))), ((subgroup_local_id)) ^ 0u))) + 1 < subgroup_size))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1 < subgroup_size))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0)) * mat4(1.0), ((mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0)) * mat4(1.0)) * mat4(1.0)))), max(vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0)) * mat4(1.0), ((mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0)) * mat4(1.0)) * mat4(1.0)))), vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0), _GLF_IDENTITY((mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0)) * mat4(1.0), ((mat4x3(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0)) * mat4(1.0)) * mat4(1.0))))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), true, false, true))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true, true, false))), bool(bool(! (bool(bvec4((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y), true, true, false))))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) && true))), true, false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-70.01, 75.37)) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))).x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   atomicStore(checker[_GLF_struct_replacement_2._f0.virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (int(_GLF_IDENTITY(ivec2(64, 0), min(ivec2(64, 0), _GLF_IDENTITY(ivec2(64, 0), ivec2(_GLF_IDENTITY(ivec4(ivec2(64, 0), (0 | 0), 1), ~ (~ (ivec4(ivec2(64, 0), (0 | 0), 1)))))))))) ^ (1 ^ 1))), 4);
   subgroupAll(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bvec3(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)))))))));
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-9.5)), float(vec2((true ? injectionSwitch.y : _GLF_FUZZED(-9.5)), 0.0)))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), bool(bool((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(bvec2((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (! (false)) && true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(-9.5))))))), (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-344.644), _GLF_FUZZED(-26.58)), bvec2(false, false)))) / vec2(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0)).y))))) || false)))))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_2._f0.virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_struct_replacement_2._f0.virtual_gid))], _GLF_IDENTITY(read, uint(uvec2(read, 0u))), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), 1 * (_GLF_IDENTITY(max(64, 64), ~ (~ (max(64, 64))))))), max(64, 64)), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) * (0 ^ 1)), 1, 1, 1)))), 0 | (~ (_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) * (0 ^ 1)), 1, 1, 1)))))))));
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (_GLF_IDENTITY(true, ! (! (true)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))))) || false), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), bool(bvec2(bool(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)))), false)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! (false))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), bool(bvec2(bool(bvec2(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)), false))), false)))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bool((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool((false)))))))))))), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true && (false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), bool(bvec2(! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true && (false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true)))))))))), true), bvec2(bvec4(bvec2(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true && (false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), bool(bvec2(! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false)))))))))))), true && (false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(! (_GLF_IDENTITY(false, ! (! (false))))))))))))))), true)))))))))), true), false, true)))), bool(bvec2(bool(bvec2(! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), _GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(false, ! (! (false))))))))))))))))))), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY((_GLF_DEAD(false)) && true, bool(bvec4((_GLF_DEAD(false)) && true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-909.223), min(_GLF_FUZZED(-909.223), _GLF_IDENTITY(_GLF_FUZZED(-909.223), _GLF_IDENTITY(float(mat4x3(_GLF_FUZZED(-909.223), 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), length(_GLF_IDENTITY(0.0, min(0.0, 0.0))), sqrt(1.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(34.01)), float(_GLF_IDENTITY(0.0, (0.0) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))), bool(true))))))), float(mat2x4(float(mat4x3(_GLF_FUZZED(-909.223), 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0), length(0.0), sqrt(1.0), 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(6.1)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.6)), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), 1.0, 1.0)))))), _GLF_FUZZED(_GLF_IDENTITY(38.61, (38.61) * 1.0))), vec2(_GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[0], ((max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0)), injectionSwitch)), injectionSwitch))[0]) / 1.0), (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch))))[1]), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)), true)))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
