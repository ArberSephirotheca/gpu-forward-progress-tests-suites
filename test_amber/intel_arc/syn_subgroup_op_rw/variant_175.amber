#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), ! (! ((false)))))), (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))) && true)), false || (! (false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), bool(bvec2(! (_GLF_IDENTITY(! (false), false || (! (false)))), true)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))) && true)), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! ((false)))))), (bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))) && true))), false || (! (! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), true && (! ((false))))))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), ! (! ((false))))))) && true))))))), false || (! (false)))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)), true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && ((injectionSwitch.x > injectionSwitch.y))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))) && (_GLF_DEAD(false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && _GLF_IDENTITY(true, false || (true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))) || (false)), false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), mix(vec2(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[0], mix(float(((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[0]), float(_GLF_FUZZED(7365.3082)), bool(false))), _GLF_FUZZED(250.104)), vec2(_GLF_FUZZED(-4.5), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))))[1]), bvec2(false, true))) - vec2(0.0, 0.0)).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)).x, 0.0, 1.0, 1.0, cos(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true))))))) || (_GLF_IDENTITY(false, false || (false))))) && true)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, true))), false)))))), _GLF_IDENTITY(false, ! (! (false))))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false)))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true))))))) || (_GLF_IDENTITY(false, false || (false))))) && true)), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, true))), false)))))), _GLF_IDENTITY(false, ! (! (false)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) << uvec3(0u, 0u, 0u))).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, ~ (~ (0u))))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u)), 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), _GLF_IDENTITY((uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))), clamp((uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))), max(uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) >> uvec4(0u, 0u, 0u, 0u)))))))), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(_GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 1u, 1u))))), _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))) : _GLF_FUZZED(uvec3(113220u, 40478u, 168982u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(_GLF_IDENTITY(0u, uint(uint(0u))), 0u, 0u)))) / uvec3(1u, 1u, 1u)))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (false ? _GLF_FUZZED(uvec4(126425u, 113717u, 152755u, 149867u)) : uvec4(gl_WorkGroupID, 1u))))))), (gl_WorkGroupID) | uvec3(0u, 0u, 0u))))))), (false ? _GLF_FUZZED(uvec3(183364u, 35863u, 176364u)) : _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(0u, (0u) ^ 0u), 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (false ? _GLF_FUZZED(uvec4(126425u, _GLF_IDENTITY(113717u, (_GLF_IDENTITY(113717u, ~ (_GLF_IDENTITY(~ (113717u), (~ (113717u)) | (~ (113717u)))))) << ((109489u >> 160848u) & 0u)), _GLF_IDENTITY(152755u, (152755u) | 0u), 149867u)) : uvec4(gl_WorkGroupID, 1u))))))), (gl_WorkGroupID) | uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u), 0u))))))))), _GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), gl_WorkGroupID))))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), (_GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), ((gl_WorkGroupID) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) << uvec3(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(atomicAnd(subgroup_local_id, subgroup_local_id)) : 0u)), 0u, 0u))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u))))) | uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))) : _GLF_FUZZED(uvec3(113220u, 40478u, 168982u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))) : _GLF_FUZZED(uvec3(113220u, 40478u, 168982u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))) : _GLF_FUZZED(uvec3(113220u, 40478u, 168982u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))) : _GLF_FUZZED(uvec3(113220u, 40478u, 168982u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))) : _GLF_FUZZED(uvec3(113220u, 40478u, 168982u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) | uvec3(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_local_id))), 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), _GLF_IDENTITY((false ? _GLF_FUZZED(uvec4(126425u, 113717u, 152755u, 149867u)) : uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, ~ (~ (1u))))), uvec4(0u, 0u, 0u, 0u) ^ ((false ? _GLF_FUZZED(uvec4(126425u, 113717u, 152755u, 149867u)) : uvec4(gl_WorkGroupID, _GLF_IDENTITY(1u, ~ (~ (1u)))))))))))), (gl_WorkGroupID) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicMin(subgroup_local_id, subgroup_local_id))))), (_GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), ((gl_WorkGroupID) | uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u)) - uvec3(0u, 0u, 0u))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, ~ (~ (0u)))), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), _GLF_IDENTITY(0u, 0u | (0u))), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(27616u, 136636u, 138091u).ttts) : _GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u), (uvec3(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u)) * uvec3(1u, 1u, 1u))))) >> 0u), 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))))) : _GLF_FUZZED(uvec3(113220u, 40478u, 168982u))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u)))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (false ? _GLF_FUZZED(uvec4(126425u, 113717u, 152755u, 149867u)) : uvec4(gl_WorkGroupID, 1u))))))), _GLF_IDENTITY((gl_WorkGroupID), min((gl_WorkGroupID), _GLF_IDENTITY((gl_WorkGroupID), uvec3(1u, 1u, 1u) * ((gl_WorkGroupID))))) | uvec3(0u, 0u, 0u))))))), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), ((gl_WorkGroupID) | uvec3(0u, 0u, 0u)) | ((gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), ((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) / 1u), _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))))) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u))))))), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u))) | uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, _GLF_IDENTITY(0u, min(0u, 0u)), 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) * 1u)))), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uvec3(_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(0u ^ (0u), ~ (~ (0u ^ (0u))))), 0u), 1u), (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u), (uvec4(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 1u)) | (uvec4(uvec3(0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u), 1u)))))) : _GLF_FUZZED(uvec3(113220u, 40478u, _GLF_IDENTITY(168982u, (_GLF_IDENTITY(168982u, uint(uvec3(168982u, 0u, 1u)))) - 0u)))))) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))), (max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (1u))))))))) - (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), uvec3(0u, 0u, 0u) | ((gl_WorkGroupID))) | uvec3(0u, 0u, 0u)))), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (false ? _GLF_FUZZED(uvec4(126425u, 113717u, 152755u, 149867u)) : uvec4(gl_WorkGroupID, 1u))))))), (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (false ? _GLF_FUZZED(uvec4(126425u, 113717u, 152755u, 149867u)) : uvec4(gl_WorkGroupID, 1u))))))), (gl_WorkGroupID) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(uvec4(gl_WorkGroupID, 1u), (false ? _GLF_FUZZED(uvec4(126425u, 113717u, 152755u, 149867u)) : uvec4(gl_WorkGroupID, 1u))))))), (gl_WorkGroupID) | uvec3(0u, 0u, 0u))))))))), _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, 0u), _GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))), ((gl_WorkGroupID) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY((_GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))), ((gl_WorkGroupID) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))), (true ? (_GLF_IDENTITY((gl_WorkGroupID) | uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_size) : 0u))), ((gl_WorkGroupID) | uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u))) : _GLF_FUZZED(uvec3(90160u, 83794u, 49172u))))) - uvec3(0u, 0u, 0u)) << uvec3(0u, 0u, 0u)))))))))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uvec3(subgroup_base, _GLF_IDENTITY(0u, (0u) + 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec3(subgroup_base, _GLF_IDENTITY(0u, (0u) + 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))), max(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(sqrt(0.0)), 0.0, 0.0, round(length(normalize(1.0))), 1.0)), clamp(float(mat4x3(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(sqrt(0.0)), 0.0, 0.0, round(length(normalize(1.0))), 1.0)), float(mat4x3(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(sqrt(0.0)), 0.0, 0.0, round(length(normalize(1.0))), 1.0)), float(mat4x3(0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, sin(sqrt(0.0)), 0.0, 0.0, round(length(normalize(1.0))), 1.0))))), injectionSwitch.x))))), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u))))), _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, uint(uvec3(subgroup_base, 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(94.17))) : _GLF_FUZZED(3.6)))))))), _GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(num_workgroup))))) + subgroup_base), min(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (workgroup_base + subgroup_base), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) << 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(num_workgroup))))) + subgroup_base), min(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (workgroup_base + subgroup_base), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) << 0u))))) ^ 0u)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(num_workgroup))))) + subgroup_base), min(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (workgroup_base + subgroup_base), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) << 0u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, (true ? _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) : _GLF_FUZZED(num_workgroup))))) + subgroup_base), min(~ (workgroup_base + subgroup_base), _GLF_IDENTITY(~ (workgroup_base + subgroup_base), (0u << _GLF_IDENTITY(uint(1u), uint(1u))) + _GLF_IDENTITY((~ (workgroup_base + subgroup_base)), ((~ (workgroup_base + subgroup_base))) << 0u))))) ^ 0u))) << 0u)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (_GLF_IDENTITY(1, min(1, 1))) >> 0))))) + 0)) % subgroup_size);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((buf[virtual_gid]), ~ (~ ((buf[virtual_gid])))) + 0u), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-20445) : _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-85994) : 64))), (_GLF_IDENTITY((false ? _GLF_FUZZED(-20445) : 64), max((false ? _GLF_FUZZED(-20445) : 64), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-20445, (-20445) | 0)) : 64, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-20445, (-20445) | 0)) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-20445, (-20445) | 0)) : 64) >> 0)), ~ (~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(-20445, (-20445) | 0)) : 64, (false ? _GLF_FUZZED(_GLF_IDENTITY(-20445, (-20445) | 0)) : 64) >> 0))))))))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-20445), 0 ^ (_GLF_FUZZED(-20445))) : 64), (_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(-20445), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(-20445)), clamp(~ (_GLF_FUZZED(-20445)), ~ (_GLF_FUZZED(-20445)), _GLF_IDENTITY(~ (_GLF_FUZZED(_GLF_IDENTITY(-20445, 0 + (_GLF_IDENTITY(-20445, int(ivec2(_GLF_IDENTITY(-20445, int(int(-20445))), 0))))))), (~ (_GLF_FUZZED(-20445))) | 0))))) : 64), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-20445) : 64), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(-20445) : 64)), (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(-20445) : 64)), clamp(~ ((false ? _GLF_FUZZED(-20445) : 64)), ~ ((false ? _GLF_FUZZED(-20445) : 64)), ~ ((false ? _GLF_FUZZED(-20445) : 64))))) ^ 0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-20445, (-20445) | 0)) : 64)))) - 0), (_GLF_IDENTITY((false ? _GLF_FUZZED(-20445) : 64), (_GLF_IDENTITY((false ? _GLF_FUZZED(-20445) : 64), max((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false))))) ? _GLF_FUZZED(-20445) : 64), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-20445, (-20445) | 0), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(-20445, (_GLF_IDENTITY(-20445, max(-20445, -20445))) | 0), (0 & -23719), 1, 0), (ivec4(_GLF_IDENTITY(-20445, (-20445) | 0), (0 & -23719), 1, 0)) ^ ivec4(0, 0, 0, 0))))) : 64)))) - 0)) ^ 0)) << 0)), 2);
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % 2)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % _GLF_IDENTITY(2, int(ivec4(2, 0, 0, (0 ^ 0)))))), (_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % _GLF_IDENTITY(2, int(ivec4(2, 0, 0, (0 ^ 0))))))) - 0u)) - 0u)), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % 2)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % _GLF_IDENTITY(2, int(ivec4(2, 0, 0, (0 ^ 0)))))), (_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % _GLF_IDENTITY(2, int(ivec4(2, 0, 0, (0 ^ 0))))))) - 0u)) - 0u))))), ((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(2, 0, 1), (ivec3(2, 0, 1)) | ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))), 0, 0))), (int(_GLF_IDENTITY(ivec3(2, 0, 1), (ivec3(2, 0, 1)) | ivec3(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, min(0, 0)), 0)))), 0, 0)))) - (84489 & 0))))))) / _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, 0u + (1u)), 1u, 1u))) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))), (! (! ((false)))) && true)) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), _GLF_IDENTITY(_GLF_IDENTITY(! (! ((false))), (! (! ((false)))) && true), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! ((false)), true && (! ((false))))), (! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))) && _GLF_IDENTITY(true, false || (true)))))) || false))))) && true))), bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false)))), false || ((false))))), _GLF_IDENTITY(false, ! (! (false))))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(false, false || (false)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(1.0))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((64), max((64), _GLF_IDENTITY((_GLF_IDENTITY(64, _GLF_IDENTITY(int(ivec2(64, 0)), (false ? _GLF_FUZZED((62889 % -87268)) : int(ivec2(64, 0)))))), ((_GLF_IDENTITY(64, max(_GLF_IDENTITY(64, int(_GLF_ONE(1.0, injectionSwitch.y)) * (64)), _GLF_IDENTITY(64, (64) | (64)))))) / _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) * ((1 << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(ivec2(int(3), 1)), 0 ^ (int(ivec2(int(3), 1)))))))))) >> _GLF_IDENTITY(int(3), int(3))))))) | _GLF_IDENTITY((64), (false ? _GLF_FUZZED(bitfieldExtract(-91049, 80365, (36797))) : (64)))), max(64, 64)), _GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4))), ~ (~ (_GLF_IDENTITY(max(4, 4), clamp(max(4, 4), max(4, 4), max(4, 4))))))))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, ~ (~ (read))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), clamp((_GLF_IDENTITY(64, (64) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), ((_GLF_IDENTITY(64, (64) ^ 0))) >> 0), (_GLF_IDENTITY(64, (64) ^ 0)))), max(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), clamp((_GLF_IDENTITY(64, (64) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), ((_GLF_IDENTITY(64, (64) ^ 0))) >> 0), (_GLF_IDENTITY(64, (64) ^ 0)))), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), clamp((_GLF_IDENTITY(64, (64) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), ((_GLF_IDENTITY(64, (64) ^ 0))) >> 0), (_GLF_IDENTITY(64, (64) ^ 0)))))) | (64)), 1 * (64)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), max(_GLF_IDENTITY(64, 1 * (64)), _GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), 0 | (_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (64) * int(_GLF_ONE(1.0, injectionSwitch.y))))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), (true ? _GLF_IDENTITY(1, min(1, 1)) * (64) : _GLF_FUZZED(53029)))), (_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), min(_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), 1 * (_GLF_IDENTITY(64, 1 * (64)))), _GLF_IDENTITY(64, 1 * (64))))) | 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), ~ (~ (_GLF_IDENTITY(64, 1 * (64))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), clamp((_GLF_IDENTITY(64, (64) ^ 0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), ((_GLF_IDENTITY(64, (64) ^ 0))) >> 0), 0 | (_GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), ((_GLF_IDENTITY(64, (64) ^ 0))) >> 0))), (_GLF_IDENTITY(64, (64) ^ 0)))) | (64)), 1 * (64)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), max(_GLF_IDENTITY(64, 1 * (64)), _GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), 0 | (_GLF_IDENTITY(64, 1 * (64)))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), (_GLF_IDENTITY(64, 1 * (64))) | 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), ~ (~ (_GLF_IDENTITY(64, 1 * (64)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), clamp((_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (64) ^ 0)), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) ^ 0)), ((_GLF_IDENTITY(64, (64) ^ 0))) >> 0), (_GLF_IDENTITY(64, _GLF_IDENTITY((64) ^ 0, ((64) ^ 0) >> 0))))) | (64)), 1 * (64)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(1 * (64), ~ (_GLF_IDENTITY(~ (1 * (64)), max(_GLF_IDENTITY(~ (1 * (64)), ~ (~ (~ (1 * (64))))), ~ (1 * (64))))))), max(_GLF_IDENTITY(64, 1 * (64)), _GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), 0 | (_GLF_IDENTITY(64, 1 * (64)))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), (_GLF_IDENTITY(64, 1 * (64))) | 0)))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), ~ (~ (_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (0 ^ 0) ^ (64)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), ~ (~ (_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (0 ^ 0) ^ (64)))))))), (false ? _GLF_FUZZED(-15785) : (_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), ~ (~ (_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (0 ^ 0) ^ (64))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(64, 1 * (64)), ~ (~ (_GLF_IDENTITY(64, 1 * (_GLF_IDENTITY(64, (0 ^ 0) ^ (64))))))))))))), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
