#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_29 {
 mat2x3 _f0;
 mat2x3 _f1;
} ;

struct _GLF_struct_28 {
 uvec3 _f0;
 uvec2 _f1;
 mat2x4 _f2;
 mat4x2 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_30 {
 _GLF_struct_28 _f0;
 _GLF_struct_29 _f1;
 uint _f2;
} ;

struct _GLF_struct_31 {
 _GLF_struct_30 _f0;
 uint subgroup_size;
} ;

struct _GLF_struct_25 {
 uint _f0;
 int _f1;
 mat3x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_24 {
 mat3x4 _f0;
 ivec4 _f1;
 float _f2;
 int _f3;
 float _f4;
} ;

struct _GLF_struct_23 {
 mat3x4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
} ;

struct _GLF_struct_21 {
 bool _f0;
 mat2x4 _f1;
 vec4 _f2;
 mat2x3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_20 {
 vec4 _f0;
 mat4x2 _f1;
 mat4x2 _f2;
 bool _f3;
 bool _f4;
 mat2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_20 _f0;
 _GLF_struct_21 _f1;
} ;

struct _GLF_struct_27 {
 uint read;
 mat3x4 _f0;
 _GLF_struct_22 _f1;
 _GLF_struct_26 _f2;
} ;

struct _GLF_struct_17 {
 ivec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_16 {
 vec3 _f0;
 vec3 _f1;
 int _f2;
 ivec4 _f3;
 mat4x3 _f4;
 mat3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 vec3 _f1;
 int _f2;
 uint _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_13 {
 vec3 _f0;
 ivec3 _f1;
 bvec3 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 _GLF_struct_15 _f2;
 mat4x2 _f3;
 int _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_11 {
 mat2x3 _f0;
} ;

struct _GLF_struct_10 {
 bvec3 _f0;
} ;

struct _GLF_struct_12 {
 bvec4 _f0;
 _GLF_struct_10 _f1;
 vec3 _f2;
 mat3x4 _f3;
 _GLF_struct_11 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_8 {
 uvec3 _f0;
 uvec2 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_7 {
 mat3 _f0;
 ivec4 _f1;
 int _f2;
 ivec2 _f3;
 mat2x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 ivec3 _f1;
 ivec4 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 bvec2 _f1;
 bool _f2;
 uint _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 _GLF_struct_5 _f1;
 mat2x4 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_3 {
 ivec2 _f0;
 int _f1;
 uint num_workgroup;
 bvec3 _f2;
 vec4 _f3;
 mat4x2 _f4;
 vec2 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_19 {
 _GLF_struct_4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_12 _f2;
 _GLF_struct_18 _f3;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 bvec3 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_1 {
 ivec4 _f0;
 mat4x2 _f1;
 _GLF_struct_0 _f2;
 uint workgroup_size;
} ;

struct _GLF_struct_2 {
 int _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y)) || false)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))).x > injectionSwitch.y)) || false))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false)), (bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))), false))) || false), false)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)).x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))) || false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, true, false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))), true, false))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))) && true))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))), true, false)))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(_GLF_struct_30(_GLF_struct_28(uvec3(1u), uvec2(1u), mat2x4(1.0), mat4x2(1.0), mat4x2(1.0)), _GLF_struct_29(mat2x3(1.0), mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) >> (_GLF_IDENTITY(uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)), uvec2(1u, 1u) * (uvec2(0u, 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u))))))), (uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) >> (uvec2(_GLF_IDENTITY(0u, (0u) - 0u), 0u) >> _GLF_IDENTITY(uvec2(4u), uvec2(4u)))))) - 0u))), gl_SubgroupSize);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, true)))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), true, true)))), true), false, false)))))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true)))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), (! (! (false))) && true)) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((_GLF_IDENTITY(false, (false) || false))) || false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(_GLF_struct_4(_GLF_struct_3(ivec2(1), 1, gl_NumWorkGroups.x, bvec3(true), vec4(1.0), mat4x2(_GLF_IDENTITY(1.0, (1.0) / determinant(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 1.0))))))), vec2(1.0), bvec3(true))), _GLF_struct_9(bvec3(true), _GLF_struct_5(_GLF_IDENTITY(ivec2(1), min(ivec2(1), _GLF_IDENTITY(ivec2(1), max(ivec2(1), ivec2(1))))), bvec2(true), true, 1u, ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-16643) : 1)), (1) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0)), clamp((_GLF_IDENTITY(1, (1) | 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) - 0)))) | (1)), (1) | 0)), (_GLF_IDENTITY(1, (1) | 0))))) << 0) + 0))), mat2x4(1.0), _GLF_struct_6(uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, (1u) - 0u)), (~ (_GLF_IDENTITY(1u, (1u) - 0u))) >> 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 ^ (1))), clamp(_GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(-30965, -72179, 30340)))), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), (ivec3(1)) * ivec3(1, _GLF_IDENTITY(1, 0 ^ (1)), 1))) - ivec3(0, 0, 0), (true ? (_GLF_IDENTITY(ivec3(1), (ivec3(1)) * ivec3(1, _GLF_IDENTITY(1, 0 ^ _GLF_IDENTITY((1), ((1)) >> 0)), 1))) - ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(43272, -48847, -64417))))), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1))))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(0 ^ (1), ~ (~ (0 ^ (1)))))), clamp(_GLF_IDENTITY(ivec3(1), (true ? ivec3(1) : _GLF_FUZZED(ivec3(-30965, -72179, 30340)))), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (ivec3(1)) * ivec3(1, 1, 1))) - ivec3(0, 0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(1)), (_GLF_IDENTITY(ivec3(0, 0, 0) | (ivec3(1)), min(ivec3(0, 0, 0) | (ivec3(1)), ivec3(0, 0, 0) | (ivec3(1))))) | ivec3(0, 0, 0))), ivec3(0, 0, 0) | (_GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1)))))))) ^ ivec3(0, 0, 0)), ivec4(1), _GLF_IDENTITY(vec4(1.0), clamp(vec4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec4(1.0), vec4(1.0)))), _GLF_struct_7(mat3(1.0), ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) - 0)) | (1))), 1, ivec2(1), mat2x3(1.0), uvec4(1u)), _GLF_struct_8(uvec3(1u), uvec2(1u), mat3x4(1.0))), _GLF_struct_12(bvec4(true), _GLF_struct_10(bvec3(true)), vec3(1.0), mat3x4(1.0), _GLF_struct_11(mat2x3(1.0)), bvec3(true)), _GLF_struct_18(_GLF_struct_13(vec3(1.0), ivec3(1), bvec3(true), bvec4(true)), _GLF_struct_14(mat2x3(1.0), _GLF_IDENTITY(vec3(1.0), mat3(1.0) * (vec3(1.0))), 1, 1u, mat3x4(1.0)), _GLF_struct_15(uvec2(1u)), mat4x2(1.0), 1, _GLF_struct_16(vec3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(true))), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0), (vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-6.3)), float(1.0), bool(true))), 0.0, 1.0, 0.0)) - vec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_FUZZED(_GLF_IDENTITY(-185.111, max(_GLF_IDENTITY(-185.111, max(-185.111, -185.111)), -185.111)))), bool(false)))), float(_GLF_FUZZED(94.09)), bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8622.3141), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), bvec2(true, false))))), injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((injectionSwitch.x > injectionSwitch.y)), true, true)))) || false))))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), bool(bvec3(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), true, true)))) || false))))), false)), true)))))))))))), _GLF_IDENTITY(vec3(1.0), clamp(_GLF_IDENTITY(vec3(1.0), clamp(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) - vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), float(_GLF_FUZZED(1.6)), bool(false))), 0.0)), vec3(1.0))), vec3(_GLF_IDENTITY(1.0, (1.0) / cos(log(1.0)))), vec3(1.0))), 1, ivec4(1), mat4x3(1.0), mat3(1.0), mat4x3(1.0)), _GLF_struct_17(ivec3(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), clamp(_GLF_IDENTITY((~ (1)), clamp((~ (1)), (~ (1)), (~ (1)))), (~ (1)), (~ (1)))))), ivec3(1))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_IDENTITY(1, 0 + (1)), _GLF_struct_1(ivec4(1), mat4x2(1.0), _GLF_struct_0(bvec4(true), bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), false, true)), false || (bool(bvec3((true), false, true)))))), false || (! _GLF_IDENTITY((! (true)), bool(bvec4((! (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))), vec3(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x, 0u ^ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(264.910), _GLF_FUZZED(6947.2092)), _GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false)))), true, false)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), true))))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true, false)))))))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), 0.0)), mix(float(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))), 0.0))), float(_GLF_FUZZED(34.86)), bool(false))))) - log(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))))) - 0.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-44.44)), bool(false))), abs(1.0))), (true ? _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, abs(1.0))), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, abs(1.0))))[0], _GLF_FUZZED(5.9)), vec2(_GLF_FUZZED(7.2), (vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, abs(1.0))))[1]), bvec2(false, true))) : _GLF_FUZZED(injectionSwitch)))).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_2._f1.workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_2._f1.workgroup_size, (_GLF_struct_replacement_2._f1.workgroup_size) | 0u)))) * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec2(subgroup_id, 0u)), (false ? _GLF_FUZZED(workgroup_base) : uint(uvec2(subgroup_id, 0u))))) * _GLF_struct_replacement_31.subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)) + subgroup_id * _GLF_struct_replacement_31.subgroup_size + ((subgroup_local_id + 1) % _GLF_struct_replacement_31.subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 _GLF_struct_27 _GLF_struct_replacement_27 = _GLF_struct_27(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_FUZZED(_GLF_IDENTITY(-19975, (_GLF_IDENTITY(-19975, (-19975) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1)) : _GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY((false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4))))) * 1)), clamp((false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4))))) * 1)), _GLF_IDENTITY((false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4))))) * 1)), max((false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4))))) * 1)), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4))))) * 1)))), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4))) | (_GLF_IDENTITY(false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(4, 0 + (4)), (false ? _GLF_FUZZED(-19975) : _GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (4)), min(_GLF_IDENTITY(4, 0 + (4)), _GLF_IDENTITY(4, 0 + (4))))) * 1))))))), 64, 0), mat3x4(1.0), _GLF_struct_22(_GLF_struct_20(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), mat4x2(1.0), mat4x2(1.0), true, true, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x2(mat2(1.0)), transpose(transpose(mat4x2(mat2(1.0))))))), mat2x4(1.0)), _GLF_struct_21(true, mat2x4(1.0), _GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), mix(_GLF_IDENTITY(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(58.93)))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))), (false ? _GLF_FUZZED(368.044) : _GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(58.93), clamp(true ? 1.0 : _GLF_FUZZED(58.93), true ? 1.0 : _GLF_FUZZED(58.93), true ? 1.0 : _GLF_FUZZED(58.93)))))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0)))))))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))))), (vec4(1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(48.01) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.0, -2.5, -9021.5578, 68.03, 215.827, 11.41, 4.7, -4740.2036, -5.8, -133.365, 4.7, 843.239)) : mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), float(mat2(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.0, -2.5, -9021.5578, 68.03, 215.827, 11.41, 4.7, -4740.2036, -5.8, -133.365, 4.7, 843.239)) : mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), sqrt(1.0), 1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))[_GLF_IDENTITY(2, min(2, 2))], _GLF_IDENTITY((vec4(1.0)), max((vec4(1.0)), (vec4(1.0))))[3]), (vec4(_GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(58.93, min(58.93, 58.93)))))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0)), min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))), (vec4(1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(48.01) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))[_GLF_IDENTITY(2, min(2, 2))], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), vec4(mat2x4(vec4(1.0), 1.0, 1.0, 1.0, 1.0))), vec4(1.0)))), max((vec4(1.0)), (vec4(1.0))))[3])) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(58.93)))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))), (false ? _GLF_FUZZED(368.044) : _GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(58.93), clamp(true ? 1.0 : _GLF_FUZZED(58.93), true ? 1.0 : _GLF_FUZZED(58.93), true ? 1.0 : _GLF_FUZZED(58.93)))))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0)))))))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))))), (vec4(1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(48.01) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.0, -2.5, -9021.5578, 68.03, 215.827, 11.41, 4.7, -4740.2036, -5.8, -133.365, 4.7, 843.239)) : mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), float(mat2(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.0, -2.5, -9021.5578, 68.03, 215.827, 11.41, 4.7, -4740.2036, -5.8, -133.365, 4.7, 843.239)) : mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), sqrt(1.0), 1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))[_GLF_IDENTITY(2, min(2, 2))], _GLF_IDENTITY((vec4(1.0)), max((vec4(1.0)), (vec4(1.0))))[3]), (vec4(_GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(58.93, min(58.93, 58.93)))))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0)), min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))), (vec4(1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(48.01) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))[_GLF_IDENTITY(2, min(2, 2))], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), vec4(mat2x4(vec4(1.0), 1.0, 1.0, 1.0, 1.0))), vec4(1.0)))), max((vec4(1.0)), (vec4(1.0))))[3])) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4(_GLF_ONE(1.0, injectionSwitch.y)))))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(58.93)))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))), (false ? _GLF_FUZZED(368.044) : _GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? 1.0 : _GLF_FUZZED(58.93), clamp(true ? 1.0 : _GLF_FUZZED(58.93), true ? 1.0 : _GLF_FUZZED(58.93), true ? 1.0 : _GLF_FUZZED(58.93)))))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << 0), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0), ivec3(ivec3(ivec3(_GLF_IDENTITY(0, (0) << 0), 0, 0)))))))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))))), (vec4(1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(48.01) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.0, -2.5, -9021.5578, 68.03, 215.827, 11.41, 4.7, -4740.2036, -5.8, -133.365, 4.7, 843.239)) : mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), float(mat2(float(_GLF_IDENTITY(mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x3(1.0, -2.5, -9021.5578, 68.03, 215.827, 11.41, 4.7, -4740.2036, -5.8, -133.365, 4.7, 843.239)) : mat4x3(1.0, 1.0, 1.0, sin(0.0), determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), sqrt(1.0), 1.0, 1.0)))), clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))[_GLF_IDENTITY(2, min(2, 2))], _GLF_IDENTITY((vec4(1.0)), max((vec4(1.0)), (vec4(1.0))))[3]), (vec4(_GLF_IDENTITY((vec4(1.0))[0], mix(float(_GLF_IDENTITY((vec4(1.0))[0], max((vec4(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(_GLF_IDENTITY(58.93, min(58.93, 58.93)))))))[0], (vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 0.0 + (1.0))) - determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)))))[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, min(0, 0))), clamp(~ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 | (0)), 0)), min(0, 0))))), ~ (_GLF_IDENTITY(0, min(0, 0))), ~ (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, (0) << 0))), 0)))))))]))), float(_GLF_FUZZED(-9690.3884)), bool(false))), (vec4(1.0))[1], (vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(48.01) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))))))[_GLF_IDENTITY(2, min(2, 2))], _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), max(_GLF_IDENTITY(vec4(1.0), vec4(mat2x4(vec4(1.0), 1.0, 1.0, 1.0, 1.0))), vec4(1.0)))), max((vec4(1.0)), (vec4(1.0))))[3])) * _GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), transpose(transpose(mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))), vec4(_GLF_FUZZED(4.0), _GLF_FUZZED(8.0), _GLF_FUZZED(517.644), _GLF_FUZZED(_GLF_IDENTITY(vec3(-854.605, -0.6, -8.8), (vec3(-854.605, -0.6, -8.8)) / vec3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)).y)), bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(false, (false) || false))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false, false))), _GLF_IDENTITY(vec4(1.0), max(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)), min((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)), mix(vec4(((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)))[0], ((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)))[1], ((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)))[2], _GLF_FUZZED(-4.5)), vec4(_GLF_FUZZED(vec2(8.4, -9.4).r), _GLF_FUZZED((4.5 / -584.898)), _GLF_FUZZED(-9.4), ((false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)))[3]), bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))), (false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)), (false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0))))), (_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(vec4(-2.8, 328.944, 8970.0772, 4.2)) : vec4(1.0)))) - vec4(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, clamp((0.0) * 1.0, (0.0) * 1.0, _GLF_IDENTITY((0.0) * 1.0, mix(float((0.0) * 1.0), float(_GLF_FUZZED(25.17)), bool(false)))))))), 0.0, 0.0, 0.0)))))), mat2x3(1.0), _GLF_IDENTITY(ivec4(1), (ivec4(1)) >> ivec4(0, 0, 0, 0)))), _GLF_struct_26(_GLF_struct_23(mat3x4(1.0), mat4(1.0)), _GLF_struct_24(mat3x4(1.0), ivec4(1), 1.0, 1, 1.0), _GLF_struct_25(_GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : 1u))))), 1, mat3x2(1.0), mat2x3(1.0))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(59.10), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(552.090)), bvec2(true, false))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), 0u | _GLF_IDENTITY((_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 1u * (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), uint(uvec2(~ (uint(1)), 0u))) : _GLF_FUZZED(workgroup_base)))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 1u * (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), uint(uvec2(~ (uint(1)), 0u))) : _GLF_FUZZED(workgroup_base)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 1u * (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), uint(uvec2(~ (uint(1)), 0u))) : _GLF_FUZZED(workgroup_base)))))))), ~ (~ ((_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 1u * (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), uint(uvec2(~ (uint(1)), 0u))) : _GLF_FUZZED(workgroup_base)))))))))))) << 0u), 0u, 0u, 1u), ~ (~ (uvec4(_GLF_IDENTITY((_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 1u * (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), uint(uvec2(~ (uint(1)), 0u))) : _GLF_FUZZED(workgroup_base)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 1u * (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), uint(uvec2(~ (uint(1)), 0u))) : _GLF_FUZZED(workgroup_base)))))))), ~ (~ ((_GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), 1u * (_GLF_IDENTITY(~ (uint(1)), (true ? _GLF_IDENTITY(~ (uint(1)), uint(uvec2(~ (uint(1)), 0u))) : _GLF_FUZZED(workgroup_base)))))))))))) << 0u), 0u, 0u, 1u))))))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), ! (! (bool(bvec3(true, false, false))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2519.1068)), vec2(_GLF_FUZZED(-11.17), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3(_GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])), 1.0, 1.0, abs(0.0), 1.0, 1.0)))), bvec2(false, true))).y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), ! (! (bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.8, -537.751)))).x > injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0))), 1.0, 1.0)), 1.0, sqrt(0.0), 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), (true ? injectionSwitch : _GLF_FUZZED(vec2(-6.8, -537.751)))).x > injectionSwitch.y)) || false))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), false)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), false)), true, true)), false || (_GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), false)), true, true)), ! (! (bool(bvec3(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), true, true))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, ! (! (true))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(subgroup_local_id + 1 < _GLF_struct_replacement_31.subgroup_size, (subgroup_local_id + 1 < _GLF_struct_replacement_31.subgroup_size) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), virtual_gid))], _GLF_struct_replacement_27.read, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), false || _GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), bool(bvec2(true && ((false)), false)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), bool(bvec3(_GLF_IDENTITY((false), true && ((false))), false, false)))))) || false)));
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_IDENTITY(false || (_GLF_DEAD(false)), (false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   atomicStore(buf[virtual_gid], _GLF_struct_replacement_27.read, 4, 64, _GLF_IDENTITY(4, min(4, 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) : _GLF_FUZZED(-9.0))), sqrt(1.0), 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, -183.238)))).y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, -183.238)))).y, injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, -183.238)))).y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, -183.238)))).y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(6.5, -183.238)))).y, injectionSwitch.y, injectionSwitch.y))))) / exp(0.0)), injectionSwitch.y))))) && true))))))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
