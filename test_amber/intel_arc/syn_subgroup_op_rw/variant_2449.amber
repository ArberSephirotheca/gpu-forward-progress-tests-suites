#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 uint _f0;
 mat4x2 _f1;
 uint next_virtual_gid;
} ;

struct _GLF_struct_12 {
 uint _f0;
 bool _f1;
 mat2x3 _f2;
 vec2 _f3;
 vec4 _f4;
 bvec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_11 {
 mat3x4 _f0;
 mat4x2 _f1;
 vec3 _f2;
 mat3x2 _f3;
 vec2 _f4;
} ;

struct _GLF_struct_10 {
 mat2x4 _f0;
 uint num_workgroup;
 mat2x3 _f1;
 uvec4 _f2;
 uvec3 _f3;
 uvec4 _f4;
 int _f5;
 bool _f6;
} ;

struct _GLF_struct_13 {
 mat4x2 _f0;
 _GLF_struct_10 _f1;
 ivec2 _f2;
 _GLF_struct_11 _f3;
 vec3 _f4;
 _GLF_struct_12 _f5;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 uvec3 _f1;
 bvec2 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
} ;

struct _GLF_struct_8 {
 ivec4 _f0;
 _GLF_struct_6 _f1;
 _GLF_struct_7 _f2;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 float _f1;
 uint _f2;
 uvec3 _f3;
 mat2 _f4;
 ivec3 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_3 {
 vec3 _f0;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 bvec2 _f2;
 uint _f3;
 int _f4;
 vec4 _f5;
} ;

struct _GLF_struct_1 {
 float _f0;
 ivec2 _f1;
 uvec3 _f2;
 mat4x2 _f3;
 vec3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_0 {
 bool _f0;
 int _f1;
 mat4x2 _f2;
 bool _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 bvec4 _f1;
 bvec2 _f2;
 _GLF_struct_1 _f3;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_5 _f2;
 mat2x3 _f3;
 uint subgroup_local_id;
 _GLF_struct_8 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 1.0))), injectionSwitch.y)), injectionSwitch.y))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, bool(bool((_GLF_IDENTITY(true, ! (! (true)))) || false))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(true, ! (! (true)))) || false, bool(bool((_GLF_IDENTITY(true, ! (! (true)))) || false))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_struct_2(_GLF_struct_0(true, 1, mat4x2(1.0), true), bvec4(true), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(true), false, false)), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bool(true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))))))))), _GLF_struct_1(1.0, _GLF_IDENTITY(ivec2(1), ~ (~ (ivec2(1)))), uvec3(1u), mat4x2(1.0), vec3(1.0), _GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), (0 ^ 0) ^ (_GLF_IDENTITY((1), ~ (~ ((1))))))), max(1, 1)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), max(1, 1))))))), 1), (min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | ((1) | (1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * _GLF_IDENTITY((1), ((1)) / int(_GLF_ONE(1.0, injectionSwitch.y)))), max(1, 1)))), 1)) * 1))), (ivec3(1, 1, 1) ^ ivec3(_GLF_IDENTITY(1, (1) - 0), 1, 1)) | (ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY(min(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1)), _GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), (_GLF_IDENTITY((1) | (1), min((1) | (1), (1) | (1)))) | ((1) | (1)))) | ((1) | (1))))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), max(1, 1)))), 1), (min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | (1)) | _GLF_IDENTITY(_GLF_IDENTITY(((1) | (1)), min(((1) | (1)), ((1) | (1)))), (((1) | (1))) >> 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, 1 * (1)), max(1, 1)))), 1)) * 1))))))), _GLF_struct_5(_GLF_struct_3(vec3(1.0)), _GLF_struct_4(ivec2(1), 1.0, 1u, uvec3(1u), mat2(1.0), ivec3(1), bvec4(true)), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(169190u) : 1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(169190u) : 1u))) << 0u, ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1u, _GLF_IDENTITY((false ? _GLF_FUZZED(169190u) : 1u), ((false ? _GLF_FUZZED(169190u) : 1u)) | 0u))) << 0u, ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(169190u) : 1u))) << _GLF_IDENTITY(0u, ~ (~ (0u)))) << 0u))))), 1, _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), min(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), _GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0)))))), mat2x3(1.0), gl_SubgroupInvocationID, _GLF_struct_8(ivec4(1), _GLF_struct_6(ivec2(1)), _GLF_struct_7(mat2x4(1.0), uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u | (1u)), (_GLF_IDENTITY(1u, 0u | (1u))) - 0u))))))))), bvec2(true), uvec3(1u))));
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_13(mat4x2(1.0), _GLF_struct_10(mat2x4(1.0), gl_NumWorkGroups.x, mat2x3(1.0), uvec4(_GLF_IDENTITY(1u, (1u) / 1u)), uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (_GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ (uvec4(1u)), max(~ (uvec4(1u)), ~ (uvec4(1u))))))) | (uvec4(1u))), clamp(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(1u))), 1, true), ivec2(1), _GLF_struct_11(mat3x4(1.0), mat4x2(1.0), vec3(1.0), mat3x2(1.0), vec2(1.0)), vec3(1.0), _GLF_struct_12(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uint(_GLF_IDENTITY(1u, min(1u, 1u))))), (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u), min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)) >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u))), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(0u), (0u | 0u), 0u, 1u), (uvec4(uint(0u), (0u | 0u), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(uint(0u), (0u | 0u), 0u, 1u), (uvec4(uint(0u), (0u | 0u), 0u, 1u)) ^ uvec4(0u, 0u, 0u, 0u)))) + 0u)), uint(0u))))))) - 0u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u), uint(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(uvec3(1u, 1u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))))))) - 0u), 1u, 1u)))) ^ 0u))), true, mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(4.1)), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(4.1)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(4.1)), float(1.0), bool(true)))))), _GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED((30.96)))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))), ((vec2(1.0)) * mat2(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(0.6) : 1.0)))) * mat2(1.0)))), min((_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED((30.96)))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((vec2(1.0)) * mat2(1.0)) * mat2(1.0)))), (_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED((30.96)))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED((30.96)))), mix(float(_GLF_FUZZED(-0.0)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED((30.96)))), mix(float(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED((30.96))))), float(_GLF_FUZZED(-640.685)), bool(false)))), bool(true))), _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))) : _GLF_FUZZED((30.96)))))))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ((vec2(1.0)) * mat2(1.0)) * mat2(1.0)))))) + vec2(0.0, 0.0)), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0)), bvec3(true), ivec3(1))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), (workgroup_size) | (workgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) << (0u | 0u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((workgroup_size + workgroup_size)) : (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size))) << (0u | 0u))))) / uint(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), injectionSwitch.y))), workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) * 1u), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), clamp(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), subgroup_size)), subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u))))), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), workgroup_base + _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u) * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))) << (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))) + _GLF_struct_replacement_9.subgroup_local_id;
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(1u, mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (false ? _GLF_FUZZED(atan(-798.199, 4.1)) : _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0), (min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) * 1.0))))), _GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base, 0u), max(_GLF_IDENTITY(uvec2(workgroup_base, 0u), ~ (~ (uvec2(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) : _GLF_FUZZED(subgroup_size))))))), uvec2(workgroup_base, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_base, 0u), max(uvec2(workgroup_base, 0u), uvec2(workgroup_base, 0u))), (_GLF_IDENTITY(uvec2(workgroup_base, 0u), max(uvec2(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u))), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u))), (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u)))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u))), min((_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) << (0u | 0u)), 0u))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), _GLF_IDENTITY((workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u), ((workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u)) | ((workgroup_base) | _GLF_IDENTITY((workgroup_base), (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u)) | 0u))))))))) >> 0u))) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), 0u), uvec2(workgroup_base, 0u)))) ^ uvec2(0u, 0u))) << uvec2(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / 1u))), 0u)))) + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), min(_GLF_IDENTITY(((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size), 1u * _GLF_IDENTITY((((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size)), (0u | (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) + ((((_GLF_struct_replacement_9.subgroup_local_id + 1) % subgroup_size))))), ((_GLF_IDENTITY(_GLF_struct_replacement_9.subgroup_local_id + 1, (_GLF_struct_replacement_9.subgroup_local_id + 1) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))) % subgroup_size))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (0) | (0)));
 atomicStore(buf[_GLF_struct_replacement_15.next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(87.63, -2.1)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((7902.2330 + -9238.4718))), float(injectionSwitch.y), bool(true))))))), bool(bool((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0))), (float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0)))) / 1.0)) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8201.3862, -5.3)))).y)))), true)), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8201.3862, -5.3)))).y)))), true)), true)))))))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true)))))))))))
    return;
   return;
  }
 if(_GLF_struct_replacement_9.subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (1))) < subgroup_size)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)))), false, true, true))), true, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.0, -5.7)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5550.2288, 6.1)) : injectionSwitch)))), log(vec2(1.0, 1.0)) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(8.0, -5.7)) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-5550.2288, 6.1)) : injectionSwitch)))), log(vec2(1.0, 1.0)) + (injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), sin(0.0), 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, 0.0))).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))))))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), float(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1443.2603)), float(1.0), bool(true))))))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), _GLF_IDENTITY((log(vec2(1.0, 1.0))), min((log(vec2(1.0, 1.0))), (log(vec2(1.0, 1.0)))))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)) + (injectionSwitch), mix(vec2((log(vec2(1.0, 1.0)) + (injectionSwitch))[0], _GLF_FUZZED(4.2)), vec2(_GLF_FUZZED(-6.9), _GLF_IDENTITY((log(vec2(1.0, 1.0)) + (injectionSwitch))[1], float(mat4x3((log(vec2(1.0, 1.0)) + (injectionSwitch))[1], 0.0, 0.0, sin(0.0), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0)))), bvec2(false, true)))).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0)), min(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0))))) - 0.0))), clamp(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0), mix(vec2(((_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0))[0], ((_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(402.562), _GLF_FUZZED(-37.01)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))) + (injectionSwitch)).x), float(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.7)))) / 1.0), 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_ONE(1.0, injectionSwitch.y) * (1.0)))))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)) + (injectionSwitch), vec2(0.0, 0.0) + (log(vec2(1.0, 1.0)) + (injectionSwitch)))).x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, float(vec4(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, 1.0, 1.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0), clamp((_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0), _GLF_IDENTITY((_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0), mat2(1.0) * ((_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0))), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))))) + (injectionSwitch)).x), float(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + _GLF_IDENTITY((injectionSwitch), vec2(mat3x2((injectionSwitch), 1.0, 1.0, 0.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(vec2(9.8, 4529.3954)) : _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0)))))))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) - 0.0)), 0.0, 1.0, 0.0)), (_GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) - 0.0)), 0.0, 1.0, 0.0)), max(float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) - 0.0)), 0.0, 1.0, 0.0)), float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) * 1.0, ((0.0) * 1.0) - 0.0)), 0.0, 1.0, 0.0))))) / 1.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), float(_GLF_IDENTITY(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) : _GLF_FUZZED(step(-2794.7277, injectionSwitch))))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))))))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0)), clamp(_GLF_IDENTITY(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) : _GLF_FUZZED(step(-2794.7277, injectionSwitch))))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))))))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0)), max(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) : _GLF_FUZZED(step(-2794.7277, injectionSwitch))))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))))))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0)), vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) : _GLF_FUZZED(step(-2794.7277, injectionSwitch))))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))))))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0)))), vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) : _GLF_FUZZED(step(-2794.7277, injectionSwitch))))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))))))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0)), vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * (vec2(1.0, 1.0))) : _GLF_FUZZED(step(-2794.7277, injectionSwitch))))), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), _GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, true), false, false))))))))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)), min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0)))), mix(float(_GLF_FUZZED(9160.5362)), float(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)))))).x), float(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), _GLF_IDENTITY(vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), (vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1])) + vec2(0.0, 0.0)), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0)))), max(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(_GLF_IDENTITY(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), (vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345))) + vec2(0.0, 0.0)), 0.0, 1.0), mix(vec4(_GLF_FUZZED(74.78), (vec4(_GLF_IDENTITY(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), (vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345))) + vec2(0.0, 0.0)), 0.0, 1.0))[1], (vec4(_GLF_IDENTITY(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), (vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345))) + vec2(0.0, 0.0)), 0.0, 1.0))[2], (vec4(_GLF_IDENTITY(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), (vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345))) + vec2(0.0, 0.0)), 0.0, 1.0))[3]), vec4((vec4(_GLF_IDENTITY(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), (vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345))) + vec2(0.0, 0.0)), 0.0, 1.0))[0], _GLF_FUZZED(9.3), _GLF_FUZZED(-5.3), _GLF_FUZZED(0.9)), bvec4(true, false, false, false))))), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), float(vec4(min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) + sqrt(vec2(0.0, 0.0)))), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), abs(0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - tan(0.0)), mix(float(1.0), float(_GLF_FUZZED(36.12)), bool(false))), 1.0, 1.0)), 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), (false ? _GLF_FUZZED(step(-4570.7436, injectionSwitch)) : _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / _GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0, 1.0)))))) + (injectionSwitch)).x), float(vec4(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(log(vec2(1.0, 1.0)), min(log(vec2(1.0, 1.0)), _GLF_IDENTITY(log(vec2(1.0, 1.0)), (_GLF_IDENTITY(log(vec2(1.0, 1.0)), mix(vec2((log(vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4618.2345)), vec2(_GLF_FUZZED(6120.9220), (log(vec2(1.0, 1.0)))[1]), bvec2(false, true)))) / vec2(1.0, 1.0)))) + (injectionSwitch)).x), 1.0, abs(0.0), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), log(vec2(1.0, 1.0)) + (injectionSwitch)).x, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, log(_GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0)))) + (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0))))))), bool(true)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(sinh(2.6)) : 1.0)))) + (injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))))), max(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (_GLF_IDENTITY(1.0, 1.0 * (1.0))) + 0.0))) + (injectionSwitch)))).x, min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, log(vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))) + (injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, _GLF_IDENTITY(float(mat4x2(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))).x, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY((float(mat4x2(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))).x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0, min((float(mat4x2(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))).x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0, (float(mat4x2(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))).x, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))) - 0.0)))))) : _GLF_FUZZED(7.4))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED((float(172300u))), _GLF_FUZZED(790.623)), bvec2(false, false)))[0] : _GLF_FUZZED(706.209))), _GLF_FUZZED(1730.5702)), vec2(_GLF_FUZZED(10.54), (injectionSwitch)[1]), bvec2(false, true))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(1730.5702)), clamp(vec2((injectionSwitch)[0], _GLF_FUZZED(1730.5702)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(1730.5702)), min(vec2((injectionSwitch)[0], _GLF_FUZZED(1730.5702)), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(1730.5702)), vec2(vec4(vec2((injectionSwitch)[0], _GLF_FUZZED(1730.5702)), 0.0, 0.0))))), vec2((injectionSwitch)[0], _GLF_FUZZED(1730.5702)))), vec2(_GLF_FUZZED(10.54), (injectionSwitch)[1]), bvec2(false, true))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(1.0, 1.0), mat2(1.0) * _GLF_IDENTITY((vec2(1.0, 1.0)), vec2(vec2((vec2(1.0, 1.0)))))) * (_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(-707.105), (max(injectionSwitch, injectionSwitch))[1]), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(_GLF_IDENTITY(5.3, (_GLF_IDENTITY(5.3, clamp(5.3, _GLF_IDENTITY(5.3, float(mat4x2(5.3, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))), 5.3))) - _GLF_ZERO(0.0, injectionSwitch.x)))), bvec2(true, false)))))))))), log(vec2(1.0, 1.0)) + (injectionSwitch)).x > injectionSwitch.y, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (true), false || (false || (true)))), (! (_GLF_IDENTITY(false || (true), false || (false || (true))))) && true))))) || false), true)))) || false)))))
    return;
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ~ (~ (read))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0))))), (_GLF_IDENTITY(int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0))))), clamp(int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0))))), int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0))))), int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0)))))))) << 0)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0))))))), int(int(~ (_GLF_IDENTITY(4, int(ivec2(4, (0 >> _GLF_IDENTITY(int(0), int(0)))))))))))), 0 + (_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))), ivec2(0, 0) | (ivec2(4, (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))))))))));
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((mat3(4.9, 9641.5880, 80.44, -6224.4553, -22.79, -170.328, -6.8, -9957.8403, 0.4) * vec3(-3.8, 9752.5669, -848.248)).t)), bool(false))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.8) : injectionSwitch.y)))), (true ? injectionSwitch.y : _GLF_FUZZED(distance(-19.64, -46.58)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.8) : injectionSwitch.y)))), (true ? injectionSwitch.y : _GLF_FUZZED(distance(-19.64, -46.58)))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, false)))))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true))))), false, false)))))))), true, false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))), false, false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true)), (bool(bvec3(_GLF_IDENTITY(false, true && (false)), false, true))) && true)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))), false, false)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))))), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))))), false, false)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))))), false, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))))), false, false)), false)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))), ! (! (bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(false, (false) || false))), bvec2(bvec4(bvec2(bvec2(false, false)), false, false))))))))))))), false, false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), bool(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, false)), bvec2(bvec4(bvec2(bvec2(false, false)), false, false)))))))))), false, false)))), true)), true))), true))))))))), true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), true)))), true, false))))), true)))))), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), false || (! (bool(bvec2(false, false)))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), false))), bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), false, false)))))), true, false))))) || false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (_GLF_IDENTITY(true, ! (! (true)))), true, true))))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec2((true), false)), (bool(bvec2((true), false))) || false))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))), bvec3(bvec3(bvec3(bvec3(bvec3(false, true, true)))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), true && (_GLF_IDENTITY(bool(true), true && (bool(true))))))), _GLF_IDENTITY(false || (true), (false || (true)) && true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), _GLF_IDENTITY(false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true && (false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))])).y)))))), false), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false, true)))) || false), false, true))), false), false))), bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || _GLF_IDENTITY((true), _GLF_IDENTITY(! (! (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false))))), false))))), (! (! (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bool(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false))))), bool(bvec2(bool(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false))))), true)))))) && true)), false)))))) && true))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || _GLF_IDENTITY((true), _GLF_IDENTITY(! (! (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false))))), false))))), (! (! (_GLF_IDENTITY((true), bool(bvec2(_GLF_IDENTITY((true), _GLF_IDENTITY(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bool(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false))))), bool(bvec2(bool(bool(bvec3((true), true, _GLF_IDENTITY(false, false || (false))))), true)))))) && true)), false)))))) && true))), true, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), true))))))), true)), true, false, true)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)))), (bool(bool(_GLF_IDENTITY(false, false || (false))))) || false)), true, _GLF_IDENTITY(true, ! (! (true))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))), false))), true, false))), false), false))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true)), true)))))) || (_GLF_IDENTITY(false, false || (false)))), true))), bool(bvec2((bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))))), true && (! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))))))))) && true), false || (_GLF_IDENTITY(false, ! (! (false)))))))) || false)), true, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3(_GLF_IDENTITY((true), true && ((true))), true, false))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false))))), true), false), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true))))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), true))), true)))), (! (! _GLF_IDENTITY((bool(bvec4(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) || false))))))))) || false)), true, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), _GLF_IDENTITY(false || (false), true && (_GLF_IDENTITY(false || (false), (false || (false)) || false))))))))) || false)), true, _GLF_IDENTITY(true, ! (! (true)))), false)))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), ((! (false))) && true), true && (_GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! ((false))))), ((! (false))) && true)))), true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false))))), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true))))) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), false || (_GLF_IDENTITY(! (false || (false)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (false)), ((false || (false))) || false))))))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (false || (false)), false || (_GLF_IDENTITY(! (false || (false)), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))) || (false)), ((false || (false))) || false)))))))))) && true)), true))), bool(bvec2((bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(_GLF_IDENTITY(false, false || (false))))))) || false)), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))), _GLF_IDENTITY((true) && true, ((true) && true) && true)))), _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec4((true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false), false))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false))), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), false), false))), false)), false)))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), true))))) || (_GLF_IDENTITY(false, false || (false)))), true))), true))))) && true))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).y) * 1.0))))), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-65.99), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED((- 8.6))), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, injectionSwitch)))).y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(542.063)), bool(false))), mix(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(542.063)), bool(false)))), float(_GLF_FUZZED(314.774)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7452.7673) : injectionSwitch.y))))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y) * 1.0))))))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(542.063)), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7452.7673) : injectionSwitch.y))))) * 1.0), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))))))), true), false)))), false || (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, exp(0.0), exp(0.0), 0.0, 0.0, 1.0, 1.0)), vec2(0.0, 0.0) + (vec2(mat2x4(injectionSwitch, exp(0.0), exp(0.0), 0.0, 0.0, 1.0, 1.0))))))).y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
