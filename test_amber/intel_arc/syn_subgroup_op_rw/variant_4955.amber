#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z = subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))), false || (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(bvec2((injectionSwitch.x > injectionSwitch.y), false), true)))))))))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.y = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec2(0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-60.27, clamp(-60.27, _GLF_IDENTITY(-60.27, mix(float(-60.27), float(_GLF_FUZZED(3.8)), bool(false))), -60.27))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY((+ 4.6), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY((+ 4.6), ((+ 4.6)) - 0.0), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 0.0, 1.0, 1.0, log(1.0))), (false ? _GLF_FUZZED(396.959) : float(mat2x4(_GLF_IDENTITY((+ 4.6), ((+ 4.6)) - 0.0), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 0.0, 1.0, 1.0, log(1.0)))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x > injectionSwitch.y) || false))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, sqrt(0.0))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5491.5417)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY((+ injectionSwitch), mat2(1.0) * ((+ injectionSwitch)))))).x > injectionSwitch.y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), 0.0, 0.0, 1.0, exp(0.0))))).y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y)))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), 0.0, 0.0, 1.0, exp(0.0))))).y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y)))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), 0.0, 0.0, 1.0, exp(0.0))))).y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y)))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), vec2(mat3x2(vec2(_GLF_IDENTITY(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, exp(0.0), 0.0))))), 0.0, 0.0, 1.0, exp(0.0))))).y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).x > injectionSwitch.y)))) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))))))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(740.079)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / cos(0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(174891u))), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), bool(true)))), mix(vec2((vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(174891u))), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), bool(true)))))[0], _GLF_FUZZED(6.9)), vec2(_GLF_FUZZED(-18.02), (vec2(1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(174891u))), float(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0))), bool(true)))))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) / 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) / 1.0), max(_GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) / 1.0), _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) / 1.0))), _GLF_IDENTITY(float(vec3(0.0, 1.0, 0.0)), (float(vec3(0.0, 1.0, 0.0))) / 1.0)))), _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(0.0), 0.0 + (float(0.0))), float(_GLF_FUZZED(7596.0010)), bool(false))), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), (_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0)))) / 1.0)), transpose(transpose(mat4(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)), float(mat4x3(1.0, 1.0, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 0.0, 1.0)))) / 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-61.81)), bool(false)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), min(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))) / sqrt(vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), (_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(43.18)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0), mat4(1.0) * (mat4(1.0, 0.0, 1.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY((normalize(vec4(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0))) * mat4(1.0), mix(vec4(_GLF_FUZZED(4277.6765), _GLF_FUZZED(7.9), ((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))[2], ((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))[3]), vec4(((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))[0], ((normalize(vec4(1.0, 1.0, 1.0, 1.0))) * mat4(1.0))[1], _GLF_FUZZED((-7.7 * -8.0)), _GLF_FUZZED(-5.3)), bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))), 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0, determinant(mat4(0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.7)), float(0.0), bool(true))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0)))))) + 0.0), 1.0))), vec2(1.0, 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), (_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(_GLF_IDENTITY(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat2x3(vec2(1.0, 0.0), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))), abs(1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, cos(0.0), 0.0, 0.0, 0.0)))) : _GLF_FUZZED(mat4(-3.1, 2017.6773, 5.4, -0.1, 72.60, 9.7, 4703.2792, 2.6, 7.2, 86.48, 7.1, 253.263, -2178.1023, 5.3, 70.73, 66.56)))))), 1.0, 1.0, 0.0))), 1.0)), 1.0)), 0.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0)), (vec2(mat2x3(_GLF_IDENTITY(vec2(1.0, 0.0), (_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0)), vec2(mat2x3(vec2(1.0, 0.0), 1.0, 0.0, 1.0, 0.0)))) / vec2(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0))) * mat2(1.0))), vec2(1.0, 0.0)))) / 1.0), _GLF_IDENTITY(dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), vec2(mat2x4(vec2(1.0, 0.0), sqrt(1.0), log(1.0), log(1.0), 0.0, 1.0, 1.0)))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[0], (_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(89.46), _GLF_FUZZED(7.5)), bvec2(false, false))) : _GLF_FUZZED(vec2(173.702, 282.504)), mix(vec2((true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[0], (_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(89.46), _GLF_FUZZED(7.5)), bvec2(false, false))) : _GLF_FUZZED(vec2(173.702, 282.504)))[0], (true ? _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))), mix(vec2((_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[0], (_GLF_IDENTITY(vec2(1.0, 0.0), (true ? vec2(1.0, 0.0) : _GLF_FUZZED(injectionSwitch))))[1]), vec2(_GLF_FUZZED(89.46), _GLF_FUZZED(7.5)), bvec2(false, false))) : _GLF_FUZZED(vec2(173.702, 282.504)))[1]), vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(-2.6)), bvec2(false, false))))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0)), dot(vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0), vec2(1.0, 0.0))))))), 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat3x4(injectionSwitch, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))) : _GLF_FUZZED(atanh(3.6)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), max(_GLF_IDENTITY(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))) : _GLF_FUZZED(atanh(3.6)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0)), 1.0)), clamp(determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))) : _GLF_FUZZED(atanh(3.6)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))) : _GLF_FUZZED(atanh(3.6)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0), (mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))) : _GLF_FUZZED(atanh(3.6)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))) : _GLF_FUZZED(atanh(3.6)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))) : _GLF_FUZZED(atanh(3.6)))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat2(0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0)))))))), 0.0))), 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))).y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), false || (bool(bvec3(false, true, false))))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), true, true)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || (_GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) || false))))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(false))))) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (false)), bool(bool(false))))) || false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-27.28) : injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-398.119)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))), _GLF_IDENTITY(false, false || (false)) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.1) : injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(false)))) && true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.0)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED((injectionSwitch + (1494.8684 * vec2(9635.1994, _GLF_IDENTITY(-6284.0314, (false ? _GLF_FUZZED(fract(8883.9159)) : -6284.0314)))))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.0)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED((injectionSwitch + (1494.8684 * vec2(9635.1994, _GLF_IDENTITY(-6284.0314, (false ? _GLF_FUZZED(fract(8883.9159)) : -6284.0314))))))), ((true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.0)), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED((injectionSwitch + (1494.8684 * vec2(9635.1994, _GLF_IDENTITY(-6284.0314, (false ? _GLF_FUZZED(fract(8883.9159)) : -6284.0314)))))))) - vec2(0.0, 0.0))).x > injectionSwitch.y)))), bool(bvec2((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(7.0)), (_GLF_IDENTITY(float(_GLF_FUZZED(7.0)), min(float(_GLF_FUZZED(7.0)), float(_GLF_FUZZED(7.0))))) - 0.0), float(1.0), bool(true))), 1.0, 1.0, 1.0, 1.0, 0.0, 1.0))) : _GLF_FUZZED((injectionSwitch + (1494.8684 * vec2(9635.1994, _GLF_IDENTITY(-6284.0314, (false ? _GLF_FUZZED(fract(8883.9159)) : -6284.0314)))))))).x > injectionSwitch.y), true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))) || false), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(36.82)), float(injectionSwitch.y), bool(true))), injectionSwitch.y)), injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, true)))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))), (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(false, true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, true)))), false || ((_GLF_IDENTITY(false, bool(bvec2(false, true)))))))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(fma(-2.3, 7.2, 5.0)))), 0.0, 1.0)), (true ? float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(fma(-2.3, 7.2, 5.0)))), 0.0, 1.0)) : _GLF_FUZZED(3.8))))))))), bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), _GLF_IDENTITY(((false) || false) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((false) || false) || false, bool(bool(((false) || false) || false))), true, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY(((false) || false) || false, bool(bool(((false) || false) || false))), true, true, false)))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, true, _GLF_IDENTITY(true, ! (! (true)))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), max(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), clamp(min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-11.68), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.7)), bvec2(true, false))).y)))), true, true, true))))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)))))) || false))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)) > injectionSwitch.y)))))) || false))), true, true, true)), true, true, true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8.0) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) : _GLF_FUZZED(6960.2559)))))))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z, max(subgroup_id * GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z, subgroup_id * GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z)) + GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), false, true, true)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, true)), false, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, true)), false, false, false)))), ((! (bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, true, true)), false, false, false))))) || false))))), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, ! (! (false))))), (! (! (_GLF_IDENTITY(false, ! (! (false)))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (! (_GLF_IDENTITY(false, true && (false)))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
        barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z + ((GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.y + _GLF_IDENTITY(1, min(1, 1))) % GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z), 1u * (workgroup_base + subgroup_id * GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z + ((GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.y + _GLF_IDENTITY(1, min(1, 1))) % GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z)));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), ~ _GLF_IDENTITY((~ ((0))), (0 | 0) | ((~ ((0)))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0)))), max(_GLF_IDENTITY(_GLF_IDENTITY((0), ~ _GLF_IDENTITY((~ ((0))), (0 | 0) | ((~ ((0)))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0)))), (_GLF_IDENTITY((0), ~ _GLF_IDENTITY((~ ((0))), (0 | 0) | ((~ ((0)))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0))))) | (_GLF_IDENTITY((0), ~ _GLF_IDENTITY((~ ((0))), (0 | 0) | ((~ ((0)))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0)))))), _GLF_IDENTITY(_GLF_IDENTITY((0), ~ _GLF_IDENTITY((~ ((0))), (0 | 0) | ((~ ((0)))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0)))), (_GLF_IDENTITY((0), ~ _GLF_IDENTITY((~ ((0))), (0 | 0) | ((~ ((0)))))) * _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) ^ ivec2(0, 0))))) >> 0))))) - 0) : _GLF_FUZZED(16495)))) >> _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) | (0 >> _GLF_IDENTITY(int(3), int(3)))), 0)))) >> 0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.x = _GLF_IDENTITY(read, min(read, read));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) - (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, ~ (~ (1)))))) - 0)), int(1))) - 0)) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, (0) | (0)) << _GLF_IDENTITY(int(1), int(1))) >> (_GLF_IDENTITY((1 & 1) ^ 1, max(_GLF_IDENTITY((1 & _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(2), int(2)))), (1) | (0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), 0 | (int(7)))))))))) ^ _GLF_IDENTITY(1, (1) | (1)), min(_GLF_IDENTITY((1 & 1) ^ 1, min(_GLF_IDENTITY((1 & 1) ^ 1, ((1 & 1) ^ 1) | ((1 & 1) ^ 1)), (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(42588) : _GLF_IDENTITY(1, (1) - 0))) & 1) ^ 1)), (1 & 1) ^ 1)), (1 & 1) ^ 1)))), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), 0 ^ ((_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(1), int(1))))) >> (_GLF_IDENTITY((1 & 1), ((1 & 1)) | ((1 & 1))) ^ _GLF_IDENTITY(1, (1) / int(_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, min(1, 1))) ^ 0)))))) >> ((1 & 1) ^ 1))))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(7), int(7)))) << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1), min(ivec3(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), max((0 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), 0 + ((0 << _GLF_IDENTITY(int(1), int(1))))))), 0, 1), ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1)))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1), min(ivec3(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), max((0 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), 0 + ((0 << _GLF_IDENTITY(int(1), int(1))))))), 0, 1), ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1)))), int(ivec4(int(_GLF_IDENTITY(ivec3((0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (1) | 0)))), int(1))), 0, 1), min(ivec3(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), max((0 << _GLF_IDENTITY(int(1), int(1))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), 0 + ((0 << _GLF_IDENTITY(int(1), int(1))))))), 0, 1), ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1)))), 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y))))))))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (int(1)) * 1)) / 1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | 0))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(-67566)))) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1), ((0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)) - 0))))))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) << _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec4(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) >> (0 >> _GLF_IDENTITY(int(5), int(5)))), 0, 1, 1)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1, (1) << ((0 | 0) | 0)) & 1) ^ 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) - (0 << _GLF_IDENTITY(int(7), int(7)))) << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), int(_GLF_IDENTITY(ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1), min(ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1), ivec3((0 << _GLF_IDENTITY(int(1), int(1))), 0, 1))))) >> ((_GLF_IDENTITY(1, ~ (~ (1))) & 1) ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(1, min(1, 1))), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (_GLF_IDENTITY(int(1), min(int(1), int(1)))))), (int(1)) * 1)) / 1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)))))), clamp(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)))))), min(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)))))), (false ? _GLF_FUZZED(-1565) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))), 0 ^ (~ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (_GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), max(int(1), int(1)))) ^ _GLF_IDENTITY(0, (0) << 0))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))))))))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))) - 0)), 0)))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (1) << 0))), (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) >> 0), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (1) << 0))), max(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (1) << 0))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (1) << 0)))))) ^ 0), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), (0 << _GLF_IDENTITY(int(5), int(5))) | (int(1))), int(1)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), int(ivec3(0 << _GLF_IDENTITY(int(1), int(1)), 1, 0)))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1), 0 + (_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), max(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), 0 ^ ((0 << _GLF_IDENTITY(int(1), int(1))))), (0 << _GLF_IDENTITY(int(1), int(1))))) >> ((1 & 1) ^ 1)))), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(ivec4(int(1), 0, 0, 0))))) ^ (1)))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) * 1)), int(int((_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, min(0, 0))))) << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(_GLF_IDENTITY(1, (1) / 1)), int(1))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) * 1))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))) * 1, clamp((0 << _GLF_IDENTITY(int(1), int(1))) * 1, (0 << _GLF_IDENTITY(int(1), int(1))) * 1, (0 << _GLF_IDENTITY(int(1), int(1))) * 1)))), 0 | (0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) * 1))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) * 1)), (true ? 0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) * 1)) : _GLF_FUZZED(19353))), 0 | (0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) * 1))))), (~ (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 | (_GLF_IDENTITY(int(1), int(1))))) * 1)), 0 | (0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) * 1)))))) / 1)) / 1))))) >> ((_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, 0), (ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, 0)) + ivec4(0, 0, 0, 0))), ~ (~ (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, 0), (ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, 0)) + ivec4(0, 0, 0, 0))), (true ? int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, 0), (ivec4(_GLF_IDENTITY(1, (1) | (1)), 0, 1, 0)) + ivec4(0, 0, 0, 0))) : _GLF_FUZZED(35670))))))) & 1) ^ 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))) * 1), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (1) | (0 ^ 0))))))), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))), clamp(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) | (int(1))))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))))) >> ((1 & 1) ^ 1)), (_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))))) >> ((1 & 1) ^ 1)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))))) >> ((1 & 1) ^ 1)), 0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))))) >> ((1 & 1) ^ 1)))), 0), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))))) >> ((1 & 1) ^ 1)), 0 ^ (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, (0) ^ 0) << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))))) >> ((1 & 1) ^ 1)))), 0)) ^ ivec2(0, 0))))) ^ 0), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED(56398) : _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ((0 ^ 0) << _GLF_IDENTITY(int(4), int(4))) + (_GLF_IDENTITY(1, clamp(1, 1, 1))))))) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / 1), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1, 1 * (1)) & 1) ^ 1))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1, (1) / 1) & 1) ^ 1))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1 & 1, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))))) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))), int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> (_GLF_IDENTITY((1 & 1), ((1 & 1)) | 0) ^ 1)))))))) - 0), max(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED(56398) : _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ((0 ^ 0) << _GLF_IDENTITY(int(4), int(4))) + (_GLF_IDENTITY(1, clamp(1, 1, 1))))))) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / 1), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1, 1 * (1)) & 1) ^ 1))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1, (1) / 1) & 1) ^ 1))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1 & 1, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))))) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))), int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> (_GLF_IDENTITY((1 & 1), ((1 & 1)) | 0) ^ 1)))))))) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & _GLF_IDENTITY(1, (false ? _GLF_FUZZED(56398) : _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), ((0 ^ 0) << _GLF_IDENTITY(int(4), int(4))) + (_GLF_IDENTITY(1, clamp(1, 1, 1))))))) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) / 1), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1, 1 * (1)) & 1) ^ 1))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1, (1) / 1) & 1) ^ 1))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(0, max(0, 0)) << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((_GLF_IDENTITY(1 & 1, (0 << _GLF_IDENTITY(int(8), int(8))) ^ (_GLF_IDENTITY(1 & 1, max(1 & 1, 1 & 1))))) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))), int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1))))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), min(int(1), int(1))), int(1))) >> ((1 & _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> (_GLF_IDENTITY((1 & 1), ((1 & 1)) | 0) ^ 1)))))))) - 0))), 0)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))), max((0 << _GLF_IDENTITY(int(1), int(1))), (0 << _GLF_IDENTITY(int(1), int(1))))) >> ((_GLF_IDENTITY(1 & 1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 & 1 : _GLF_FUZZED(96769)))) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (1) | (1))))))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, int(ivec4(1, 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))))), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, 0 | (1))))) ^ 1), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), (_GLF_IDENTITY(int(1), int(1))) * 1)), ((0 << _GLF_IDENTITY(int(1), int(1)))) | (_GLF_IDENTITY((69692 & 60057) & 0, _GLF_IDENTITY(((69692 & 60057) & 0), ~ (_GLF_IDENTITY(~ (((69692 & 60057) & 0)), (~ (((69692 & 60057) & 0))) | 0))) * 1))) >> ((1 & 1) ^ 1)) * 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))), 0)))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), ~ (~ (_GLF_IDENTITY(int(1), int(1)))))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(88815) : int(1))), min(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(88815) : int(1))), _GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(88815) : int(1))))))) >> ((1 & 1) ^ 1), min(_GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) << 0)))) >> ((1 & 1) ^ 1), ((0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)) | ((0 << _GLF_IDENTITY(int(1), int(1))) >> (_GLF_IDENTITY((_GLF_IDENTITY(1 & 1, ~ (_GLF_IDENTITY(~ (1 & 1), clamp(~ (1 & 1), ~ (1 & 1), ~ (1 & 1)))))) ^ 1, ((1 & 1) ^ 1) + 0)))), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1))))))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), clamp(_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(1, max(1, 1))), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ 1)), _GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), (0 << _GLF_IDENTITY(int(1), int(1))) >> ((1 & 1) ^ _GLF_IDENTITY(1, (1) | 0)))))), 0)))))))))))), 4, 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), 0 + (int(1))))) ^ (4))), max(~ (4), _GLF_IDENTITY(~ (4), 0 | (~ (4))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (bool(bool(_GLF_DEAD(false)))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))), (bool(bool(_GLF_DEAD(false)))) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(bool(bvec4(bool(bool(false)), false, true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, (_GLF_IDENTITY((true) || false, ! (! ((true) || false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec3(bvec2(bool(bvec4(_GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || _GLF_IDENTITY(false, ! (! (false)))))), false, true, true)), true), _GLF_IDENTITY(true, true && (true)))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), true)), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), false, true)), true, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), bvec2(bvec2(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true)))), true)))))), ! (! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), true)), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), false, true)), true, true)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), bvec2(bvec2(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true)))), true)))))), ! (! (! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), true)), true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), false, true)), bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), false, true)), true, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true), bvec2(bvec2(bvec2(bool(bvec4(bool(bool(false)), false, true, true)), true)))), true))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.y, (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size, min(GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size, _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size, ~ (~ (GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size))))).y, min(GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.y, GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.y))) ^ 0u) + 1 < GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.z)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) | (~ (virtual_gid)))))], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.x, min(GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.x, GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.x)), _GLF_IDENTITY(4, (4) / 1), 64, 4);
   subgroupAll(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false)))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))), bool(bvec2(_GLF_IDENTITY((false), ! (! ((false)))), true))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false) || (_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1505.0142), _GLF_FUZZED(-153.983)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(vec3((injectionSwitch)[1], 1.0, 1.0)))), bvec2(true, true))))).y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(vec2(1061.3743, -443.763).x)), float(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8301.1913), _GLF_FUZZED(248.082)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch, injectionSwitch)).y), bool(true))), injectionSwitch.y))))) || false), false, false)))), bool(bvec2((false), true))), false || (false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))), bool(bvec2((false), true))))))))))
    barrier();
   atomicStore(buf[virtual_gid], GLF_merged3_0_1_4_1_1_17_2_1_13readsubgroup_local_idsubgroup_size.x, 4, 64, 4);
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) || false)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
