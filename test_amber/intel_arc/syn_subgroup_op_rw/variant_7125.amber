#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0)), 0.0)), 0.0)))), min(float(mat3(injectionSwitch.y, sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))), float(mat3(injectionSwitch.y, sin(0.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0))))))), injectionSwitch.y)))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - abs(vec2(0.0, 0.0))).y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size.y = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size, uvec2(GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size[_GLF_IDENTITY(_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0)), (0) | (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) ^ 0)))) >> 0)))], GLF_merged2_0_1_13_1_1_14num_workgroupworkgroup_size[1])).y * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))))))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), clamp(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))), uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))))))) | 0u)), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), 1u * (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)) : _GLF_FUZZED(workgroup_base))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))))))) | 0u)), 0u, 0u, 1u)), min(uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))))))) | 0u)), 0u, 0u, 1u)), uint(uvec4(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)))))), (uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)), min(subgroup_size, _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), subgroup_size))))))) | 0u)), 0u, 0u, 1u)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, sin(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, sin(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0), (mat3(injectionSwitch.x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, sin(0.0), 1.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, true))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), (((subgroup_local_id + 1))) | 0u) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1)), subgroup_local_id + 1)), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), min(_GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), uint(uint((true ? subgroup_size : _GLF_FUZZED(subgroup_base))))), _GLF_IDENTITY((true ? subgroup_size : _GLF_FUZZED(subgroup_base)), ((true ? subgroup_size : _GLF_FUZZED(subgroup_base))) - 0u))))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * (1u | 1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, 1u * (subgroup_local_id + 1)), subgroup_local_id + 1, subgroup_local_id + 1))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)))), subgroup_local_id + 1))))))), (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (((subgroup_local_id + 1))))) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 | (~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))), ~ (_GLF_IDENTITY(1, clamp(1, 1, 1))))))), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), 0u | (~ (subgroup_local_id))))) + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 + (1)), _GLF_IDENTITY(1, (1) | (1)), 1)), subgroup_local_id + 1)), subgroup_local_id + 1))))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(1, (1) / 1))), subgroup_local_id + 1))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(1, (1) / 1))), subgroup_local_id + 1)))))), (uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(1, (1) / 1))), subgroup_local_id + 1))))))) << 0u)), uint(uvec3(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(1, (1) / 1))), subgroup_local_id + 1)))))), (uint((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), min(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), uint(uvec3(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), 0u, 1u))), subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (true ? _GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, subgroup_local_id)) : _GLF_FUZZED(workgroup_base))) + _GLF_IDENTITY(1, (1) / 1))), subgroup_local_id + 1))))))) << 0u)), 1u, 0u)))))), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, (1u & 1u), 0u)), (_GLF_IDENTITY(true ? uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(subgroup_base), (_GLF_FUZZED(subgroup_base)) | 0u)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) + 0u)) + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) | (min(subgroup_local_id + 1, subgroup_local_id + 1)))), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, (1u & 1u), 0u)) : _GLF_FUZZED(workgroup_id), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))), ~ (~ (~ (_GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))))))))), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u)))), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), 0u ^ (uint(3u))))))) ^ (true ? _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id)) + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) | (min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)))), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u)), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id)) + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) | (min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)))), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u)), min(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id)) + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) | (min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)))), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u)), uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) / 1u)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (0u | 0u) + (subgroup_local_id)) + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(min(subgroup_local_id + 1, subgroup_local_id + 1), (min(subgroup_local_id + 1, subgroup_local_id + 1)) | (min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1)))), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, _GLF_IDENTITY((1u & 1u), ((1u & 1u)) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))), 0u)))))) : _GLF_FUZZED(workgroup_id))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size)), min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1))), min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) + 0u), 1u, 1u)) | 1u))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) + 0u), subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)), subgroup_local_id + 1)), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, _GLF_IDENTITY(1u & 1u, (1u & 1u) * 1u)))) ^ 0u)), 0u)), ~ (~ (uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))), 1u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))), 1u, 1u))))), ~ (~ (uint(_GLF_IDENTITY(uvec3((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))), 1u, 1u), ~ (~ (uvec3((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))), 1u, 1u)))))))))) | ((_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * (1u | 1u))), (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) + 0u), subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)), subgroup_local_id + 1)), subgroup_local_id + 1))))))), (1u ^ uint(_GLF_ONE(1.0, injectionSwitch.y))) ^ (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) + 0u), subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + _GLF_IDENTITY(1, 1 * (1)), subgroup_local_id + 1)), subgroup_local_id + 1))))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, (_GLF_IDENTITY(1u & 1u, (_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u & 1u, min(1u & 1u, 1u & 1u)), (1u & 1u) * 1u)))) ^ 0u)), 0u))))), (true ? uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * _GLF_IDENTITY((1u | 1u), ~ (~ (_GLF_IDENTITY((1u | 1u), ((1u | 1u)) | ((1u | 1u))))))), ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * _GLF_IDENTITY((1u | 1u), ~ (~ (_GLF_IDENTITY((1u | 1u), ((1u | 1u)) | ((1u | 1u)))))))) | ((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * _GLF_IDENTITY((1u | 1u), ~ (~ (_GLF_IDENTITY((1u | 1u), ((1u | 1u)) | ((1u | 1u)))))))))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), subgroup_local_id)) + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, (1u & 1u), 0u)) : _GLF_FUZZED(workgroup_id))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))), min((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))), (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * (1u | 1u))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))))), ~ (~ (((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), clamp(max(1, 1), max(1, 1), _GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1)))))), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id : _GLF_FUZZED(workgroup_base))) + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)))))))))) % subgroup_size : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), ((subgroup_size)) * (1u | 1u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << 0u), (subgroup_local_id + 1))), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, max(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED(num_workgroup))), subgroup_local_id + 1))) / (1u & 1u)), min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1)))))))), (((subgroup_local_id + 1)) | ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1))))))) ^ 0u)) % subgroup_size : _GLF_FUZZED(workgroup_id))), 1u, (1u & 1u), 0u)), (true ? uint(uvec4(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_size)))) * (1u | 1u)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_base)))) | (subgroup_size))) | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(((subgroup_size)), (false ? _GLF_FUZZED(virtual_gid) : ((subgroup_size)))) * (1u | 1u)) : _GLF_FUZZED(workgroup_base)))), (true ? _GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u) + 1)) | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + _GLF_IDENTITY(1, max(1, 1)), clamp(subgroup_local_id + 1, subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))))))) % subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_FUZZED(workgroup_id))))), 1u, (1u & 1u), 0u)) : _GLF_FUZZED(workgroup_id)))))) << 0u)) | 0u))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! ((false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true)))))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(false || (! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false || (! (! (false))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), false, true)))))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))), ! (! (_GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(_GLF_IDENTITY(true, ! (! (true))) && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))))) || false)))))))))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), false || (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), true && ((false))))))))), true && (bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), false || (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), true && ((false))), true && ((false))))))))))))) && true)), true && ((! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))))))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (! ((false))) && true)), true && ((_GLF_IDENTITY(! ((false)), (! ((false))) && true))))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false)))))))), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true && ((false)), ! (! (_GLF_IDENTITY(true && ((false)), false || (true && ((false))))))), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), (! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false))))) && true), _GLF_IDENTITY(false, false || (false)), false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(_GLF_IDENTITY(bvec3(true && ((false)), true, false), bvec3(bvec4(bvec3(true && ((false)), true, false), true)))))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((false))), (bool(((false)))) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(bool(((false))), (bool(((false)))) && true)), true), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(bool(((false))), (bool(((false)))) && true)), true), true)))))), true, false)))), false, false))))))))))))))))))))) || false))), ((bool(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), false || ((false)))), false || (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), true && ((_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)), bool(bool((_GLF_IDENTITY((false), ((false)) || false)))))))))))))) && true)))))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))), false || (! (! (false)))))), false || (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! _GLF_IDENTITY((false), ((false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))))))), false || (! (! (false)))))))))))))), false, false, true)), false || (bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(((false)), bool(bool(((false))))), true && (((false))))), ! (! (! (_GLF_IDENTITY(((false)), true && (((false)))))))))), true, false)), _GLF_IDENTITY(bool(bvec3(bool(bvec3(_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((false)), true && (((false))))), ! (! (! (_GLF_IDENTITY(((false)), true && (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec2(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (bool(bvec2(((false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))), true, false)), true, true)), false || (bool(bvec3(bool(bvec3(_GLF_IDENTITY(((_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(((false)), true && (((false))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(((false)), true && (((false))))), ((_GLF_IDENTITY(((false)), true && (((false)))))) || false))), ! (! (! (_GLF_IDENTITY(((false)), true && (((false)))))))))), true, false)), true, true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true))), true && (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true)))))))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))), false || (! (! _GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), false, true))), true && (_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), true))))))))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false, false)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))), bool(bvec3(_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), true && (! (! (false))))) && true), false, true)))))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), false || _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY(((false)), (((false))) && true), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)), false))), ! (! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || (true)), false))))))), false, false))))))), false || ((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && ((false)), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))) && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false))))), (_GLF_IDENTITY(true && ((false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && _GLF_IDENTITY(((false)), bool(bvec4(_GLF_IDENTITY(((false)), false || (((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))), bool(bvec3(true && ((false)), true, false)))), bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))) && ((false)), bool(bvec3(true && ((false)), true, false)))), false, false)))))) || false))))))))))), ((bool(_GLF_IDENTITY(! (! (false)), false || (! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), true && ((false))))))))))) && true)))), false || (bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))) && true)), bvec3(bvec3(bvec3(! (false), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec3(true, false, false))))), false))))))))), false || (_GLF_IDENTITY(! (! (false)), bool(bvec3(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), true)))))), false, false))))))))))))), false, false, true))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) / vec2(1.0, 1.0), ((injectionSwitch) / vec2(1.0, 1.0)) * mat2(1.0)), _GLF_IDENTITY(((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(18.76)), vec2((((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))[0], (((injectionSwitch) / vec2(1.0, 1.0)) * vec2(1.0, 1.0))[1]), bvec2(true, true))))).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u | (next_virtual_gid))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], float(mat3x2(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1])), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))))), (vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0))) * mat2(1.0)))) - vec2(0.0, 0.0))[1])), min(injectionSwitch[1], injectionSwitch[1])))))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(_GLF_IDENTITY(injectionSwitch[1], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, 0 | (1))], float(mat3x2(injectionSwitch[1], 0.0, 0.0, 0.0, 1.0, 0.0))), injectionSwitch[1])), injectionSwitch[1], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), (false ? _GLF_FUZZED(30.20) : _GLF_IDENTITY(1.0, 1.0 * (1.0)))))))), (_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-74.53, 560.940, 2.3, -210.898, -1.6, 1.4))))), clamp(vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-74.53, 560.940, 2.3, -210.898, -1.6, 1.4))))), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-74.53, 560.940, 2.3, -210.898, -1.6, 1.4))))), vec2(_GLF_IDENTITY(mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0), (true ? mat2x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-74.53, 560.940, 2.3, -210.898, -1.6, 1.4))))))))) * mat2(1.0)))) - vec2(0.0, 0.0))[_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(1), int(1))))])), min(injectionSwitch[1], injectionSwitch[1])))))).y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) << 0), 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) | (4))), clamp(~ (_GLF_IDENTITY(4, (4) | (4))), ~ (_GLF_IDENTITY(4, (4) | (4))), ~ (_GLF_IDENTITY(4, (4) | (4))))))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec3((false), true, false)))) && true))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uint(read))), 0u | (_GLF_IDENTITY(read, uint(uint(read))))), min(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) ^ 0u), read)), read)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uint(read))), min(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) ^ 0u), read)), read)), min(_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uint(read))), min(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) ^ 0u), read)), read)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uint(read))), min(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) ^ 0u), read)), read)), (_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uint(read))), min(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) ^ 0u), read)), read))) | 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(read, uint(uint(read))), min(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, (read) ^ 0u), read)), read)))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(75.27)), bool(false))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(75.27), float(mat2x3(_GLF_FUZZED(75.27), determinant(mat4(0.0, log(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, abs(0.0), 0.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))), bool(false)))))) || false), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(75.27)), bool(false))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(75.27)), bool(false))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(75.27)), bool(false)))), false, false))))) || _GLF_IDENTITY(false, (false) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), bool(bool((_GLF_DEAD(false))))) && true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), false || (bool(bvec2(_GLF_DEAD(false), false))))), false || (_GLF_DEAD(false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
