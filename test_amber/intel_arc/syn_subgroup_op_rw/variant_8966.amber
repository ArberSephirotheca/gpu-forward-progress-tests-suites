#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_9 {
 int _f0;
 bvec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 mat4 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_10 {
 uint subgroup_id;
 mat4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_9 _f2;
 uint _f3;
 bool _f4;
} ;

struct _GLF_struct_6 {
 uvec2 _f0;
 ivec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_5 {
 mat3x4 _f0;
 uint _f1;
 uvec3 _f2;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 ivec4 _f1;
 int _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 mat4 _f1;
 vec3 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 int _f1;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 mat3x2 _f1;
 mat3x2 _f2;
} ;

struct _GLF_struct_3 {
 float _f0;
 uvec2 _f1;
 mat3 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_10 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_0 {
 uvec2 _f0;
 uint subgroup_size;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(mat2(1.0), _GLF_struct_3(1.0, _GLF_IDENTITY(uvec2(1u), (uvec2(1u)) / uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(66437u) : _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(16303u)))))) - 0u), 1u)), mat3(1.0), _GLF_struct_1(vec2(1.0), mat3x2(1.0), mat3x2(1.0)), _GLF_struct_2(bvec4(true), 1)), _GLF_struct_7(_GLF_struct_4(ivec2(1), ivec4(1), 1), mat4(1.0), vec3(1.0), _GLF_struct_5(mat3x4(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 1u, uvec3(1u)), _GLF_struct_6(uvec2(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(87589u)))), ivec4(1), vec3(1.0)), uvec4(1u)), _GLF_struct_10(gl_SubgroupID, mat4(1.0), _GLF_struct_8(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), mat4(1.0), mat2x4(1.0)), _GLF_struct_9(1, bvec3(true), mat2x4(1.0)), _GLF_IDENTITY(1u, max(1u, 1u)), true), mat2x3(1.0));
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(uvec2(1u), gl_SubgroupSize);
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_struct_replacement_11._f3.subgroup_id * _GLF_struct_replacement_0.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(_GLF_IDENTITY(abs(0.0), (_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))) + 0.0)), 0.0, sqrt(abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(844.443))))), 1.0, sin(0.0), length(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.9))), 0.0)), 0.0, 0.0)), 0.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), mat4(1.0) * (mat4(1.0) * (mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(81.16)), float(1.0), bool(true)))) * 1.0) : _GLF_FUZZED(mix(-8.1, 5038.4101, (uvec3(33149u, 111859u, 21064u) == uvec3(128978u, 59718u, 84088u)))))), sin(0.0), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), (true ? length(vec4(0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(3505.5616))), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), float(_GLF_IDENTITY(mat3x2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0), (mat3x2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, 1.0)) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 0.0)))))), max(float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec2(1.0, 1.0) * (vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), mat4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((2.0 * 376.426))), float(1.0), bool(true)))) * _GLF_IDENTITY((mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), transpose(transpose(_GLF_IDENTITY((mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), transpose(transpose((mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)))))))))), float(_GLF_IDENTITY(mat4(injectionSwitch.y, 0.0, 1.0, sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0), mat4(1.0) * (mat4(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8.9)), float(0.0), bool(true))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sin(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0, 0.0, 1.0, exp(abs(0.0)), 0.0, sqrt(abs(1.0)), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-84.36)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, 0.0), determinant(mat3(sin(0.0), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, tan(0.0), 0.0)) + (_GLF_IDENTITY(clamp(0.0, 0.0, 0.0), min(clamp(0.0, 0.0, 0.0), clamp(0.0, 0.0, 0.0))))))))))))))), (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1))) % _GLF_struct_replacement_0.subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))) && true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true))))))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))) && true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED(6.2), (_GLF_IDENTITY(_GLF_FUZZED(6.2), clamp(_GLF_IDENTITY(_GLF_FUZZED(6.2), clamp(_GLF_FUZZED(6.2), _GLF_FUZZED(6.2), _GLF_FUZZED(6.2))), _GLF_FUZZED(6.2), _GLF_FUZZED(6.2)))) / 1.0)), bool(false))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), true))))))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y)))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))), clamp(_GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch))))), _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(36.79)), float(1.0), bool(true)))), injectionSwitch.y, injectionSwitch.y))) && true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(-85.14), (mat2(1.0) * (injectionSwitch))[1]), vec2(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch))[0], mix(float(_GLF_FUZZED(9902.8441)), float((mat2(1.0) * (injectionSwitch))[0]), bool(true))), _GLF_FUZZED(vec3(5.2, -72.09, -9456.6411).g)), bvec2(true, false)))).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(99.49, -3.8, -31.38)[2])))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true))))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(floor(vec2(940.227, -8.5))) : injectionSwitch)), injectionSwitch)).y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), true))))))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y)))), true, false, false)))) || _GLF_IDENTITY(false, bool(bvec2(false, true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec2(1, (0 ^ 0))))) | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) | 0), 1))))))) % _GLF_struct_replacement_0.subgroup_size)) << (0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (7u) / 1u)), uint(uvec4(uint(7u), 0u, 1u, 1u)))))), (workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) - 0.0)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), (false ? _GLF_FUZZED(injectionSwitch) : max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))))))))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y))) && true)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / exp(vec2(0.0, 0.0))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false)))))))))), true, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false))))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, (true) && true))) || false)))))))))), true, true, true)), false, false))))) ? _GLF_FUZZED(6740.9890) : _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.0)), float(injectionSwitch.y), bool(true))))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)), injectionSwitch)).y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y))) && true)))))) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y))))))))))))) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1))) % _GLF_struct_replacement_0.subgroup_size), (((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))), injectionSwitch))), min(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), (injectionSwitch))), (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(5.6), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.5)), bvec2(true, false))))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-7853.9086) : 1.0)), 1.0))), injectionSwitch.y, injectionSwitch.y), clamp(clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), max(_GLF_IDENTITY((injectionSwitch.y), mix(float((injectionSwitch.y)), float(_GLF_FUZZED(-8253.7884)), bool(false))), (injectionSwitch.y))) * 1.0), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.5)), bool(false)))) / 1.0), injectionSwitch.y), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), 1.0, 1.0, 0.0, 1.0, sqrt(1.0), 1.0, 1.0))), (injectionSwitch.y) * 1.0), injectionSwitch.y, injectionSwitch.y))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), min(injectionSwitch, injectionSwitch))), min(injectionSwitch, injectionSwitch)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true, true, false)))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(55.24), _GLF_IDENTITY((min(injectionSwitch, injectionSwitch))[1], (_GLF_IDENTITY((min(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(max((min(injectionSwitch, injectionSwitch))[1], (min(injectionSwitch, injectionSwitch))[1]), float(mat3x4(_GLF_IDENTITY(max(_GLF_IDENTITY((min(injectionSwitch, injectionSwitch)), ((min(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0))[1], (min(injectionSwitch, injectionSwitch))[1]), (max((min(injectionSwitch, injectionSwitch))[1], (min(injectionSwitch, injectionSwitch))[1])) * 1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)), 0.0, 1.0, 0.0))))) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.3)), float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3843.6506)))), bool(true))))), vec2((min(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, 0 ^ (0))], _GLF_FUZZED(-18.31)), bvec2(true, false)))).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))), min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(6.2)), bool(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))), 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.2)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))), _GLF_IDENTITY(true, (true) && true)))))))))) ? _GLF_FUZZED(6740.9890) : injectionSwitch.y)))) ? _GLF_FUZZED(workgroup_id) : subgroup_local_id + 1))) % _GLF_struct_replacement_0.subgroup_size)) << _GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), uint(uint(uint(7u)))), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u)))), 1u * (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec4(uint(7u), 0u, 1u, 1u)), min(uint(uvec4(uint(7u), 0u, 1u, 1u)), uint(uvec4(uint(7u), 0u, 1u, 1u)))))), 1u * (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (7u) ^ 0u)) << 0u)), 0u ^ _GLF_IDENTITY((uint(7u)), uint(_GLF_IDENTITY(uvec3((uint(7u)), 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u)))), (uvec3((uint(7u)), 0u, _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(1u), uvec3(1u))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))))))), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, _GLF_IDENTITY(1u, 1u * (1u)), 1u))))))), ((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u)))), 1u * (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, (_GLF_IDENTITY(7u, uint(uvec2(_GLF_IDENTITY(7u, (7u) | (7u)), 1u)))) ^ 0u)) << 0u)), 0u ^ (uint(7u))), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, _GLF_IDENTITY(1u, 1u * (1u)), 1u)))))))) >> 0u), 0u)), max(uint(uvec2((_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(_GLF_IDENTITY(7u, (7u) * 1u)), 0u, 1u, 1u)))), 1u * (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, 0u, 1u), (true ? uvec4(1u, 0u, 0u, 1u) : _GLF_FUZZED(uvec4(106260u, 90094u, 172610u, 45412u)))))), 1u)))), 1u * (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(uvec4(uint(7u), 0u, 1u, 1u)), (_GLF_IDENTITY(uint(uvec4(uint(7u), 0u, 1u, 1u)), (uint(uvec4(uint(7u), 0u, 1u, 1u))) ^ 0u)) / 1u))))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u)))), 1u * (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), _GLF_IDENTITY(0u ^ (uint(7u)), (0u ^ (uint(7u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u))))))) / 1u)) * 1u)), 0u)), uint(uvec2((_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), uint(uvec4(_GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))), 0u, 1u, 1u)))), 1u * (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), 0u ^ (uint(7u))), _GLF_IDENTITY(uint(7u), uint(uvec4(uint(7u), 0u, 1u, 1u))))))), 0u))))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint read = _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), clamp(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), min(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2)))) << (91383u & 0u)), _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), clamp(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), (_GLF_IDENTITY(uvec2(buf[virtual_gid], 1u), uvec2(0u, 0u) | (uvec2(buf[virtual_gid], 1u)))) / uvec2(_GLF_IDENTITY(1u, (1u) ^ 0u), 1u)))), 4, 64, 2)))))));
 if((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) % _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), (false ? _GLF_FUZZED(_GLF_IDENTITY(-2104, (-2104) * 1)) : 2))) == _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) >> 0))))
  {
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid))), min(next_virtual_gid, next_virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), max(_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid)), _GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))) | 0u)) | (_GLF_IDENTITY(next_virtual_gid, min(next_virtual_gid, next_virtual_gid))))], uint(1), _GLF_IDENTITY(4, (4) ^ 0), 64, _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) ^ 0), _GLF_IDENTITY((~ (4)) | 0, max(_GLF_IDENTITY((~ (4)) | 0, _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(~ (4), (~ (4)) / 1)) | 0, 0)), int(ivec4(_GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(~ (4), (~ (4)) / 1)) | 0, 0)), int(ivec2(int(ivec2((_GLF_IDENTITY(~ (4), (~ (4)) / 1)) | 0, 0)), 1))), 0, 1, 0)))), _GLF_IDENTITY((~ (4)) | 0, ~ (~ ((~ (4)) | 0)))))), 1, 0, 0)), (_GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) ^ 0), _GLF_IDENTITY((~ (4)) | 0, max(_GLF_IDENTITY((~ (4)) | 0, int(ivec2((~ (4)) | 0, 0))), _GLF_IDENTITY((~ (4)) | 0, ~ (~ ((~ (4)) | 0)))))), 1, 0, 0)), (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) ^ 0), _GLF_IDENTITY((~ (4)) | 0, max(_GLF_IDENTITY((~ (4)) | 0, int(ivec2((~ (4)) | 0, 0))), _GLF_IDENTITY((~ (4)) | 0, ~ (~ ((~ (4)) | 0)))))), 1, 0, 0))) | (int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (4), (~ (4)) ^ 0), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(~ (4), (~ (4)) ^ 0), 0, 0, _GLF_IDENTITY(1, (1) ^ 0))), (int(ivec4(_GLF_IDENTITY(~ (4), (~ (4)) ^ 0), 0, 0, _GLF_IDENTITY(1, (1) ^ 0)))) / 1)), _GLF_IDENTITY((~ (4)) | 0, max(_GLF_IDENTITY((~ (4)) | 0, int(ivec2((~ (4)) | 0, 0))), _GLF_IDENTITY((~ _GLF_IDENTITY((4), 0 ^ ((4)))) | 0, ~ (~ ((~ (4)) | 0)))))), 1, 0, 0))))) * 1)))));
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, _GLF_IDENTITY(0, int(ivec4(0, 0, 0, (-98829 & 0)))), 0)), (_GLF_IDENTITY(int(ivec3(1, _GLF_IDENTITY(0, int(ivec4(0, 0, 0, (-98829 & 0)))), 0)), max(int(ivec3(1, _GLF_IDENTITY(0, int(ivec4(0, 0, 0, (-98829 & 0)))), 0)), int(ivec3(1, _GLF_IDENTITY(0, int(ivec4(0, 0, 0, (-98829 & 0)))), 0))))) >> 0))), (false ? _GLF_FUZZED(-31886) : _GLF_IDENTITY((_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), sqrt(sqrt(vec3(1.0, 1.0, 1.0))) * (vec3(0.0, 0.0, 1.0)))))), mat2(1.0) * (mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec3(0.0, 0.0, 1.0), vec3(mat3x2(vec3(0.0, 0.0, 1.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 1.0, 0.0)), 1.0, cos(0.0)))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))))))) > injectionSwitch.y)) ? _GLF_FUZZED((true ? 98467 : 3025)) : (_GLF_IDENTITY(1, int(ivec3(1, 0, 0)))))))) - 0)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) * _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1))))), 64, 4);
  }
 subgroupBarrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
