#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), (true ? injectionSwitch.y : _GLF_FUZZED(injectionSwitch[1])))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3682.8230), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-1145.8180) : (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-301.408)), bvec2(true, _GLF_IDENTITY(false, bool(bvec2(false, false)))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (true ? vec3(injectionSwitch, 1.0) : _GLF_FUZZED(vec3(-77.56, -448.501, 25.46)))))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((-1.7 / 8703.4549))), bool(false))), 0.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) || false)))), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))), false)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))), (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))) && true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(0.0, 0.0)).y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))), true, false, false)))))), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 1.0))), _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-519.823)), (vec2((injectionSwitch)[0], _GLF_FUZZED(-519.823))) / cos(vec2(0.0, 0.0))), vec2(_GLF_FUZZED(0.3), (injectionSwitch)[1]), bvec2(false, true))))).y), ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y)) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8092.7603)), bool(false))))), true)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, sqrt(cos(0.0)), 1.0, 1.0, 0.0, 1.0)), (true ? vec2(mat2x4(injectionSwitch, 0.0, sqrt(cos(0.0)), 1.0, 1.0, 0.0, 1.0)) : _GLF_FUZZED(vec2(-4.0, -6.6))))).x > injectionSwitch.y)) && true)) || false), _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false), true)))), bool(bvec2(! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, false, true))) && true), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false), true)))), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-486.231), _GLF_FUZZED(0.4)), bvec2(false, false))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))))))), max((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))))))), _GLF_IDENTITY((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u | (_GLF_IDENTITY(1u, max(1u, 1u)))), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))))))), ~ (_GLF_IDENTITY(~ ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u)))))))))), (~ ((_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) - uvec3(0u, 0u, 0u)) ^ uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))))))))) | (~ ((uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))))))))))))))), (true ? gl_WorkGroupID : _GLF_FUZZED(uvec3(134400u, 81320u, 95467u))))) << uvec3(0u, 0u, 0u)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false))), (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, true, false))) || false)))) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id))) ^ 0u) * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-25.96), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.8)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), vec4(1.0, 1.0, 1.0, 1.0) * (vec4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))).y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (false ? _GLF_FUZZED(determinant(mat4(615.454, -133.498, -196.529, 5.1, 86.50, 68.06, 756.264, 22.00, -98.10, 63.61, 6.6, 5.5, 73.46, 695.864, -519.885, 7428.6031))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)), max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, true))), (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false)))), false || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false)), false || (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (false)), false)))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) : _GLF_FUZZED(-92.90))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7817.6319), _GLF_FUZZED(-528.412)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], (true ? (injectionSwitch)[1] : _GLF_FUZZED(-8605.4366)))), bvec2(_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true))).x), min((injectionSwitch.x), (injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.3)), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y) * 1.0)), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), _GLF_IDENTITY(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, clamp(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)))) - 0.0)))) : _GLF_FUZZED(-5.4))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4)))) - sin(0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y) * 1.0)), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), _GLF_IDENTITY(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, clamp(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)))) - 0.0)))) : _GLF_FUZZED(-5.4))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4)))) - sin(0.0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y) * 1.0)), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), _GLF_IDENTITY(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, clamp(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)))) - 0.0)))) : _GLF_FUZZED(-5.4))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4)))) - sin(0.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y) * 1.0)), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), _GLF_IDENTITY(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, clamp(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)))) - 0.0)))) : _GLF_FUZZED(-5.4))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4)))) - sin(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y) * 1.0)), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), _GLF_IDENTITY(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, clamp(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)))) - 0.0)))) : _GLF_FUZZED(-5.4))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4)))) - sin(0.0))))))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(-4993.1391), (_GLF_FUZZED(-4993.1391)) - 0.0) : injectionSwitch.y) * 1.0)), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), _GLF_IDENTITY(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, clamp(((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0, ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)))) - 0.0)))) : _GLF_FUZZED(-5.4))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-8.4)), bool(false)))) - 0.0), (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), min(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, (false) || false), false))) ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y), ((false ? _GLF_FUZZED(-4993.1391) : injectionSwitch.y)) / 1.0)) - 0.0)))) : _GLF_FUZZED(-5.4)))) - sin(0.0)))))), (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(bool(true), _GLF_IDENTITY(false, bool(bool(false))) || (bool(true)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), min(~ (~ (64)), ~ (~ (64))))), 0);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 0u, 1u))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))
  barrier();
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, false || (subgroup_local_id + 1 < subgroup_size)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), length(0.0))), _GLF_IDENTITY(float(mat3x4(float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), length(0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0))), float(mat2(float(mat3x4(float(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), length(0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, cos(0.0))), 1.0, 0.0, 0.0))))) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(2615.9535) : injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.3, (299.575 / 4.1))))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.3, (299.575 / 4.1))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.3, (299.575 / 4.1))))) > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.3, (299.575 / 4.1))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(reflect(-8.3, (299.575 / 4.1))))) > injectionSwitch.y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-525.161, 7.4)))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)) : _GLF_FUZZED(vec2(-525.161, 7.4)))).x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(7.6))))), true))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 1.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), float(_GLF_FUZZED(-80.80)), bool(false))))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))).y))) || false)))) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), true && (bool(bvec2(false, true))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), false), bvec3(bvec3(bvec3(bvec2(false, true), false)))))), true, true)))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(true);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
