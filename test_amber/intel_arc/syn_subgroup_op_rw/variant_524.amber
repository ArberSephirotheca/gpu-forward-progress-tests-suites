#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = (1 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
       if(_GLF_DEAD(false))
        break;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   else
    {
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), int(5)))))
        {
         case 77:
         bool _GLF_SWITCH_4_0v[24], _GLF_SWITCH_4_1v;
         case 0:
         case 79:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          barrier();
         case 50:
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         case 82:
         case 64:
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         case 67:
         if(_GLF_DEAD(false))
          barrier();
         case 32:
         case 19:
         case 56:
         case 35:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           do
            {
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 43:
         mat2x4(mat3x2(8.9, 31.55, -7.7, -78.14, -2.4, -8.7));
         case 14:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if((ivec2(46788, 1439) == (ivec2(-73869, -71339) - ivec2(92154, 57645))))
            {
             (packUnorm4x8(vec4(7587.2758, -0.5, -3.8, -4223.1730)) + uvec2(163961u, 81287u));
            }
          }
         default:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          break;
         1;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        continue;
       switch(_GLF_SWITCH(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1 * (int(_GLF_ZERO(0.0, injectionSwitch.x))))))
        {
         case 7:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             mat2x3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[8], _GLF_SWITCH_5_2v;
             ;
             bvec3 _GLF_SWITCH_5_3v[77];
             bvec3 _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v;
            }
           while(false);
          }
         case 0:
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         case 4:
         case 74:
         case 15:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
         case 86:
         while(false)
          {
           ;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          return;
         case 53:
         ivec4 _GLF_SWITCH_5_7v[53], _GLF_SWITCH_5_8v[2], _GLF_SWITCH_5_9v[32];
         default:
         if(_GLF_DEAD(false))
          barrier();
         1;
        }
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 37:
       case 83:
       case 81:
       if(_GLF_DEAD(false))
        barrier();
       case 96:
       case 19:
       case 16:
       case 47:
       case 73:
       for(int _injected_loop_counter = (1 | (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       case 93:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                continue;
               return;
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
       break;
       case 56:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       {
       }
       default:
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         1;
        }
      }
    }
   barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     switch(_GLF_SWITCH((0 | 0)))
      {
       case 35:
       if((mat4(729.954, 3267.9021, 3.8, -2046.4651, -38.60, 3703.7210, -70.89, -40.12, 0.1, -8657.6333, 2.9, 3773.1841, 8439.5336, -77.82, 98.43, 0.9) != mat4(mat2x4(-5.8, -43.81, 5.4, -1.0, -7748.7305, 148.511, -66.01, 9.4))))
        {
         uvec3(155273u, 50601u, 179628u);
         ;
         (73.69 * vec4(-3536.0000, -193.299, -5.7, -4443.2792));
         mat3 _GLF_SWITCH_6_0v[97];
        }
       else
        {
         mat3 _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v;
         mat2x3 _GLF_SWITCH_6_4v;
         if(_GLF_DEAD(false))
          break;
        }
       case 0:
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(7), int(7)))))
        {
         case 85:
         if(false)
          {
           ivec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v[27], _GLF_SWITCH_2_2v;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           uvec3 _GLF_SWITCH_2_3v;
           mat2 _GLF_SWITCH_2_4v[52];
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
            }
           ivec3 _GLF_SWITCH_2_5v;
           if(_GLF_DEAD(false))
            return;
           ivec3(42319, 39329, -99943);
           uvec2 _GLF_SWITCH_2_6v[16];
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           ivec4 _GLF_SWITCH_2_7v;
           if(_GLF_DEAD(false))
            barrier();
           bvec3(false, false, true);
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              continue;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 0:
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         case 84:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           switch(_GLF_SWITCH((-60701 & int(_GLF_ZERO(0.0, injectionSwitch.x)))))
            {
             case 39:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             do
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(true);
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              break;
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
              barrier();
             case 0:
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             case 59:
             case 3:
             case 43:
             case 53:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               subgroupAll(false);
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                break;
              }
             case 64:
             case 47:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                }
              }
             case 18:
             case 22:
             atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
             if(_GLF_DEAD(false))
              barrier();
             break;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 68:
             for(ivec2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[58], _GLF_SWITCH_1_2v; false; mat2x4(-489.944, 3286.6919, -33.39, -8.1, -632.613, -87.81, -654.519, -753.447))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 92:
                   bool _GLF_SWITCH_2_0v;
                   do
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   case 0:
                   case 49:
                   case 43:
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                     barrier();
                    }
                   break;
                   case 16:
                   uvec4(27727u, 8132u, 157351u, 146462u);
                   case 27:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     workgroup_size;
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   default:
                   if(_GLF_DEAD(false))
                    barrier();
                   1;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      barrier();
                     return;
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             case 65:
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              (56435 % ivec2(-64753, -74536));
             }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             default:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                    {
                     barrier();
                    }
                  }
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               barrier();
              }
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                return;
               1;
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               break;
              }
            }
          }
         break;
         default:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           1;
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
       break;
       case 59:
       while((mat4(-7.3, -1.4, 8.9, -8.3, 9486.8332, 852.800, -3.8, -298.625, -0.9, 36.36, -12.02, -6383.4704, 5.3, -14.74, 1.9, 8200.8388) != mat4(-9876.4130, -0.7, -72.61, -9410.5148, 5.8, -652.060, 6.2, -2.0, -4.2, 177.536, -7.8, 4.8, -2060.7215, -0.1, -2.1, 3.3)))
        {
         int _GLF_SWITCH_6_5v;
         ;
         vec2(96.97, -8.4);
         if(_GLF_DEAD(false))
          break;
         fma(vec4(273.703, 6.6, 768.323, -9361.1498), vec4(5688.8317, -9559.0744, -50.97, 2.4), vec4(-314.987, 58.02, 2723.3478, 5709.7823));
         if(_GLF_DEAD(false))
          barrier();
         ivec3 _GLF_SWITCH_6_6v, _GLF_SWITCH_6_7v, _GLF_SWITCH_6_8v;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 68:
       if((injectionSwitch != vec2(8.6, 4.0)))
        {
         ;
         uvec3(153901u, 146526u, 104095u);
        }
       else
        {
         ;
         (mat4x3(5.7, 638.159, -6.8, 2919.1371, -6.2, 54.78, -17.29, 879.164, 7287.7230, 97.98, 4.2, -7431.2790) + (- 616.541));
         (uvec3(23358u, 48649u, 95770u) % subgroup_local_id);
        }
       default:
       if(_GLF_DEAD(false))
        return;
       do
        {
         1;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         break;
        }
      }
     else
      {
       switch(_GLF_SWITCH(0))
        {
         case 75:
         vec3(93.28, 3.9, -8767.1377);
         case 25:
         {
          bvec3 _GLF_SWITCH_3_0v;
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            ;
           }
          else
           {
           }
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             barrier();
           }
          (_injected_loop_counter - ivec2(-44339, -5752));
          if(_GLF_DEAD(false))
           break;
          mat3x4(-437.028, -169.152, -7.1, 91.26, 357.256, 94.29, 2.7, 7566.1933, -0.4, 193.285, 421.162, -7798.8321);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          mat4(5.5, -12.91, -5923.0648, 9967.9457, -9422.2462, -6513.6868, 0.3, 1564.9979, -5.9, -48.81, 377.648, 0.5, -4789.9853, 7477.3111, 868.289, -1.3);
          uvec3(46277u, 199893u, 167369u);
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               barrier();
              return;
             }
            continue;
           }
          if(_GLF_DEAD(false))
           barrier();
          mat3x4 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          ;
         }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          return;
         case 0:
         if(_GLF_DEAD(false))
          barrier();
         case 33:
         if(_GLF_DEAD(false))
          barrier();
         case 97:
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         case 40:
         case 19:
         if(_GLF_DEAD(false))
          barrier();
         case 88:
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              barrier();
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 barrier();
                }
               case 13:
               case 65:
               case 55:
               case 41:
               case 27:
               switch(_GLF_SWITCH(0))
                {
                 case 50:
                 float _GLF_SWITCH_2_0v[62];
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 case 0:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                  }
                 case 22:
                 case 19:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       barrier();
                      }
                     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, 0 ^ (1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 3:
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
                            {
                            }
                           else
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       return;
                       break;
                       case 78:
                       do
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_DEAD(false))
                          barrier();
                         vec4(9.4, log2(injectionSwitch), abs(865.817));
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     return;
                    }
                  }
                 case 56:
                 case 66:
                 if(_GLF_DEAD(false))
                  barrier();
                 switch(_GLF_SWITCH(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, 1, 1, 0)))))))
                  {
                   case 76:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(8), int(8))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH((-89204 & 0)))
                      {
                       case 36:
                       if(_GLF_DEAD(false))
                        barrier();
                       vec4 _GLF_SWITCH_6_0v[28], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[81];
                       case 89:
                       (false ? uvec3(39599u, 72534u, 159775u) : uvec3(109061u, 49075u, 92880u));
                       case 0:
                       case 82:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       case 70:
                       case 80:
                       case 74:
                       case 48:
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                          }
                         do
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                            barrier();
                           barrier();
                          }
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         do
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           ivec2 _GLF_SWITCH_0_0v[43];
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) & -98093); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                  {
                                   barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   do
                                    {
                                     barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                }
                               continue;
                              }
                             break;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                return;
                               break;
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                return;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               barrier();
                              }
                             return;
                             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             continue;
                            }
                           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                            {
                             switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                              {
                               case 0:
                               if(true)
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     return;
                                    }
                                   barrier();
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & (1 | (0 >> _GLF_IDENTITY(int(6), int(6)))))); _injected_loop_counter ++)
                                  {
                                   ivec2(13421, 9545);
                                  }
                                 mat2x4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   barrier();
                                  }
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    continue;
                                   if(_GLF_DEAD(false))
                                    barrier();
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    continue;
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      {
                                       do
                                        {
                                         barrier();
                                        }
                                       while(_GLF_WRAPPED_LOOP(false));
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     do
                                      {
                                       switch(_GLF_SWITCH(0))
                                        {
                                         case 52:
                                         bvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                                         case 0:
                                         case 66:
                                         case 13:
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         case 36:
                                         case 59:
                                         case 96:
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          break;
                                         if(_GLF_DEAD(false))
                                          continue;
                                         case 2:
                                         if(_GLF_DEAD(false))
                                          {
                                           if(_GLF_DEAD(false))
                                            return;
                                           barrier();
                                          }
                                         barrier();
                                         break;
                                         default:
                                         1;
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                       if(_GLF_DEAD(false))
                                        {
                                         do
                                          {
                                           barrier();
                                          }
                                         while(_GLF_WRAPPED_LOOP(false));
                                        }
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                  }
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if(_GLF_DEAD(false))
                                            continue;
                                           barrier();
                                          }
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if(_GLF_WRAPPED_IF_TRUE(true))
                                            {
                                             return;
                                            }
                                           else
                                            {
                                            }
                                          }
                                         barrier();
                                        }
                                      }
                                     else
                                      {
                                       barrier();
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                        }
                                      }
                                    }
                                   else
                                    {
                                    }
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     continue;
                                    }
                                  }
                                 notEqual(ivec2(-32067, 9988), sign(ivec4(21201, -86924, 79613, 42303)).yz);
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                                  barrier();
                                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), ~ (~ (int(2)))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       barrier();
                                      }
                                    }
                                  }
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   return;
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 uvec3 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[41], _GLF_SWITCH_0_6v[38];
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                                    {
                                     case 0:
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     case 44:
                                     case 43:
                                     case 26:
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         if(_GLF_DEAD(false))
                                          return;
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                       continue;
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         continue;
                                        }
                                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                                        return;
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      continue;
                                     case 80:
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                     case 35:
                                     case 31:
                                     case 3:
                                     case 48:
                                     case 7:
                                     if(_GLF_DEAD(false))
                                      continue;
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     break;
                                     case 64:
                                     mat4x2(3614.3193, -511.752, -9.9, 85.30, 532.100, -5.4, -5602.7194, 75.04);
                                     case 16:
                                     uint _GLF_SWITCH_6_0v;
                                     default:
                                     1;
                                    }
                                  }
                                 if(_GLF_DEAD(false))
                                  {
                                   do
                                    {
                                     barrier();
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          {
                                           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                                            barrier();
                                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                            barrier();
                                           continue;
                                          }
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           barrier();
                                          }
                                        }
                                       barrier();
                                       if(_GLF_DEAD(false))
                                        return;
                                       if(_GLF_DEAD(false))
                                        continue;
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 do
                                  {
                                   ;
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 vec2(-6055.5966, -4.9);
                                 vec4(-5.4, 9.4, 302.186, 9.8);
                                 mat2x3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
                                 163.090;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  continue;
                                }
                               else
                                {
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   continue;
                                  }
                                 (log2(vec4(621.806, -820.492, 4759.7521, 1313.4542)) , mat2x3(mat3x4(387.474, 3.6, -4.5, -9.2, 6861.9198, 8.0, 8.3, -636.359, -0.9, 402.010, -346.467, 864.719)));
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   continue;
                                  }
                                 bool _GLF_SWITCH_0_9v;
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 & 34594)); _injected_loop_counter --)
                                    {
                                     mat4x2(26.07, -2.7, -957.305, -15.02, -6.1, -97.60, 42.72, 70.36);
                                    }
                                  }
                                 else
                                  {
                                  }
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                                  continue;
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    continue;
                                   continue;
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  continue;
                                 vec2(-9992.6301, -2.5);
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     barrier();
                                    }
                                  }
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                                  {
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      continue;
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     continue;
                                    }
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   else
                                    {
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(false))
                                    continue;
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        return;
                                      }
                                     else
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         injectionSwitch;
                                        }
                                      }
                                     if(_GLF_DEAD(false))
                                      return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                }
                               break;
                               default:
                               if(_GLF_DEAD(false))
                                continue;
                               1;
                               if(_GLF_DEAD(false))
                                break;
                              }
                            }
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             do
                              {
                               if(_GLF_DEAD(false))
                                break;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           mat4x3 _GLF_SWITCH_0_10v[15], _GLF_SWITCH_0_11v[40];
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           vec2 _GLF_SWITCH_0_12v;
                           bvec3 _GLF_SWITCH_0_13v[82], _GLF_SWITCH_0_14v[23], _GLF_SWITCH_0_15v[81];
                           (mat3x4(2905.1952, 7082.5763, 7725.9878, 108.993, -0.4, 432.256, -8.9, -3850.7634, -869.088, -8.3, -271.542, -9.8) - 2851.7598);
                           mat4x2(-72.61, -423.948, -7.2, -41.97, 4.3, -1505.9057, -648.641, 4443.0373);
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             for(mat3x2 _GLF_SWITCH_0_16v[40], _GLF_SWITCH_0_17v[95], _GLF_SWITCH_0_18v[99]; (workgroup_id < workgroup_base); injectionSwitch)
                              {
                               switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
                                {
                                 case 81:
                                 mat3(mat2(-9540.8705, -959.631, -3.6, 1.4));
                                 case 12:
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   injectionSwitch;
                                  }
                                 case 0:
                                 while(false)
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    continue;
                                   if(_GLF_DEAD(false))
                                    return;
                                   if(_GLF_DEAD(false))
                                    return;
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       if(_GLF_DEAD(false))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(true))
                                          {
                                           barrier();
                                          }
                                         else
                                          {
                                          }
                                        }
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_DEAD(false))
                                          barrier();
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   uvec4(86058u, 106658u, 54213u, 88066u);
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      break;
                                     barrier();
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           if(_GLF_DEAD(false))
                                            return;
                                          }
                                         if(_GLF_DEAD(false))
                                          barrier();
                                         barrier();
                                        }
                                      }
                                     else
                                      {
                                      }
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          return;
                                        }
                                       break;
                                      }
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      break;
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   do
                                    {
                                     switch(_GLF_SWITCH(0))
                                      {
                                       case 23:
                                       (5.3 / vec3(-25.10, -6.0, 810.309));
                                       case 0:
                                       case 45:
                                       case 54:
                                       ;
                                       break;
                                       default:
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       1;
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     barrier();
                                    }
                                   if(_GLF_DEAD(false))
                                    continue;
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_DEAD(false))
                                        return;
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       continue;
                                      }
                                     for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                                      {
                                       barrier();
                                      }
                                    }
                                   mat3x4 _GLF_SWITCH_0_19v[90], _GLF_SWITCH_0_20v;
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        break;
                                       if(_GLF_WRAPPED_IF_FALSE(false))
                                        {
                                        }
                                       else
                                        {
                                         barrier();
                                        }
                                      }
                                     if(_GLF_DEAD(false))
                                      {
                                       if(_GLF_DEAD(false))
                                        break;
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       barrier();
                                       if(_GLF_DEAD(false))
                                        barrier();
                                      }
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     return;
                                    }
                                   vec4(-6553.4680, 19.73, 9.4, -5.6);
                                   if(_GLF_DEAD(false))
                                    return;
                                   abs((vec4(28.59, -1.5, 57.93, 90.39) - vec4(0.6, 9461.3152, 7730.4417, -58.81)));
                                   if(_GLF_DEAD(false))
                                    {
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      continue;
                                     do
                                      {
                                       if(_GLF_DEAD(false))
                                        barrier();
                                       barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
                                    }
                                   if(_GLF_DEAD(false))
                                    {
                                     do
                                      {
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        barrier();
                                      }
                                     while(_GLF_WRAPPED_LOOP(false));
                                     continue;
                                    }
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     (43813 | ivec4(-51999, -61773, 3206, 1766));
                                     if(_GLF_DEAD(false))
                                      barrier();
                                    }
                                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)) && true)))
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(true))
                                      {
                                       barrier();
                                      }
                                     else
                                      {
                                      }
                                    }
                                  }
                                 mat3x2 _GLF_SWITCH_0_21v[77], _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 break;
                                 case 57:
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                                  {
                                   ivec2(-95579, -97324);
                                  }
                                 else
                                  {
                                  }
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 59:
                                 do
                                  {
                                   ;
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                 default:
                                 1;
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                            }
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               barrier();
                              }
                             break;
                            }
                           do
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             do
                              {
                               ;
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                           if(_GLF_DEAD(false))
                            {
                             switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) >> 0)))
                              {
                               case 60:
                               if(_GLF_DEAD(false))
                                break;
                               bvec4(false, true, false, false);
                               case 12:
                               uvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                               if(_GLF_DEAD(false))
                                break;
                               if(_GLF_DEAD(false))
                                barrier();
                               case 0:
                               case 19:
                               case 21:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                continue;
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 96:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 33:
                               case 72:
                               case 50:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                 do
                                  {
                                   barrier();
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                }
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               case 5:
                               case 85:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               switch(_GLF_SWITCH((0 & 23015)))
                                {
                                 case 41:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  return;
                                 do
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(false))
                                    {
                                    }
                                   else
                                    {
                                     mat4x3(883.726, 4.0, -8.7, 9.7, -8.3, -7.5, -378.905, 334.331, -5.3, 18.57, -0.2, 283.387);
                                    }
                                  }
                                 while(_GLF_WRAPPED_LOOP(false));
                                 case 83:
                                 (28710 | (- 58755));
                                 case 0:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 case 20:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 case 60:
                                 case 88:
                                 if(_GLF_DEAD(false))
                                  return;
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_DEAD(false))
                                    barrier();
                                   break;
                                  }
                                 case 34:
                                 case 50:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 case 21:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     if(_GLF_WRAPPED_IF_FALSE(false))
                                      {
                                      }
                                     else
                                      {
                                       barrier();
                                      }
                                    }
                                   else
                                    {
                                    }
                                  }
                                 case 32:
                                 case 2:
                                 case 99:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) ^ 0)); _injected_loop_counter ++)
                                    {
                                     if(_GLF_DEAD(false))
                                      return;
                                     barrier();
                                    }
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 break;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                   switch(_GLF_SWITCH(0))
                                    {
                                     case 2:
                                     bvec3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[74];
                                     case 0:
                                     if(_GLF_DEAD(false))
                                      barrier();
                                     case 6:
                                     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                                      barrier();
                                     case 61:
                                     case 64:
                                     if(_GLF_DEAD(false))
                                      continue;
                                     barrier();
                                     break;
                                     default:
                                     1;
                                    }
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    break;
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                 case 16:
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 mat4x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[6];
                                 default:
                                 if(_GLF_DEAD(false))
                                  continue;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                 1;
                                }
                               break;
                               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                return;
                               case 95:
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               ;
                               if(_GLF_DEAD(false))
                                barrier();
                               case 57:
                               43932u;
                               default:
                               1;
                              }
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                                {
                                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                  {
                                   do
                                    {
                                     switch(_GLF_SWITCH((0 | int(_GLF_ZERO(0.0, injectionSwitch.x)))))
                                      {
                                       case 2:
                                       uvec4(159781u, 30372u, 56905u, 9990u);
                                       case 8:
                                       (mat4x3(-9937.6500, -9331.5210, -5.3, -2741.6709, -509.406, 513.835, 72.66, 133.352, -311.728, 881.499, -8.9, -72.18) / -2.6);
                                       case 0:
                                       case 60:
                                       case 52:
                                       case 91:
                                       case 85:
                                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(false))
                                          {
                                          }
                                         else
                                          {
                                           barrier();
                                          }
                                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                          barrier();
                                        }
                                       case 10:
                                       return;
                                       break;
                                       default:
                                       1;
                                      }
                                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                      barrier();
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                 else
                                  {
                                  }
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  barrier();
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                               break;
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             continue;
                            }
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                          }
                         while((-98.72 < 0.7));
                        }
                       do
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       case 17:
                       if(_GLF_DEAD(false))
                        continue;
                       break;
                       case 56:
                       if(_GLF_DEAD(false))
                        continue;
                       mat2x4(7.2, 296.456, -61.95, -8.5, -1777.6560, -8.8, -22.67, -7.3);
                       default:
                       1;
                      }
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       return;
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 46:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   while(true)
                    {
                     {
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        else
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 55:
                            84633u;
                            if(_GLF_DEAD(false))
                             barrier();
                            case 42:
                            mat3x2(-91.25, 61.75, 7.5, 4169.1219, 5.1, 2.7);
                            case 0:
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                                barrier();
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               return;
                             }
                            case 45:
                            case 60:
                            case 27:
                            if(_GLF_DEAD(false))
                             barrier();
                            break;
                            case 69:
                            (ivec4(-57383, -17749, -53332, -40932) + -92677);
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               break;
                              barrier();
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            case 35:
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_DEAD(false))
                               return;
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                barrier();
                               }
                             }
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               break;
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                barrier();
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(false))
                               continue;
                             }
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              vec3(558.687, 0.8, 1.1);
                             }
                            else
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                return;
                               }
                             }
                            default:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                             }
                            else
                             {
                              1;
                             }
                            if(_GLF_DEAD(false))
                             return;
                           }
                         }
                       }
                     }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   case 0:
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                        }
                       else
                        {
                        }
                       barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           break;
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           barrier();
                          }
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        continue;
                       barrier();
                      }
                     if(_GLF_DEAD(false))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 54:
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               return;
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             else
                              {
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         case 68:
                         case 63:
                         case 34:
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         case 14:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         case 30:
                         case 85:
                         case 31:
                         barrier();
                         break;
                         if(_GLF_DEAD(false))
                          barrier();
                         case 50:
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                         uvec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                         default:
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             return;
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                         1;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           break;
                          }
                        }
                      }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         break;
                        }
                       barrier();
                      }
                     switch(_GLF_SWITCH(0))
                      {
                       case 81:
                       bvec2(false, true);
                       case 0:
                       case 61:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 67:
                       case 27:
                       case 58:
                       case 25:
                       case 83:
                       case 68:
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(false))
                        barrier();
                       case 79:
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 1:
                           uint _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                           if(_GLF_DEAD(false))
                            break;
                           case 0:
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                            {
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 92:
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            continue;
                           case 14:
                           case 30:
                           case 45:
                           case 21:
                           if(_GLF_DEAD(false))
                            barrier();
                           case 5:
                           case 69:
                           case 77:
                           case 61:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             return;
                            }
                           else
                            {
                            }
                           break;
                           case 60:
                           uvec2 _GLF_SWITCH_6_2v[99], _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v;
                           default:
                           1;
                           if(_GLF_DEAD(false))
                            return;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       break;
                       case 46:
                       _injected_loop_counter;
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        barrier();
                       case 3:
                       ivec4 _GLF_SWITCH_6_0v[82], _GLF_SWITCH_6_1v[15], _GLF_SWITCH_6_2v;
                       default:
                       do
                        {
                         if(_GLF_DEAD(false))
                          break;
                         1;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   case 33:
                   case 7:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 65:
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 98:
                       uvec3 _GLF_SWITCH_6_0v;
                       if(_GLF_DEAD(false))
                        barrier();
                       case 68:
                       lessThanEqual(clamp(uvec4(191968u, 175827u, 161261u, 5714u), uvec4(15697u, 108736u, 85946u, 32870u), uvec4(168870u, 121465u, 108898u, 42739u)), uvec4(152319u, 17592u, 36479u, 183929u));
                       case 0:
                       case 77:
                       case 12:
                       case 5:
                       case 78:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       case 64:
                       case 46:
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                          barrier();
                         break;
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       case 73:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 74:
                           if(_GLF_DEAD(false))
                            barrier();
                           mat2x3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                           case 0:
                           if(_GLF_DEAD(false))
                            barrier();
                           return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           break;
                           if(_GLF_DEAD(false))
                            barrier();
                           case 88:
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 mat3x4(48.25, 2803.6572, 933.862, 7247.3207, 6.7, 6.6, -0.6, 6648.4478, 779.699, 52.26, -0.2, -7.9);
                                }
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           else
                            {
                            }
                           default:
                           1;
                          }
                        }
                       else
                        {
                        }
                       break;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       default:
                       1;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        barrier();
                      }
                    }
                   case 35:
                   if(_GLF_DEAD(false))
                    barrier();
                   subgroupAll(false);
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    return;
                   case 74:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     continue;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                      barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         return;
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     barrier();
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                        barrier();
                       break;
                      }
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                   case 90:
                   if(_GLF_DEAD(false))
                    barrier();
                   case 79:
                   case 56:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   case 27:
                   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
                   break;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     switch(_GLF_SWITCH(0))
                      {
                       case 59:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       abs(ivec4(1081, -71462, 3555, -36612));
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       case 0:
                       case 65:
                       case 47:
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       return;
                       break;
                       case 1:
                       mat4 _GLF_SWITCH_6_0v[53];
                       case 78:
                       (45494 * ivec2(-3804, 17555));
                       default:
                       1;
                      }
                    }
                   case 25:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 93:
                       case 63:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 42:
                       switch(_GLF_SWITCH(0))
                        {
                         case 72:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         int _GLF_SWITCH_2_0v[84];
                         case 44:
                         lessThanEqual(uvec4(113045u, 23650u, 119483u, 30981u), uvec4(101013u, 82923u, 145424u, 93742u));
                         if(_GLF_DEAD(false))
                          return;
                         case 0:
                         if(_GLF_DEAD(false))
                          barrier();
                         case 19:
                         case 1:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                            return;
                           continue;
                          }
                         case 3:
                         case 36:
                         case 5:
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              return;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                             barrier();
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               break;
                              }
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            continue;
                           case 50:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           case 15:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
                              barrier();
                             do
                              {
                               if(_GLF_DEAD(false))
                                return;
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                                  return;
                                 barrier();
                                }
                               else
                                {
                                }
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   barrier();
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    barrier();
                                  }
                                }
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                             do
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           case 80:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            continue;
                           case 9:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              barrier();
                             do
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                barrier();
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              break;
                             while(true)
                              {
                               uvec2 _GLF_SWITCH_0_24v[21], _GLF_SWITCH_0_25v[12];
                              }
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 if(_GLF_DEAD(false))
                                  barrier();
                                 return;
                                }
                              }
                            }
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                            return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                continue;
                               barrier();
                              }
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           break;
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            continue;
                           case 37:
                           for(int _injected_loop_counter = _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | (_GLF_IDENTITY(1, (1) ^ 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                              break;
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                barrier();
                               if(_GLF_DEAD(false))
                                continue;
                               for(int _injected_loop_counter = (0 ^ (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                {
                                 return;
                                }
                              }
                             if(_GLF_DEAD(false))
                              continue;
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_DEAD(false))
                                return;
                               barrier();
                              }
                             ;
                            }
                           default:
                           if(_GLF_DEAD(false))
                            break;
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              barrier();
                             barrier();
                            }
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           1;
                          }
                         break;
                         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         default:
                         1;
                         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                          barrier();
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       break;
                       default:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         1;
                        }
                       else
                        {
                        }
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 15:
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                        barrier();
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(false))
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 ^ 0) ^ 0)); _injected_loop_counter --)
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                         barrier();
                        break;
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        barrier();
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      mat3x4(724.686, -416.037, -5.3, -4.9, -91.54, 8.7, 7.3, 323.021, -6.4, 949.571, -6.9, 479.367);
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       break;
                      return;
                     }
                    do
                     {
                      for(uvec4 _GLF_SWITCH_0_26v[71], _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v[18]; false; lessThanEqual(uvec3(74767u, 89786u, 104443u), uvec3(109645u, 26520u, 172449u)))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            barrier();
                           }
                         }
                        vec4 _GLF_SWITCH_0_29v;
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            barrier();
                           }
                          else
                           {
                           }
                          if(_GLF_DEAD(false))
                           continue;
                         }
                        mat3(64.54, 580.785, -3.4, 9.7, 8302.1700, -482.001, -424.827, -768.471, -3140.1873);
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                           continue;
                          barrier();
                         }
                        mat2(1.7, -5498.9598, 89.40, -2.3);
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 53:
                        bvec2(false, false);
                        case 0:
                        case 89:
                        case 44:
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(false))
                           break;
                          continue;
                         }
                        if(_GLF_DEAD(false))
                         return;
                        case 25:
                        case 2:
                        case 13:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        case 33:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        case 27:
                        case 59:
                        if(_GLF_DEAD(false))
                         break;
                        case 79:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                         }
                        else
                         {
                          switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                           {
                            case 17:
                            true;
                            case 31:
                            bool _GLF_SWITCH_5_0v[54];
                            case 0:
                            case 83:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              continue;
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                            case 18:
                            barrier();
                            break;
                            case 60:
                            vec4 _GLF_SWITCH_5_1v[8], _GLF_SWITCH_5_2v, _GLF_SWITCH_5_3v;
                            case 10:
                            mat3x4 _GLF_SWITCH_5_4v;
                            default:
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             continue;
                            1;
                           }
                         }
                        break;
                        case 52:
                        if(_GLF_DEAD(false))
                         barrier();
                        ;
                        case 76:
                        uvec2 _GLF_SWITCH_5_0v;
                        default:
                        1;
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        barrier();
                       }
                     }
                    float _GLF_SWITCH_0_30v[90];
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
                         continue;
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                         }
                        else
                         {
                          barrier();
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           barrier();
                         }
                        case 22:
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                         }
                        else
                         {
                          if(_GLF_DEAD(false))
                           {
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                             {
                              do
                               {
                                if(_GLF_DEAD(false))
                                 continue;
                                for(int _injected_loop_counter = (0 & 33202); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                 {
                                  barrier();
                                 }
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             }
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            return;
                           }
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        break;
                        if(_GLF_DEAD(false))
                         barrier();
                        case 29:
                        (workgroup_id / uvec4(11431u, 60165u, 60453u, 180252u));
                        case 89:
                        bvec2(true, true);
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        default:
                        1;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         return;
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
                       {
                        case 35:
                        uvec2(171295u, 21637u);
                        case 0:
                        case 18:
                        case 59:
                        case 26:
                        case 12:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        case 44:
                        case 49:
                        (ivec4(622, -80036, -32803, 16335) != ivec4(-27646, 75704, 36614, 41164));
                        break;
                        default:
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          barrier();
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        1;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      break;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      return;
                     }
                    mat3(657.057, -821.702, 751.211, 557.512, 4.0, 92.08, 1.5, -163.879, -689.200);
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      continue;
                     }
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       barrier();
                      switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
                       {
                        case 23:
                        bvec3(true, false, false);
                        case 0:
                        case 94:
                        case 7:
                        case 43:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        case 42:
                        case 45:
                        if(_GLF_DEAD(false))
                         break;
                        switch(_GLF_SWITCH(0))
                         {
                          case 82:
                          vec4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[78];
                          case 0:
                          case 42:
                          if(_GLF_DEAD(false))
                           break;
                          uint _GLF_SWITCH_0_31v;
                          if(_GLF_DEAD(false))
                           barrier();
                          case 91:
                          case 50:
                          if(_GLF_DEAD(false))
                           barrier();
                          case 12:
                          do
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            if(_GLF_DEAD(false))
                             {
                              do
                               {
                                barrier();
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            vec2(8477.6218, -11.64);
                           }
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                          break;
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             return;
                            return;
                           }
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_DEAD(false))
                               continue;
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          case 67:
                          if(_GLF_DEAD(false))
                           {
                            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                             {
                              if(_GLF_WRAPPED_IF_TRUE(true))
                               {
                                barrier();
                               }
                              else
                               {
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               break;
                             }
                           }
                          (mat4x3(-780.294, -11.26, -4008.0336, 857.508, -0.2, -8624.4717, 742.041, -97.23, 774.558, -9.5, 8.5, -644.265) == (mat4x3(5.0, -4.4, -316.893, -11.38, -938.812, 49.06, 6.7, 1.5, -5.9, -9.8, 8371.2482, 7.1)));
                          case 64:
                          if(_GLF_DEAD(false))
                           continue;
                          ;
                          default:
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             barrier();
                            continue;
                           }
                          if(_GLF_WRAPPED_IF_FALSE(false))
                           {
                           }
                          else
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               continue;
                              break;
                             }
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            else
                             {
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          1;
                         }
                        break;
                        case 95:
                        vec2(-3.4, -677.158);
                        if(_GLF_DEAD(false))
                         return;
                        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                         {
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           return;
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             break;
                            barrier();
                           }
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                        case 17:
                        vec4(1787.6445, -3.6, -6319.6308, -9.6);
                        default:
                        1;
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                       }
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 75:
                        uvec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[81];
                        case 0:
                        case 16:
                        if(_GLF_DEAD(false))
                         barrier();
                        continue;
                        break;
                        case 18:
                        mat2x4(8511.4834, 600.314, -1.8, 33.55, -2.6, 2718.5014, 7926.7409, 5.8);
                        default:
                        1;
                       }
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    do
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((_GLF_IDENTITY(1, 0 ^ (1)) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                       {
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          if(_GLF_DEAD(false))
                           barrier();
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                continue;
                               }
                              barrier();
                             }
                            if(_GLF_DEAD(false))
                             continue;
                            if(_GLF_WRAPPED_IF_TRUE(true))
                             {
                              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
                               return;
                              if(_GLF_DEAD(false))
                               barrier();
                             }
                            else
                             {
                             }
                            if(_GLF_DEAD(false))
                             barrier();
                           }
                          else
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(false))
                               barrier();
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               barrier();
                              break;
                             }
                            do
                             {
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                                 barrier();
                                for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                 {
                                  barrier();
                                 }
                               }
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               {
                                if(_GLF_DEAD(false))
                                 barrier();
                                return;
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                            if(_GLF_DEAD(false))
                             continue;
                           }
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           continue;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           return;
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        if(_GLF_DEAD(false))
                         barrier();
                       }
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                   }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   default:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                   1;
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     return;
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                 break;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, true, true)))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 for(int _injected_loop_counter = (1 | (0 ^ (0 << _GLF_IDENTITY(int(4), int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   1;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    continue;
                   return;
                  }
                }
               break;
               case 64:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat2x3(761.484);
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                }
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               1;
              }
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         case 71:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         {
          int _GLF_SWITCH_3_3v;
          do
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           continue;
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            do
             {
              vec3(2412.0555, -7.9, -5785.8053).z;
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              return;
             }
           }
          mat2x3 _GLF_SWITCH_3_4v, _GLF_SWITCH_3_5v[97], _GLF_SWITCH_3_6v;
          (ivec4(-13455, -78443, 84707, -69894) == ivec4(-79585, -48536, -38143, -65632));
          uvec3 _GLF_SWITCH_3_7v, _GLF_SWITCH_3_8v;
          bool _GLF_SWITCH_3_9v[18], _GLF_SWITCH_3_10v[64], _GLF_SWITCH_3_11v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              barrier();
              if(_GLF_DEAD(false))
               barrier();
             }
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_TRUE(true))
             {
              barrier();
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
             }
            else
             {
             }
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
           return;
         }
         case 91:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(true)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            break;
           mat2 _GLF_SWITCH_3_12v;
          }
         default:
         1;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    continue;
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     subgroupBarrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
