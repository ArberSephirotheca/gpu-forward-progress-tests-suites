#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || (false)))) && true))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))))))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, bool(bvec3((_GLF_IDENTITY(false, false || (false))) || false, true, true)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0) != int(_GLF_ONE(1.0, injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y)))) && true); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))); _injected_loop_counter ++)
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | 0))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(9.8)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
      }
    }
  }
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size;
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id;
 for(int _injected_loop_counter = ((((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), 1.0 * ((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) - sin(0.0)), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) < injectionSwitch.y))))
    {
     GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id, ~ (_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), uvec2(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(~ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), clamp(~ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), ~ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), ~ (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id)))), (uvec2(~ _GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), ~ (~ (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), uvec2(0u, 0u) | (_GLF_IDENTITY((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), max((GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id), (GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_id)))))))))) + uvec2(0u, 0u))))));
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
    }
   else
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(473.667)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(473.667)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false, (false) && true) || (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))))))))), false))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0)))))).x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0)))))).x > injectionSwitch.y))))), true), bvec2(bvec4(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / cos(vec2(0.0, 0.0)))))).x > injectionSwitch.y))))), true), false, false))))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5304.2554)), bool(false))), 1.0, 0.0, 1.0, abs(1.0), 0.0), mat2x3(mat4x3(mat2x3(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5304.2554)), bool(false))), 1.0, 0.0, 1.0, abs(1.0), 0.0)))))))))) && true)), _GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))) + vec2(0.0, 0.0))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))) && true)), true, true)), (bool(bvec3(! (_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))), (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))) + vec2(0.0, 0.0))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))) && true)), true, true))) && true)))), _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(93.51, _GLF_IDENTITY(float(mat3x2(93.51, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0 * (float(mat3x2(93.51, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(26.10, -926.187, -5.0, -1.8).g)), bool(false)))), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))), true && (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(93.51, _GLF_IDENTITY(float(mat3x2(93.51, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0 * (float(mat3x2(93.51, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(26.10, -926.187, -5.0, -1.8).g)), bool(false)))), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(93.51, _GLF_IDENTITY(float(mat3x2(93.51, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0 * (float(mat3x2(93.51, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec4(26.10, -926.187, -5.0, -1.8).g)), bool(false)))), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)))) && _GLF_IDENTITY(true, true && (true)))))))), ((! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))) - 0.0)), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(923.108)), float(max(0.0, 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-951.289)))) + (injectionSwitch)))).x > injectionSwitch.y))) && true)) || false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))) - 0.0)), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(923.108)), float(max(0.0, 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-951.289)))) + (injectionSwitch)))).x > injectionSwitch.y))) && true)) || false))))), bool(bvec3(((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_IDENTITY(_GLF_FUZZED(93.51), max(_GLF_FUZZED(93.51), _GLF_IDENTITY(_GLF_FUZZED(93.51), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(93.51), float(mat4(_GLF_FUZZED(93.51), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), _GLF_FUZZED(0.5)), bvec2(false, false))), vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(34.93)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.4)), float(1.0), bool(true)))) - 0.0)), bool(true)))) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(923.108)), float(max(0.0, 0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) / 1.0), _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, 0.0 + (0.0)) : _GLF_FUZZED(-951.289)))) + (injectionSwitch)))).x > injectionSwitch.y))) && true)) || false))))), true, true)))))) && _GLF_IDENTITY(true, true && (true))))) && true) || false)))), true, false, false))), false, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-42.30)), float(0.0), bool(true)))), float(_GLF_FUZZED((- 0.9))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), max(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-42.30)), float(0.0), bool(true)))), float(_GLF_FUZZED((- 0.9))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-42.30)), float(0.0), bool(true)))), float(_GLF_FUZZED((- 0.9))), bool(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))), _GLF_IDENTITY(vec2(mat4x3(vec2(mat2x4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), clamp(float(float(0.0)), float(float(0.0)), _GLF_IDENTITY(float(float(0.0)), _GLF_IDENTITY(float(float(_GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))), clamp(float(float(_GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))), float(float(_GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))), float(float(_GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0)))))))))))), 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2.7)), float(0.0), bool(true))))), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), vec2(mat2x3(vec2(mat4x3(vec2(mat2x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(1.0))), 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 0.0)), 1.0)), 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.9) : 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, exp(0.0), _GLF_IDENTITY(dot(vec3(0.0, sqrt(0.0), 1.0), vec3(1.0, exp(0.0), 0.0)), dot(vec3(0.0, sqrt(0.0), 1.0), vec3(1.0, exp(0.0), 0.0))), 0.0, 0.0, log(1.0), 1.0, 1.0, 1.0, abs(0.0), log(1.0), 1.0)))))))).x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-198.834)), bool(false))))) > injectionSwitch.y, false))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, false))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, false))), false, false)), true, true, _GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, ! (! (false)))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) >> 0)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(vec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 0.0, 0.0, 0.0))))))) > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           do
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_WRAPPED_LOOP(false)))));
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
            {
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))), true, true))), false, true))))))), false || (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(false, (false) || false)), bvec2(bvec4(bvec2(false, false), true, true))), false, true))))))))))))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), (_GLF_IDENTITY(1, (1) >> 0)) | (_GLF_IDENTITY(1, (1) >> 0))), 0)))) + 0)); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                      }
                     else
                      {
                       barrier();
                      }
                    }
                  }
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             barrier();
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), _GLF_IDENTITY(true, false || (true)), false)))))))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true))))))), bool(bvec4((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, true && (false)), true, false), true))))))), true, false, false)))) || false), ! (! (_GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (! (false)), true, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(! (! (false)), true, false), false)), false))))))))))), true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) || false), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3((true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) / 1.0), injectionSwitch.x))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) / 1)) << 0)), int(4))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-96352)))), int(4))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) && true)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
           barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))));
          }
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(float((injectionSwitch)[0]))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1])), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1])), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(6551.5841, clamp(6551.5841, _GLF_IDENTITY(6551.5841, (6551.5841) + 0.0), 6551.5841))), _GLF_IDENTITY(_GLF_FUZZED((+ 4.4)), (true ? _GLF_FUZZED((+ 4.4)) : _GLF_FUZZED(64.99)))), bvec2(false, false))).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), (injectionSwitch) * mat2(1.0)))[_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), clamp((1) | (1), (1) | (1), (1) | (1))))], min((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(mat4(mat2(1.0))))))[1]))), vec2(_GLF_FUZZED(6551.5841), _GLF_FUZZED((_GLF_IDENTITY(+ 4.4, (+ 4.4) - 0.0)))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], min((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, exp(0.0), 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0)), mix(vec2((vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (vec2(1.0, 1.0)) / sqrt(vec2(1.0, 1.0)))))), 0.0, 0.0, exp(0.0), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0), vec3(1.0, 0.0, 0.0))), 1.0)), 0.0, 1.0, 1.0, 0.0)))[0], _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(46.69, (_GLF_IDENTITY(46.69, clamp(46.69, 46.69, 46.69))) / 1.0)), mix(float(_GLF_FUZZED(-4.8)), float(_GLF_FUZZED(_GLF_IDENTITY(46.69, (_GLF_IDENTITY(46.69, clamp(46.69, 46.69, 46.69))) / 1.0))), bool(true)))), vec2(_GLF_FUZZED((17.08 * -4708.8380)), (vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).y), 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, exp(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-625.440)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true))), 1.0, 0.0)))[1]), bvec2(false, true))))) * mat2(1.0)))[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), 0 | (1))], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-5.2), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED((-833.486 - 446.430))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), min((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-5.2), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED((-833.486 - 446.430))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-5.2), ((injectionSwitch) * mat2(1.0))[1]), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED((-833.486 - 446.430))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))[1]))), vec2(_GLF_FUZZED(6551.5841), _GLF_FUZZED((+ 4.4))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(910.681), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(234.100)), bvec2(true, _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0)))[1], _GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, vec2(-67.46, _GLF_IDENTITY(3.5, mix(float(3.5), float(_GLF_FUZZED(-2.5)), bool(false)))))) : injectionSwitch))) * mat2(1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]), (min((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(faceforward(injectionSwitch, injectionSwitch, vec2(-67.46, 3.5))) : injectionSwitch))) * mat2(1.0)))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], 1.0 * ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1])))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1])), (true ? (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1] : _GLF_FUZZED(_GLF_IDENTITY(-8.9, (true ? -8.9 : _GLF_FUZZED(-6457.3832)))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1])))) * _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))), vec2(_GLF_FUZZED(6551.5841), _GLF_FUZZED((+ 4.4))), bvec2(false, false))).y))))))
                  barrier();
                }
               while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (! (_GLF_WRAPPED_LOOP(false))))))));
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))));
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - tan(0.0)), _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6883.6427)), bool(false))), 1.0, tan(0.0), 0.0)))), (_GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6883.6427)), bool(false))), 1.0, tan(0.0), 0.0)))), (min(1.0, _GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-6883.6427)), bool(false))), 1.0, tan(0.0), 0.0))))) + 0.0)) * abs(1.0))))).x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 1)); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(false, true && (false)), false))))), true)), ! (! (bool(bvec2((_GLF_IDENTITY(false, (false) && true)), true)))))))) && true)))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(true)), true && ((_GLF_WRAPPED_IF_TRUE(true)))), ! _GLF_IDENTITY((! ((_GLF_WRAPPED_IF_TRUE(true)))), false || (_GLF_IDENTITY((! ((_GLF_WRAPPED_IF_TRUE(true)))), false || ((! ((_GLF_WRAPPED_IF_TRUE(true))))))))) && true)) || false))
      {
       do
        {
         GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y = subgroup_size;
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x = subgroup_local_id;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x) - 0.0, float(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) - 0.0, 0.0, exp(0.0)))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) - 0.0, float(vec3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x) - 0.0, 0.0, exp(0.0))))), float(_GLF_FUZZED(-6.9)), _GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), ! (! (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))))), injectionSwitch.x)) > injectionSwitch.y))))))
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) ^ 0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(0, 0, 0)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, (_injected_loop_counter < 1) || false)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true), false, false)))))))
              barrier();
             barrier();
            }
          }
        }
       else
        {
         do
          {
           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))[0], _GLF_FUZZED(6421.7110)), vec2(_GLF_FUZZED(687.395), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.7))))) < injectionSwitch.y))))).x), mix(float(_GLF_FUZZED(-56.30)), float(_GLF_ZERO(0.0, injectionSwitch.x)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))); _injected_loop_counter ++)
            {
             _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, _GLF_IDENTITY((_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), ~ (_GLF_IDENTITY(~ (0u << _GLF_IDENTITY(uint(0u), uint(0u))), ~ (~ (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), max(_GLF_IDENTITY(uint(0u), uint(0u)), _GLF_IDENTITY(uint(0u), uint(0u))))))))))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x) ^ 0u)) << 0u)), ((0u << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x)) + 0u)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(0u, ~ (~ (0u))) << _GLF_IDENTITY(uint(0u), uint(0u))) ^ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x)), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), uint(0u)), 0u | (_GLF_IDENTITY(uint(0u), uint(0u))))) ^ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, (true ? GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x : _GLF_FUZZED(subgroup_id)))))))) | 0u, ((_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(0u), uint(0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((0u << _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x)), 0u | (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.x, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(0u), uint(0u)), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) ^ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, uvec3(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size[0], GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size[1], GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size[2])).x))))) | 0u) << 0u));
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), false || (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     else
      {
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.z = workgroup_size;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), false, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(bvec3((true), false, true))) || _GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, bool(bool(false)))), (_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))) && true)), true && (! (_GLF_IDENTITY(true, (true) || false)))))), false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.w = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)).z, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), 0u + (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), 0u), (uvec2(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), 0u)) | (uvec2(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), 0u)))), (uint(_GLF_IDENTITY(uvec2(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), 0u), (uvec2(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), 0u)) | (uvec2(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (uvec3(0u, 0u, 0u) & uvec3(83418u, 130535u, 7819u)) ^ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), max((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size))) >> (uvec3(47303u, 68881u, 56906u) & uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))).z : _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), min(_GLF_FUZZED(workgroup_size), _GLF_FUZZED(workgroup_size))), 0u))))) ^ 0u))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) >> _GLF_IDENTITY(int(4), int(4)), ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) - 0))) >> _GLF_IDENTITY(int(4), int(4))) << 0))); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))) && true) && (_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(true, true)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))))), true, false)), true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2136.2550)), vec2(_GLF_FUZZED(1.0), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (((0 >> _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(8), int(8))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, ~ (~ (1)))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.y = workgroup_id;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.w * GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.y;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || (_GLF_DEAD(false))))))
      barrier();
     do
      {
       do
        {
         GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y = workgroup_base;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, abs(1.0), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0))), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y : _GLF_FUZZED(-1.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), vec2(mat2x4((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), log(1.0), sin(0.0), 1.0, 1.0, 1.0, 0.0)))).y))), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) - vec2(0.0, 0.0))).y), false, true, false)), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(5.9, -0.4, 3.2, -5.0)) : mat2(_GLF_ONE(1.0, injectionSwitch.y))))) / mat2(1.0, 1.0, 1.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(5.9, -0.4, 3.2, -5.0)) : mat2(_GLF_ONE(1.0, injectionSwitch.y))))) / mat2(1.0, 1.0, 1.0, 1.0))))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(mat2(5.9, -0.4, 3.2, -5.0)) : _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat2(-36.63, 154.507, -825.811, -8.0)) : mat2(_GLF_ONE(1.0, injectionSwitch.y))))))) / mat2(1.0, 1.0, 1.0, 1.0))).y)) && true), false, true, false)))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0), (vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(_GLF_IDENTITY(1.0, min(1.0, 1.0)), injectionSwitch.y), 1.0)) * mat3(1.0)), vec3(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_ONE(1.0, injectionSwitch.y), 1.0)))))))); _injected_loop_counter ++)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))) && true)))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.w = _GLF_IDENTITY(subgroup_base, uint(uint(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u))));
      }
    }
   else
    {
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false))))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.9))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.9))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) && true)), true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) || false)))), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false))))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.9))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(((- 9.5) * -319.598))), bool(false)))), (false ? _GLF_FUZZED(-6.2) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(((- 9.5) * -319.598))), bool(false)))), float(mat3x2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x), float(_GLF_FUZZED(((- 9.5) * -319.598))), bool(false)))), 1.0, 1.0, 0.0, 1.0, 1.0)))))), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.9))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))) && true)), true, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2009.8114)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(true, bool(bool(true))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.9))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) && true)), true, true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2009.8114)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false)))), _GLF_IDENTITY(true, bool(bool(true))), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > injectionSwitch.y) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.9))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) && true)), true, true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false)))))))))))), false || (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2009.8114)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_IDENTITY(bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2009.8114)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false))), true)), (bool(bvec2(! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2009.8114)), float(injectionSwitch.y), bool(true))), (injectionSwitch.x > injectionSwitch.y) || false))), true))) && true))), _GLF_IDENTITY(true, bool(bool(true))), true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (! (true)))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))) || ((_GLF_IDENTITY(! (true), false || (! (true))))))))), bool(bvec3(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y) || false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x)), (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(1.9))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) && true)), true, true, _GLF_IDENTITY(true, ! (! (true))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y)), _GLF_IDENTITY(false, ! (! (false)))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ((false) && true) || false)) || false))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))), true)), ! (! (bool(bvec2(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, false))))), true)))))) && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-0.3)), bool(false))), true && (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0), mat3(mat4(mat3(injectionSwitch, 1.0, 1.0, determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), tan(0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0)))))).y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) - determinant(mat4(0.0, log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) - determinant(mat4(0.0, log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) - determinant(mat4(0.0, log(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))))))))))))))))))
        barrier();
      }
     else
      {
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & _GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(1), int(1))) + (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
    }
   do
    {
     do
      {
       for(int _injected_loop_counter = 0; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1))))))) && true); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x = _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) : GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base)).w;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, uvec2(1u, 1u) * (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy)).x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size))).x, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, clamp(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy)).x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, clamp(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, min(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)), GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)), clamp(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, uvec3(1u, 1u, 1u) * (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size)).y + _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, uvec2(uvec4(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, 0u, 1u))).x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, min(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size)).x, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, min(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) | (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u)))))).x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, clamp(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x) >> 0u), _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x) | (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)), GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)), clamp(_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size))))), min(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) * ((uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))).x, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size))))), min(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) * ((uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))).x, clamp(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size))))), min(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) * ((uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))).x, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size))))), min(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) * ((uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))).x, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, min(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) - uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, ~ (~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size))))), min(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) * ((uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uvec4(6u), uvec4(6u))) >> _GLF_IDENTITY(uvec4(6u), uvec4(6u)))))).x))) | (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y, min(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y, (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y) - 0u))) + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)))) - 0u), (~ _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, clamp(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)), GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size)).x, _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, (_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, ~ (~ (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)))) * 1u)))), uint(uvec3((_GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, clamp(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, max(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x)), GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size)).x, GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size.y + GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy.x + GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x))), (0u | 0u), 1u)))) ^ 0u)));
 _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z = _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (virtual_gid), uint(_GLF_IDENTITY(uint(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (virtual_gid)), 0u | (uint(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (virtual_gid)))))))) - 0u), 0u | (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z = _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (virtual_gid), uint(_GLF_IDENTITY(uint(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (virtual_gid)), 0u | (uint(uint(_GLF_ONE(1.0, injectionSwitch.y)) * (virtual_gid)))))))) - 0u))), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z = _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u) * (virtual_gid))) - 0u), (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) | (_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), min(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ONE(1.0, injectionSwitch.y)))))), (uint(_GLF_ONE(1.0, injectionSwitch.y))) / 1u) * (virtual_gid))) - 0u)) << 0u)) - (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 8u : _GLF_FUZZED(workgroup_base)))), _GLF_IDENTITY(uint(8u), ~ (~ (uint(8u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size, (GLF_merged3_0_1_17_1_1_14_2_1_14subgroup_local_idworkgroup_baseworkgroup_size) * uvec3(1u, 1u, 1u)).y + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u)), (_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u))) | uvec2(0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u)), min(_GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u)), _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy, (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.xy) >> uvec2(0u, 0u))))))))).x + _GLF_IDENTITY(((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 1), (ivec2(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 0 + (1)), 1, _GLF_IDENTITY(1, (1) | 0))))) | ivec2(0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (0 | 0) | (1))) | (_GLF_IDENTITY(1, max(1, 1))))) / 1)))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y), _GLF_IDENTITY(1u * (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1) % _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y, ~ _GLF_IDENTITY((~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), _GLF_IDENTITY(uint(uint((~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)))), 0u ^ (uint(uint((~ (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)))))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u * (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), (1u * _GLF_IDENTITY(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), (_GLF_IDENTITY(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), clamp(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)))), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y))))) | 0u)) / 1u), uint(uvec2(_GLF_IDENTITY(1u * (((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), (1u * _GLF_IDENTITY(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), (_GLF_IDENTITY(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), clamp(_GLF_IDENTITY(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), clamp(((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)))), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y)), ((_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), min(_GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1)) - 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.x + 1))))) % GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.y))))) | 0u)) / 1u), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))))))))))));
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) ^ 0), 0, 0)))))) ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (_GLF_IDENTITY(false, (false) || false)))))), false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))))
        {
         do
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(int(7), int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), int(7))), (_GLF_IDENTITY(int(7), min(int(7), int(7)))) ^ 0)))))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(1257.7373))))), 0.0, abs(1.0), length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))))), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-8.2)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 1.0))))), (false ? _GLF_FUZZED(vec2(-9.0, 77.09)) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), vec2(_GLF_IDENTITY(vec3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), length(vec2(0.0, 0.0))), mix(vec3(_GLF_FUZZED(-11.90), _GLF_FUZZED(-509.533), (vec3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), length(vec2(0.0, 0.0))))[2]), vec3((vec3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, sin(0.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, determinant(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(16.22)), float(float(mat4(0.0, 0.0, sin(0.0), 1.0, 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 1.0, determinant(mat4(1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), sqrt(1.0), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), bool(true)))), 0.0, 0.0, 0.0)), 0.0, 1.0))))), length(vec2(0.0, 0.0))))[0], (vec3(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), transpose(transpose(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, abs(1.0), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), length(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))))[1], _GLF_FUZZED(_GLF_IDENTITY(621.396, (621.396) - log(1.0)))), bvec3(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))).y))));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1))) | 0), int(_GLF_IDENTITY(ivec3((1 | 0), 0, 1), (ivec3((1 | 0), 0, 1)) << ivec3(0, 0, 0))))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_IDENTITY(_injected_loop_counter --, (true ? _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) >> 0) : _GLF_FUZZED(66782))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > injectionSwitch.y))))), true))))
    {
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec2((! ((injectionSwitch.x < injectionSwitch.y))), true))))), ! (! ((_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x < injectionSwitch.y))), bool(bvec2((! ((injectionSwitch.x < injectionSwitch.y))), true))))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           else
            {
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0)) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(3), int(3)), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0)) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(3), int(3)), clamp(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), (~ (4)) << 0)))), int(4))) - 0)) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, clamp(3, 3, 3)), _GLF_IDENTITY(3, (3) ^ 0), 3)))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), min(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))) - 0)) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(3), int(3)), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), (_GLF_IDENTITY(int(4), int(4))) - 0)) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(3), int(3))))))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((-1783.9903 * 93.56))), bool(false))) > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3398.0939)), float(injectionSwitch.y), bool(true)))))));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && (false)), false || (false))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)), true && (! (_GLF_WRAPPED_LOOP(_injected_loop_counter > 0)))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(1128.4363)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(float(_GLF_FUZZED(1128.4363)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / 1.0))))))
        barrier();
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), (bool(bvec3(_GLF_DEAD(false), false, false))) || _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(false, false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           do
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)))))), bool(bvec4(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_WRAPPED_IF_TRUE(true)))))), false, true, true)))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (! (_GLF_IDENTITY(false, (false) || false)))))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z], min(_GLF_IDENTITY(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z], min(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z], buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z])), _GLF_IDENTITY(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z] : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(4, (4) >> 0), 64, 2);
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     _GLF_IDENTITY(GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.z = _GLF_IDENTITY(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, (true ? read : _GLF_FUZZED(next_virtual_gid))), read, read)), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) | (read)), (GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.z = _GLF_IDENTITY(read, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), max(~ (uint(3u)), ~ (uint(3u)))))), uint(3u))) | (read))) - 0u);
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(vec2(913.529, -4.6)))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       do
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                barrier();
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                   barrier();
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.2)))), float(_GLF_FUZZED(-309.527)), bool(false))) : _GLF_FUZZED(6.3))) > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) || false, true && (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.2)), float(injectionSwitch.y), bool(true))))) || false))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 else
                  {
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), true, false), true)), true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))), true, false), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), _GLF_IDENTITY(true, false || (true)))))), true, false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), true, false), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), true, false), true)), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), true, false), true)), true)), false)), bvec3(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(bvec3(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), true, false), true)), true)), false))))))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))), (_GLF_DEAD(false)) || false))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
        barrier();
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), min(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0), ~ (~ (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(int(1), int(1)), 0 ^ (_GLF_IDENTITY(int(1), int(1)))), int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))))))) | 0)), _GLF_IDENTITY(int(1), int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), bool(bvec4(_GLF_WRAPPED_IF_TRUE(true), true, true, true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(mix(391.117, -2.3, 7.7)) : injectionSwitch.y))), float(_GLF_FUZZED(0.0)), bool(false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   do
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(655.847)), float(injectionSwitch.x), bool(true))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) - 0))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = _GLF_IDENTITY((1 ^ 0), ((1 ^ 0)) - (0 << _GLF_IDENTITY(int(8), int(8)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, 0 + _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter)))), 0 + (_GLF_IDENTITY(_injected_loop_counter, 0 + _GLF_IDENTITY((_injected_loop_counter), min((_injected_loop_counter), (_injected_loop_counter)))))) != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))))))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) && true))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))) && true))), false, true, false)))))) && true)))))))))) && true)) || false), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true)), bvec2(bvec2(bvec2(bvec3(bvec2(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (false))), false, false, false)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (false))), false, false, false))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))), false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), ((injectionSwitch.x < injectionSwitch.y)) && true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), bool(bvec4((! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false))), false, true, true)))) && true)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), false, false, _GLF_IDENTITY(false, ! (! (false)))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), float(_GLF_FUZZED(-71.86)), bool(false))) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)))) && true), false, false, _GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-71.86)), bool(false))) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true))))), ! (_GLF_IDENTITY(! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), false, false, _GLF_IDENTITY(false, ! (! (false)))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-71.86)), bool(false))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-71.86)), bool(false))) < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true)))))), (! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))), bvec2(bvec2(bvec2(bvec2(bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))) && true), false, false, _GLF_IDENTITY(false, ! (! (false)))))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-71.86)), bool(false))) < injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(-71.86)), (true ? float(_GLF_FUZZED(-71.86)) : _GLF_FUZZED(-3727.3070))), bool(false))) < injectionSwitch.y))), ((injectionSwitch.x < injectionSwitch.y)) && true))))))) && true)))) && true)), bool(bvec4((! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(bvec4((! (false)), false, true, true)), false || (bool(bvec4((! (false)), false, true, true))))))))), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) && true), true && (false))) && true), false))), true, true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < injectionSwitch.y), (! (injectionSwitch.x < injectionSwitch.y)) || false)))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))) && true, bool(bvec4(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))), false, false, true)))) && true)))))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(int(ivec3(_injected_loop_counter, 1, 0)), (int(ivec3(_injected_loop_counter, 1, 0))) / 1)) < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(-55.79))))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 | (0)), 0, 0))), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) + 0), (false ? _GLF_FUZZED(_GLF_IDENTITY(abs(_injected_loop_counter), (abs(_injected_loop_counter)) >> 0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(0, 0, 0), (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(1), int(1))) | (clamp(0, 0, 0))), (clamp(0, 0, 0)) | 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) | 0)), (_GLF_IDENTITY(0, clamp(0, 0, 0))) + 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), 0, 0))), int(0)) : _GLF_FUZZED(bitCount(virtual_gid))))))) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 ^ (int(3))), int(3))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec4(3, 1, 1, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec4(3, 1, 1, 0)))), (int(_GLF_IDENTITY(3, int(ivec4(3, 1, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, 0 ^ (1)), 1)))), 0))))) - 0), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(3, int(_GLF_IDENTITY(ivec4(3, 1, 1, 0), clamp(ivec4(3, 1, 1, 0), ivec4(3, 1, 1, 0), ivec4(3, 1, 1, 0)))))), (int(_GLF_IDENTITY(3, int(ivec4(3, 1, 1, 0))))) << 0), _GLF_IDENTITY(int(_GLF_IDENTITY(3, int(ivec4(3, 1, 1, 0)))), (int(_GLF_IDENTITY(3, int(ivec4(3, 1, 1, 0))))) | (int(_GLF_IDENTITY(3, int(ivec4(_GLF_IDENTITY(3, max(3, 3)), 1, _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec3(1, _GLF_IDENTITY(0, ((59426 & 0) << _GLF_IDENTITY(int(2), int(2))) ^ _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), clamp((_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(0, clamp(0, 0, 0)))))) | ((_GLF_IDENTITY(0, clamp(0, 0, 0)))))), 1)))))), 0)))))), int(_GLF_IDENTITY(3, int(ivec4(3, 1, 1, 0))))))) | (int(_GLF_IDENTITY(3, int(ivec4(3, 1, 1, 0)))))), (true ? _GLF_IDENTITY(int(3), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (int(3))), ((~ (int(3)))) | 0), (~ _GLF_IDENTITY((~ (int(3))), ((~ _GLF_IDENTITY((int(3)), clamp((int(3)), (int(3)), (int(3)))))) | 0)) / 1)) : _GLF_FUZZED(_GLF_IDENTITY(26419, int(int(26419))))))))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_IDENTITY(_GLF_FUZZED(-48138), clamp(_GLF_FUZZED(-48138), _GLF_IDENTITY(_GLF_FUZZED(-48138), max(_GLF_FUZZED(-48138), _GLF_FUZZED(-48138))), _GLF_FUZZED(-48138))) : _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) | 0))))
          {
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, false || (_injected_loop_counter != 1))); _injected_loop_counter ++)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true)))) || false)))))))
                barrier();
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       else
        {
        }
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = _GLF_IDENTITY((1 | 1), (1 ^ 1) | (_GLF_IDENTITY((1 | 1), (1 | 1) * ((1 | 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) * 1)); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
    }
  }
 if((_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size), (true ? (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size) : _GLF_FUZZED(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size))) - uvec4(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u, 0u)).x % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, cos(0.0), 1.0, 1.0, 0.0))), injectionSwitch[1])).x < injectionSwitch.y))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), false, true)))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           subgroupAll(false);
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) && true))), bool(bool(! (_GLF_WRAPPED_LOOP(false))))))));
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false), bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), false || (bool(bool(true && (false)))))))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(false, true))))))));
   for(int _injected_loop_counter = (0 & 19037); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      {
      }
     else
      {
       do
        {
         atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), clamp(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(max(uint(1), uint(1)), (max(uint(_GLF_IDENTITY(1, max(1, 1))), uint(1))) + 0u)), uint(1), uint(1))), 4, _GLF_IDENTITY(64, 0 + (64)), 4);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) / 1)) << _GLF_IDENTITY(0, 1 * (0))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, 0 ^ (0)), 0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, 1, 1))); _injected_loop_counter ++)
      {
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(4), int(4)), (0 >> _GLF_IDENTITY(int(4), int(4))) << 0))); _injected_loop_counter --)
          {
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && true))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     subgroupAll(false);
    }
   else
    {
    }
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ (next_virtual_gid), ~ (~ _GLF_IDENTITY((~ (next_virtual_gid)), ((~ (next_virtual_gid))) >> 0u)))))], uint(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> _GLF_IDENTITY(0, (0) ^ 0)), (_GLF_IDENTITY(true ? 1 : _GLF_FUZZED(69290), int(ivec2(true ? 1 : _GLF_FUZZED(69290), 1))))))))), 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))), true && ((injectionSwitch.x < injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y), true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 1.0, 0.0, 0.0))) < injectionSwitch.y)), false)))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, true)), (bool(bvec4(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))) > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), true, true, true))) || false))) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) - 0)]), vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(119.114)), bvec2(false, false)))) / vec2(1.0, 1.0)).x, mix(float(_GLF_FUZZED(-370.848)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (vec2((injectionSwitch)[0], (injectionSwitch)[1])) * vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-1.5), _GLF_FUZZED(_GLF_IDENTITY(119.114, mix(float(_GLF_FUZZED(-5.1)), float(119.114), bool(true))))), _GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))) / vec2(1.0, 1.0)).x), bool(true))) > injectionSwitch.y))))
          barrier();
        }
      }
     do
      {
       for(int _injected_loop_counter = (_GLF_IDENTITY((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) ^ (1)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) >> 0), int(6))))), max((_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) ^ (1)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) >> 0), int(6))))), (_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))) ^ (1)) << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), (_GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6)))) >> 0), int(6))))))) >> _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, int(ivec4(_GLF_IDENTITY(6, 0 + (6)), 0, 1, 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true))), (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((1 & 1), ((1 & 1)) + 0)); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), ~ (~ (_GLF_IDENTITY(int(3), int(ivec4(int(3), 0, 1, 1))))))) / 1), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))); _injected_loop_counter ++)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_14subgroup_local_idsubgroup_sizevirtual_gidworkgroup_size.z], GLF_merged3_0_2_50_2_1_4_3_1_13GLF_merged2_0_1_13_1_1_12subgroup_baseworkgroup_idreadsubgroup_base.z, 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-39.92) : injectionSwitch.y))))))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
