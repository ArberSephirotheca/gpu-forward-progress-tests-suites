#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_10 {
 vec3 _f0;
 uint next_virtual_gid;
 mat3x2 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_9 {
 mat4x2 _f0;
 bvec3 _f1;
} ;

struct _GLF_struct_11 {
 bvec4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_10 _f4;
} ;

struct _GLF_struct_12 {
 _GLF_struct_11 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_6 {
 mat3x2 _f0;
 mat3 _f1;
 mat2x4 _f2;
 uvec2 _f3;
 uvec2 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_7 {
 bvec2 _f0;
 _GLF_struct_6 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
} ;

struct _GLF_struct_8 {
 uint subgroup_local_id;
 int _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 bool _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 mat2x3 _f4;
 mat2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
} ;

struct _GLF_struct_0 {
 uvec3 _f0;
 vec4 _f1;
 uvec4 _f2;
 bool _f3;
} ;

struct _GLF_struct_3 {
 bool _f0;
 mat3 _f1;
 _GLF_struct_0 _f2;
 bvec4 _f3;
 _GLF_struct_1 _f4;
 _GLF_struct_2 _f5;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 _GLF_struct_3 _f1;
 uint subgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec2(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(72.78, clamp(72.78, _GLF_IDENTITY(72.78, (72.78) + 0.0), 72.78))) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-42.69) : injectionSwitch.x))))) * 1.0) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) || false))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), true && _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))) || false))))))) || false))), bool(bvec2((! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))) || false), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false)))), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, false))))) || false))))))) || false))), true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-5.4), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(-4293.4127)), bvec2(true, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), bvec3(bvec4(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true), true))))))))))), _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), false || (! (false))))))))), bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), false || (! (false)))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! (false))), false || (! _GLF_IDENTITY((false), ((false)) && true)))))))) || false), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) && true) && ((false))), false || (! (false)))))), true && (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (! (false)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bool((_GLF_IDENTITY(! (false), false || (! (false)))))))), bool(bvec4((_GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (! (false)))), bool(bool((_GLF_IDENTITY(! (false), false || (! (false)))))))), false, false, false))) || false), true && ((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), false || _GLF_IDENTITY((! (false)), ((! (false))) && true)))))))), _GLF_IDENTITY(false, ! (! (false))), false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0))))) - 0.0))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(9.2)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(true)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, true && (true)), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(true, true && (true)), false), false), false))))))) && (false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             barrier();
            }
           return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, abs(0.0))), clamp(float(vec4(injectionSwitch.y, 0.0, 0.0, abs(0.0))), float(vec4(injectionSwitch.y, 0.0, 0.0, abs(0.0))), _GLF_IDENTITY(float(vec4(injectionSwitch.y, 0.0, 0.0, abs(0.0))), 0.0 + (float(vec4(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))).y, 0.0, 0.0, abs(0.0))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat2x3(1.0), _GLF_struct_3(true, mat3(1.0), _GLF_struct_0(uvec3(1u), _GLF_IDENTITY(vec4(1.0), vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(-96.44)), bool(false))), 0.0, 0.0) + (vec4(1.0))), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) | (_GLF_IDENTITY(1u, (1u) >> (1u ^ 1u))), ((1u) | (_GLF_IDENTITY(1u, (1u) >> (1u ^ 1u)))) << 0u))) | (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(1u, max(1u, 1u))))))))), true), bvec4(true), _GLF_struct_1(vec3(1.0)), _GLF_struct_2(uvec3(1u), true, mat3x4(1.0), mat4x3(1.0), mat2x3(1.0), mat2(1.0), mat3(1.0))), gl_SubgroupID);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.5)), bool(false))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.5)), bool(false))) > injectionSwitch.y)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bool((false) && true))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false, false)), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, false, false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-147.031)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x)) > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))) && true), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), true && (injectionSwitch.x > injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(1.7) : injectionSwitch.x)) > injectionSwitch.y)))) && true))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(7078.1374)), float((injectionSwitch.y)), bool(true))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(7078.1374)), float((injectionSwitch.y)), bool(true)))))), bool(bvec4((true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), mix(float(_GLF_FUZZED(7078.1374)), float((injectionSwitch.y)), bool(true)))))), true, true, true))))) || false) && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, _GLF_IDENTITY(true, false || (true)), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (_GLF_IDENTITY(bool(false), true && (bool(false)))) || false)), true)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false)))))), bvec3(bvec3(bvec3(bvec2(false, true), _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))))))), false, false), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(false, true && (false)), false)))) && true)), false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-35.00)))) - 0.0), injectionSwitch.y)) : _GLF_FUZZED(ldexp(-13.78, 41407)))), 1.0, 1.0, 1.0)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))) && true), bool(bvec4(_GLF_DEAD(false), true, true, true))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true)))), ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))) && true) || false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(442.873)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(442.873)))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false, false)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), false, false)), false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(gl_SubgroupInvocationID, 1, _GLF_struct_5(vec3(1.0)), _GLF_struct_7(bvec2(true), _GLF_struct_6(mat3x2(1.0), mat3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.6)))), mat2x4(1.0), uvec2(1u), _GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY((uvec2(1u)) >> uvec2(0u, 0u), uvec2(uvec3((uvec2(1u)) >> uvec2(0u, 0u), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), mat2x3(1.0)), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (ivec3(1))), ((~ (ivec3(1)))) - ivec3(0, 0, 0)), (~ _GLF_IDENTITY((~ (ivec3(1))), ((~ (ivec3(1)))) - ivec3(0, 0, 0))) | (~ _GLF_IDENTITY((~ (ivec3(1))), ((~ (ivec3(1)))) - ivec3(0, 0, 0)))))), mat2(1.0));
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (false) && true)), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))), false), bvec2(bvec3(bvec2(bool(_GLF_IDENTITY(false, (false) && true)), false), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))) && true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(! (false), true && (! (false))))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))) && (! (false))))))), bool(bool(bool(bool(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))) && (! (false))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)), ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), (bool(bvec4(false, false, true, true))) || false)), ! (! (false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4862.4682)), _GLF_FUZZED((1.5 - 656.962))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]))), bvec2(true, true))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((4862.4682)), _GLF_FUZZED((1.5 - 656.962))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, 0 | (1))]))), bvec2(true, true))).x > injectionSwitch.y))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) && true), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(589.849), _GLF_FUZZED(6.4)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(589.849), _GLF_FUZZED(6.4)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), injectionSwitch)).y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! (_GLF_DEAD(false)), false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_4.subgroup_id * subgroup_size + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) + 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), max(_GLF_struct_replacement_8.subgroup_local_id, _GLF_struct_replacement_8.subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_11(bvec4(true), _GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), _GLF_IDENTITY((1u) ^ 0u, min((1u) ^ 0u, (1u) ^ 0u))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), _GLF_IDENTITY((1u) ^ 0u, min((1u) ^ 0u, (1u) ^ 0u))))))) >> uvec3(0u, 0u, 0u)), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_struct_9(mat4x2(1.0), bvec3(true)), _GLF_struct_10(vec3(1.0), workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, (_GLF_IDENTITY(false ? _GLF_FUZZED((uint(-79175) >> workgroup_size)) : _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) / 1u)) | 0u) | (_GLF_struct_replacement_4.subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : false ? _GLF_FUZZED((uint(-79175) >> workgroup_size)) : _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_id, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) / 1u)) | 0u) | (_GLF_struct_replacement_4.subgroup_id)))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), uint(uint((subgroup_size)))) * 1u), 1u, 1u)), (_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u), (subgroup_size) * 1u), 1u, 1u)), (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(subgroup_size) : uint(uvec3(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), 1u, 1u))))) >> 0u)) + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) | (0u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, (true) && true) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uint(9.3))))) - 0u) | (_GLF_IDENTITY(7u, uint(uint(7u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0))), injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, (true) && true) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uint(9.3))))) - 0u) | (_GLF_IDENTITY(7u, uint(uint(7u))))), (_GLF_IDENTITY(7u, _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0))), injectionSwitch.x)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY(true, (true) && true) ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(uint(9.3))))) - 0u) | (_GLF_IDENTITY(7u, uint(uint(7u)))))) ^ 0u))))))))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), (true ? _GLF_IDENTITY(clamp(subgroup_size, subgroup_size, subgroup_size), 0u | (clamp(subgroup_size, subgroup_size, subgroup_size))) : _GLF_FUZZED(75015u))))), (((_GLF_struct_replacement_8.subgroup_local_id + 1) % subgroup_size)) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1)))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, max(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), _GLF_struct_replacement_8.subgroup_local_id + 1))))), ~ (~ (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_struct_replacement_8.subgroup_local_id + 1), (_GLF_struct_replacement_8.subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (true ? _GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (false ? _GLF_FUZZED(virtual_gid) : _GLF_struct_replacement_8.subgroup_local_id + 1)) : _GLF_FUZZED(num_workgroup)))), ((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, max(_GLF_struct_replacement_8.subgroup_local_id + 1, _GLF_struct_replacement_8.subgroup_local_id + 1)))) | 0u)))))) % subgroup_size), 1u * (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ~ (~ (_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) >> 0u) + 1), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_struct_replacement_8.subgroup_local_id + 1, (0u ^ 1u), 0u, 1u)))), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_struct_replacement_8.subgroup_local_id + 1)), clamp(((_GLF_struct_replacement_8.subgroup_local_id + 1)), ((_GLF_struct_replacement_8.subgroup_local_id + 1)), ((_GLF_struct_replacement_8.subgroup_local_id + 1)))) | 0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(((_GLF_struct_replacement_8.subgroup_local_id + 1)), clamp(((_GLF_struct_replacement_8.subgroup_local_id + 1)), ((_GLF_struct_replacement_8.subgroup_local_id + 1)), ((_GLF_struct_replacement_8.subgroup_local_id + 1)))) | 0u)))))))) % subgroup_size), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), uint(uvec2((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), 0u))))) % subgroup_size)), min(_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), uint(uvec2((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), 0u))))) % subgroup_size)), min(((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), uint(uvec2((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), 0u))))) % subgroup_size)), ((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), uint(uvec2((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), 0u))))) % subgroup_size)))), ((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), uint(uvec2((_GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), clamp((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, 0u | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) >> 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : _GLF_struct_replacement_8.subgroup_local_id))) | (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) * 1u))) + 1), _GLF_IDENTITY((_GLF_struct_replacement_8.subgroup_local_id + 1), ((_GLF_struct_replacement_8.subgroup_local_id + 1)) | 0u)))), 0u))))) % subgroup_size)))))))), _GLF_IDENTITY(uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), 0u | (_GLF_IDENTITY(uint(0u), (uint(0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (0u | 0u) | (3u))), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(5006.2419))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec2(0.0, 0.0)), cos(0.0))), clamp(float(mat4(1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(1.0) : 0.0)))), sqrt(1.0) * (0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), (_GLF_IDENTITY(true ? length(vec2(0.0, 0.0)) : _GLF_FUZZED(-2.0), (true ? length(vec2(0.0, 0.0)) : _GLF_FUZZED(-2.0)) - 0.0))), cos(0.0))), float(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0), (mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) : _GLF_FUZZED(4.6))), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(6.2, 2.0))))), cos(0.0))), _GLF_IDENTITY(float(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))))) * 1.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), cos(0.0))), (float(mat4(1.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))), (float(_GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), clamp(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0)))) / vec4(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), min(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))))))))) * 1.0)), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, length(vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), cos(0.0)))) - 0.0)))), injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), 0u, 0u), uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / 1u), ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, min(3u, 3u)), 0u + (_GLF_IDENTITY(3u, min(3u, 3u))))), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u))), (_GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u))), (_GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u)))) >> 0u), _GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u))), _GLF_IDENTITY(3u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u))))))))) | (uint(_GLF_IDENTITY(3u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u)), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(3u, (3u) ^ 0u))) ^ 0u))))))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size))), _GLF_IDENTITY(_GLF_IDENTITY((uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(98199)))), _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec4(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 1.0, 0.0))), injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), ~ (_GLF_IDENTITY(~ (uint(3u)), (~ (uint(3u))) / 1u))))), _GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u)))), _GLF_IDENTITY(uint(uvec2((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u)))), 1u)), (true ? uint(uvec2((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u)))), 1u)) : _GLF_FUZZED(subgroup_size))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (3u) | (3u))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))), (false ? _GLF_FUZZED((workgroup_id & subgroup_size)) : (uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, _GLF_IDENTITY((1 ^ 1), 1 * ((1 ^ 1))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), _GLF_IDENTITY(max(1, 1), clamp(_GLF_IDENTITY(max(1, 1), 0 ^ (max(1, 1))), max(1, 1), max(1, 1)))), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), _GLF_IDENTITY(0u, (0u) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (true ? (1u << _GLF_IDENTITY(uint(3u), uint(3u))) : _GLF_FUZZED(56452u)))) | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))), (uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) * 1u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))))) / 1u, 1u * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))), (false ? _GLF_FUZZED((workgroup_id & subgroup_size)) : (uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY((uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))), (false ? _GLF_FUZZED((workgroup_id & subgroup_size)) : (uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))))), uint(uvec4(_GLF_IDENTITY((uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))), (false ? _GLF_FUZZED((workgroup_id & subgroup_size)) : (uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))))), 1u, 1u, 0u)))) | 0u) / 1u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)) ? _GLF_FUZZED(123015u) : _GLF_IDENTITY((uint(uint(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, max(_GLF_struct_replacement_8.subgroup_local_id + 1, _GLF_struct_replacement_8.subgroup_local_id + 1)), uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), _GLF_IDENTITY(max(1, 1), (max(1, 1)) | (_GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), (max(1, 1)) | 0)) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), 1), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), 1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), 1), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0))), max(1, 1)), 1)))))) << 0)) - 0), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, uint(uint(0u)))), min(~ (_GLF_IDENTITY(0u, uint(uint(0u)))), ~ (_GLF_IDENTITY(0u, uint(uint(0u)))))))), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * _GLF_IDENTITY(1u, min(1u, 1u)))), 0u, 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(_GLF_IDENTITY(3u, (3u) / 1u), (_GLF_IDENTITY(3u, (3u) / 1u)) ^ 0u)) + uint(_GLF_ZERO(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), 0u | (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) / 1u)), uint(3u))), uint(_GLF_IDENTITY(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), (true ? (3u) : _GLF_FUZZED(((subgroup_size / num_workgroup) ^ workgroup_size)))) / 1u)) + uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-9.5, -2.5, -1.3).s), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.3)), bvec2(true, false))).x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) / 1u), 0u), uvec4((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))))), ((_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u + (_GLF_IDENTITY(~ (1u), 1u * (~ (1u))))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (_GLF_IDENTITY(uint(3u), clamp(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) << 0u), uint(3u))))), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, uint(uvec2(3u, 0u)))) | (_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uvec2(3u, 0u), ~ (~ (uvec2(3u, 0u))))))))), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))), (_GLF_IDENTITY(false ? _GLF_FUZZED((workgroup_id & subgroup_size)) : (uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(961.798) : 0.0)), injectionSwitch.x))) << 0), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0))), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))))))))), 0u, 0u)), 0u, 0u), (uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) >> 0u), 0u))))))))), 0u, 0u)), 0u, 0u)) | uvec4(0u, 0u, 0u, 0u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u))), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), ~ (~ (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), uint(3u))) ^ 0u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(1u, (0u ^ 0u) ^ (1u)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) << 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), _GLF_IDENTITY(max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))))) : _GLF_FUZZED(virtual_gid))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)), (false ? _GLF_FUZZED(uvec4(194092u, 104949u, 197092u, 166502u)) : max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, _GLF_IDENTITY((3u) / 1u, uint(_GLF_IDENTITY(uvec3((3u) / 1u, 0u, 0u), ~ (~ (uvec3((3u) / 1u, 0u, 0u)))))))) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), _GLF_IDENTITY((true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) - 0u, max(_GLF_IDENTITY((uint(3u)) - 0u, clamp((uint(3u)) - 0u, (uint(3u)) - 0u, (uint(3u)) - 0u)), (uint(3u)) - 0u))))))) : _GLF_FUZZED(virtual_gid)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) - 0u, max(_GLF_IDENTITY((uint(3u)) - 0u, clamp((uint(3u)) - 0u, (uint(3u)) - 0u, (uint(3u)) - 0u)), (uint(3u)) - 0u))))))) : _GLF_FUZZED(virtual_gid)), ((true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) - 0u, max(_GLF_IDENTITY((uint(3u)) - 0u, clamp((uint(3u)) - 0u, (uint(3u)) - 0u, (uint(3u)) - 0u)), (uint(3u)) - 0u))))))) : _GLF_FUZZED(virtual_gid))) | 0u), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), _GLF_IDENTITY((uint(3u)) - 0u, max(_GLF_IDENTITY((uint(3u)) - 0u, clamp((uint(3u)) - 0u, (uint(3u)) - 0u, (uint(3u)) - 0u)), (uint(3u)) - 0u))))))) : _GLF_FUZZED(virtual_gid))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uvec3(uint(3u), 0u, 1u))))))) >> _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, max(_GLF_IDENTITY(3u, max(3u, 3u)), 3u))))))))) % subgroup_size)))), min(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false) ? _GLF_FUZZED((workgroup_id & subgroup_size)) : (uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(1, (1 ^ 1), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) << 0))), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) * 1u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), min(~ (~ (0u)), ~ (~ (0u))))))), 0u, 0u)), 0u, 0u)))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) ^ 0u)) ^ (1u)) << _GLF_IDENTITY(uint(3u), uint(3u))), ((_GLF_IDENTITY(1u, (_GLF_IDENTITY(0u ^ 0u, (0u ^ 0u) ^ 0u)) ^ (1u)) << _GLF_IDENTITY(uint(3u), uint(3u)))) ^ 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) >> 0u))), 0u), uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (3u) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, ~ (~ (3u))))))), (uint(_GLF_IDENTITY(3u, clamp(3u, 3u, _GLF_IDENTITY(3u, ~ (~ (_GLF_IDENTITY(3u, 0u ^ (3u))))))))) - 0u))), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))))) : _GLF_FUZZED(virtual_gid))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(0u | (1u), 1u * (0u | (1u))))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) ? _GLF_FUZZED((workgroup_id & subgroup_size)) : (uint(uint(((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, uint(uvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, int(ivec4(_GLF_IDENTITY(1, (1) << 0), (_GLF_IDENTITY(1 ^ 1, int(int(1 ^ 1)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) << 0), 0 | (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(0, (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | (0))))) + 0)))), 0))), max(1, 1)), ~ (~ (_GLF_struct_replacement_8.subgroup_local_id + 1))), 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) * 1u)), _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (0u))))), 0u, 0u)), 0u, 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(1u, (0u ^ 0u) ^ (1u)) << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))))) : _GLF_FUZZED(virtual_gid))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u))))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_IDENTITY(uvec4((_GLF_IDENTITY(1u, (0u ^ 0u) ^ (1u)) << _GLF_IDENTITY(uint(3u), uint(3u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), max(uvec4((1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, (3u) / 1u)) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u), uvec4(_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (true ? _GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), clamp((1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) - 0u))))) : _GLF_FUZZED(virtual_gid))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u, 0u)))))) / _GLF_IDENTITY(1u, (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) >> _GLF_IDENTITY(uint(5u), uint(5u))) | (_GLF_IDENTITY(1u, 0u | (1u))))), ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))) / 1u), (1u << _GLF_IDENTITY(uint(3u), uint(3u))), (1u << _GLF_IDENTITY(uint(3u), uint(3u)))))) | (0u | 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))))) % subgroup_size)))))))) / 1u)))))))), mat3x2(1.0), mat4x2(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, (1.0) / 1.0)), mix(float((_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (1.0) / 1.0))), float(_GLF_FUZZED(8.6)), bool(false))) * cos(0.0)) : _GLF_FUZZED(2.2)))))), vec3(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, (0 << _GLF_IDENTITY(int(0), int(0))) ^ (64))) << 0, _GLF_IDENTITY(0, (0) - 0) ^ ((64) << 0))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[_GLF_struct_replacement_12._f0._f4.next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 1u * _GLF_IDENTITY((uint(1)), ((uint(1))) * 1u))) | 0u), 4, 64, _GLF_IDENTITY(4, (4) / 1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(-36120) : 1)) < _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) && true)) || false)), false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, min(_GLF_struct_replacement_8.subgroup_local_id + 1, _GLF_struct_replacement_8.subgroup_local_id + 1)) < subgroup_size)), ! (! ((! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, min(_GLF_struct_replacement_8.subgroup_local_id + 1, _GLF_struct_replacement_8.subgroup_local_id + 1)) < subgroup_size)))))))), _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))))))))))) && true, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))))))))))) && true, ((_GLF_IDENTITY((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))))))))))) && true) && true))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size, _GLF_IDENTITY(true, false || (true)) && (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size))), bool(bvec4(! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, uint(uint(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id))))) + _GLF_IDENTITY(1, int(ivec2(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-91044) : 1)), 0))) < subgroup_size), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && true)))))), bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), (true ? (subgroup_size) : _GLF_FUZZED(workgroup_base))), (subgroup_size))))))))))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, min(1, 1)) < subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(-36120) : 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << (0u ^ 0u))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(-36120) : 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << (0u ^ 0u))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) && true), true, false, false)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(-36120) : 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << (0u ^ 0u))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) && true)) || false, true && ((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(-36120) : 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) << (0u ^ 0u))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) && true)) || false)))), bool(bvec4((_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((-9.9))), bool(false)))), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(-36120) : 1)) < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, subgroup_size)) >> 0u))) << (0u ^ 0u))) | (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) && true)) || false)), true, false, true)))))), false || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)), bool(bool((! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, min(_GLF_struct_replacement_8.subgroup_local_id + 1, _GLF_struct_replacement_8.subgroup_local_id + 1)) < subgroup_size))))), (_GLF_IDENTITY((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(bool(bool((! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size, bool(bool(_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size))))))))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), false || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))), ! (! (_GLF_IDENTITY(bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))), _GLF_IDENTITY(false, true && (false)) || (bool(bool((! (_GLF_struct_replacement_8.subgroup_local_id + 1 < subgroup_size)))))))))))))))) && true), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size, true && (_GLF_struct_replacement_8.subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < subgroup_size))), bool(bvec4(! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id))), (uint(_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id, (_GLF_struct_replacement_8.subgroup_local_id) | (_GLF_struct_replacement_8.subgroup_local_id)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + 1 < _GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 1u, 0u, 0u)))), true, false, _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false || (true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, true))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, true))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false || (true), bool(bvec4(false || (true), false, true, true))), true, true)))))))))) && true)))))), bool(bool((_GLF_IDENTITY(! (_GLF_struct_replacement_8.subgroup_local_id + 1 < _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(virtual_gid) : subgroup_size))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 0u | (subgroup_size))), _GLF_IDENTITY(bool(bvec3(! (_GLF_struct_replacement_8.subgroup_local_id + 1 < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), false, true)), true && _GLF_IDENTITY((bool(bvec3(! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) + 0u) < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), false, true))), bool(bvec4((bool(bvec3(! (_GLF_IDENTITY(_GLF_struct_replacement_8.subgroup_local_id + 1, (_GLF_struct_replacement_8.subgroup_local_id + 1) + 0u) < _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), false, true))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))), ! (! (! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))))))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), false || (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup))), max(_GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup))), _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, 1u * (num_workgroup))))) : virtual_gid))], read, 4, 64, _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-74422))));
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false)))))))), (false) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(_GLF_IDENTITY(! (! (false || (false))), ! (_GLF_IDENTITY(! (! (! (false || (false)))), (! (! (_GLF_IDENTITY(! (false || (false)), ! (! (_GLF_IDENTITY(! (false || (false)), (! (false || (false))) && true))))))) || false))), bool(_GLF_IDENTITY(bool(! (! (false || (false)))), ! (! (_GLF_IDENTITY(bool(! (! (false || (false)))), _GLF_IDENTITY(bool(bvec4(bool(! (! (false || (false)))), false, false, false)), (_GLF_IDENTITY(bool(bvec4(bool(! (! (false || (false)))), false, false, false)), ! (! (bool(bvec4(bool(! (! (false || (false)))), false, false, false)))))) && true))))))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false || (false), _GLF_IDENTITY(! (! (false || (false))), bool(_GLF_IDENTITY(bool(! (! (false || (false)))), ! (! (_GLF_IDENTITY(bool(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))) || (false)))), bool(bvec4(bool(! (! (false || (false)))), false, false, false))))))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(869.270)), vec2(_GLF_FUZZED(2262.1140), _GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 0.0, log(1.0), 0.0, 0.0, 1.0)))), bvec2(false, true))).x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((_GLF_IDENTITY(6.4 - 291.324, 1.0 * (6.4 - 291.324))))), float(injectionSwitch.x), bool(true))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))), ((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))) || false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
      barrier();
    }
  }
 else
  {
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   subgroupAll(true);
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-2.6))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true))) || false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3((! (_GLF_DEAD(false))), true, false)), bool(bvec2(bool(bvec3((! (_GLF_DEAD(false))), true, false)), true))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (true))), false, true))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.16), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.16), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.16), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), true, true)), ! (! (bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.16), _GLF_FUZZED(-2.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y), true, true))))))))))), false, false, true)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))))) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0), vec2(1.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0), vec2(1.0, 1.0)))))).y, 0.0 + (injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 1.0, 1.0, 1.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))) && true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
