#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (! (false)), ! (! (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), false), bvec2(bvec2(bvec2(! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, false || (((_GLF_IDENTITY(false, (false) || false))) || false)))))), false)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))) || false))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-52.96), _GLF_FUZZED(61.53)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, true && (false))), ! (! (true && (false)))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bvec4(! (_GLF_IDENTITY((false), true && ((false)))), false, true, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bvec4(! (_GLF_IDENTITY((false), true && ((false)))), false, true, false)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), bool(bvec4(! (_GLF_IDENTITY((false), true && ((false)))), false, true, false))))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat3(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), log(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (true) || false))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((false) || false), false || (((false) || false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3(_GLF_IDENTITY((~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | ((gl_WorkGroupSize)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), clamp(~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)))))))), min((~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | ((gl_WorkGroupSize)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), clamp(~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)))))))), (~ _GLF_IDENTITY((gl_WorkGroupSize), (_GLF_IDENTITY((gl_WorkGroupSize), _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) | ((gl_WorkGroupSize)))) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(0u, 0u, 0u)), clamp(~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)), ~ (uvec3(0u, 0u, 0u)))))))))))) / uvec3(1u, 1u, 1u)))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u))), (false ? _GLF_FUZZED(uvec3(40448u, 120606u, 34333u)) : ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))) | (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) >> uvec3(0u, 0u, 0u))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((_GLF_IDENTITY(~ (gl_WorkGroupSize), min(_GLF_IDENTITY(~ (gl_WorkGroupSize), (~ (gl_WorkGroupSize)) | (~ (gl_WorkGroupSize))), ~ (gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (gl_WorkGroupSize)), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (gl_WorkGroupSize)))) / uvec3(1u, 1u, 1u)))), (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(_GLF_IDENTITY(uvec3((~ (gl_WorkGroupSize))), (uvec3((~ (_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))))) / uvec3(1u, 1u, 1u))))) << uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)))))))))).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], clamp(gl_WorkGroupID[2], _GLF_IDENTITY(gl_WorkGroupID, (false ? _GLF_FUZZED(uvec3(107456u, 18478u, 84272u)) : gl_WorkGroupID))[2], gl_WorkGroupID[2])))).x, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))), min(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)))))).x)), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(max(subgroup_local_id, subgroup_size)))))), max(uint(uint(1u)), uint(uint(1u)))), min(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(max(subgroup_local_id, subgroup_size)))))), max(uint(uint(1u)), uint(uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(max(subgroup_local_id, subgroup_size)))))), max(uint(uint(1u)), uint(uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(max(subgroup_local_id, subgroup_size)))))), max(uint(uint(1u)), uint(uint(1u)))), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(max(subgroup_local_id, subgroup_size)))))), max(uint(uint(1u)), uint(uint(1u))))) >> 0u)))))), uint(uint(1u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))), max(_GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))), _GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size)))))))) : _GLF_FUZZED(196876u))) * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u + (_GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))), max(_GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size))), _GLF_IDENTITY((workgroup_size), 0u + ((workgroup_size)))))))) : _GLF_FUZZED(196876u))) * workgroup_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(0u, (0u) | (0u)))))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, uint(uvec4(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), 0u, 1u, 1u))), (subgroup_id * subgroup_size) | 0u)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) / 1u) * subgroup_size, (subgroup_id * subgroup_size) | 0u)), (uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) / 1u) * subgroup_size, (subgroup_id * subgroup_size) | 0u))) / 1u))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), (_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), (uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id - workgroup_id)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-1009.6216))) < injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, uint(uvec3(subgroup_id - workgroup_id, 0u, (0u ^ 0u)))))) : _GLF_FUZZED(36424u))) : _GLF_FUZZED(subgroup_size)))) * 1u))), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), (true ? _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))) : _GLF_FUZZED(workgroup_id))), _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_id * subgroup_size) | 0u)))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))))), (_GLF_IDENTITY(true, bool(bvec4(true, true, true, true))) ? (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((subgroup_id * subgroup_size) | 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_id * subgroup_size) | 0u)))))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u), (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))))) : _GLF_FUZZED((subgroup_local_id % uvec2(163067u, 87473u))[0]))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) << 0u), (subgroup_id * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))))))) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))) ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((subgroup_id - workgroup_id)), uint(uvec3(_GLF_FUZZED((subgroup_id - workgroup_id)), 0u, (0u >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))) : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (_GLF_FUZZED(subgroup_size)) >> 0u)))) * 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)) | 0u)))), _GLF_IDENTITY(clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))), max((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))))) | 0u))))), (clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))), max((_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))), (_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))))) | 0u)))))) << (0u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), clamp(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))) >> 0u)), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))) >> 0u)), 1u), min(uvec2(~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)), (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))) >> 0u), (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(_GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size)), subgroup_id * subgroup_size))) | 0u))) >> 0u)), 1u), _GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u), clamp(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u), min(uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u), _GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u), ~ (~ (uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u)))))), uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u), _GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u), uvec2(0u, 0u) ^ (uvec2(~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), min(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))), 0u ^ ((uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))) >> 0u)), 1u))))))))))))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 0u))))))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u)), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u)), 1u * (uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u)))), uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id)) * subgroup_size) | 0u))))))))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) + 0u) + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(459.252, -201.962, 863.166, 54.96))) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u))), subgroup_id)) * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), max(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u))))))) - 0u))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u), ~ (~ (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)))), 1u, 0u, (1u & 1u))))))))))) + _GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id - workgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))) : _GLF_FUZZED(subgroup_size)), 0u | ((false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id - workgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))) : _GLF_FUZZED(subgroup_size)))))), min((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id - workgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((subgroup_id - _GLF_IDENTITY(workgroup_id, uint(uint(workgroup_id))))) : _GLF_FUZZED(36424u))) : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id - workgroup_id)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))) : _GLF_FUZZED(subgroup_size)))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), (false ? _GLF_IDENTITY(_GLF_FUZZED((subgroup_id - workgroup_id)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, 0u | (_GLF_IDENTITY(subgroup_id - workgroup_id, (subgroup_id - workgroup_id) / 1u))))) : _GLF_FUZZED(36424u))) : _GLF_FUZZED(subgroup_size)))), 0u ^ ((_GLF_IDENTITY(_GLF_FUZZED(subgroup_size), _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id - workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))))) : _GLF_FUZZED(subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id - workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))))) : _GLF_FUZZED(subgroup_size)), 0u + ((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id - workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))))) : _GLF_FUZZED(subgroup_size)))), (1u & 1u), 0u, 0u), min(uvec4(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id - workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))))) : _GLF_FUZZED(subgroup_size)), 0u + ((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id - workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))))) : _GLF_FUZZED(subgroup_size)))), (1u & 1u), 0u, 0u), uvec4(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id - workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))))) : _GLF_FUZZED(subgroup_size)), 0u + ((false ? _GLF_IDENTITY(_GLF_FUZZED((_GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_id - workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_id - workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) ? _GLF_FUZZED((subgroup_id - workgroup_id)) : _GLF_FUZZED(36424u))))) : _GLF_FUZZED(subgroup_size)))), (1u & 1u), 0u, 0u))))))))))))) * _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))))))) / 1u)));
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u), (uvec2(_GLF_IDENTITY(subgroup_id, (subgroup_id) | 0u), 0u)) / uvec2(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (1u)), 1u)), (uvec2(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id) | 0u, ((subgroup_id) | 0u) ^ 0u)), 0u)) ^ uvec2(0u, 0u)))) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec3(((subgroup_local_id + 1) % subgroup_size), 1u, (1u | 0u))))) >> 0u);
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (buf[virtual_gid])), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), _GLF_IDENTITY((1), ((1)) | ((1))) | 0)), int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0))), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), (_GLF_IDENTITY(0, (0) ^ 0)) >> 0))), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0)))) / 1), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 ^ (_GLF_IDENTITY(int(7), int(ivec3(_GLF_IDENTITY(int(7), 0 + (int(7))), 0, 0))))), int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7)), min(_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7)), (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7))) / 1))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7)), (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7))) / 1))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7)), (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7))) / 1)))))), _GLF_IDENTITY(7, (false ? _GLF_FUZZED(-15807) : 7))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(7, min(7, 7)), int(int(7))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))))), max(~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))))), ~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))))))))))), int(_GLF_IDENTITY(ivec4(int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) | (7)))), clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) << 0), max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) * 1))), ~ (~ (7)))))), max((_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, _GLF_IDENTITY(max(7, 7), (max(7, 7)) - 0)), _GLF_IDENTITY(7, ~ (~ (7)))))), (_GLF_IDENTITY(7, max(_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), (_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), (_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), 1 * (_GLF_IDENTITY(7, max(7, 7))))) * 1)) | 0), _GLF_IDENTITY(7, ~ (~ (7)))))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(7, int(int(7))), (_GLF_IDENTITY(7, int(int(7)))) ^ 0))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))))), ~ (~ ((_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))))))))))), 1 * (int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, 0 ^ (_GLF_IDENTITY(7, (7) | (7)))), clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(7, (7) << 0), max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(_GLF_IDENTITY(7, ~ (_GLF_IDENTITY(~ (7), (~ (7)) * 1))), ~ (~ (7)))))), max((_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, _GLF_IDENTITY(max(7, 7), (max(7, 7)) - 0)), _GLF_IDENTITY(7, ~ (~ (7)))))), (_GLF_IDENTITY(7, max(_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), (_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), (_GLF_IDENTITY(_GLF_IDENTITY(7, max(7, 7)), 1 * (_GLF_IDENTITY(7, max(7, 7))))) * 1)) | 0), _GLF_IDENTITY(7, ~ (~ (7)))))))) | 0), _GLF_IDENTITY(_GLF_IDENTITY(7, int(int(7))), (_GLF_IDENTITY(7, int(int(7)))) ^ 0))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))))), ~ (~ ((_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))))))))))))), min(int(_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY(clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))), max((_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))), (_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))))) | 0), _GLF_IDENTITY(7, int(int(7)))), (clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))), max((_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))), (_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))))) | 0), _GLF_IDENTITY(7, int(int(7))))) | 0)), ~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))))))), int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((_GLF_IDENTITY(7, _GLF_IDENTITY(max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))), 0 | (max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))))), max((_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))), (_GLF_IDENTITY(7, max(_GLF_IDENTITY(7, max(7, 7)), _GLF_IDENTITY(7, ~ (~ (7)))))))) | 0), _GLF_IDENTITY(7, int(int(7))))), ~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) | ((7))) | 0), _GLF_IDENTITY(7, int(int(7)))))))))))), 0, 1, 1), (ivec4(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | _GLF_IDENTITY(0, ~ (~ (0)))), _GLF_IDENTITY(7, int(int(7))))), ~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))))))))), _GLF_IDENTITY(0, (0) * 1), 1, 1)) | (ivec4(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | _GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY(7, int(int(7))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(_GLF_IDENTITY(7, (7) | 0), (_GLF_IDENTITY(7, (7) | 0)) ^ 0), _GLF_IDENTITY(7, int(int(7))))))), ~ (~ (~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(_GLF_IDENTITY(7, (7) | 0), (_GLF_IDENTITY(7, (7) | 0)) ^ 0), _GLF_IDENTITY(7, int(int(7))))))))))))), 0, 1, 1)))))))))), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), 64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(10824) : 64)))), 0 + (64)), 0, (0 >> _GLF_IDENTITY(int(7), int(7))))), ((ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), 64, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(10824) : 64)))), 0 + (64)), 0, (0 >> _GLF_IDENTITY(int(7), int(7)))))) * ivec3(1, 1, 1)) / ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1 * _GLF_IDENTITY((1), max((1), (1))))) | _GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(0, 0, 0), max(ivec3(0, 0, 0), _GLF_IDENTITY(ivec3(0, 0, 0), (true ? ivec3(0, 0, 0) : _GLF_FUZZED(ivec3(4811, 13427, 74803)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0)), ((false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0))) - ivec3(0, 0, 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, (1) >> 0))), 1)))), (_GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, _GLF_IDENTITY(0, ~ (~ (0))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) | 0)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) | 0)), (_GLF_IDENTITY(64, (64) / _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) | 0))) / 1))), int(ivec2(64, 0))))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ 0), max(_GLF_IDENTITY(0, (0) ^ 0), _GLF_IDENTITY(0, (0) ^ 0))), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | 0), int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, 0 ^ (7)), min(7, _GLF_IDENTITY(7, (false ? _GLF_FUZZED(72027) : 7)))), (7) | 0), _GLF_IDENTITY(7, int(int(7))))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))), ~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), 0 ^ (int(7)))))))))))), int(_GLF_IDENTITY(ivec4(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, _GLF_IDENTITY(clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))), max(clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))), clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7), ((7)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), _GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) << 0)) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))), (false ? _GLF_FUZZED(-14309) : ~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) >> 0))))))))), (false ? _GLF_FUZZED(-58876) : (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, (7) / 1), 7, 7)), _GLF_IDENTITY((7), ((7)) | int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0), _GLF_IDENTITY(7, _GLF_IDENTITY(int(int(7)), (int(int(7))) | (_GLF_IDENTITY(int(int(7)), ~ (~ (_GLF_IDENTITY(int(int(7)), (int(int(7))) / 1)))))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(-14309) : ~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(_GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) >> 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) >> 0)))), (~ (_GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) >> 0))))) * 1))))))), int(ivec2((false ? _GLF_FUZZED(-14309) : ~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(_GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) >> 0))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) >> 0)))), (~ (_GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), 0 + (int(7)))) >> 0))))) * 1))))))), 1)))))))))), 0, 1, 1), (ivec4(_GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(-21966))), (7) | 0), 0 | (_GLF_IDENTITY(7, _GLF_IDENTITY((7) | 0, ((7) | 0) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(7, min(7, 7)), int(int(7))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))), clamp(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) ^ 0), int(int(7))))), _GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))), _GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7), 0 + ((7))) | 0), _GLF_IDENTITY(7, int(int(7)))))))))))), (0 << _GLF_IDENTITY(int(6), int(6))) | (int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(-21966))), (7) | 0), 0 | (_GLF_IDENTITY(7, _GLF_IDENTITY((7) | 0, ((7) | 0) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(7, min(7, 7)), int(int(7))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))), clamp(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(_GLF_IDENTITY(7, (7) ^ 0), int(int(7))))), _GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7))))), _GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, _GLF_IDENTITY((7), 0 + ((7))) | 0), _GLF_IDENTITY(7, int(int(7)))))))))))))), 0, 1, 1)) | (ivec4(int(int(_GLF_IDENTITY(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(_GLF_IDENTITY(int(7), (int(7)) * int(_GLF_ONE(1.0, injectionSwitch.y))))))), ~ (~ (_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) | 0), _GLF_IDENTITY(7, int(int(7)))))))))), 0, 1, 1)))))))))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(_GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), min(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), int(ivec2(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, min(64, 64)))), 1))))), 64, _GLF_IDENTITY(64, (_GLF_IDENTITY(false ? _GLF_FUZZED(10824) : 64, _GLF_IDENTITY((false ? _GLF_FUZZED(10824) : 64) >> 0, ((false ? _GLF_IDENTITY(_GLF_FUZZED(10824), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(10824), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (false ? _GLF_FUZZED(-6236) : ~ (_GLF_FUZZED(10824))))) + 0))), max(_GLF_FUZZED(_GLF_IDENTITY(10824, (true ? _GLF_IDENTITY(10824, 1 * (10824)) : _GLF_FUZZED(-94441)))), _GLF_FUZZED(10824)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(10824), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (false ? _GLF_FUZZED(-6236) : ~ (_GLF_FUZZED(10824))))) + 0))), max(_GLF_FUZZED(_GLF_IDENTITY(10824, (true ? _GLF_IDENTITY(10824, 1 * (10824)) : _GLF_FUZZED(-94441)))), _GLF_FUZZED(10824)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(10824), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (false ? _GLF_FUZZED(-6236) : ~ (_GLF_FUZZED(10824))))) + 0))), max(_GLF_FUZZED(_GLF_IDENTITY(10824, (true ? _GLF_IDENTITY(10824, 1 * (10824)) : _GLF_FUZZED(-94441)))), _GLF_FUZZED(10824))))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(10824), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (false ? _GLF_FUZZED(-6236) : ~ (_GLF_FUZZED(10824))))) + 0))), max(_GLF_FUZZED(_GLF_IDENTITY(10824, (true ? _GLF_IDENTITY(10824, 1 * (10824)) : _GLF_FUZZED(-94441)))), _GLF_FUZZED(10824)))))) - 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(10824), ~ (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (_GLF_IDENTITY(~ (_GLF_FUZZED(10824)), (false ? _GLF_FUZZED(-6236) : ~ (_GLF_FUZZED(10824))))) + 0))), max(_GLF_FUZZED(_GLF_IDENTITY(10824, (true ? _GLF_IDENTITY(10824, 1 * (10824)) : _GLF_FUZZED(-94441)))), _GLF_FUZZED(10824)))))) << 0) : 64) >> 0) - 0)))))), 0 + (64)), 0, _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0), 0 ^ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0))))) / ivec3(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, 0 + (1))))) >> 0) * _GLF_IDENTITY((1), max((_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, (1) - 0)))), (1))))) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(0, 0, 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0), (false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0), (false ? _GLF_FUZZED(ivec3(-10517, 42321, _GLF_IDENTITY(-36211, (-36211) | (-36211)))) : _GLF_IDENTITY(ivec3(0, 0, 0), ~ (~ (ivec3(0, 0, 0))))) - ivec3(0, 0, 0))))))), (int(_GLF_IDENTITY(ivec3(0, 0, 0), (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0), (false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(ivec3(-10517, 42321, -36211)) : ivec3(0, 0, 0), (false ? _GLF_FUZZED(ivec3(-10517, 42321, _GLF_IDENTITY(-36211, (-36211) / 1))) : ivec3(0, 0, 0)) - ivec3(0, 0, 0)))))))) ^ (_GLF_IDENTITY(0, 0 + (0)) << _GLF_IDENTITY(int(8), int(8)))))))), _GLF_IDENTITY(1, (1) >> 0), 1))))) + (0 | 0)), 0);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) << 0)), (int(_GLF_IDENTITY(int(1), (int(1)) << 0))) - (1 ^ int(_GLF_ONE(1.0, injectionSwitch.y)))), (int(_GLF_IDENTITY(int(1), (int(1)) << 0))) << 0)) < _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))), subgroup_size)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec4(4, 0, 1, 0), (_GLF_IDENTITY(true ? ivec4(4, 0, 1, 0) : _GLF_FUZZED(ivec4(-57616, 67081, 7998, 64552)), (true ? ivec4(4, 0, 1, 0) : _GLF_FUZZED(ivec4(-57616, 67081, 7998, 64552))) << ivec4(0, 0, 0, 0)))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 | (4)), 4, 4)))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 0.0)))), bool(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x))) - sin(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(7.8)), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), clamp(float(injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-42.18) : float(injectionSwitch.y))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0)), 0.0 + (float(mat2x3(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0)))), 1.0, 1.0, 1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(-42.18) : float(injectionSwitch.y))), _GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(_GLF_IDENTITY(-42.18, 1.0 * (-42.18))) : float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-62.55)), float(float(injectionSwitch.y)), bool(true))), (false ? _GLF_FUZZED(-42.18) : float(injectionSwitch.y))))), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0))), min(injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 1.0, 0.0, 1.0)))))))), bool(true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) * _GLF_IDENTITY(1.0, max(1.0, 1.0))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(80.67), _GLF_FUZZED(-8.4)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mix(vec2((vec2((injectionSwitch)[0], (injectionSwitch)[1]))[0], (vec2((injectionSwitch)[0], (injectionSwitch)[1]))[1]), vec2(_GLF_FUZZED(-9.7), _GLF_FUZZED(float((26486u >> 39191u)))), bvec2(false, false))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) / vec2(1.0, 1.0)).y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (true))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-0.7, 5.0)))).x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(38.72), _GLF_FUZZED(5472.0704)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false))))), (bool(bool(false))) && true)))), _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))), bool(bvec3(! (_GLF_IDENTITY(true && (false), ! (! (true && (false))))), true, false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - sqrt(0.0))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 0.0))), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, 1.0)), (vec2(vec4(injectionSwitch, 1.0, 1.0))) * mat2(1.0)), clamp(vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(vec4(injectionSwitch, 1.0, 1.0)), vec2(vec4(injectionSwitch, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-674.546)), bvec2(true, false))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))), true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
