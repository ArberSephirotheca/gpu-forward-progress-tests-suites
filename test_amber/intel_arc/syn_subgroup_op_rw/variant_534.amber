#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 & (~ (-13375 & -20688))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
      {
       case 86:
       ivec3(64871, 14544, -62124);
       case 72:
       vec3 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 35:
       case 50:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 54:
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       break;
       if(_GLF_DEAD(false))
        barrier();
       case 65:
       {
       }
       if(_GLF_DEAD(false))
        barrier();
       case 76:
       ;
       default:
       1;
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         break;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
      }
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 else
  {
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   switch(_GLF_SWITCH((0 & 10276)))
    {
     case 68:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     ldexp(543.520, -15050);
     case 0:
     case 53:
     case 99:
     if(_GLF_DEAD(false))
      barrier();
     atomicStore(checker[virtual_gid], read, 4, 64, 4);
     case 22:
     if(_GLF_DEAD(false))
      barrier();
     case 78:
     do
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
        {
         case 67:
         uvec3 _GLF_SWITCH_3_0v;
         case 20:
         mat2 _GLF_SWITCH_3_1v[52];
         case 0:
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         break;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
      {
      }
     else
      {
       subgroupAll(false);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 84:
     if(_GLF_DEAD(false))
      {
       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(7), int(7)))))
        {
         case 0:
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
          }
         case 1:
         case 89:
         case 68:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 59:
         {
         }
         do
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         case 15:
         {
          if(_GLF_DEAD(false))
           barrier();
          uvec2(114894u, 50686u);
          mat4x3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[49];
          bitfieldInsert((ivec3(-16272, -45908, -13581) >> 67501), ivec3(76474, 60014, 42741), 41969, -71314);
          bvec3 _GLF_SWITCH_3_3v;
          ;
          (-22470 - ivec2(-44339, -5752));
         }
         default:
         if(_GLF_DEAD(false))
          barrier();
         1;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     lessThanEqual(vec3(489.944, 3286.6919, 33.39), vec3(0.6, 2.6, -3.5));
     case 83:
     if(bool(min(-753.447, -3.6)))
      {
       if(_GLF_DEAD(false))
        barrier();
       while(false)
        {
         if(_GLF_DEAD(false))
          barrier();
         {
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            7.6;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          else
           {
           }
          if(_GLF_DEAD(false))
           barrier();
          if(_GLF_DEAD(false))
           {
            switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
             {
              case 76:
              ;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              case 28:
              ;
              if(_GLF_DEAD(false))
               barrier();
              case 0:
              case 57:
              case 39:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                 {
                  barrier();
                 }
               }
              case 95:
              case 12:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              continue;
              if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)), false || (bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false)))))))
               barrier();
              if(_GLF_DEAD(false))
               break;
              break;
              default:
              do
               {
                1;
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             }
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          bvec3 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[71];
          ivec3 _GLF_SWITCH_2_3v[23], _GLF_SWITCH_2_4v, _GLF_SWITCH_2_5v[50];
         }
         mat3x4 _GLF_SWITCH_2_6v, _GLF_SWITCH_2_7v, _GLF_SWITCH_2_8v[63];
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           297.083;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         do
          {
           switch(_GLF_SWITCH(0))
            {
             case 50:
             (mat2x4(9.8, 1.5, 5492.5000, 6.3, 89.09, 1581.3135, -3.1, 68.52));
             case 0:
             case 64:
             case 43:
             mat3x2(3.1, 5.3, 18.57, -0.2, -283.387, -2367.5256);
             case 39:
             case 72:
             if(_GLF_DEAD(false))
              {
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 67:
                   ;
                   case 46:
                   vec2(-30.76, 9024.1562);
                   case 0:
                   case 91:
                   case 92:
                   case 75:
                   case 77:
                   case 74:
                   case 32:
                   case 25:
                   barrier();
                   break;
                   case 89:
                   injectionSwitch;
                   case 15:
                   mat3x2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                   default:
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             case 1:
             case 55:
             case 41:
             case 26:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
             case 56:
             vec3 _GLF_SWITCH_6_0v;
             case 37:
             ;
             default:
             1;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         bvec3 _GLF_SWITCH_2_9v[92];
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           for(mat4x3 _GLF_SWITCH_2_10v, _GLF_SWITCH_2_11v[90]; true; mat2(836.099, 5.8, -6.8, -7.2))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
            barrier();
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(false))
          return;
         {
          do
           {
            if(_GLF_DEAD(false))
             barrier();
            mat3x2(-2.5, 2.0, -6729.2561, -2804.3751, 3366.3904, -4.4);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(false));
          mat4x2(3.5, -97.19, 8.0, -454.394, 2429.0392, 30.64, 1.1, -58.62);
          vec2 _GLF_SWITCH_2_12v, _GLF_SWITCH_2_13v[58];
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          vec4 _GLF_SWITCH_2_14v[18], _GLF_SWITCH_2_15v[77];
          uvec3(workgroup_id, bitfieldExtract((uvec2(137697u, 35404u) - subgroup_id), 20841, 72480));
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          ;
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       61682;
       if(_GLF_DEAD(false))
        barrier();
       (mat4x3(-58.26, 35.52, 35.53, 688.167, 1269.3126, -2.6, -7989.3623, 3477.0970, -4321.8510, -6340.3552, -7.2, 8207.8889) / 317.127);
       while(false)
        {
         if(_GLF_DEAD(false))
          barrier();
         switch(_GLF_SWITCH(0))
          {
           case 70:
           if(_GLF_DEAD(false))
            barrier();
           vec4(8.7, -7.8, -15.14, -538.741);
           case 34:
           if(_GLF_DEAD(false))
            barrier();
           float _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
           if(_GLF_DEAD(false))
            break;
           case 0:
           mat4x2(-9986.7208, -58.48, 2.7, 3383.3379, 3.0, -9975.6439, 9848.7946, 960.480);
           case 48:
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             (max(uvec4(164435u, 73115u, 35642u, 134506u), (uvec4(160276u, 34927u, 80164u, 122594u) | uvec4(107545u, 54305u, 154699u, 44997u))));
            }
           case 53:
           uvec4(4473u, 143742u, 106231u, 97284u);
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               barrier();
              }
            }
           case 21:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           {
            if(_GLF_DEAD(false))
             {
              do
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 56:
                  ivec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                  case 96:
                  float _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v[38];
                  case 0:
                  if(_GLF_DEAD(false))
                   barrier();
                  case 12:
                  case 3:
                  case 81:
                  barrier();
                  break;
                  case 18:
                  mat3(mat2(9540.8705, -959.631, 3.6, -1.4));
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             }
           }
           case 35:
           case 33:
           (+ mat3x2(-5023.9394, 0.8, -51.45, -4.2, -7.4, -4.3));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))))))
              barrier();
             barrier();
            }
           case 78:
           if(_GLF_DEAD(false))
            continue;
           ivec4 _GLF_SWITCH_2_16v;
           bvec4 _GLF_SWITCH_2_17v;
           case 82:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
               barrier();
              }
             while((-1229 >= -98577))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                return;
               mat4(-6.9, 1.3, -5.5, 4163.7953, -6244.7486, 5.6, 61.28, 7.9, -103.189, -26.08, -584.867, -9894.5568, -4.7, -695.352, 4.5, 4.1);
               ivec3 _GLF_SWITCH_2_18v, _GLF_SWITCH_2_19v;
              }
            }
           else
            {
            }
           break;
           case 56:
           mat4x2(7614.1815, -5883.8504, 491.432, 4.9, -964.574, 33.00, -8977.7554, 2.4);
           if(_GLF_DEAD(false))
            barrier();
           default:
           if(_GLF_DEAD(false))
            barrier();
           1;
          }
         if(_GLF_DEAD(false))
          return;
        }
       2329.2029;
      }
     default:
     1;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     switch(_GLF_SWITCH(_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec4(0, 1, 1, 0), ivec4(0, 0, 0, 0) ^ (ivec4(0, 1, 1, 0)))))))
      {
       case 76:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        break;
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         ivec2 _GLF_SWITCH_0_0v[43];
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 barrier();
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          break;
         {
          if(true)
           {
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              ivec2(13421, 9545);
              if(_GLF_DEAD(false))
               continue;
             }
            mat2x4 _GLF_SWITCH_0_1v, _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               continue;
              return;
             }
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
             break;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
              if(_GLF_DEAD(false))
               barrier();
             }
            else
             {
              notEqual(ivec2(-32067, 9988), sign(ivec4(21201, -86924, 79613, 42303)).yz);
              if(_GLF_DEAD(false))
               break;
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            uvec3 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v[41], _GLF_SWITCH_0_6v[38];
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
             barrier();
            do
             {
              switch(_GLF_SWITCH(0))
               {
                case 39:
                int _GLF_SWITCH_6_0v[66], _GLF_SWITCH_6_1v[2];
                case 59:
                ;
                case 0:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                case 55:
                case 16:
                ;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 barrier();
                break;
                default:
                1;
               }
             }
            while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             break;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               barrier();
              break;
             }
            vec2(-6055.5966, -4.9);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            vec4(-5.4, 9.4, 302.186, 9.8);
            mat2x3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
            163.090;
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               barrier();
              break;
             }
           }
          else
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              if(_GLF_DEAD(false))
               break;
              barrier();
             }
            if(_GLF_DEAD(false))
             barrier();
            (log2(vec4(621.806, -820.492, 4759.7521, 1313.4542)) , mat2x3(mat3x4(387.474, 3.6, -4.5, -9.2, 6861.9198, 8.0, 8.3, -636.359, -0.9, 402.010, -346.467, 864.719)));
            bool _GLF_SWITCH_0_9v;
            mat4x2(26.07, -2.7, -957.305, -15.02, -6.1, -97.60, 42.72, 70.36);
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            vec2(-9992.6301, -2.5);
            injectionSwitch;
           }
         }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         mat4x3 _GLF_SWITCH_0_10v[15], _GLF_SWITCH_0_11v[40];
         vec2 _GLF_SWITCH_0_12v;
         bvec3 _GLF_SWITCH_0_13v[82], _GLF_SWITCH_0_14v[23], _GLF_SWITCH_0_15v[81];
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (34081 & _GLF_IDENTITY(0, (0) ^ 0))); _injected_loop_counter --)
            {
             (mat3x4(2905.1952, 7082.5763, 7725.9878, 108.993, -0.4, 432.256, -8.9, -3850.7634, -869.088, -8.3, -271.542, -9.8) - 2851.7598);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
          }
         if(_GLF_DEAD(false))
          barrier();
         mat4x2(-72.61, -423.948, -7.2, -41.97, 4.3, -1505.9057, -648.641, 4443.0373);
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         for(mat3x2 _GLF_SWITCH_0_16v[40], _GLF_SWITCH_0_17v[95], _GLF_SWITCH_0_18v[99]; (workgroup_id < workgroup_base); injectionSwitch)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             while(false)
              {
               uvec4(86058u, 106658u, 54213u, 88066u);
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                return;
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               mat3x4 _GLF_SWITCH_0_19v[90], _GLF_SWITCH_0_20v;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 60:
                   case 64:
                   case 9:
                   case 56:
                   case 47:
                   case 76:
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      barrier();
                    }
                   else
                    {
                     vec4(-6553.4680, 19.73, 9.4, -5.6);
                    }
                   break;
                   case 19:
                   uvec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                   case 33:
                   (vec3(0.2, -20.46, -6375.3084) , mat2x3(-66.23, -5.8, 311.568, 24.47, -6.9, 5352.3087));
                   default:
                   1;
                  }
                }
               abs((vec4(28.59, -1.5, 57.93, 90.39) - vec4(0.6, 9461.3152, 7730.4417, -58.81)));
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               (43813 | ivec4(-51999, -61773, 3206, 1766));
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
           mat3x2 _GLF_SWITCH_0_21v[77], _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              break;
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           break;
          }
         ;
        }
       while((-98.72 < 0.7));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       case 46:
       while(true)
        {
         {
          switch(_GLF_SWITCH(0))
           {
            case 44:
            vec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[74];
            case 59:
            mat3x2 _GLF_SWITCH_6_3v[76], _GLF_SWITCH_6_4v;
            case 0:
            switch(_GLF_SWITCH(0))
             {
              case 0:
              case 53:
              case 26:
              if(_GLF_DEAD(false))
               barrier();
              case 67:
              case 92:
              case 22:
              case 23:
              if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
               {
                switch(_GLF_SWITCH(0))
                 {
                  case 0:
                  case 11:
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                  case 77:
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  break;
                  case 19:
                  if(_GLF_DEAD(false))
                   barrier();
                  do
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      barrier();
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  ivec3(90964, -57181, -90126);
                  default:
                  1;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
               }
              else
               {
               }
              break;
              case 71:
              mat2 _GLF_SWITCH_3_0v[91], _GLF_SWITCH_3_1v;
              default:
              1;
             }
            break;
            default:
            1;
           }
         }
         if(_GLF_DEAD(false))
          continue;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH((34208 & 0)))
          {
           case 90:
           (mat2(mat2x3(-247.320, 367.166, -0.6, 6648.4478, 779.699, 52.26)) * mat2(-7.9, -6.5, 2453.8239, 2.0));
           case 80:
           mat3x4(-29.84, 8197.9260, 4.2, 4.7, 771.581, 1.0, 90.17, -7644.5036, -6319.6308, -9.6, 7493.9161, 3442.9605);
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           case 6:
           case 52:
           barrier();
           break;
           if(_GLF_DEAD(false))
            continue;
           case 81:
           if(_GLF_DEAD(false))
            barrier();
           mat3x4(65.58, 229.984, 5371.9841, 3650.6159, -2.1, -65.79, 8.6, -860.532, -54.97, -20.65, -107.117, -56.58);
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           default:
           1;
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       case 0:
       case 33:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       case 7:
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               continue;
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & ((0 << _GLF_IDENTITY(int(6), int(6))) | 1))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           break;
           if(_GLF_DEAD(false))
            barrier();
           case 60:
           do
            {
             uvec2(24054u, 120181u);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            barrier();
           default:
           1;
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       case 65:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        continue;
       case 35:
       atomicStore(buf[virtual_gid], read, 4, 64, 4);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       case 74:
       case 90:
       if(_GLF_DEAD(false))
        barrier();
       case 79:
       if(_GLF_DEAD(false))
        return;
       case 56:
       case 27:
       subgroupAll(true);
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       break;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 25:
       if(_GLF_DEAD(false))
        break;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         while(true)
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 50:
             case 89:
             case 97:
             case 5:
             if(_GLF_DEAD(false))
              barrier();
             case 29:
             case 17:
             case 49:
             case 11:
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 50:
               case 15:
               case 80:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 9:
               if(_GLF_DEAD(false))
                {
                 switch(_GLF_SWITCH(_GLF_IDENTITY(0, clamp(0, 0, 0))))
                  {
                   case 0:
                   case 15:
                   case 18:
                   case 79:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   case 89:
                   barrier();
                   case 54:
                   case 3:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   break;
                   case 42:
                   any(bvec4(true, true, false, false));
                   case 28:
                   uvec3 _GLF_SWITCH_6_0v;
                   default:
                   1;
                  }
                }
               uvec2 _GLF_SWITCH_0_24v[21], _GLF_SWITCH_0_25v[12];
               break;
               case 37:
               for(vec4 _GLF_SWITCH_1_0v[7]; false; vec4(-577.550, -3319.5782, 8509.6903, -46.21))
                {
                 switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                  {
                   case 98:
                   lessThan(uvec2(42265u, 134434u), uvec2(45392u, 4698u));
                   case 84:
                   mat2(2.8, 8.4, -65.97, 7.5);
                   case 0:
                   case 39:
                   case 16:
                   case 1:
                   do
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   case 96:
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 38:
                     uvec3 _GLF_SWITCH_2_0v;
                     if(_GLF_DEAD(false))
                      barrier();
                     case 55:
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      break;
                     mat3 _GLF_SWITCH_2_1v;
                     case 0:
                     case 17:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            barrier();
                           break;
                          }
                        }
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                          break;
                         break;
                        }
                      }
                     case 68:
                     ivec4 _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                      }
                     case 92:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       barrier();
                      }
                     ivec3 _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v;
                     (mat2x4(6.9, 0.3, 1.3, -94.30, -47.62, 0.1, -36.60, -5259.1335) == (false ? mat2x4(-259.601, 373.979, -13.37, -85.75, 55.98, 5096.7695, -2.0, -4.6) : mat2x4(256.763, 8.0, -733.699, -8664.1922, -0.4, -1.4, 0.7, 5597.3301)));
                     case 81:
                     mat2(-7.9, -635.412, 2.4, -6.9);
                     case 36:
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       mat4x2(-524.718, 8945.8478, 0.8, -4.6, -0.9, -57.39, -1.0, -8.5);
                       if(_GLF_DEAD(false))
                        return;
                      }
                     else
                      {
                      }
                     case 91:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      continue;
                     case 5:
                     uvec2(118910u, 44948u);
                     mat3(-464.360, -270.237, 8628.4038, 1.5, -8.2, 8.4, 7.0, -231.392, 1362.1804);
                     break;
                     if(_GLF_DEAD(false))
                      barrier();
                     case 76:
                     (uvec2(166628u, 118364u) + uvec2(198205u, 195398u));
                     if(_GLF_DEAD(false))
                      barrier();
                     default:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         barrier();
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     1;
                    }
                   break;
                   case 90:
                   mat4x3(-258.652, -7.5, -8.2, 8.5, 3.4, 789.052, -6.8, -2.3, 4.4, 5158.4057, 6.4, 2.8);
                   default:
                   1;
                  }
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               default:
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               1;
              }
             break;
             default:
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       case 15:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         mat3x4(724.686, -416.037, -5.3, -4.9, -91.54, 8.7, 7.3, 323.021, -6.4, 949.571, -6.9, 479.367);
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 23:
             determinant(mat2(7.1, 8.7, 6.2, 7.8));
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 87:
             isnan(vec3(7.9, -0.9, 6439.4497));
             case 0:
             case 24:
             if(_GLF_DEAD(false))
              barrier();
             case 36:
             case 27:
             case 72:
             case 35:
             case 47:
             if(_GLF_DEAD(false))
              barrier();
             case 41:
             case 38:
             case 33:
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 98:
                 uvec2(197756u, 67472u);
                 case 34:
                 ;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 case 0:
                 case 56:
                 if(_GLF_DEAD(false))
                  barrier();
                 case 90:
                 case 1:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 case 51:
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  barrier();
                 case 16:
                 case 48:
                 if(_GLF_DEAD(false))
                  barrier();
                 for(uvec4 _GLF_SWITCH_0_26v[71], _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v[18]; false; lessThanEqual(uvec3(74767u, 89786u, 104443u), uvec3(109645u, 26520u, 172449u)))
                  {
                   vec4 _GLF_SWITCH_0_29v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                        {
                         barrier();
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                      }
                     return;
                    }
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 42:
                       (- mat2x3(533.560, 8077.2697, 9.0, 7.0, 5.3, 68.09));
                       case 0:
                       case 21:
                       case 96:
                       mat3(64.54, 580.785, -3.4, 9.7, 8302.1700, -482.001, -424.827, -768.471, -3140.1873);
                       break;
                       case 95:
                       mat3x4(vec4(99.04, 7.6, 29.06, 2.6), _GLF_SWITCH_0_29v, vec4(-0.7, 995.566, 8.7, 1.0));
                       case 47:
                       mat3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                       default:
                       1;
                      }
                    }
                   else
                    {
                    }
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      barrier();
                     mat2(1.7, -5498.9598, 89.40, -2.3);
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 case 21:
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 break;
                 case 86:
                 mat2x4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
                 case 83:
                 uvec2(88197u, 125102u);
                 default:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 1;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             break;
             case 42:
             (workgroup_base * uvec4(179204u, 73691u, 111865u, 192903u));
             case 6:
             greaterThanEqual(vec2(973.795, 0.5), floor(injectionSwitch));
             default:
             1;
            }
          }
         else
          {
           switch(_GLF_SWITCH(0))
            {
             case 86:
             lessThanEqual(uvec4(175300u, 123058u, 54638u, 113712u), max(uvec4(190241u, 82647u, 63586u, 135989u), workgroup_base));
             case 20:
             mat3x4(279.245, 58.79, 6.1, -9.6, -8.2, 7.8, 580.598, -30.69, -8.3, -3.8, 0.2, 542.296);
             case 0:
             case 92:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             case 32:
             case 84:
             case 42:
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             break;
             case 21:
             int _GLF_SWITCH_5_0v[3], _GLF_SWITCH_5_1v;
             case 63:
             bvec3(bvec4(true, false, true, false));
             default:
             if(_GLF_DEAD(false))
              barrier();
             1;
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          barrier();
         float _GLF_SWITCH_0_30v[90];
         (ivec4(622, -80036, -32803, 16335) != ivec4(-27646, 75704, 36614, 41164));
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           mat3(657.057, -821.702, 751.211, 557.512, 4.0, 92.08, 1.5, -163.879, -689.200);
          }
         {
          uint _GLF_SWITCH_0_31v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
          vec2(8477.6218, -11.64);
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 return;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           barrier();
          }
        }
       else
        {
        }
       default:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       1;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 for(int _injected_loop_counter = (-62839 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) >> 0)); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
