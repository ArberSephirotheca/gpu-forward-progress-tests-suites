#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), clamp(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)))), _injected_loop_counter)) != 0, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) - 0.0) < injectionSwitch.y))) && true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, true, false, false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, true, false, false)), (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, true, false, false))) || false))), false || (bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, true, false, false)), (bool(bvec4(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, true, false, false))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) != 0, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter), int(ivec4(_GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter), (max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) ^ 0), 0, 0, 1))), (max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) | (max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(91498) : _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-83896) : _injected_loop_counter)))), (true ? _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(91498) : _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-83896) : _injected_loop_counter)))) : _GLF_FUZZED(floatBitsToInt(-3184.2326)))))), _injected_loop_counter)))) != 0, false || (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (_GLF_IDENTITY(min(_injected_loop_counter, _injected_loop_counter), (min(_injected_loop_counter, _injected_loop_counter)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))) + (0 | 0))), _injected_loop_counter), int(ivec4(_GLF_IDENTITY(max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter), (max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)) ^ 0), 0, 0, 1))), _GLF_IDENTITY((max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter)), ((max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _injected_loop_counter)), _injected_loop_counter))) / 1) | (max(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(91498) : _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-83896) : _injected_loop_counter)))), (true ? _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(91498) : _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(-83896) : _injected_loop_counter)))) : _GLF_FUZZED(floatBitsToInt(-3184.2326)))))), _injected_loop_counter)))) != 0)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(~ (~ (_injected_loop_counter --)), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter --), ((_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))) << 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), 1 * (~ (~ (_injected_loop_counter --))))), (true ? (_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, max(1, 1)))) * (~ (~ (_injected_loop_counter --))))) : _GLF_FUZZED(-72083))))), ~ (~ ((_GLF_IDENTITY(~ _GLF_IDENTITY((_injected_loop_counter --), ((_injected_loop_counter --)) << 0), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), 1 * (~ (~ (_injected_loop_counter --))))), (true ? (_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), 1 * (~ (~ (_injected_loop_counter --))))) : _GLF_FUZZED(-72083))))))))) << (0 & -90472))), (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), (~ (_GLF_IDENTITY(~ (_injected_loop_counter --), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), (~ (~ (_injected_loop_counter --))) / 1), 1 * (~ (~ (_injected_loop_counter --)))))))) << (0 & -90472)), (_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), (~ (_GLF_IDENTITY(~ (_injected_loop_counter --), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), (~ (~ (_injected_loop_counter --))) / 1), 1 * (~ (~ (_injected_loop_counter --)))))))) << (0 & -90472))) | 0))) - (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(_GLF_IDENTITY(5, (_GLF_IDENTITY(5, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(5, (false ? _GLF_FUZZED(_injected_loop_counter) : 5)), min(5, 5))))) | (_GLF_IDENTITY(5, (_GLF_IDENTITY(5, (5) << 0)) ^ 0))))) ^ 0)))), (_GLF_IDENTITY(_injected_loop_counter --, _GLF_IDENTITY(~ (~ (_injected_loop_counter --)), (~ (_GLF_IDENTITY(~ (_injected_loop_counter --), ~ (_GLF_IDENTITY(~ (~ (_injected_loop_counter --)), 1 * (~ (~ (_injected_loop_counter --)))))))) << (0 & -90472)))) | 0), (_injected_loop_counter --) ^ 0))
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 barrier();
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-682.022))), injectionSwitch.y)) : _GLF_FUZZED(-6993.8860)))), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-682.022))), injectionSwitch.y)) : _GLF_FUZZED(-6993.8860)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-682.022))), injectionSwitch.y)) : _GLF_FUZZED(-6993.8860)))), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-682.022))), injectionSwitch.y)) : _GLF_FUZZED(-6993.8860)))))))), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-682.022))), injectionSwitch.y)) : _GLF_FUZZED(-6993.8860)))), ! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))))).y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, (true ? injectionSwitch.y : _GLF_FUZZED(-682.022))), injectionSwitch.y)) : _GLF_FUZZED(-6993.8860)))))))), false), false, true)))))));
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       else
        {
        }
      }
    }
  }
 while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false))))))));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) * uvec3(1u, 1u, 1u)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(uint(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << 0u)))), workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), 0u + (workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (subgroup_id), min(1u * (subgroup_id), 1u * (subgroup_id)))) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, clamp((1u) << 0u, (1u) << 0u, _GLF_IDENTITY((1u) << 0u, ((1u) << 0u) | 0u))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)), ((_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u))) | 0u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) << 0u, ((1u) << 0u) | ((1u) << 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) >> 0u)))))))) | 0u) * (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u), subgroup_id)))) * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (subgroup_size)), (subgroup_size) | 0u), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (subgroup_size)), (subgroup_size) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) ^ (subgroup_size)), (subgroup_size) | 0u))) + subgroup_local_id, ~ (~ (workgroup_base + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) + subgroup_local_id)))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, ((subgroup_size) | 0u) - 0u)), (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - (_GLF_IDENTITY(0u | 0u, min(_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u)), 0u | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), (true ? min(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) - (_GLF_IDENTITY(0u | 0u, min(_GLF_IDENTITY(0u | 0u, clamp(0u | 0u, 0u | 0u, 0u | 0u)), 0u | 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) - 0u)))) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))) : _GLF_FUZZED(workgroup_base))))) | _GLF_IDENTITY(0u, (0u) ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) << (1u ^ 1u)) + subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), ~ (~ (uint(uint(0u)))))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), min(uint(uvec2(workgroup_base, 0u)), uint(uvec2(workgroup_base, 0u))))))))) + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, _GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u))))) + subgroup_local_id))), max((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)))))), (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u, (1u) + 0u) * (subgroup_id)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (subgroup_size) | 0u)) << (1u ^ 1u)) + _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)))) + 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), ~ (~ (uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), 0u | (uint(0u)))) ^ 0u)))))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, _GLF_IDENTITY(min((subgroup_size) | 0u, _GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u))), ~ (~ (min((subgroup_size) | 0u, _GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u)))))))) + subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << (1u ^ 1u)) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : 0u), 0u ^ ((false ? _GLF_FUZZED(num_workgroup) : 0u)))), _GLF_IDENTITY(uint(uint(0u)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uint(uint(0u))), uint(uvec2(_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) | 0u), 1u)))), ~ (_GLF_IDENTITY(~ ((~ _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) >> 0u)), uint(uvec2(_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) | 0u), 1u))))), _GLF_IDENTITY(max(~ ((~ _GLF_IDENTITY((uint(uint(0u))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) | 0u), 1u)), (uint(uvec2(_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) | 0u), 1u))) >> (0u | 0u))))), ~ ((~ _GLF_IDENTITY((uint(uint(0u))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((uint(uint(0u))), _GLF_IDENTITY(uint(uvec2((uint(uint(0u))), 1u)), ~ (~ (uint(uvec2((uint(uint(0u))), 1u)))))), ((_GLF_IDENTITY(uint(uint(0u)), (uint(uint(0u))) | (uint(uint(0u)))))) | 0u), 1u)))))), (max(~ ((~ _GLF_IDENTITY((uint(uint(0u))), uint(uvec2(_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) | 0u), 1u))))), ~ ((~ _GLF_IDENTITY((uint(uint(0u))), uint(uvec2(_GLF_IDENTITY((uint(uint(0u))), ((uint(uint(0u)))) | 0u), 1u))))))) - 0u)))))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(1u * (subgroup_id), (1u * (subgroup_id)) + 0u)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, _GLF_IDENTITY((subgroup_size), ((subgroup_size)) | 0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u)), (_GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u))) >> 0u)))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u))))))) + subgroup_local_id))), ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << (1u ^ 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u), (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) << (1u ^ 1u))) >> (0u << _GLF_IDENTITY(uint(4u), uint(4u)))) + subgroup_local_id, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), ~ (~ (uint(uint(0u)))))) | (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base)) + _GLF_IDENTITY(subgroup_id, 1u * (subgroup_id)) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | 0u, min((subgroup_size) | 0u, _GLF_IDENTITY((subgroup_size) | 0u, max((subgroup_size) | 0u, (subgroup_size) | 0u))))) + subgroup_local_id)))) + 0u))));
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1), _GLF_IDENTITY(min(clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1), clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)), 0 | (_GLF_IDENTITY(min(clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1), clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? min(clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1), clamp(_GLF_IDENTITY(1, (1) | (1)), 1, 1)) : _GLF_FUZZED(88849)))))))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))), (((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))) + 0u)), (~ (~ ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)))))) / 1u)), (false ? _GLF_FUZZED(131849u) : _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, min(1, 1)))))), clamp((1) | (1), (1) | (1), (1) | (1)))), 1, _GLF_IDENTITY(1, ~ (~ (1))))), ~ _GLF_IDENTITY((~ (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) - 0)), clamp((1) | (1), (1) | (1), (1) | (1)))), 1, _GLF_IDENTITY(1, ~ (~ (1))))))), ((~ (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) - 0)), clamp((1) | (1), (1) | (1), (1) | (1)))), 1, _GLF_IDENTITY(1, ~ (~ (1)))))))) | ((~ (subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | (1)), (1) - 0)), clamp((1) | (1), (1) | (1), (1) | (1)))), 1, _GLF_IDENTITY(1, ~ (~ (1))))))))))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) * 1u, _GLF_IDENTITY(clamp((subgroup_local_id) * 1u, (subgroup_local_id) * 1u, (subgroup_local_id) * 1u), 0u + (clamp((subgroup_local_id) * 1u, (subgroup_local_id) * 1u, (subgroup_local_id) * 1u)))), 0u ^ (_GLF_IDENTITY((subgroup_local_id) * 1u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u) * 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u) * 1u : _GLF_FUZZED(workgroup_id)))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))))))) % subgroup_size);
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uint(uint(virtual_gid))) | _GLF_IDENTITY((uint(uint(virtual_gid))), min((_GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(virtual_gid)), ~ (~ (uint(uint(virtual_gid)))))), ((uint(uint(virtual_gid)))) | 0u))), ~ (~ (_GLF_IDENTITY((uint(uint(virtual_gid))) | _GLF_IDENTITY((uint(uint(virtual_gid))), min((_GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) << 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(virtual_gid)), ~ (~ (uint(uint(virtual_gid)))))), ((uint(uint(virtual_gid)))) | 0u), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(uint(uint(virtual_gid)), ~ (~ (uint(uint(virtual_gid)))))), ((uint(uint(virtual_gid)))) | 0u))))), min((uint(uint(virtual_gid))) | _GLF_IDENTITY((uint(uint(virtual_gid))), min((_GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(virtual_gid)), ~ (~ (uint(uint(virtual_gid)))))), _GLF_IDENTITY(((uint(uint(virtual_gid)))) | 0u, uint(uvec4(((uint(uint(virtual_gid)))) | 0u, (155694u & 0u), 0u, 1u)))))), (uint(uint(virtual_gid))) | _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(virtual_gid, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))))), min((_GLF_IDENTITY(uint(uint(virtual_gid)), (_GLF_IDENTITY(uint(uint(virtual_gid)), clamp(uint(uint(virtual_gid)), uint(uint(virtual_gid)), _GLF_IDENTITY(uint(uint(virtual_gid)), (uint(uint(virtual_gid))) / 1u)))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(virtual_gid)), ~ (~ (uint(uint(virtual_gid)))))), ((uint(uint(virtual_gid)))) | 0u))))))))))], 4, 64, 0);
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, int(int(1))), 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, (1) / 1)), _GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) / 1)), int(4)))), max(~ (int(4)), ~ (int(4)))))))))), clamp(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) >> 0)), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4)))))))), (_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4))))), 0 | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4))))))))), ((_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4)))))))))) << 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-39967)))) << 0))), int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4)))))), (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4)))))), (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4))))))) >> (0 & -52722))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ _GLF_IDENTITY((int(4)), ~ (~ (_GLF_IDENTITY((int(4)), 0 | ((int(4))))))), ~ (int(4)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(_GLF_IDENTITY(4, (4) << 0))), ~ (int(4)))))), 0, 0)), min(int(ivec3(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4)))))), 0, 0)), int(ivec3(_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ (int(4)))))), 0, 0))))))))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) / (0 | 1)), 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ _GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), 0 ^ ((int(4))))) ^ 0))))))))), 0)), (int(ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) / (0 | 1)), 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ _GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), 0 ^ ((int(4))))) ^ 0))))))))), 0))) | (int(ivec2(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (4))) / (0 | 1)), 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ (int(4)), ~ _GLF_IDENTITY((int(4)), (_GLF_IDENTITY((int(4)), 0 ^ ((int(4))))) ^ 0))))))))), 0))))), _GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, 0 ^ (4))), (int(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(1, 1 * (1)) * (4)), 4)))) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, ~ (~ (1))))), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), int(4)))), max(~ _GLF_IDENTITY((int(4)), _GLF_IDENTITY(int(ivec4((int(4)), 1, 0, 1)), (int(ivec4((int(4)), 1, 0, 1))) | (int(ivec4((int(4)), 1, 0, 1))))), ~ (int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) - 0))), min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), 0 ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) - 0, int(int(_GLF_IDENTITY((4) - 0, ((4) - 0) | (_GLF_IDENTITY((4) - 0, int(ivec4((4) - 0, 1, 0, 1))))))))))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, (4) - 0)))))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) | (4))))), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, max(4, 4)), 4))) << 0)), int(4)))) | (int(4))))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), clamp((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), 0 | (_GLF_IDENTITY((4), max(_GLF_IDENTITY((4), ((4)) | 0), (4)))))))), (min(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0), int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) ^ ((-81394 & 6942) & 0), (_GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) ^ ((-81394 & 6942) & 0), ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) ^ ((-81394 & 6942) & 0)) - 0)) << 0)), (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) | (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), min((4), (4)))))))))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), (_GLF_IDENTITY(4, 0 ^ (4))) | 0)), 0 + (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (4))), (min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4)))) | 0, ((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), (clamp(int(4), int(4), int(4))) | 0))) | (int(4)))) | 0) - 0)), (_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(_GLF_IDENTITY(int(4), (int(4)) | (int(4))), int(_GLF_IDENTITY(4, clamp(4, 4, 4))), int(4)))) | (int(4)))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4)))), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-89302) : _GLF_IDENTITY((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4)))), ((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4))))) | ((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4))))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-89302) : _GLF_IDENTITY((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4)))), ((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4))))) | ((_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) | (int(4)))))))) ^ 0)), 1))) | 0)) | 0), min(int(4), _GLF_IDENTITY(int(4), (int(4)) | 0))))), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-3042)))))) | 0)))), max(_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), clamp(int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), 0 + (int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))), int(4)))), max(~ (int(4)), ~ (int(4))))), 0 | (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))), max(~ (int(4)), ~ (int(4))))), int(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))), max(~ (int(4)), ~ (int(4))))), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))), max(~ (int(4)), ~ (int(4)))))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(int(4), (int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(int(4), ~ (~ (int(4))))))), max(~ (int(4)), ~ (int(4))))))), 1, 1, 0)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(93839) : _GLF_IDENTITY(4, max(4, 4)))), 0 ^ (4))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(~ (~ ((4))), ~ (_GLF_IDENTITY(~ (~ (~ ((4)))), (~ (~ (~ ((4))))) ^ 0)))) << 0), (true ? _GLF_IDENTITY(4, (4) << 0) : _GLF_FUZZED(77620)))), int(4)))) | (int(4)))), (int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) << 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) << 0), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) << 0)) ^ 0)))), (true ? _GLF_IDENTITY(4, (4) << _GLF_IDENTITY(0, (0) | (0))) : _GLF_FUZZED(77620)))), int(4)))) | (int(4))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, int(ivec2(4, 1))), 4))))), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) | (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, 0 + (4)), 4, 4)), int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), int(ivec4(_GLF_IDENTITY(4, int(int(4))), 0, 1, (1 ^ 1)))), _GLF_IDENTITY(4, 0 ^ (4)))), ((min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), 0 ^ (_GLF_IDENTITY(int(int(4)), max(_GLF_IDENTITY(int(int(4)), ~ (~ (int(int(4))))), _GLF_IDENTITY(int(int(4)), clamp(int(int(4)), _GLF_IDENTITY(int(int(4)), (int(int(4))) / 1), int(int(4))))))))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 ^ (4)), 0 | (_GLF_IDENTITY(4, 0 ^ (4)))))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))), clamp(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))), (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) << 0), min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))))), min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))), (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) << 0))))) + 0), min(_GLF_IDENTITY((min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY((_GLF_IDENTITY(4, int(int(4)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(4, int(int(4)))) : _GLF_FUZZED(6229))) / (1 | 1))))), _GLF_IDENTITY(4, 0 ^ (4)))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), int(ivec4(~ (_GLF_IDENTITY(4, int(int(4)))), 0, 0, 0))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), int(ivec4(~ (_GLF_IDENTITY(4, int(int(4)))), 0, 0, 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), int(ivec4(~ (_GLF_IDENTITY(4, int(int(4)))), 0, 0, 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), int(ivec4(~ (_GLF_IDENTITY(4, int(int(4)))), 0, 0, 0))))))), _GLF_IDENTITY(4, 0 ^ (4)))), (_GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) | (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), ~ (~ ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) | (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))))))) + 0), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))) | (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) * 1), 0)) ^ (4)))) | (min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))))) + 0)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ _GLF_IDENTITY((4), (_GLF_IDENTITY((4), ~ (~ ((4))))) | ((4))))), (min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) << 0), (int(4)) | 0)))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) << 0), (int(4)) | 0)))), int(ivec3(int(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) << 0), (int(4)) | 0)))), 0, 1))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) << 0), (int(4)) | 0)))), 0 | (int(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) << 0), (int(4)) | 0)))))), int(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) >> 0)) << 0), (int(4)) | 0))))))), _GLF_IDENTITY(4, 0 ^ _GLF_IDENTITY((4), (true ? _GLF_IDENTITY((4), ((4)) / 1) : _GLF_FUZZED(-3042)))))) | 0)))), _GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) | (_GLF_IDENTITY(int(4), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(int(4), min(_GLF_IDENTITY(_GLF_IDENTITY(int(4), (int(4)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(48709)))) * int(_GLF_ONE(1.0, injectionSwitch.y)), 0 + _GLF_IDENTITY((_GLF_IDENTITY((int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y)), ((int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0)), max((_GLF_IDENTITY((int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y)), ((int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0)), _GLF_IDENTITY((_GLF_IDENTITY((int(4)) * _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (true ? int(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-12908))), ((int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0)), ((_GLF_IDENTITY((int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y)), ((int(4)) * int(_GLF_ONE(1.0, injectionSwitch.y))) >> 0))) >> 0))))), int(4)))), max(~ (int(4)), ~ (int(4)))))))))), _GLF_IDENTITY(4, 0 ^ (4))), min(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0)), int(4)))) | (int(4))))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), ((min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), clamp(int(int(4)), int(int(4)), int(int(4))))), _GLF_IDENTITY(4, 0 ^ (4))))) | ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), clamp(~ (_GLF_IDENTITY(4, int(int(4)))), ~ (_GLF_IDENTITY(4, int(int(4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (true ? ~ (_GLF_IDENTITY(4, int(int(4)))) : _GLF_FUZZED(46839)))))), max((_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), clamp(~ (_GLF_IDENTITY(4, int(int(4)))), ~ (_GLF_IDENTITY(4, int(int(4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (true ? ~ (_GLF_IDENTITY(4, int(int(4)))) : _GLF_FUZZED(46839)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), clamp(~ (_GLF_IDENTITY(4, int(int(4)))), ~ (_GLF_IDENTITY(4, int(int(4)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (true ? ~ (_GLF_IDENTITY(4, int(int(4)))) : _GLF_FUZZED(46839)))))))) / 1)))), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1))))))), _GLF_IDENTITY(4, 0 ^ (4))))), clamp(_GLF_IDENTITY(min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0)), int(4)))) | (int(4))))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (true ? int(4) : _GLF_FUZZED(-83940))))), _GLF_IDENTITY(4, 0 ^ (4)))), (_GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), (_GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))))) | 0)) / 1)) | ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1))))))), _GLF_IDENTITY(4, 0 ^ (4))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0)), int(4)))) | (int(4))))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))))) | ((min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (int(int(4))) ^ 0)), _GLF_IDENTITY(4, 0 ^ (4)))))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), 0 | (_GLF_IDENTITY(4, int(int(4))))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) << 0))))) / 1)))), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1))))))), _GLF_IDENTITY(4, 0 ^ (4))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) << 0)), int(4)))) | (int(4))))), _GLF_IDENTITY(4, 0 ^ (4))), _GLF_IDENTITY((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))), ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4))))) | ((min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, 0 ^ (4)))))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(_GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))))), (_GLF_IDENTITY(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), min(0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1)))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, int(int(4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, int(int(4)))), (~ (_GLF_IDENTITY(4, int(int(4))))) / 1))))))) | 0)), _GLF_IDENTITY(4, 0 ^ (4))))))), _GLF_IDENTITY(min(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0 ^ (4))), (min(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(-19435, (false ? _GLF_FUZZED(30069) : -19435))) : 0)))))), int(ivec2(int(_GLF_IDENTITY(_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-19435) : 0))))), (_GLF_IDENTITY(int(4), min(int(4), _GLF_IDENTITY(int(4), (int(4)) | _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-19435) : _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, int(ivec3(0, 0, 0))))))))))) ^ 0)), 0)))), _GLF_IDENTITY(4, _GLF_IDENTITY(0 ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), (true ? (4) : _GLF_FUZZED(-3042))), (false ? _GLF_FUZZED(22057) : 0 ^ _GLF_IDENTITY((4), (true ? (4) : _GLF_FUZZED(-3042)))))))) | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(0, (0) + 0), 0)))))))), 64, 4);
  }
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true), false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false))))))))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false))))))))))))))), ! (! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))))))), true && (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false)))))), ! (! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bvec4(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), false, false, false))))))))))))))))))))))));
      }
     else
      {
      }
    }
   subgroupAll(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true))))) || false)))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true))))))))))), bvec2(bvec3(bvec2(false, true), false))))));
  }
 else
  {
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, 0 | (4)), 64, 4);
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     subgroupAll(true);
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
