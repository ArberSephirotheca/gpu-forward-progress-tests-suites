#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) | uvec3(0u, 0u, 0u)))), gl_NumWorkGroups)).x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)), (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) / 1u)), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))))))), 1u * (uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> 0u)) | (112815u & 0u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), max(0u >> _GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(0u, max(0u, 0u)) >> _GLF_IDENTITY(uint(2u), uint(2u)))))), min(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) - uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> _GLF_IDENTITY(0u, (0u) << 0u))) | (112815u & 0u)))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))), min((_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))), ((_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))) / 1u))) >> 0u)) | (112815u & 0u)))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u)))), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))))))), 1u * (uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> 0u)) | (112815u & 0u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u), 0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), min(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> 0u)) | (112815u & 0u)))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> 0u)) | (_GLF_IDENTITY(112815u & 0u, ~ (~ (112815u & 0u))))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u))) | (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups)))).x, (true ? gl_NumWorkGroups.x : _GLF_FUZZED(subgroup_size)))) | (_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x))))), _GLF_IDENTITY(uint(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(5u, max(5u, 5u))))), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), 0u ^ (_GLF_IDENTITY(uint(2u), uint(2u)))), uint(uint(_GLF_IDENTITY(uint(2u), uint(2u)))))))), 1u * (uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> 0u)) | (112815u & 0u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(uint(2u), uint(2u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), max(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(2u), uint(2u)), max(_GLF_IDENTITY(uint(2u), uint(2u)), _GLF_IDENTITY(uint(2u), uint(2u))))) | 0u), 0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), min(uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> 0u)) | (112815u & 0u)))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))), uvec3(gl_NumWorkGroups.x, (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) >> 0u)) | (_GLF_IDENTITY(112815u & 0u, ~ (~ (112815u & 0u))))))), (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) >> 0u)) + 0u);
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, 0u, 0u)), (gl_WorkGroupSize) | (_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u);
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (1) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), max(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), min(subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u)))))))))) % subgroup_size);
 uint read = 0;
 do
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, (0 >> _GLF_IDENTITY(int(2), int(2))) | (1))), int(1)))); _injected_loop_counter --)
        {
         for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), _GLF_IDENTITY(int(1), min(_GLF_IDENTITY(int(1), (_GLF_IDENTITY(int(1), max(int(1), int(1)))) >> 0), int(1))))))) & -58530); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) | 0)))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0)), false || (_GLF_IDENTITY(_injected_loop_counter > 0, true && (_injected_loop_counter > 0))))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (1) >> _GLF_IDENTITY((0 | 0), ((0 | 0)) ^ 0)), 1))); _injected_loop_counter ++)
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     do
                      {
                       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))), false || (_GLF_WRAPPED_IF_TRUE(true))))
                        {
                         do
                          {
                           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                            }
                           else
                            {
                             do
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    {
                                    }
                                   else
                                    {
                                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                        {
                                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                          {
                                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                            {
                                             atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
                                            }
                                          }
                                         else
                                          {
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
            }
          }
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = _GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) - 0) + (_GLF_IDENTITY(int(_GLF_IDENTITY(8, clamp(8, 8, 8))), int(8)))), _GLF_IDENTITY(min(0 >> _GLF_IDENTITY(int(8), int(8)), 0 >> _GLF_IDENTITY(int(8), int(8))), (false ? _GLF_FUZZED(int(true)) : min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1))))), clamp(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(ivec2(8, 1)))) / 1))))), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec2(8, 1), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(8, 1), ~ (~ (ivec2(8, 1))))))))) / 1))))), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec2(8, 1), (ivec2(8, 1)) | (ivec2(8, 1))))), max(_GLF_IDENTITY(8, int(ivec2(8, 1))), _GLF_IDENTITY(8, int(ivec2(8, 1)))))) / 1))))))), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-30872), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), int(8)) : _GLF_IDENTITY(_GLF_FUZZED(-30872), clamp(_GLF_IDENTITY(_GLF_FUZZED(-30872), max(_GLF_FUZZED(-30872), _GLF_IDENTITY(_GLF_FUZZED(-30872), (_GLF_FUZZED(-30872)) - 0))), _GLF_FUZZED(-30872), _GLF_FUZZED(-30872)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872)) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(5658)))) << 0), max(0, 0))), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), int(8)) : _GLF_FUZZED(-30872))))) >> 0) / (0 ^ 1)), (true ? _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), _GLF_IDENTITY(min(int(8), int(8)), (min(int(8), int(8))) ^ 0)), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), _GLF_IDENTITY((false ? _GLF_FUZZED(12938) : ~ (int(8))), max((false ? _GLF_FUZZED(12938) : ~ (int(8))), (false ? _GLF_FUZZED(12938) : ~ (int(8))))))))) - 0)))) : _GLF_IDENTITY(_GLF_FUZZED(-30872), int(int(_GLF_FUZZED(-30872)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (1 & 1) * (8))), clamp(int(8), int(8), int(8)))) : _GLF_FUZZED(-30872)))) / (0 ^ 1)) : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5764) : _GLF_IDENTITY(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], max(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, 0 ^ (0)))), 0, 0))))[0], ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(_GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))), (_GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0)))) + (0 << _GLF_IDENTITY(int(8), int(8)))))[0]))))))))))) | (_GLF_IDENTITY(int(8), int(8))))))))), (_GLF_IDENTITY((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), 0 + (_GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), (int(8)) | (int(8))), int(8)), 0 >> _GLF_IDENTITY(int(8), int(8))), (false ? _GLF_FUZZED(int(true)) : min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1))))), clamp(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(ivec2(8, 1)))) / 1))))), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, (_GLF_IDENTITY(8, clamp(8, 8, _GLF_IDENTITY(8, max(8, 8))))) / 1), int(_GLF_IDENTITY(ivec2(8, 1), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(8, 1), ~ (_GLF_IDENTITY(~ (ivec2(8, 1)), ivec2(ivec3(~ (ivec2(8, 1)), 0)))))))))) / 1))))), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec2(8, 1))), max(_GLF_IDENTITY(8, int(ivec2(8, 1))), _GLF_IDENTITY(8, int(ivec2(8, 1)))))) / 1))))))), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, clamp(8, 8, 8)))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-30872), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), int(8)) : _GLF_FUZZED(-30872)))), ((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(8, (true ? 8 : _GLF_FUZZED(-68779))), (8) | (8))), int(8)) : _GLF_FUZZED(-30872), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872)) >> _GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), (_GLF_IDENTITY(0, max(0, 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) << 0)), int(8)) : _GLF_FUZZED(-30872))))) >> 0) / (0 ^ 1)), (true ? _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), (false ? _GLF_FUZZED(12938) : ~ _GLF_IDENTITY((int(8)), ((int(8))) >> 0)))))) - 0)))) : _GLF_FUZZED(-30872), (_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (1 & 1) * _GLF_IDENTITY((8), 0 + ((8))))), clamp(int(8), int(8), int(8)))) : _GLF_FUZZED(-30872)))) / (0 ^ 1)) : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5764) : _GLF_IDENTITY(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], max(ivec4(_GLF_IDENTITY(82386, clamp(82386, _GLF_IDENTITY(82386, (82386) << 0), 82386)), _GLF_IDENTITY(11559, (11559) + _GLF_IDENTITY(0, (0) | (0))), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(84809))), 0, 0))))[0]))))))))))) | (_GLF_IDENTITY(int(8), int(8))))))))), 0 | ((_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), 0 + (_GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY(min(0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) ^ 0)), 0 >> _GLF_IDENTITY(int(8), int(8))), (false ? _GLF_FUZZED(int(true)) : min(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1), clamp(_GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1), clamp(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1), _GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1), (_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1)) - 0))), _GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1), _GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1))))), (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(8, 1)))), 1))) / 1)))) | (_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, _GLF_IDENTITY((_GLF_IDENTITY(8, int(ivec2(8, 1)))), int(ivec2((_GLF_IDENTITY(8, int(ivec2(_GLF_IDENTITY(8, (8) * 1), 1)))), 1))) / 1))))))), clamp(_GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(ivec2(8, 1)))) / 1))))), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(8, int(_GLF_IDENTITY(ivec2(8, 1), ivec2(1, 1) * (_GLF_IDENTITY(ivec2(8, 1), ~ (~ (ivec2(8, 1))))))))) / 1))))), _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, 0 | (_GLF_IDENTITY(8, (_GLF_IDENTITY(_GLF_IDENTITY(8, int(ivec2(8, 1))), max(_GLF_IDENTITY(8, int(ivec2(8, 1))), _GLF_IDENTITY(8, int(ivec2(8, 1)))))) / _GLF_IDENTITY(1, ~ (~ (1)))))))))), 0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(int(8), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-30872), _GLF_IDENTITY((_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(-30872), min(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, min(8, 8))), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), int(8)) : _GLF_FUZZED(-30872)))), ((_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, _GLF_IDENTITY((8), ((8)) - int(_GLF_ZERO(0.0, injectionSwitch.x))) | (8))), int(8)) : _GLF_FUZZED(-30872), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)))) : _GLF_FUZZED(_GLF_IDENTITY(-30872, (true ? -30872 : _GLF_FUZZED(-67667))))), ((true ? _GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), int(8)) : _GLF_FUZZED(_GLF_IDENTITY(-30872, (true ? -30872 : _GLF_FUZZED(-67667)))))) << 0) >> _GLF_IDENTITY(0, max(0, 0))), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), int(8)) : _GLF_FUZZED(-30872))))) >> 0) / (0 ^ 1)), (true ? _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(8), min(int(8), int(8))), int(8)), clamp(_GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), int(8)), _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (_GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), (_GLF_IDENTITY(false ? _GLF_FUZZED(12938) : ~ (int(8)), clamp(false ? _GLF_FUZZED(12938) : ~ (int(8)), false ? _GLF_FUZZED(12938) : ~ (int(8)), false ? _GLF_FUZZED(12938) : ~ (int(8))))))))) - 0)))) : _GLF_FUZZED(-30872), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(8, (8) | (8))), ~ (~ (int(_GLF_IDENTITY(8, (8) | (8)))))), int(8)) : _GLF_FUZZED(-30872), min(true ? _GLF_IDENTITY(int(8), int(_GLF_IDENTITY(8, (8) ^ 0))) : _GLF_FUZZED(-30872), true ? _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(_GLF_IDENTITY(8, (1 & 1) * (8))), _GLF_IDENTITY(clamp(int(8), int(8), int(8)), (clamp(int(8), int(8), int(8))) ^ 0))) : _GLF_FUZZED(-30872)))) / (0 ^ 1)) : _GLF_FUZZED(bitfieldReverse(_GLF_IDENTITY(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(5764) : _GLF_IDENTITY(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], max(ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0], ivec4(82386, _GLF_IDENTITY(11559, (11559) + 0), 76858, _GLF_IDENTITY(-44210, int(ivec4(-44210, 0, 0, 0))))[0]))))))))))) | (_GLF_IDENTITY(int(8), int(8)))))))))))) / 1); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(76340) : 1), max((false ? _GLF_FUZZED(76340) : 1), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(76340, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(76340, (_GLF_IDENTITY(_GLF_IDENTITY(76340, 0 ^ (76340)), (true ? _GLF_IDENTITY(76340, 0 ^ (76340)) : _GLF_FUZZED(_injected_loop_counter)))) | (76340))), _GLF_IDENTITY((false ? _GLF_FUZZED(-51279) : ~ (_GLF_IDENTITY(76340, (_GLF_IDENTITY(_GLF_IDENTITY(76340, 0 ^ (_GLF_IDENTITY(76340, (76340) | (76340)))), 0 ^ (76340))) | (76340)))), 0 ^ ((false ? _GLF_FUZZED(-51279) : ~ (_GLF_IDENTITY(76340, (_GLF_IDENTITY(_GLF_IDENTITY(76340, 0 ^ (_GLF_IDENTITY(76340, (76340) | (76340)))), 0 ^ (76340))) | (76340)))))))))) : 1), _GLF_IDENTITY(1 * ((_GLF_IDENTITY(false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << 0), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << 0), (false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << 0)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, _GLF_IDENTITY(1, (1) ^ 0), 1)))))))) << 0), (false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << _GLF_IDENTITY(0, 0 | (0)))) / 1))))))), (_GLF_IDENTITY(1 * ((false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))), (1 * ((false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)))) | (1 * ((false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)))))) - 0)))))) >> 0)), (_GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((false ? _GLF_FUZZED(76340) : 1), max((false ? _GLF_FUZZED(76340) : 1), _GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(76340, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(76340, (_GLF_IDENTITY(_GLF_IDENTITY(76340, 0 ^ (76340)), (true ? _GLF_IDENTITY(76340, 0 ^ (76340)) : _GLF_FUZZED(_injected_loop_counter)))) | (76340))), _GLF_IDENTITY((false ? _GLF_FUZZED(-51279) : ~ (_GLF_IDENTITY(76340, (_GLF_IDENTITY(_GLF_IDENTITY(76340, 0 ^ (_GLF_IDENTITY(76340, (76340) | (76340)))), 0 ^ (76340))) | (76340)))), 0 ^ ((false ? _GLF_FUZZED(-51279) : ~ (_GLF_IDENTITY(76340, (_GLF_IDENTITY(_GLF_IDENTITY(76340, 0 ^ (_GLF_IDENTITY(76340, (76340) | (76340)))), 0 ^ (76340))) | (76340)))))))))) : 1), _GLF_IDENTITY(1 * ((_GLF_IDENTITY(false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), clamp(_GLF_IDENTITY(1, (1) / 1), 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << 0), 0 + (_GLF_IDENTITY(false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << 0), (false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << 0)) | (_GLF_IDENTITY(false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, _GLF_IDENTITY(1, (1) ^ 0), 1)))))))) << 0), (false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), int(ivec4((_GLF_IDENTITY(1, clamp(1, 1, 1))), 1, 1, 1))))) << _GLF_IDENTITY(0, 0 | (0)))) / 1))))))), (_GLF_IDENTITY(1 * ((false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0))), (1 * ((false ? _GLF_FUZZED(_GLF_IDENTITY(76340, (_GLF_IDENTITY(76340, min(76340, 76340))) / int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)))) | (1 * ((false ? _GLF_FUZZED(76340) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, 1, 1))) << 0)))))) - 0)))))) >> 0))) && true); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(6.3)), float(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), bool(true))), injectionSwitch.y))); _injected_loop_counter ++)
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if((_GLF_IDENTITY(subgroup_local_id % 2, (true ? subgroup_local_id % 2 : _GLF_FUZZED(virtual_gid)))) == 0)
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                          {
                           do
                            {
                             do
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(_GLF_IDENTITY(bvec3(bool(bvec4(false, true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), (injectionSwitch.x < injectionSwitch.y)), true)), false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(bool(bvec2(true, false)), (_GLF_IDENTITY(bool(bvec2(true, false)), false || (bool(bvec2(true, _GLF_IDENTITY(false, true && (false))))))) || false)) || false))))), bvec3(bvec4(bvec3(bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false, true), true)))))));
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                          }
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                              {
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true))))) || false), false, false, false))))
                                  {
                                   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), (_GLF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 1u * (buf[virtual_gid])), buf[virtual_gid])) : _GLF_FUZZED(workgroup_id))), 4, 64, _GLF_IDENTITY(2, int(ivec2(2, 1))));
                                  }
                                 else
                                  {
                                  }
                                }
                               else
                                {
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                        }
                       else
                        {
                         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false), ! _GLF_IDENTITY((! (_GLF_WRAPPED_IF_TRUE(true))), ! (! ((! (_GLF_WRAPPED_IF_TRUE(true))))))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                {
                                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                  {
                                   do
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                      {
                                       if(_GLF_WRAPPED_IF_TRUE(true))
                                        {
                                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                                          {
                                          }
                                         else
                                          {
                                           subgroupAll(false);
                                          }
                                        }
                                       else
                                        {
                                        }
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))));
                                  }
                                }
                              }
                             else
                              {
                              }
                            }
                           else
                            {
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                          {
                          }
                         else
                          {
                           do
                            {
                             do
                              {
                               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), min(int(7), int(7))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), min(int(7), int(7)))))), (bool(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), min(int(7), int(7))))))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), min(int(7), int(7)))))), (bool(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), min(int(7), int(7))))))) && true)), (bool(_GLF_IDENTITY(bool(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), min(int(7), int(7)))))), (bool(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) | (7))), min(int(7), int(7))))))) && true))) && true)))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0), ~ (~ (_injected_loop_counter --))))
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                                  {
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bool(true)))))
                                      {
                                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, int(int(_injected_loop_counter)))) | 0) < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                                        {
                                         do
                                          {
                                           if(_GLF_WRAPPED_IF_FALSE(false))
                                            {
                                            }
                                           else
                                            {
                                             _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(clamp(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 ^ (_GLF_IDENTITY(64, (64) | 0))), 2), atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, _GLF_IDENTITY((2) * 1, ((2) * 1) / 1)), 2))) | (2)))), (clamp(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, 2))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))), atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(2, 2)))))), atomicLoad(buf[virtual_gid], 4, 64, 2))) | 0u)), (false ? _GLF_FUZZED(workgroup_id) : read = atomicLoad(buf[virtual_gid], 4, 64, 2)));
                                            }
                                          }
                                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(false));
                                  }
                                }
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                      }
                     else
                      {
                      }
                    }
                   else
                    {
                    }
                  }
                }
              }
             else
              {
              }
            }
          }
        }
      }
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(_GLF_IDENTITY(true, (true) || false))) || false)))), ! (! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))), ! (_GLF_IDENTITY(! (bool(true)), true && (! (bool(true))))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! _GLF_IDENTITY((_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)) || false, true && (_GLF_IDENTITY((bool(true)) || false, true && ((bool(true)) || false)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), true, false), false))))) && true))), true && ((_GLF_IDENTITY(bool(true), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), _GLF_IDENTITY((bool(true)) || false, true && (_GLF_IDENTITY((bool(true)) || false, true && ((bool(true)) || false)))))))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), true, false), false)))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), (bool(true)) || false)))), true, false), false))))) && true)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (true)), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), ! (! (bool(true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true)))))))))), (bool(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec3(_GLF_IDENTITY(true, false || (true)), true, true))), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, true && (false)))))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x)) < injectionSwitch.y)), true))))), true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (bool(true))), bool(bvec2(! (! (bool(true))), true))))), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), false || (bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-9770.8601)), bool(false))))), true)))))), true && ((_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (bool(true))), bool(bvec2(! (! (bool(true))), true))))), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec3(bvec3(true, true, false)))))))))))))), (injectionSwitch.x < injectionSwitch.y)), true))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false), ! (! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)))))))))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(radians(injectionSwitch)))).x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false || (true), ! (! (false || (_GLF_IDENTITY(true, (true) || false)))))), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(true)), ! (_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(true))))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true))))))), false)))), true)))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true))))))), false)))), true))))))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true)), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((! (bool(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && true)))), _GLF_IDENTITY(true, false || (true)), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(true)), ! (_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(true))))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (true)), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))), false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))))))))))) || false), (bool(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED(7392.9525)), bool(false))), (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7392.9525)), bool(false))), (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x)) / exp(0.0))) < injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false), (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false))))), false, true)))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(_GLF_IDENTITY(true, (true) || false))) || false)))), ! (! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) || false)), false, true), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))), (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), ! _GLF_IDENTITY((! (bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true)))))))))), (bool(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x)) < injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (bool(true))), bool(bvec2(! (! (bool(true))), true))))), _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-425.569), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-97.49)), bvec2(true, false))).y)), true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)), true && (! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true))))))) || false)))))))))))), true && (_GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)), true && (! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)))))))))))), true && ((! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), (! (_GLF_IDENTITY(true, (true) && true))) || false), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)), false || (! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)))), true && (! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)))))))))))))))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(14.66))))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), ! _GLF_IDENTITY((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false || (true), ! (! (false || (true))))), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(true)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(true)))))), (_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(true))))))) || false)))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true))))))), false)))), true)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true)), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(true)), ! (_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))))))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (true)), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))), false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))))))))))) || false), (bool(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7392.9525)), bool(false))), (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7392.9525)), bool(false))), (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x)) / exp(0.0))) < injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false))))), false, true)))), true && (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), (bool(_GLF_IDENTITY(true, (true) || false))) || false)))), ! (! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) && true)), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), ! _GLF_IDENTITY((! (bool(true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (bool(true))), ! (_GLF_IDENTITY(! ((! (bool(true)))), ! (_GLF_IDENTITY(! (! ((! (bool(true))))), ! (! (! (! ((! (bool(true)))))))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bool(false))) || (true)), true, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bvec3(bvec3(bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), _GLF_IDENTITY(bvec3(bvec4(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || _GLF_IDENTITY((true), true && ((true)))), bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))), true))))))))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true)))))))))), (bool(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true))))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x)) < injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), ! (! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false))))), bool(bvec2(! (! (bool(true))), true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec2(injectionSwitch.x < injectionSwitch.y, false)))))) && true))), true))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), true && (_GLF_IDENTITY((true), bool(bvec4((true), false, true, true))))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) || false) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false), ! (! (_GLF_IDENTITY(false || (! (_GLF_IDENTITY(true, (true) && true))), (false || (! (_GLF_IDENTITY(true, (true) && true)))) || false)))))))))))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))))), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), ! _GLF_IDENTITY((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))) || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(false || (true), ! (! (false || (true))))), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (true)))), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(true)), false || ((bool(true))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(true)), ! (_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(true))))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)), true))))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (! (bool(true))) || false))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)), bvec3(bvec4(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)), true))))), true)), false))))))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), ! (! (_GLF_IDENTITY(false || (true), false || (false || (true))))))), false)))), true)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (true)), _GLF_IDENTITY(false, (false) || false)), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! _GLF_IDENTITY((bool(true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(true))))))), ((_GLF_IDENTITY(! ((bool(true))), ! (! (! ((bool(true)))))))) && true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), false || (true)), false)))), true)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))))), false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), false))), true))))))))))) || false), (bool(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec4(_GLF_IDENTITY(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false), bvec3(bvec3(bvec3((! (bool(true))), _GLF_IDENTITY(true, false || (true)), false)))), true))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y)))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7392.9525)), bool(false))), (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x), (min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(7392.9525)), bool(_GLF_IDENTITY(false, ! (! (false)))))), (true ? injectionSwitch.x : _GLF_FUZZED(-357.493))), injectionSwitch.x)) / exp(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-29.12)), float(0.0), bool(true)))))) < injectionSwitch.y)), true))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(true))), false || ((! (bool(true))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), false))))), false, true)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(true)), false || (! (bool(true))))), false || ((_GLF_IDENTITY(! (bool(true)), false || (! (bool(true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (! (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) || false)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(_GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))), true)))), bool(bvec3(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true)))) || false)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), (_GLF_IDENTITY(! (bool(true)), bool(bvec2(! (bool(true)), true)))) && true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))), true)))), bool(bvec3(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true)))) || false)))))), (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), ! (! (bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))) && true), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, true, true)), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, true, true)))))))), true)))), bool(bvec3(bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true)))) || false))))))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(! (! (bool(true))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), ((bool(true))) || false), ! (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false)))))) && true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(true)), bool(bool(! (bool(true)))))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true), false || (_GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(true))), true && ((! (bool(true))))))))), _GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(! (! (bool(true))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), ((bool(true))) || false), ! (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false)))))) && true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, ! (! (true)))), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true), false || (_GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(! (! (bool(true))), (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(true)), ((bool(true))) || false), ! (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false)))))) && true))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(_GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true), false || (_GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), _GLF_IDENTITY(! (! (bool(true))), (! (! _GLF_IDENTITY((bool(true)), ((bool(true))) || false))) && true))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)) || false)))), true && (_GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! (! (bool(true)))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(true), ! (! (bool(true))))), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true), bvec2(bvec3(bvec2((_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true), false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bool(bool(bvec4(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(fract(-0.5)) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(1.0), 0.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 1.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0))))), clamp(false ? _GLF_FUZZED(fract(-0.5)) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(1.0), 0.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 1.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0))))), false ? _GLF_FUZZED(fract(-0.5)) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(1.0), 0.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 1.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0))))), false ? _GLF_FUZZED(fract(-0.5)) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, abs(1.0), 0.0)), clamp(float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).y, 1.0, 0.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) / 1.0), abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0)), float(mat3x4(injectionSwitch.y, 1.0, 0.0, log(1.0), 1.0, 0.0, abs(0.0), 1.0, 1.0, 1.0, abs(1.0), 0.0))))))))))), true)))))))))))) || false))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 0.0, 1.0))), injectionSwitch))[0]), _GLF_IDENTITY(float(_GLF_FUZZED(9860.0245)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(9860.0245)), min(float(_GLF_FUZZED(9860.0245)), float(_GLF_FUZZED(9860.0245)))), float(_GLF_FUZZED(9860.0245)), float(_GLF_FUZZED(9860.0245)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, cos(0.0), 0.0)))) / vec2(1.0, 1.0)))).x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false)), (bool(bvec2(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), false))) && true)))))), ! (! (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(! (! (bool(false))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec2(bool(false), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(false), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(bvec2(bool(false), true))), _GLF_IDENTITY(bool(bvec2(! (bool(bvec2(bool(false), true))), true)), false || (bool(bvec2(! (bool(bvec2(bool(false), true))), true)))))), true && (! (_GLF_IDENTITY(! (bool(bvec2(bool(false), true))), _GLF_IDENTITY(bool(bvec2(! (bool(bvec2(bool(false), true))), true)), false || (bool(bvec2(! (bool(bvec2(bool(false), true))), true)))))))))))))))))), bool(bvec4(! (! (! (_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), ! (! (false || (_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))))))))), _GLF_IDENTITY(true, false || (true)), true, true)))))))))))), _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), true)))))), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0))).y)), bool(bvec2(! ((injectionSwitch.x < injectionSwitch.y)), true))))))) && true) && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))), ! (_GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))))), ! (! (! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, ! (! (false))))))))))))))))))))))))), ! (! (_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(false), ! (! (bool(false)))), (_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true), false, false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(false), ! (! (_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true), false, false)))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), (! (bool(false))) && true)))), true), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))), false)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true), bvec2(bvec4(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), true), false, false)))))))))))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))))))))), ! (! (_GLF_IDENTITY(bool(false), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))), bool(bvec2((_GLF_IDENTITY(bool(false), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))), (false) && true)))))), true)))))))))))))))), injectionSwitch[1])).y))))
        {
         for(int _injected_loop_counter = ((0 >> _GLF_IDENTITY(int(5), int(5))) | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, max(1, 1)), 1), (max(_GLF_IDENTITY(1, max(1, 1)), 1)) | int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter ++)
          {
           do
            {
             for(int _injected_loop_counter = ((0 << _GLF_IDENTITY(int(2), int(2))) ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), (true ? 0 : _GLF_FUZZED(-79692))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, -72667)) : 7)))))), int(7))) >> 0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) >> _GLF_IDENTITY(int(7), int(7))), (_GLF_IDENTITY(((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> 0, ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, -72667)) : 7)))))), int(7))) >> 0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) >> _GLF_IDENTITY(int(7), int(7))), 1 * _GLF_IDENTITY((((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, -72667)) : 7)))))), (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, -72667)) : 7))))))) | 0), int(7))) >> 0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) >> _GLF_IDENTITY(int(7), int(7)))), ((((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> 0, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, -72667)) : 7)))))), (int(_GLF_IDENTITY(7, ~ (~ (_GLF_IDENTITY(7, (false ? _GLF_FUZZED(atomicOr(_injected_loop_counter, -72667)) : 7))))))) | 0), int(7))) >> 0) ^ (0 << _GLF_IDENTITY(int(8), int(8)))))) >> _GLF_IDENTITY(int(7), int(7))))) - 0))) + 0)); _injected_loop_counter ++)
                      {
                       subgroupBarrier();
                      }
                    }
                  }
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          }
        }
       else
        {
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
          }
         else
          {
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)));
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
