#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   switch(_GLF_SWITCH(0))
    {
     case 33:
     if(_GLF_DEAD(false))
      return;
     ;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     case 0:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     case 71:
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     break;
     case 75:
     mat3x4(mat4x2(0.3, -5.0, -0.6, 181.077, -7.6, 0.3, -3349.8757, -1.4));
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     case 27:
     for(     ivec2(-68954, 78194);
 false; -352.235)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        break;
       vec4(825.051, 920.452, 258.424, 0.9);
       while(false)
        {
         -770.069;
         while((vec3(-7.9, -6.5, -4953.7834) != vec3(-2.6, 821.694, 8.8)))
          {
           do
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               642.593;
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > ((1 ^ 0) ^ 1)); _injected_loop_counter --)
            {
             log2(fract(vec3(-2.5, -9.7, 846.545)));
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         {
         }
         for(         bvec2(true, true);
 (mat3x2(1.5, -8.1, 7.1, -2581.8899, -8.8, 7354.5651) != mat3x2(5.2, -30.14, 2.9, -3.2, -649.875, -66.02)); uvec3(101596u, 76119u, 160799u))
          {
           uvec3(28738u, 160864u, 150955u);
           uvec4 _GLF_SWITCH_4_0v;
           false;
           ivec4(-31650, 11056, -59474, -69274);
           bvec2(false, false);
           mat2x4(mat2x3(-5.7, 0.5, -422.231, -3503.1851, 8564.8453, 830.355));
           do
            {
             bvec3(true, true, false);
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           ivec3(69290, 56038, 55668);
           uvec4(uvec2(58067u, 172708u), uvec2(171636u, 106179u));
           if(_GLF_DEAD(false))
            barrier();
          }
         mat4x3 _GLF_SWITCH_4_1v;
         {
          float _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
          mat2 _GLF_SWITCH_4_5v;
          do
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
           }
          while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
          mat3 _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v;
          ivec4(-94447, 39869, 66628, 55296);
         }
         ivec2 _GLF_SWITCH_4_8v, _GLF_SWITCH_4_9v;
        }
       uvec4 _GLF_SWITCH_4_10v;
      }
     default:
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH(0))
    {
     case 73:
     for(bvec2 _GLF_SWITCH_7_0v[67], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[34]; true; bitfieldInsert(uvec4(6921u, 163957u, 143834u, 154482u), uvec4(182213u, 95439u, 170575u, 122571u), -80890, 1639))
      {
       for(       ldexp(vec4(72.52, -181.360, 9.4, 6284.9402), ivec4(-43953, 36150, -80127, -95555));
 true; atanh(vec3(-9773.5569, 2.7, -3.1)))
        {
         bool _GLF_SWITCH_7_3v;
         for(ivec4 _GLF_SWITCH_7_4v; (mat2(-7.4, -824.566, 121.113, -1.6) != mat2(203.326, -1.2, 2.4, -107.818)); mat4x2(mat3x2(-5.3, 0.3, 2.5, -8773.6546, -1.7, -0.4)))
          {
           uvec2(196577u, 29792u);
          }
         ;
         while((ivec3(58306, -370, -36321) != ivec3(54308, -9645, -47412)))
          {
           ivec4(-36816, 18059, -23834, 48992);
           (486.334 + mat3x4(-4.7, 21.37, 674.479, -3.5, -130.733, -1.2, -2.0, -851.746, 83.38, -7.1, 948.506, -3875.6557));
           _GLF_SWITCH_7_1v;
           mat4x3 _GLF_SWITCH_7_5v;
           bvec4(false, true, false, true);
           uvec4(165477u, 37280u, 124520u, 26229u);
           ivec3 _GLF_SWITCH_7_6v;
           uint _GLF_SWITCH_7_7v, _GLF_SWITCH_7_8v;
          }
         bvec4(false, true, false, true);
         vec2(-2.8, 29.11);
         (abs(vec2(5.9, 14.67)) , ivec3(28862, 86644, 17237));
         bvec4(true, false, false, true);
        }
       for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if((outerProduct(vec3(-48.60, 2.2, -11.29), vec4(7.1, 2854.0400, 358.705, -95.88)) != mat4x3(77.00, 557.053, -38.81, -1.1, 288.263, 32.54, -11.35, -846.613, -50.18, 2649.0209, -6.5, -232.925)))
          {
           {
            mat4x3 _GLF_SWITCH_7_9v, _GLF_SWITCH_7_10v, _GLF_SWITCH_7_11v;
            38.45;
            abs(ivec2(-8433, 75675).g);
            mat2x3 _GLF_SWITCH_7_12v;
            smoothstep(7139.0230, 0.1, injectionSwitch).stst;
            ;
            ivec3(-86635, -3327, 61992);
            bvec3 _GLF_SWITCH_7_13v, _GLF_SWITCH_7_14v;
            mat2x4(mat3(9.2, -3164.0083, 423.407, -3824.0695, 916.256, 1015.6708, 52.30, -882.728, -5.6));
           }
           {
            uvec2(80839u, 61090u);
            ivec3 _GLF_SWITCH_7_15v, _GLF_SWITCH_7_16v[5];
            mat3x4 _GLF_SWITCH_7_17v, _GLF_SWITCH_7_18v;
            uvec3(11522u, 10840u, 178928u);
            -6.8;
            vec3 _GLF_SWITCH_7_19v, _GLF_SWITCH_7_20v[50], _GLF_SWITCH_7_21v;
            (mat2x4(461.827, -22.92, 2941.9715, -3.8, 7.8, 5.0, 0.3, 52.35) , vec3(-7910.9932, -8495.1703, -915.921));
            ;
           }
           mat4x3(8.4, -7.0, 2.4, -5.5, 85.40, 1.1, -5.6, 2.9, -9.0, -80.83, 8891.0045, -337.019);
           mat2(3.6, -31.47, -63.17, -30.10);
           uvec3 _GLF_SWITCH_7_22v, _GLF_SWITCH_7_23v;
           (mat4x2(-6505.8105, -4.5, -6.5, 7.1, 297.187, -7.0, 9.4, -203.580) / -7.2);
           mat3(mat2(6.6, 5.8, 4.3, -6950.1412));
          }
        }
       ivec3(58901, -82303, 91566);
      }
     case 84:
     if(((mat3(-12.16, 11.51, 10.07, 6853.9908, 43.41, 2338.6635, -4424.7110, 0.1, 11.98) * mat4x3(-80.57, -3704.6162, 694.670, -9.9, 4982.1131, 8.1, -50.67, 6.1, 6165.5231, 0.6, -0.0, 9.2)) != (38.62 - mat4x3(-2.0, 6.6, -5863.9844, 6.2, 70.17, -66.42, 7256.0542, 515.363, -9.8, -1.6, -8385.1784, -7992.6114))))
      {
       ;
       ;
       transpose(mat3x2(0.9, 6.3, -20.21, 5.7, 1.1, 1288.6296));
       mat4x3 _GLF_SWITCH_7_24v, _GLF_SWITCH_7_25v[35], _GLF_SWITCH_7_26v;
       bool _GLF_SWITCH_7_27v;
      }
     case 0:
     case 10:
     case 21:
     case 60:
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 0:
       case 31:
       case 87:
       case 92:
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
          }
        }
       case 36:
       case 18:
       case 33:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       case 86:
       case 61:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       break;
       default:
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       1;
      }
     break;
     default:
     1;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = (int(103567u) & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 0:
         case 77:
         if(_GLF_DEAD(false))
          barrier();
         case 41:
         case 47:
         case 33:
         return;
         case 18:
         case 92:
         case 12:
         case 4:
         if(_GLF_DEAD(false))
          barrier();
         break;
         case 87:
         (false ? mat4x2(-721.193, 81.34, 9196.1872, 3.7, 542.379, -133.936, 4.6, 63.16) : mat4x2(-31.53, 11.29, 594.127, 9.0, -40.88, -9280.0928, 4722.0229, -0.3));
         case 38:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(false)
            {
             bvec2(true, false).xx;
            }
           else
            {
             (_injected_loop_counter & 88614);
            }
          }
         else
          {
          }
         default:
         1;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     switch(_GLF_SWITCH(0))
      {
       case 28:
       vec4 _GLF_SWITCH_7_0v;
       case 77:
       while((true))
        {
         ;
         for(         (-20328 & ivec2(84170, 83573));
 (mat4x2(-94.38, -4.1, -8.6, -259.260, -2904.2207, -764.253, 8.1, 9.3) == mat4x2(-70.63, 1.0, -476.514, -2362.5510, -550.351, -3.1, 6768.0044, 75.03)); ivec2(-72977, 28527))
          {
           mat3x4(mat4x2(-8.1, 2170.4145, 68.60, 938.990, -29.07, 65.17, 7.4, -1411.7883));
           if(false)
            {
             ;
             ;
             mat3(-72.85, 4044.6223, -1356.4923, -15.99, -626.988, -4.5, -190.426, 3.8, -5540.7837);
             bvec3((bvec4(true, false, false, false) != bvec4(false, false, true, true)), false, true);
             ;
            }
           ivec4(-33940, 47325, -2919, 52103);
           if(true)
            {
             reflect(injectionSwitch, vec2(556.603, -583.039));
             ;
             ;
             ((uvec4(122356u, 4920u, 165438u, 149746u) & next_virtual_gid) >> workgroup_size);
             uvec4(162255u, 175391u, 189356u, 36400u);
             vec2 _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
             do
              {
               (next_virtual_gid | (next_virtual_gid - uvec2(150716u, 190575u)));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             -8.6;
            }
           else
            {
             ivec2 _GLF_SWITCH_7_3v;
             bvec3(false, false, false);
             vec3 _GLF_SWITCH_7_4v, _GLF_SWITCH_7_5v, _GLF_SWITCH_7_6v;
             refract(_GLF_SWITCH_7_4v, _GLF_SWITCH_7_6v, 1348.0147);
             uint _GLF_SWITCH_7_7v;
             _GLF_SWITCH_7_6v;
            }
           (-9.6 / (mat2(-12.70, 1.1, -4.4, 0.5) * mat4x2(-4784.4339, -3.2, 6.3, -2.8, -9.8, 2234.8741, -33.14, 84.57)));
           ;
           while(true)
            {
             mat4x3 _GLF_SWITCH_7_8v[56], _GLF_SWITCH_7_9v[91];
             (injectionSwitch / -0.1);
             injectionSwitch;
             mat2x4(mat4x3(-44.90, -1.9, 735.584, -5.8, -1.1, -2.3, 2.1, 805.877, 302.967, -1.1, 47.67, -964.967));
             uvec2(165791u, 17223u);
             (4.5 + mat2x3(8746.0750, 7180.8194, 56.18, -8537.5904, -0.5, -82.37));
            }
          }
        }
       case 0:
       case 48:
       case 49:
       if(_GLF_DEAD(false))
        barrier();
       case 58:
       case 50:
       case 40:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 3:
       if(_GLF_DEAD(false))
        return;
       break;
       case 37:
       ivec4(22299, 14015, -44468, -23975);
       default:
       1;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   switch(_GLF_SWITCH(0))
    {
     case 53:
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       switch(_GLF_SWITCH(0))
        {
         case 4:
         ((- mat2x4(-3.3, -6.2, 48.85, -169.620, -0.0, -2788.8439, -7082.1431, -8996.9053)) , bvec4(true, true, true, false));
         case 0:
         case 82:
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), min(int(1), int(1))))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
          {
           switch(_GLF_SWITCH(0))
            {
             case 14:
             uvec3 _GLF_SWITCH_7_0v[49], _GLF_SWITCH_7_1v[8], _GLF_SWITCH_7_2v[56];
             case 0:
             case 76:
             case 51:
             case 1:
             mat4x2(injectionSwitch, injectionSwitch, vec2(537.271), mod(injectionSwitch, vec2(-37.07, -2335.2306)));
             break;
             case 20:
             mat2(5490.1464, 8.1, 4867.1361, -1.9);
             default:
             1;
            }
          }
         if(_GLF_DEAD(false))
          return;
         break;
         default:
         1;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 57:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             while(true)
              {
              }
            }
           else
            {
            }
           case 0:
           case 20:
           case 23:
           case 82:
           case 63:
           case 37:
           case 17:
           case 83:
           if(_GLF_DEAD(false))
            barrier();
           break;
           case 60:
           (ivec4(-50259, 26286, -69871, -4861) % ivec4(-46039, 46161, 92412, -80294));
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     case 67:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     bvec3(true, true, true);
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(int(2), 0 + (int(2))), 1, (0 >> _GLF_IDENTITY(int(3), int(3))), 1)), (int(ivec4(_GLF_IDENTITY(int(2), 0 + (int(2))), 1, (0 >> _GLF_IDENTITY(int(3), int(3))), 1))) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           barrier();
          }
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     case 87:
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 11:
     case 78:
     case 99:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 73:
     atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
     break;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     case 17:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     mat4x3(5251.4164, -9632.9706, 52.42, -0.6, -8.0, -8347.7869, 830.965, 69.77, -4213.3347, -3.7, -3.5, 1.9);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 66:
                 while(false)
                  {
                   mat2x3(1.5, -5683.2017, -63.01, 1.2, -3.3, 5.5);
                   uvec2(52210u, 142272u);
                   mat4x2(-551.633, 89.46, 87.62, 274.034, -4887.1340, 63.01, -429.153, 4.3);
                  }
                 case 35:
                 if((ivec2(-86563, 96031) != ivec2(-84390, 49975)))
                  {
                   (mat3x4(29.59, -417.219, -7326.9569, 9467.5616, -5.7, 1657.0756, 904.186, 49.01, -818.727, -2910.6056, -5.8, 725.260) - 551.099);
                   mat2x4(-621.365, -3.9, 21.49, -9.7, -76.88, 7.2, 31.19, 1.1);
                   ivec4(-68919, -53653, 95327, -76927);
                   mat3x4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[86], _GLF_SWITCH_6_2v;
                   ;
                  }
                 case 0:
                 case 65:
                 case 8:
                 case 47:
                 case 37:
                 case 62:
                 case 52:
                 case 98:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                 break;
                 case 19:
                 {
                  radians(vec4(-451.817, 1420.6120, -3.1, 641.880));
                 }
                 default:
                 1;
                }
              }
             else
              {
              }
             barrier();
            }
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     default:
     1;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if((subgroup_local_id % 2) == 0)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (0) | (0 ^ 0))); _injected_loop_counter --)
      {
       switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
        {
         case 43:
         subgroup_id;
         case 0:
         case 53:
         if(_GLF_DEAD(false))
          continue;
         switch(_GLF_SWITCH(0))
          {
           case 52:
           if(_GLF_DEAD(false))
            barrier();
           {
            equal(bvec2(true, false), bvec2(false, true));
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
               {
                case 5:
                mat3x2(-1.5, -6.6, 787.807, 33.15, 62.28, 5.1);
                case 0:
                case 36:
                case 61:
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                 barrier();
                case 88:
                case 90:
                case 38:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                case 22:
                barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                break;
                default:
                1;
               }
             }
            for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      barrier();
                     }
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                       barrier();
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 42:
                          bvec3(true, true, false);
                          case 0:
                          if(_GLF_DEAD(false))
                           barrier();
                          break;
                          case 22:
                          bvec4 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                          default:
                          1;
                         }
                       }
                      else
                       {
                       }
                     }
                    else
                     {
                      return;
                     }
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
                return;
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                 {
                  do
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      switch(_GLF_SWITCH(0))
                       {
                        case 27:
                        ;
                        case 0:
                        if(_GLF_DEAD(false))
                         barrier();
                        break;
                        case 12:
                        matrixCompMult(mat4(mat2x4(26.19, -6.0, 100.470, -4132.8282, -6.0, 7.3, -9.7, 110.555)), mat4(mat2x4(8956.5504, 1.1, 4.4, -3671.1569, 577.022, -5.8, 1.4, 3.3)));
                        if(_GLF_DEAD(false))
                         barrier();
                        default:
                        if(_GLF_DEAD(false))
                         return;
                        1;
                       }
                     }
                    else
                     {
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 88:
                    min(max(uvec2(156273u, 19798u), read), uvec2(118968u, 123424u));
                    case 96:
                    mat4 _GLF_SWITCH_7_0v[17];
                    case 0:
                    case 4:
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     barrier();
                    case 12:
                    case 79:
                    barrier();
                    break;
                    case 43:
                    bvec4 _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[69];
                    default:
                    1;
                   }
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     barrier();
                    barrier();
                   }
                 }
                barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              for(int _injected_loop_counter = _GLF_IDENTITY((1 | 1), max((1 | 1), (1 | 1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
               {
                ;
               }
              sqrt(3.3);
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  continue;
                 }
                return;
               }
              if(_GLF_DEAD(false))
               barrier();
              for(              mat3x4(76.37, -9.7, -9.9, -3.1, -71.57, -3.3, -3.2, -9363.5332, -29.54, -3081.1585, 5749.3663, 6.5);
 true; mat2(-90.02, 4.0, 64.96, -8372.8834))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                 }
                else
                 {
                 }
                uvec3 _GLF_SWITCH_1_0v[7], _GLF_SWITCH_1_1v[53];
                ;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
              if(true)
               {
                switch(_GLF_SWITCH((0 & 81348)))
                 {
                  case 67:
                  mat3x2(-9.7, 2.8, -946.677, injectionSwitch[0], -856.844, 5842.7757);
                  case 62:
                  mat2x3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[31], _GLF_SWITCH_6_2v;
                  case 0:
                  case 58:
                  case 49:
                  case 6:
                  switch(_GLF_SWITCH(0))
                   {
                    case 14:
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       return;
                      return;
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    float _GLF_SWITCH_2_0v[22];
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    case 0:
                    uvec2 _GLF_SWITCH_1_2v[59], _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[35];
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      barrier();
                     }
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                       {
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(int(2), int(2)))))); _injected_loop_counter --)
                         {
                          barrier();
                         }
                       }
                     }
                    case 70:
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      break;
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    case 66:
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     return;
                    ivec4 _GLF_SWITCH_1_5v, _GLF_SWITCH_1_6v;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       return;
                      barrier();
                     }
                    if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
                     barrier();
                    case 89:
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
                       {
                        case 21:
                        (subgroup_size / subgroup_id);
                        case 0:
                        case 7:
                        case 37:
                        case 66:
                        if(_GLF_DEAD(false))
                         barrier();
                        case 61:
                        case 39:
                        case 54:
                        barrier();
                        case 83:
                        case 41:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                         }
                        else
                         {
                         }
                        break;
                        case 11:
                        mat4x3 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v[16];
                        case 65:
                        vec3(-93.14, -1723.6143, -12.69).pss;
                        default:
                        1;
                       }
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    else
                     {
                     }
                    (ivec2(5251, 31710));
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    case 51:
                    bvec4(false, false, false, false);
                    if(_GLF_DEAD(false))
                     barrier();
                    case 82:
                    case 26:
                    vec4(8.5, 4.1, -43.60, 7.2);
                    case 54:
                    if(_GLF_DEAD(false))
                     return;
                    mat2x4(2.3, 53.71, -720.802, -1.3, -173.431, 2427.9161, -9.0, 72.20);
                    break;
                    default:
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
                     barrier();
                    if(_GLF_DEAD(false))
                     barrier();
                    1;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                       {
                        case 21:
                        ;
                        case 0:
                        case 55:
                        case 5:
                        case 96:
                        if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
                         barrier();
                        case 93:
                        case 32:
                        case 98:
                        return;
                        break;
                        default:
                        1;
                       }
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
                       {
                        switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), int(ivec2(int(0), 0)))))))
                         {
                          case 83:
                          vec3 _GLF_SWITCH_7_0v;
                          case 78:
                          bvec2(false, true);
                          case 0:
                          case 96:
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
                           {
                            barrier();
                           }
                          break;
                          default:
                          1;
                         }
                       }
                      barrier();
                     }
                   }
                  break;
                  case 9:
                  mat4(0.4, 8.2, -15.61, -897.387, -9.8, -8.7, -6.2, -5.9, -8.3, 195.044, 782.757, 9.3, -9.4, 3.8, 1096.9822, 3327.4144);
                  default:
                  1;
                 }
               }
              else
               {
                ;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  do
                   {
                    barrier();
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 62:
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(false))
                     break;
                    workgroup_base;
                    case 0:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                     continue;
                    case 39:
                    case 88:
                    case 22:
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       barrier();
                      return;
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                     barrier();
                    case 10:
                    if(_GLF_DEAD(false))
                     break;
                    do
                     {
                      mat4x3(-9.3, -4081.8185, 7.7, -1027.0650, -7.1, -717.726, 5.6, 12.41, 0.1, -70.91, -4.5, -5.7);
                     }
                    while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      continue;
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                     }
                    break;
                    case 91:
                    do
                     {
                      (ivec3(66159, 1810, 86242));
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 | 1)); _injected_loop_counter ++)
                           {
                            barrier();
                           }
                         }
                       }
                      barrier();
                     }
                    if(_GLF_DEAD(false))
                     barrier();
                    default:
                    1;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_DEAD(false))
                           barrier();
                          barrier();
                         }
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           barrier();
                          barrier();
                         }
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                           {
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             barrier();
                           }
                          if(_GLF_DEAD(false))
                           continue;
                          barrier();
                         }
                        case 93:
                        if(_GLF_DEAD(false))
                         barrier();
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         barrier();
                        case 26:
                        case 15:
                        case 14:
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          barrier();
                         }
                        else
                         {
                         }
                        break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          if(_GLF_DEAD(false))
                           return;
                          barrier();
                         }
                        case 98:
                        bvec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v[87];
                        case 92:
                        mat4x3(565.202, 0.0, -5627.2593, 7.4, 738.065, 16.55, -3.3, 1.9, 9.1, -5.0, -9.5, 61.65);
                        default:
                        1;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(false))
                       barrier();
                     }
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    barrier();
                   }
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   return;
                 }
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH((0 ^ 0)))
                   {
                    case 79:
                    mat2x3 _GLF_SWITCH_7_0v[20], _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[17];
                    case 97:
                    mat2x4(-5716.6837, -293.153, 4177.2228, 5.0, 5209.7194, -1.1, -3.3, 832.631);
                    case 0:
                    if(_GLF_DEAD(false))
                     continue;
                    barrier();
                    break;
                    case 67:
                    ;
                    case 76:
                    vec3(2.1, -9.3, 3.8);
                    default:
                    1;
                   }
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   continue;
                  return;
                  if(_GLF_DEAD(false))
                   continue;
                 }
                mat2 _GLF_SWITCH_1_7v, _GLF_SWITCH_1_8v, _GLF_SWITCH_1_9v;
                do
                 {
                  ivec2(98472, 99590);
                 }
                while(_GLF_WRAPPED_LOOP(false));
                ;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                   barrier();
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        barrier();
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                   }
                  else
                   {
                   }
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 73:
                      case 59:
                      case 95:
                      case 27:
                      do
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          case 53:
                          case 70:
                          case 30:
                          case 76:
                          case 1:
                          case 88:
                          barrier();
                          break;
                          case 21:
                          bvec2 _GLF_SWITCH_7_0v[70], _GLF_SWITCH_7_1v[40], _GLF_SWITCH_7_2v[17];
                          case 92:
                          ivec3(82856, 342, -69341);
                          default:
                          1;
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      break;
                      case 4:
                      (ivec2(-35471, -30243) * bitfieldReverse(ivec2(-72871, -67399)));
                      default:
                      1;
                     }
                   }
                 }
                if(_GLF_DEAD(false))
                 barrier();
               }
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 0:
                 case 96:
                 case 98:
                 case 76:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 case 13:
                 case 11:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   barrier();
                  }
                 case 74:
                 case 15:
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        barrier();
                       if(_GLF_DEAD(false))
                        break;
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   ivec4 _GLF_SWITCH_1_10v, _GLF_SWITCH_1_11v[32];
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   vec3 _GLF_SWITCH_1_12v, _GLF_SWITCH_1_13v;
                   mat2x3 _GLF_SWITCH_1_14v, _GLF_SWITCH_1_15v[24], _GLF_SWITCH_1_16v[17];
                   bitfieldReverse(ivec3(92171, -21364, -12467));
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 31:
                       -5257.3265;
                       case 0:
                       case 65:
                       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
                        {
                         case 70:
                         if(_GLF_DEAD(false))
                          barrier();
                         mat3x4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                         case 0:
                         case 87:
                         case 68:
                         if(_GLF_DEAD(false))
                          break;
                         case 8:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                           barrier();
                          }
                         case 74:
                         case 16:
                         case 76:
                         case 49:
                         case 19:
                         if(_GLF_DEAD(false))
                          continue;
                         case 37:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         if(_GLF_DEAD(false))
                          barrier();
                         ;
                         break;
                         case 45:
                         (ivec4(-83117, 69657, -52639, -22350) * bitfieldExtract(_injected_loop_counter, 46900, _injected_loop_counter));
                         if(_GLF_DEAD(false))
                          barrier();
                         default:
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(true))
                            {
                             switch(_GLF_SWITCH(0))
                              {
                               case 54:
                               ;
                               case 77:
                               ;
                               case 0:
                               barrier();
                               break;
                               default:
                               1;
                              }
                            }
                           else
                            {
                            }
                          }
                         1;
                        }
                       case 22:
                       if(_GLF_DEAD(false))
                        barrier();
                       case 68:
                       if(_GLF_DEAD(false))
                        return;
                       break;
                       case 3:
                       mix(injectionSwitch, vec2(-4512.5994, -1094.4278), bvec2(true, true));
                       default:
                       1;
                      }
                    }
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 0:
                         case 29:
                         case 37:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          barrier();
                         case 75:
                         case 99:
                         case 95:
                         case 74:
                         case 43:
                         barrier();
                         break;
                         default:
                         1;
                        }
                      }
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     bvec2(false, true);
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (-72686 & 0)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                        }
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    continue;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   vec3 _GLF_SWITCH_1_17v;
                   if(_GLF_DEAD(false))
                    barrier();
                   case 45:
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             barrier();
                            }
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         if(_GLF_DEAD(false))
                          break;
                         barrier();
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           do
                            {
                             barrier();
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                      }
                     barrier();
                    }
                   if(_GLF_DEAD(false))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   trunc(_GLF_SWITCH_1_12v);
                   (bvec4(false, false, true, true) , mat2x4(-469.811, 6.4, 6.3, -2.7, 84.50, -9215.2387, 46.97, 0.3));
                   if(_GLF_DEAD(false))
                    break;
                   break;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       break;
                      }
                     if(_GLF_DEAD(false))
                      barrier();
                     if(_GLF_DEAD(false))
                      {
                       switch(_GLF_SWITCH((((0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(5), int(5)))))
                        {
                         case 12:
                         for(int _injected_loop_counter = (-99275 & (0 >> _GLF_IDENTITY(int(0), int(0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                          {
                           uvec2(97519u, 196238u);
                          }
                         case 0:
                         case 38:
                         switch(_GLF_SWITCH(((0 >> _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8)))))))
                          {
                           case 4:
                           uvec3(176654u, 181108u, 72890u);
                           case 66:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           ;
                           case 0:
                           case 45:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           case 15:
                           case 60:
                           if(_GLF_DEAD(false))
                            {
                             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                              {
                               barrier();
                              }
                            }
                           case 49:
                           case 6:
                           case 76:
                           barrier();
                           break;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           case 87:
                           uvec4 _GLF_SWITCH_5_0v;
                           case 37:
                           mat4x3 _GLF_SWITCH_5_1v[63];
                           default:
                           1;
                           if(_GLF_DEAD(false))
                            break;
                          }
                         break;
                         case 73:
                         float _GLF_SWITCH_6_0v[40];
                         default:
                         1;
                        }
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       switch(_GLF_SWITCH(0))
                        {
                         case 25:
                         workgroup_id;
                         case 0:
                         case 7:
                         case 56:
                         case 61:
                         case 16:
                         case 65:
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                          {
                           barrier();
                          }
                         break;
                         case 48:
                         mat4x3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                         default:
                         1;
                        }
                      }
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, false, true)))))))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           barrier();
                          }
                         else
                          {
                          }
                        }
                       barrier();
                      }
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    barrier();
                   case 95:
                   if(_GLF_DEAD(false))
                    barrier();
                   ;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                   case 63:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                   (++ _GLF_SWITCH_1_12v);
                   default:
                   1;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                 break;
                 case 23:
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   inverse(mat2(-6031.4766, 977.845, -697.845, -152.847));
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                 default:
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     1;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   break;
                  }
                 continue;
                }
              }
              if(_GLF_DEAD(false))
               return;
              mat4 _GLF_SWITCH_1_18v, _GLF_SWITCH_1_19v;
              while(((-453.994 / mat2(-86.80, -6672.2899, -5923.5564, 216.250)) == mat2(-3906.8882, 6510.3916, -19.13, 8.0)))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  return;
                 }
                uint _GLF_SWITCH_1_20v[39], _GLF_SWITCH_1_21v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   break;
                  if(_GLF_DEAD(false))
                   {
                    switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                     {
                      case 5:
                      true;
                      case 96:
                      (bvec3(false, false, false) == bvec3(true, false, true));
                      case 0:
                      case 20:
                      case 4:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       barrier();
                      case 92:
                      case 45:
                      barrier();
                      break;
                      case 13:
                      ;
                      case 89:
                      ;
                      default:
                      1;
                     }
                   }
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   barrier();
                  if(_GLF_DEAD(false))
                   {
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), clamp(int(1), int(1), int(1)))))); _injected_loop_counter --)
                     {
                      barrier();
                     }
                   }
                  if(_GLF_DEAD(false))
                   break;
                  barrier();
                 }
                if(_GLF_DEAD(false))
                 {
                  switch(_GLF_SWITCH((1 ^ 1)))
                   {
                    case 75:
                    ;
                    case 0:
                    case 80:
                    case 40:
                    case 70:
                    case 96:
                    case 92:
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      barrier();
                     }
                    else
                     {
                     }
                    break;
                    case 6:
                    mat3(-74.76, -1266.6537, 1.0, 19.37, 64.47, 12.79, 9.5, -50.54, -2764.2583);
                    default:
                    1;
                   }
                 }
                mat2x4 _GLF_SWITCH_1_22v, _GLF_SWITCH_1_23v[75];
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     barrier();
                    barrier();
                   }
                  barrier();
                 }
               }
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
               barrier();
              if(any(bvec3(true, false, false)))
               {
                if(_GLF_DEAD(false))
                 barrier();
                ;
                if(_GLF_DEAD(false))
                 {
                  for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                   {
                    barrier();
                   }
                 }
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   barrier();
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                clamp(uvec3(21731u, 97354u, 153401u), read, virtual_gid);
               }
              ivec2(13609, 75201);
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             return;
            mat4 _GLF_SWITCH_1_24v[6], _GLF_SWITCH_1_25v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             break;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
             barrier();
            _GLF_SWITCH_1_25v;
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             barrier();
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 return;
                break;
               }
              for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
               {
                return;
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 barrier();
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                barrier();
               }
              barrier();
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  barrier();
                 }
                else
                 {
                 }
               }
              if(_GLF_DEAD(false))
               continue;
             }
           }
           case 78:
           uvec3 _GLF_SWITCH_1_26v[38];
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           case 0:
           case 10:
           subgroupAll(false);
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
              {
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
            }
           case 18:
           case 39:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
           case 98:
           if(_GLF_DEAD(false))
            barrier();
           for(int _injected_loop_counter = (1 ^ (1 | 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           case 7:
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(4), int(4)))))
              {
               case 0:
               if(_GLF_DEAD(false))
                barrier();
               case 33:
               do
                {
                 read = atomicLoad(buf[virtual_gid], 4, 64, 2);
                }
               while(_GLF_WRAPPED_LOOP(false));
               break;
               default:
               1;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 63:
               uvec2 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v[49];
               case 0:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   barrier();
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                }
               break;
               case 80:
               fma(injectionSwitch, vec2(9958.7377, -5.1), vec2(-2.0, -4.1));
               default:
               1;
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            continue;
           case 55:
           vec4 _GLF_SWITCH_1_27v[84], _GLF_SWITCH_1_28v, _GLF_SWITCH_1_29v[89];
           default:
           if(_GLF_DEAD(false))
            barrier();
           1;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                continue;
               barrier();
              }
            }
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((((1 | 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               return;
              }
            }
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         break;
         case 21:
         bvec2(false, true);
         default:
         1;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(3), int(3))) & (- 69764))))
      {
       case 0:
       if(_GLF_DEAD(false))
        barrier();
       case 41:
       if(_GLF_DEAD(false))
        barrier();
       case 52:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       case 60:
       case 35:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 44:
       case 59:
       subgroupAll(false);
       case 92:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             switch(_GLF_SWITCH(0))
              {
               case 60:
               ;
               case 39:
               mat4x2(21.44, 87.90, 3615.2426, 8.9, -5498.9685, -4863.4337, -464.669, 576.517);
               case 0:
               case 43:
               case 20:
               case 21:
               case 2:
               case 54:
               for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 barrier();
                }
               break;
               default:
               1;
              }
            }
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           read = atomicLoad(buf[virtual_gid], 4, 64, 2);
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
            {
             case 56:
             if(_GLF_DEAD(false))
              barrier();
             abs(ivec4(-3496, -99962, -17911, -243));
             case 34:
             7.9;
             case 0:
             case 66:
             case 78:
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 barrier();
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(false))
              barrier();
             case 90:
             case 3:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               switch(_GLF_SWITCH((0 | 0)))
                {
                 case 74:
                 ivec2(43407, -1323);
                 case 0:
                 case 78:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 71:
                       case 64:
                       case 56:
                       case 13:
                       case 48:
                       if(_GLF_DEAD(false))
                        {
                         do
                          {
                           return;
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                        }
                       case 44:
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                        {
                         return;
                        }
                       break;
                       default:
                       1;
                      }
                     if(_GLF_DEAD(false))
                      return;
                    }
                  }
                 case 2:
                 case 15:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   barrier();
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 break;
                 default:
                 1;
                }
              }
             case 62:
             if(_GLF_DEAD(false))
              return;
             case 50:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             case 30:
             case 15:
             return;
             break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             case 8:
             if(_GLF_DEAD(false))
              barrier();
             do
              {
               switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                {
                 case 70:
                 uvec4(48363u, 71825u, 185682u, 59358u);
                 case 13:
                 uvec2 _GLF_SWITCH_6_0v[19], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
                 case 0:
                 case 81:
                 vec3(4873.3911, -3.4, 21.70);
                 break;
                 case 62:
                 uvec3(97419u, 128992u, 28993u);
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             case 22:
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               barrier();
              }
             2.6;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
               if(_GLF_DEAD(false))
                return;
              }
             default:
             1;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)))))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       break;
       do
        {
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH(0))
            {
             case 18:
             if(false)
              {
               mat2x4 _GLF_SWITCH_7_0v[23];
               mat4x2 _GLF_SWITCH_7_1v[18], _GLF_SWITCH_7_2v[36];
               mat4(-969.294, 8.6, -9.2, 2.5, -454.457, 8.7, -96.24, -7567.0820, 7319.1724, -5.1, 5.9, 3.0, -6.5, -901.280, 8.4, -3447.8471);
               do
                {
                 ;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
             else
              {
               mat4x3(9.5, 53.56, 1751.8932, 2.6, 96.05, 5.6, -56.03, -6944.2863, 3.8, 5.3, -7504.4516, 8.5);
               mat4x3 _GLF_SWITCH_7_3v[75];
               mat3x2(-7.2, 65.50, 288.381, 73.63, -4.1, -17.36);
               ;
               uvec2 _GLF_SWITCH_7_4v, _GLF_SWITCH_7_5v[34];
               mat3x2(-67.90, -2.5, -756.497, -8452.1859, -8.1, 4.3);
               mat3x2(79.23, -182.928, 5902.8949, 167.697, 323.351, -6.5);
              }
             case 99:
             while(bool(279.944))
              {
               ivec4 _GLF_SWITCH_7_6v, _GLF_SWITCH_7_7v, _GLF_SWITCH_7_8v;
               uvec4 _GLF_SWITCH_7_9v[48], _GLF_SWITCH_7_10v;
               mat3 _GLF_SWITCH_7_11v, _GLF_SWITCH_7_12v;
              }
             case 0:
             case 43:
             case 90:
             case 10:
             case 33:
             case 4:
             case 77:
             switch(_GLF_SWITCH(0))
              {
               case 82:
               for(               (ivec3(-36536, -68143, 19353) << ivec3(-41228, 73360, -12275));
 (bvec4(false, false, false, false) != bvec2(true, true).rgrg); ivec2(26734, -96767).rgr)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 vec4 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[6];
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 mat4x3 _GLF_SWITCH_3_3v[30], _GLF_SWITCH_3_4v[54];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 (uvec2(150762u, 130543u) | subgroup_base);
                 (mat3(-1.4, 45.46, 514.142, 773.393, -1500.7715, -4.4, -585.054, 7.8, -4.0) * (mat2x3(320.116, -1.8, -4.5, 0.2, 949.808, 1.5) / mat2x3(-60.38, 30.06, -63.69, 24.48, 5472.4000, -9.1)));
                 vec3(6989.2317, -4503.4580, 7.5);
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 46:
                     vec2 _GLF_SWITCH_7_0v;
                     case 0:
                     case 81:
                     if(_GLF_DEAD(false))
                      barrier();
                     case 85:
                     continue;
                     break;
                     case 65:
                     lessThanEqual(vec3(-6.4, 0.1, 6.9), vec3(90.22, 7536.3118, -2099.1220));
                     default:
                     1;
                    }
                  }
                 float(-30638);
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               case 50:
               if(_GLF_DEAD(false))
                barrier();
               ((- mat3x4(-4.3, 6.8, 40.85, -6.4, -5592.7814, -978.515, -7921.1289, 43.94, 4.2, -91.52, -1223.9955, -7871.1938)) == mat3x4(-3.9, -29.29, -8.8, -977.867, -607.438, -1.8, -7204.8220, -737.862, -2452.7091, -6.9, 6.9, -1.5));
               case 0:
               case 4:
               case 70:
               case 22:
               if(_GLF_DEAD(false))
                barrier();
               case 63:
               if(_GLF_DEAD(false))
                barrier();
               case 62:
               case 9:
               if(_GLF_DEAD(false))
                barrier();
               case 29:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               case 69:
               case 44:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
               do
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               break;
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 57:
                   case 83:
                   case 93:
                   case 79:
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   break;
                   case 78:
                   ivec2 _GLF_SWITCH_6_0v;
                   case 32:
                   float _GLF_SWITCH_6_1v[76], _GLF_SWITCH_6_2v;
                   default:
                   1;
                  }
                }
               default:
               1;
              }
             break;
             case 87:
             vec4(-544.808, 56.20, -9003.4965, 9.5);
             case 25:
             if(false)
              {
               ((mat3x2(-676.641, -83.76, -7.6, 28.48, -27.25, -85.77) - mat3x2(5.3, 3639.0394, -85.85, 4.1, 60.46, -3.6)) * (-4.3 - mat2x3(3.3, 4.3, -6.0, 7201.5529, 9.7, -36.79)));
               (mat2x4(-1.2, -825.096, 4432.3637, 0.6, -4.1, -3908.9447, 7022.0406, 825.511) * (mat2(-9.8, 4.9, -9365.1841, 97.08) / mat2(-54.46, -3.4, 661.497, -269.381)));
               float(77480);
               mat3x4 _GLF_SWITCH_7_13v[52];
               unpackUnorm4x8(subgroup_local_id);
               false;
              }
             default:
             1;
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 77:
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            return;
          }
         barrier();
        }
       {
        switch(_GLF_SWITCH(_GLF_IDENTITY(0, min(0, 0))))
         {
          case 56:
          ;
          case 0:
          ivec4 _GLF_SWITCH_0_0v;
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             barrier();
            barrier();
           }
          if(_GLF_DEAD(false))
           {
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), min(_GLF_IDENTITY(int(2), 0 ^ (int(2))), int(2)))))))
                 {
                  case 0:
                  if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     return;
                   }
                  else
                   {
                   }
                  case 9:
                  if(_GLF_DEAD(false))
                   barrier();
                  break;
                  if(_GLF_DEAD(false))
                   continue;
                  default:
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    do
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    1;
                   }
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(false))
                   break;
                 }
               }
             }
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             {
              if(_GLF_DEAD(false))
               barrier();
              barrier();
             }
            return;
            if(_GLF_DEAD(false))
             barrier();
            if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             {
             }
            else
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
             }
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 barrier();
                barrier();
               }
             }
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
             {
              do
               {
                barrier();
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
          case 51:
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             {
              switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
               {
                case 0:
                case 41:
                case 39:
                if(_GLF_DEAD(false))
                 barrier();
                case 28:
                case 37:
                case 63:
                case 59:
                return;
                break;
                case 45:
                mat2x4 _GLF_SWITCH_7_0v;
                case 68:
                mat4x3 _GLF_SWITCH_7_1v;
                default:
                1;
               }
             }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(false))
               return;
              barrier();
             }
           }
          else
           {
           }
          break;
          default:
          1;
         }
       }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 return;
                }
               case 54:
               do
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 4:
                   do
                    {
                     switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(8), int(8)))))
                      {
                       case 92:
                       -159.649;
                       case 0:
                       case 19:
                       case 15:
                       case 42:
                       case 43:
                       case 63:
                       next_virtual_gid;
                       break;
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   case 0:
                   case 63:
                   case 98:
                   case 8:
                   case 18:
                   return;
                   break;
                   case 30:
                   mat3x2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[73], _GLF_SWITCH_4_2v[53];
                   case 44:
                   mat4x3 _GLF_SWITCH_4_3v;
                   default:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   1;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               break;
               default:
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                barrier();
               1;
              }
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(false))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 76:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 0:
                   case 86:
                   case 30:
                   case 57:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                         if(_GLF_DEAD(false))
                          return;
                        }
                      }
                     else
                      {
                      }
                     do
                      {
                       barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                   if(_GLF_DEAD(false))
                    return;
                   break;
                   case 65:
                   -0.9;
                   default:
                   1;
                  }
                }
               break;
               default:
               1;
              }
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
           return;
          }
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 ^ 1) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       default:
       do
        {
         switch(_GLF_SWITCH(0))
          {
           case 35:
           inverse(mat3(-554.314, 2425.6873, 2.3, -6.0, -88.08, -33.62, -1.7, 9297.6621, -7624.6315));
           case 48:
           for(           bitfieldInsert(uvec3(196721u, 48313u, 112904u), uvec3(195578u, 92394u, 32743u), -60504, -83043);
 true; true)
            {
             smoothstep(8208.7357, (-82.65), smoothstep(-3.8, -974.707, vec3(-560.357, -679.092, 6.3)));
             7.9;
             uint(determinant(mat3(-412.744, -48.80, 8775.4143, -34.27, 13.74, 6.7, 9566.0741, -2.8, -809.062)));
            }
           case 0:
           case 91:
           case 64:
           if(_GLF_DEAD(false))
            continue;
           switch(_GLF_SWITCH(0))
            {
             case 79:
             (mat3x2(2808.5107, 3.6, -715.549, 8.2, 9129.1038, -7.0) / radians(-17.41));
             case 0:
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(3), int(3)))))
                      {
                       case 0:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       case 48:
                       case 12:
                       case 81:
                       case 56:
                       case 79:
                       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0 ^ 0))))
                          {
                           case 5:
                           ;
                           case 0:
                           case 55:
                           case 73:
                           1;
                           break;
                           case 28:
                           vec4(-84.33, -8.3, -2607.1593, -16.48);
                           default:
                           1;
                          }
                        }
                       break;
                       default:
                       1;
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           return;
                          }
                         do
                          {
                           barrier();
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          break;
                        }
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      break;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                continue;
              }
             break;
             default:
             1;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           case 92:
           case 93:
           if(_GLF_DEAD(false))
            barrier();
           case 33:
           case 84:
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           break;
           case 30:
           bvec3(true, false, false);
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   switch(_GLF_SWITCH((0 | 0)))
    {
     case 0:
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         continue;
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 25:
           {
            true;
           }
           case 86:
           mix(ivec3(91977, 36281, 70123), (ivec3(-38903, -9670, 14102) + 21414), lessThanEqual(uvec3(139340u, 187899u, 176906u), uvec3(171743u, 134139u, 92082u)));
           case 0:
           case 8:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           case 21:
           case 28:
           case 9:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
           case 46:
           case 40:
           barrier();
           if(_GLF_DEAD(false))
            continue;
           break;
           case 74:
           vec3(4.1, 1.5, -239.838);
           case 73:
           mat3x4 _GLF_SWITCH_7_0v, _GLF_SWITCH_7_1v, _GLF_SWITCH_7_2v;
           default:
           1;
          }
        }
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         break;
        }
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     break;
     case 97:
     do
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       uvec2(54914u, 179835u);
      }
     else
      {
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     case 53:
     {
      switch(_GLF_SWITCH(0))
       {
        case 0:
        case 50:
        if(_GLF_DEAD(false))
         barrier();
        case 61:
        case 35:
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_DEAD(false))
         barrier();
        if(_GLF_WRAPPED_IF_TRUE(true))
         {
          uvec2(129139u, 7791u);
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           barrier();
         }
        else
         {
         }
        case 88:
        case 84:
        case 14:
        case 82:
        mat4x3(90.60, -11.03, 0.7, 88.74, 2.1, -615.921, 8094.3191, 48.42, 460.343, 0.7, 66.34, -0.7);
        case 41:
        ;
        break;
        if(_GLF_DEAD(false))
         return;
        case 7:
        do
         {
          ;
         }
        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        default:
        1;
       }
     }
     default:
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
          {
           case 81:
           mat3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
           case 95:
           bvec3 _GLF_SWITCH_6_3v, _GLF_SWITCH_6_4v[92], _GLF_SWITCH_6_5v[42];
           case 0:
           case 43:
           case 75:
           case 23:
           case 70:
           case 5:
           case 36:
           switch(_GLF_SWITCH(0))
            {
             case 5:
             do
              {
               uint _GLF_SWITCH_5_0v[76], _GLF_SWITCH_5_1v;
               vec2 _GLF_SWITCH_5_2v;
               -198.693;
               bvec2 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v, _GLF_SWITCH_5_5v;
               while(false)
                {
                 if(_GLF_DEAD(false))
                  break;
                 bvec3(true, false, false).rgbg;
                 uvec3(125421u, 86812u, 180790u);
                 -8286.4263;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 uvec2(113872u, 142304u);
                 mat4x3 _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
                 mat4x3 _GLF_SWITCH_5_9v[7], _GLF_SWITCH_5_10v[60];
                 mat2(mat2x4(9259.3455, -6.4, -4476.9804, 8.8, -1288.3282, 68.36, -6065.1890, 2.4));
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             case 0:
             case 10:
             case 39:
             case 28:
             if(_GLF_DEAD(false))
              return;
             return;
             case 27:
             case 52:
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(false))
              return;
             case 85:
             case 26:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               barrier();
              }
             break;
             default:
             1;
             if(_GLF_DEAD(false))
              barrier();
            }
           break;
           default:
           1;
          }
        }
      }
     1;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
    }
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
