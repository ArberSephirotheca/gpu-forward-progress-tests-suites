#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_31 {
 mat2x4 _f0;
 bool _f1;
 mat3 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_30 {
 bvec4 _f0;
 ivec3 _f1;
 mat4x2 _f2;
 mat3 _f3;
 ivec2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_29 {
 ivec4 _f0;
 vec2 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_28 {
 mat3x2 _f0;
 bvec4 _f1;
 uvec3 _f2;
 vec2 _f3;
 mat3 _f4;
 uvec3 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_27 {
 bvec2 _f0;
 bool _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_32 {
 _GLF_struct_27 _f0;
 bvec3 _f1;
 _GLF_struct_28 _f2;
 _GLF_struct_29 _f3;
 _GLF_struct_30 _f4;
 mat2x3 _f5;
 _GLF_struct_31 _f6;
} ;

struct _GLF_struct_25 {
 ivec4 _f0;
 mat3x2 _f1;
} ;

struct _GLF_struct_24 {
 mat2x3 _f0;
 bvec3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_23 {
 ivec4 _f0;
 bool _f1;
} ;

struct _GLF_struct_22 {
 uint _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
} ;

struct _GLF_struct_21 {
 uvec4 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_26 {
 _GLF_struct_21 _f0;
 mat2 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
 _GLF_struct_25 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_33 {
 _GLF_struct_26 _f0;
 uint subgroup_size;
 mat3x2 _f1;
 _GLF_struct_32 _f2;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 bvec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_17 {
 bvec2 _f0;
 mat2x4 _f1;
 mat2 _f2;
 mat2x4 _f3;
 uint workgroup_base;
 int _f4;
 ivec3 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_16 {
 mat4x3 _f0;
 uvec4 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_15 {
 uvec2 _f0;
} ;

struct _GLF_struct_19 {
 float _f0;
 vec3 _f1;
 vec3 _f2;
 _GLF_struct_15 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_17 _f5;
 _GLF_struct_18 _f6;
} ;

struct _GLF_struct_13 {
 mat4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_14 {
 mat2x3 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_11 {
 bool _f0;
 mat3x4 _f1;
 vec4 _f2;
 ivec4 _f3;
 vec2 _f4;
 mat2 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_10 {
 mat4x2 _f0;
 vec4 _f1;
 mat4x2 _f2;
 mat2x3 _f3;
 mat3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 ivec3 _f1;
 bool _f2;
 bvec2 _f3;
 mat3x4 _f4;
 int _f5;
} ;

struct _GLF_struct_12 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
} ;

struct _GLF_struct_20 {
 _GLF_struct_12 _f0;
 _GLF_struct_14 _f1;
 ivec2 _f2;
 _GLF_struct_19 _f3;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 uvec2 _f1;
 ivec4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 float _f1;
 mat2 _f2;
 mat3x2 _f3;
 mat4 _f4;
 bvec2 _f5;
 uint _f6;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 _GLF_struct_5 _f4;
 mat3x4 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 ivec4 _f0;
 vec4 _f1;
 float _f2;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 int _f1;
 vec2 _f2;
 bvec3 _f3;
 ivec3 _f4;
 bvec3 _f5;
} ;

struct _GLF_struct_0 {
 uint _f0;
 vec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 mat4 _f1;
 ivec3 _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 bool _f5;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2x4 _f1;
 int _f2;
 mat4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_7 _f5;
 uint workgroup_size;
 mat3x2 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 _GLF_struct_33 _GLF_struct_replacement_33 = _GLF_struct_33(_GLF_struct_26(_GLF_struct_21(uvec4(1u), _GLF_IDENTITY(vec3(1.0), clamp(vec3(1.0), _GLF_IDENTITY(vec3(1.0), max(vec3(1.0), vec3(1.0))), vec3(1.0)))), mat2(1.0), _GLF_struct_22(1u, vec4(1.0), mat4x2(1.0), mat2x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(3.0))))), _GLF_struct_23(ivec4(1), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(true, false))))))))), _GLF_struct_24(mat2x3(1.0), bvec3(true), mat3x4(1.0)), _GLF_struct_25(ivec4(1), mat3x2(1.0)), uvec4(1u)), gl_SubgroupSize, mat3x2(1.0), _GLF_struct_32(_GLF_struct_27(bvec2(true), true, bvec2(true)), bvec3(true), _GLF_struct_28(mat3x2(1.0), bvec4(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(uvec3(1u), uvec3(uvec3(_GLF_IDENTITY(uvec3(1u), uvec3(uvec4(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) / uvec3(1u, 1u, 1u)), 0u)))))), vec2(1.0), mat3(1.0), uvec3(1u), ivec3(1)), _GLF_struct_29(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) | (1))), min(ivec4(1), ivec4(1))), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(60.58)), bool(false)))), bvec4(true)), _GLF_struct_30(bvec4(true), ivec3(1), mat4x2(1.0), mat3(1.0), ivec2(1), mat3x4(1.0)), mat2x3(1.0), _GLF_struct_31(mat2x4(1.0), true, mat3(1.0), ivec2(1))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(uvec4(1u), mat2x4(1.0), 1, mat4(1.0), _GLF_struct_3(_GLF_struct_0(1u, vec4(1.0), uvec2(1u)), _GLF_IDENTITY(mat4(1.0), (false ? _GLF_FUZZED(mat4(-975.147, -56.82, _GLF_IDENTITY(67.12, min(67.12, 67.12)), 74.48, -9631.8076, 7.0, 953.892, _GLF_IDENTITY(6883.5402, max(6883.5402, 6883.5402)), 58.60, -1.1, 61.14, 7.1, 3.3, 28.96, 2.8, -4.1)) : mat4(1.0))), ivec3(1), _GLF_struct_1(uvec4(1u), 1, vec2(1.0), bvec3(true), _GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), (_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), clamp(ivec3(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), ivec3(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1))))), ivec3(ivec3(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (ivec3(1)))))))) << ivec3(0, 0, 0)))) | ivec3(0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, (0) ^ _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1), ~ (_GLF_IDENTITY(~ (ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (~ (ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) / ivec3(1, 1, 1)))))))), 0)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true))))))), true)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) - vec2(0.0, 0.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))))), _GLF_IDENTITY(false, (false) || false), true, true))))))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0)).y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))))), _GLF_IDENTITY(false, (false) || false), true, true))))))))))), true))), true)), false))), true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false)))))), true)), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), false || (! (_GLF_IDENTITY(false, bool(bool(false))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), false)))))), true)), false)), false)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(bvec3(true)))), true)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))))))))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y)) && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec2((true), false)))))), false, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false))))))))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))) || false), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))) || false), false, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))) || false), false, false), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)))) || false), false, false), true))))))))), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (! (true)))), false, false), false)))))), _GLF_IDENTITY(false, (false) || false), true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), false, false)))))) && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), false), false)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (bool(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false)) && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), false), false)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), false)))))), false, _GLF_IDENTITY(true, (true) && true), true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))))), false, false, false)))))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), false, false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (injectionSwitch.x), min(0.0 + (injectionSwitch.x), 0.0 + (injectionSwitch.x)))) < injectionSwitch.y)) && (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true)))))), false, false), false))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true)))), false, false), bvec3(bvec4(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ((true)) || false)))), false, false), false)))))), _GLF_IDENTITY(false, _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) || false)) && true) || false), _GLF_IDENTITY(true, bool(bool(true))), true))))))) && true)))))), true)), false))), true)))))))), _GLF_struct_2(ivec4(1), vec4(1.0), 1.0), true), _GLF_struct_7(_GLF_struct_4(uvec4(1u)), mat2x3(1.0), mat3x4(1.0), mat4x3(1.0), _GLF_struct_5(uvec2(1u), 1.0, mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0, (_GLF_IDENTITY((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0, min((_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / 1.0))) / 1.0))), mat3x2(1.0), mat4(1.0), bvec2(true), 1u), mat3x4(1.0), _GLF_struct_6(bvec3(true), uvec2(1u), ivec4(1), uvec4(1u))), gl_WorkGroupSize.x, mat3x2(1.0));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)), false || (bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_20 _GLF_struct_replacement_20 = _GLF_struct_20(_GLF_struct_12(_GLF_struct_9(_GLF_IDENTITY(vec2(1.0), max(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : vec2(1.0), max(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0), 1.0, 0.0)))))) : vec2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))), _GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(injectionSwitch) : vec2(1.0))))), _GLF_IDENTITY(vec2(1.0), clamp(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), vec2(1.0), vec2(1.0))))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) << ivec3(0, 0, 0)), true, _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), mat3x4(1.0), 1), _GLF_struct_10(mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, 0.0 + (1.0)) : _GLF_IDENTITY(_GLF_FUZZED(-5.5), (_GLF_IDENTITY(_GLF_FUZZED(-5.5), abs(0.0) + (_GLF_FUZZED(-5.5)))) + 0.0)))) + 0.0)), vec4(1.0), mat4x2(1.0), mat2x3(1.0), mat3(1.0), mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-68.08))))), _GLF_struct_11(true, mat3x4(1.0), _GLF_IDENTITY(vec4(1.0), max(vec4(1.0), vec4(1.0))), ivec4(1), vec2(1.0), mat2(1.0), mat2x4(1.0))), _GLF_struct_14(mat2x3(1.0), _GLF_struct_13(mat4(1.0), _GLF_IDENTITY(mat4(1.0), (mat4(1.0)) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), ivec2(1), _GLF_struct_19(1.0, vec3(1.0), vec3(1.0), _GLF_struct_15(uvec2(1u)), _GLF_struct_16(mat4x3(1.0), uvec4(1u), mat4x2(1.0), mat3x4(1.0)), _GLF_struct_17(bvec2(true), mat2x4(1.0), mat2(1.0), mat2x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0))), _GLF_struct_replacement_8.workgroup_size * workgroup_id, 1, ivec3(1), bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), false || (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, true))))))))))))), (_GLF_IDENTITY(true, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false)))))) || false))))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! (true))))))))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))), false || (! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((true), ! (! ((true))))))))))))))))))) || false))), _GLF_struct_18(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), (_GLF_IDENTITY((1), 0 + ((1)))) - 0)))) >> (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (2))), int(2)), (0 << _GLF_IDENTITY(int(2), int(2))) | (0 << _GLF_IDENTITY(int(2), int(2))))))), (ivec3(-33967, 81530, 89412) & ivec3(0, 0, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(2), int(2)))), 0 + (_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> (0 << _GLF_IDENTITY(int(2), int(2))), (true ? _GLF_IDENTITY((1) >> (0 << _GLF_IDENTITY(int(2), int(2))), ((1) >> (0 << _GLF_IDENTITY(int(2), int(2)))) / 1) : _GLF_FUZZED(22720))))))), ~ (~ (ivec3(_GLF_IDENTITY(1, (1) >> (0 << _GLF_IDENTITY(int(2), int(2)))))))))), bvec2(true), _GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), true, true)))))), true, true)), false, true)))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_20._f3._f5.workgroup_base, _GLF_IDENTITY(0u, (0u) >> 0u) ^ (_GLF_struct_replacement_20._f3._f5.workgroup_base)) + subgroup_id * _GLF_struct_replacement_33.subgroup_size + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_20._f3._f5.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_33.subgroup_size, (subgroup_id * _GLF_struct_replacement_33.subgroup_size) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_33.subgroup_size, min(subgroup_id * _GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) * ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) / 1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (subgroup_id))) * _GLF_struct_replacement_33.subgroup_size, min(subgroup_id * _GLF_struct_replacement_33.subgroup_size, subgroup_id * _GLF_struct_replacement_33.subgroup_size)))))), (_GLF_struct_replacement_20._f3._f5.workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_33.subgroup_size), uint(_GLF_IDENTITY(uvec4((subgroup_id * _GLF_struct_replacement_33.subgroup_size), 0u, 1u, 1u), (uvec4((subgroup_id * _GLF_struct_replacement_33.subgroup_size), 0u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_33.subgroup_size, min(subgroup_id * _GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_struct_replacement_33.subgroup_size, min(subgroup_id * _GLF_struct_replacement_33.subgroup_size, subgroup_id * _GLF_struct_replacement_33.subgroup_size))))))) ^ 0u) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0), (subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0)) - 0u)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(mix(156077u, virtual_gid, true)) : 0u)) + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), min(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), _GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_33.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_33.subgroup_size), ((_GLF_struct_replacement_33.subgroup_size)) | ((_GLF_struct_replacement_33.subgroup_size)))) ^ (0u ^ 0u)) >> 0u))))) : _GLF_FUZZED(floatBitsToUint(-0.6))))) | 0u)), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) + 0)) / 1)) >> 0)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY((false ? _GLF_FUZZED(mix(156077u, virtual_gid, true)) : 0u), (true ? (false ? _GLF_FUZZED(mix(156077u, virtual_gid, true)) : 0u) : _GLF_FUZZED(num_workgroup)))) + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), min(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), _GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))))) : _GLF_FUZZED(floatBitsToUint(-0.6))))) | 0u)), ~ (~ (((_GLF_IDENTITY(subgroup_local_id, min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(mix(156077u, virtual_gid, true)) : 0u)) + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, _GLF_IDENTITY((_GLF_struct_replacement_33.subgroup_size), (_GLF_IDENTITY((_GLF_struct_replacement_33.subgroup_size), max((_GLF_struct_replacement_33.subgroup_size), (_GLF_struct_replacement_33.subgroup_size)))) >> 0u) >> 0u))), min(_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))), _GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))))) : _GLF_FUZZED(floatBitsToUint(-0.6))))) | 0u)))))) | 0u), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (false))))) ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) << 0u)))) : _GLF_IDENTITY(_GLF_struct_replacement_20._f3._f5.workgroup_base + subgroup_id * _GLF_struct_replacement_33.subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) % _GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u)))), (_GLF_struct_replacement_20._f3._f5.workgroup_base + subgroup_id * _GLF_struct_replacement_33.subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, 0u + (_GLF_IDENTITY(_GLF_struct_replacement_33.subgroup_size, (_GLF_struct_replacement_33.subgroup_size) >> 0u))))) | 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, min(4, 4))))))) | 0)) | (_GLF_IDENTITY(4, (4) | 0))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < _GLF_struct_replacement_33.subgroup_size)
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0)))), (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(0.2, max(_GLF_IDENTITY(0.2, mix(float(0.2), float(_GLF_FUZZED((83.36 * 7.4))), bool(false))), _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, (0.2) / 1.0)) / determinant(mat2(1.0, 0.0, 1.0, 1.0))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat4x2(7.6, -13.28, -3.7, -659.324, 273.008, -0.3, -55.28, -2.3)) : mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0))))))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-343.555)), vec2(_GLF_FUZZED(571.619), ((injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0)))), (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(0.2, max(_GLF_IDENTITY(0.2, mix(float(0.2), float(_GLF_FUZZED((83.36 * 7.4))), bool(false))), _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, (0.2) / 1.0)) / determinant(mat2(1.0, 0.0, 1.0, 1.0))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat4x2(7.6, -13.28, -3.7, -659.324, 273.008, -0.3, -55.28, -2.3)) : mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0))))))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-343.555)), vec2(_GLF_FUZZED(571.619), ((injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)))), false), false, true))), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) / 1.0)), true, true)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y)) && true), true)))))), ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y)) && true), true))))))) || false), true, true))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false), false, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-695.700, -2.8)) : injectionSwitch)), injectionSwitch, injectionSwitch))))).y) / 1.0)), true, true)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-6.6, 26.46)) : _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0, 0.0, tan(0.0), 1.0, length(tan(vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))).y), true)))))), true, true))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0)))), (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(0.2, max(_GLF_IDENTITY(0.2, mix(float(0.2), float(_GLF_FUZZED((83.36 * 7.4))), bool(false))), _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, (0.2) / 1.0)) / determinant(mat2(1.0, 0.0, 1.0, 1.0))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat4x2(7.6, -13.28, -3.7, -659.324, 273.008, -0.3, -55.28, -2.3)) : mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0))))))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-343.555)), vec2(_GLF_FUZZED(571.619), ((injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0)))), (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(0.2, max(_GLF_IDENTITY(0.2, mix(float(0.2), float(_GLF_FUZZED((83.36 * 7.4))), bool(false))), _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, (0.2) / 1.0)) / determinant(mat2(1.0, 0.0, 1.0, 1.0))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat4x2(7.6, -13.28, -3.7, -659.324, 273.008, -0.3, -55.28, -2.3)) : mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0))))))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-343.555)), vec2(_GLF_FUZZED(571.619), ((injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)))), false), false, true))), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) / 1.0)), true, true)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y)) && true), true)))))), ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y)) && true), true))))))) || false), true, true))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false), false, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-695.700, -2.8)) : injectionSwitch)), injectionSwitch, injectionSwitch))))).y) / 1.0)), true, true)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-6.6, 26.46)) : _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0, 0.0, tan(0.0), 1.0, length(tan(vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))).y), true)))))), true, true))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0)))), (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(0.2, max(_GLF_IDENTITY(0.2, mix(float(0.2), float(_GLF_FUZZED((83.36 * 7.4))), bool(false))), _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, (0.2) / 1.0)) / determinant(mat2(1.0, 0.0, 1.0, 1.0))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat4x2(7.6, -13.28, -3.7, -659.324, 273.008, -0.3, -55.28, -2.3)) : mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0))))))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-343.555)), vec2(_GLF_FUZZED(571.619), ((injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY((injectionSwitch)[1], float(mat4x3((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, sin(0.0)))), (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(0.2, max(_GLF_IDENTITY(0.2, mix(float(0.2), float(_GLF_FUZZED((83.36 * 7.4))), bool(false))), _GLF_IDENTITY(0.2, (_GLF_IDENTITY(0.2, (0.2) / 1.0)) / determinant(mat2(1.0, 0.0, 1.0, 1.0))))))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0)), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0)), (false ? _GLF_FUZZED(mat4x2(7.6, -13.28, -3.7, -659.324, 273.008, -0.3, -55.28, -2.3)) : mat4x2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), length(0.0), 1.0, sqrt(1.0))))))) * _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-343.555)), vec2(_GLF_FUZZED(571.619), ((injectionSwitch))[1]), bvec2(false, true))), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y)))), false), false, true))), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y) / 1.0)), true, true)), (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y)) && true), true)))))), ((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y), ((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-8.0, -5530.5733)))).y)) && true), true))))))) || false), true, true))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))))))))), false), false, false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bool(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(389.090), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1])))), (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(0.2)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x < injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), max(_GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch), (injectionSwitch))), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))))).x > injectionSwitch.y)))), false), bvec2(bvec4(bvec2(bool(bvec3(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-695.700, -2.8)) : injectionSwitch)), injectionSwitch, injectionSwitch))))).y) / 1.0)), true, true)), (bool(bvec3((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y), bool(bvec2(! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (false ? _GLF_FUZZED(vec2(-6.6, 26.46)) : _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), 1.0, 0.0, tan(0.0), 1.0, length(tan(vec3(0.0, 0.0, 0.0))), 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))).y), true)))))), true, true))) || false))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))))), false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))), true)))), false, true, false)))))))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) ^ 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.4)), bool(false))), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.4)), bool(false))), bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-6.4)), bool(false)))))), true, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
