#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_2 {
 uvec3 _f0;
 uvec2 _f1;
 bvec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 vec2 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 vec4 _f1;
 _GLF_struct_1 _f2;
 uint num_workgroup;
 _GLF_struct_3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x, (false ? _GLF_FUZZED(exp2(1.8)) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)) > injectionSwitch.y))))))) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))) && true)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat2(-6.3, -4.2, 520.662, 235.182)[1]))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))))) && true, bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x : _GLF_FUZZED(radians(6.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(1.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x : _GLF_FUZZED(radians(6.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(1.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y))))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x, (true ? _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, clamp(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))))).x : _GLF_FUZZED(radians(6.0)))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.0), _GLF_FUZZED(1.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true))).y)))))))) && true), true, false, false))) && true, false, false)))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-115.721) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(fma(injectionSwitch, injectionSwitch, vec2(9.2, 7.6))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).x > injectionSwitch.y))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((vec2(189.881, 29.04) + -9.9).s)), bool(false))), 1.0 * (injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(mat3(1.0), vec4(1.0), _GLF_struct_1(_GLF_struct_0(mat3x2(1.0), vec2(1.0), uvec2(1u))), gl_NumWorkGroups.x, _GLF_struct_3(_GLF_struct_2(uvec3(1u), uvec2(1u), bvec3(true), uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) + 0u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, 1.0))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(64.36)), float(1.0), bool(true))), 1.0)), 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(64.36)), float(1.0), bool(true))), 1.0)), 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), true, false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), true)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bool(bool((! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, tan(0.0)), (mat3(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, tan(0.0))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, true && ((injectionSwitch.x > injectionSwitch.y) || false))))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))))), 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))), true, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))) || false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.0) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), _GLF_IDENTITY(true, (true) || false)), true, true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (((injectionSwitch.x > injectionSwitch.y)) && true))) || false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), false, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.0) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), _GLF_IDENTITY(true, (true) || false)), bvec2(bvec4(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)), _GLF_IDENTITY(true, (true) || false)), true, true))))))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, true && (((injectionSwitch.x > injectionSwitch.y)) && true))) || false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), false, true)))), false || (bool(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec3(-4897.9786, 631.682, 5.3) * mat2x3(5.3, 618.298, 1.7, -4494.4676, -26.24, -5.0))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), _GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch))), (injectionSwitch)))), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.2)), float(injectionSwitch.y), bool(true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) && true) || false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 1.0, 1.0, 0.0))).x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true) || false)))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))) || false))))))), false, true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * cos(0.0)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.1)), bool(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(404.826, 58.49)) : injectionSwitch)).x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))), (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false))))))) || false)))), true)))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, clamp(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), gl_WorkGroupSize, gl_WorkGroupSize)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) - 0u)), 0u + ((_GLF_IDENTITY(0u, (0u) - 0u))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(0u, (0u) - 0u))), 0u ^ ((~ (_GLF_IDENTITY(0u, (0u) - 0u)))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(136809u) : 0u)), 0u)), min(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(136809u) : 0u)), 0u)), _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(136809u) : 0u)), 0u)))), (0u) - 0u)))))), _GLF_IDENTITY(0u, (0u) ^ 0u))), 0u)).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0)), min(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), 1.0 * (max(injectionSwitch.x, injectionSwitch.x)))), 1.0, 1.0)), (float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0))) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(21.50)), float(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.2)), float(0.0), bool(true)))))), bool(true)))), float(vec3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 1.0))))), mix(float(_GLF_FUZZED(-6.6)), float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(94.54) : injectionSwitch.x))), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_FUZZED(-6.6)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true)) || false)))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true)))) || false))), ! (! (_GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y) && true)) || false))), false || (_GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y) && true)) || false))), ! (! (false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(_GLF_IDENTITY(-6.6, min(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), -6.6))), _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), min(_GLF_IDENTITY(_GLF_FUZZED(-6.6), (_GLF_FUZZED(-6.6)) + 0.0), _GLF_FUZZED(-6.6)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))) > injectionSwitch.y) && true)) || false))))))))))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y) && true)))) || false))), ! (! (_GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y) && true)) || false))), false || (_GLF_IDENTITY(false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y) && true)) || false))), ! (! (false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(_GLF_IDENTITY(-6.6, min(_GLF_IDENTITY(-6.6, (-6.6) - 0.0), -6.6))), _GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), min(_GLF_IDENTITY(_GLF_FUZZED(-6.6), (_GLF_FUZZED(-6.6)) + 0.0), _GLF_FUZZED(-6.6)))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-6.6)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))))) > injectionSwitch.y) && true)) || false))))))))))))))))) && true))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)), _GLF_IDENTITY(0u + (workgroup_base), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)), clamp(workgroup_base, workgroup_base, workgroup_base))) | (workgroup_base))), 1u * (0u + (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))), clamp(~ (~ (_GLF_IDENTITY(0u + _GLF_IDENTITY((workgroup_base), ((workgroup_base)) / 1u), 1u * (0u + (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u), min(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u), uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), 0u)))) - uvec2(0u, 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << 0u, ((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) << 0u) >> 0u))))))), ~ (~ (_GLF_IDENTITY(0u + (workgroup_base), 1u * (0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), max((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), clamp((_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))), (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))))))), ~ (~ (_GLF_IDENTITY(0u + (workgroup_base), 1u * (0u + (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))))))))))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, uint(uint(subgroup_id))), _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u)), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u)), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u))) >> 0u), 1u), uvec2(_GLF_IDENTITY(uvec3(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u)), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u))) >> 0u), 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(uvec3(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u)), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u))) >> 0u), 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x))), uvec3(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u)), (uint(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) - 0u)) >> (0u | 0u))) ^ 0u))) >> 0u), 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), min(uint(uint(_GLF_IDENTITY(1u, (1u) ^ 0u))), uint(uint(_GLF_IDENTITY(1u, (1u) ^ 0u)))))), 0u | (1u))) / 1u), 1u)) * (subgroup_id)) * subgroup_size + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-62.95)), bool(false)))))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec3(bvec2((! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), min(workgroup_base + _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) + (0u | 0u)) * subgroup_size + ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u), uint(_GLF_IDENTITY(uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)) * subgroup_size) / 1u))), 0u, 1u), (uvec3(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) / 1u))), 0u, 1u)) ^ uvec3(0u, 0u, 0u)))) + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) << 0u, max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (subgroup_size) - 0u)))) << 0u, max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) << 0u, (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, 0u + (subgroup_size))))) | (subgroup_size)), (subgroup_size) - 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), max(_GLF_IDENTITY(uint(min(_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, (1u | 0u), 0u))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), 0u))))), uint(uvec4(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u, 0u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u))))), uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, ~ (~ (0u))))))))), min(uint(_GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, ((subgroup_size) - 0u) << 0u)))), max(_GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, max((subgroup_size) - 0u, (subgroup_size) - 0u))))), uint(uvec4(uint(min(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u, 0u, 1u))), _GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) | (uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), (uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))) - 0u), uint(uvec4(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u, 0u, 1u))), uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u)))))), ~ (~ (uint(_GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) << 0u)) - 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), min(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))), uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))))) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> 0u)))), max(_GLF_IDENTITY(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), uint(uvec4(uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u))), 1u, 0u, 1u))), uint(min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) - 0u, 0u ^ ((subgroup_size) - 0u)))))))))))))))) << 0u))))));
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(54902) : 64)), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(((! (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((! (false)), ((! (false))) || false))), (! (((! (false))))) || _GLF_IDENTITY(false, ! (! (false)))))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, 0 + (1)), min(_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1)) < _GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(subgroup_id))))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), max(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (_GLF_IDENTITY(0, (0) * 1)) | (_GLF_IDENTITY(0, (0) * 1))), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), ~ (~ (_GLF_IDENTITY(0, (0) * 1))))))) << 0)) | (0))), (int(_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) * 1)), ((_GLF_IDENTITY(0, (0) * 1))) | ((_GLF_IDENTITY(0, (0) * 1)))) | (0)))) >> 0), int(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (true ? _GLF_IDENTITY(0, (0) * 1) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) * 1))))), 0 | (int(int(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), min(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * 1), (true ? _GLF_IDENTITY(0, (0) * 1) : _GLF_FUZZED(_injected_loop_counter))), _GLF_IDENTITY(0, (0) * 1))))))))) | (0)))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), min(~ (0), ~ (0)))))) * 1)) | (0))), (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0)))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0))), ~ (~ (int(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) * 1)) | (0)))))))))) | 0)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7)))))); _injected_loop_counter --)
    {
     subgroupAll(false);
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true)))))), false))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), false || (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec3(bool(_GLF_DEAD(false)), true, true)))))), false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (false)))))))
    return;
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), false || (bool(true)))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(_GLF_IDENTITY(12.88, (false ? _GLF_FUZZED(-6930.2809) : 12.88)))), float(injectionSwitch.y), bool(true))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), (true ? mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)) : _GLF_FUZZED(faceforward(2.6, 9.5, -90.90)))), (false ? _GLF_IDENTITY(_GLF_FUZZED(25.80), clamp(_GLF_FUZZED(25.80), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(25.80, max(25.80, 25.80))), (false ? _GLF_FUZZED(-7.5) : _GLF_FUZZED(25.80))), _GLF_FUZZED(25.80))) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), float(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), max(float(_GLF_FUZZED(12.88)), _GLF_IDENTITY(float(_GLF_FUZZED(12.88)), float(mat2x4(float(_GLF_FUZZED(12.88)), 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, exp(0.0), determinant(mat3(1.0, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))) + 0.0), 0.0, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), 0.0, 0.0, 0.0, 1.0)), 0.0, determinant(mat2(0.0, 1.0, 0.0, tan(0.0))))))), bool(true))), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false))))))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(1.0 * (injectionSwitch.y), (1.0 * (injectionSwitch.y)) - log(1.0))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, (true) || false))), (false ? _GLF_FUZZED(25.80) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), mix(float(_GLF_FUZZED(float(true))), float(float(_GLF_FUZZED(12.88))), bool(true))), float(injectionSwitch.y), bool(true)))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false))))))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(199.176) : _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED((5.2 - 1837.1852)), (injectionSwitch)[1]), bvec2(false, true))), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sqrt(1.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(9.8)))))), abs(1.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9770.9295) : injectionSwitch.y))), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-84.80, -28.96)) : injectionSwitch)).y)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), max(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), (false ? _GLF_IDENTITY(_GLF_FUZZED(25.80), clamp(_GLF_FUZZED(25.80), _GLF_FUZZED(25.80), _GLF_IDENTITY(_GLF_FUZZED(25.80), (false ? _GLF_FUZZED(_GLF_IDENTITY(9.8, clamp(9.8, 9.8, 9.8))) : _GLF_FUZZED(25.80))))) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), mix(float(_GLF_FUZZED(float(true))), float(float(_GLF_FUZZED(12.88))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true)))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(bool(bvec2(true, true)), true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)), bool(bool((_GLF_IDENTITY(! (true), (! (true)) || false)))))))))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)))))))))), ! (! ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (false ? _GLF_FUZZED(199.176) : _GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])))), _GLF_FUZZED(0.6)), vec2(_GLF_FUZZED((5.2 - 1837.1852)), (injectionSwitch)[1]), bvec2(false, true))), vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))), abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), sqrt(1.0)), (mat4x2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(1.0, (1.0) - 0.0) : _GLF_FUZZED(9.8)))))), abs(1.0), 0.0, 0.0, 0.0, 1.0, sqrt(1.0))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-9770.9295) : injectionSwitch.y))), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), false || (bool(true)))))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-84.80, -28.96)) : injectionSwitch)).y)), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), max(min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), (false ? _GLF_IDENTITY(_GLF_FUZZED(25.80), clamp(_GLF_FUZZED(25.80), _GLF_FUZZED(25.80), _GLF_IDENTITY(_GLF_FUZZED(25.80), (false ? _GLF_FUZZED(_GLF_IDENTITY(9.8, clamp(9.8, 9.8, 9.8))) : _GLF_FUZZED(25.80))))) : mix(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), mix(float(_GLF_FUZZED(float(true))), float(float(_GLF_FUZZED(12.88))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), bool(true)))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), bool(bvec2(bool(bvec2(true, true)), true))))), false || _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)), bool(bool((_GLF_IDENTITY(! (true), (! (true)) || false)))))))))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true))))))))))))))), false || (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), clamp(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), min(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED(-593.254)), float(float(injectionSwitch.y)), bool(true))), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true)), (false ? _GLF_FUZZED(25.80) : _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), mix(float(_GLF_FUZZED(float(true))), float(float(_GLF_FUZZED(12.88))), bool(true))), float(injectionSwitch.y), bool(true)), float(_GLF_IDENTITY(mat4x3(mix(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), mix(float(_GLF_FUZZED(float(true))), float(float(_GLF_FUZZED(12.88))), bool(true))), float(injectionSwitch.y), bool(true)), 1.0, 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (mat4x3(mix(_GLF_IDENTITY(float(_GLF_FUZZED(12.88)), mix(float(_GLF_FUZZED(float(true))), float(float(_GLF_FUZZED(12.88))), bool(true))), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED(-24.12)), bool(false))), _GLF_IDENTITY(bool(true), bool(bool(bool(true))))), 1.0, 1.0, round(length(normalize(exp(vec3(0.0, 0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), ! (_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (true)))) || false))))))), mix(float(_GLF_FUZZED(12.88)), float(injectionSwitch.y), bool(true))))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     subgroupAll(true);
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), true)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (! _GLF_IDENTITY(((_GLF_DEAD(false))), false || (((_GLF_DEAD(false)))))) || false))), true))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))), true)))))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || false), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), true))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), ((_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))) && true)) || false), bool(bvec2(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, false, true))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), true)))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), true, false, false)), bool(bvec4(bool(bvec4((_GLF_DEAD(false)), true, false, false)), true, false, true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))) || false))), true))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec2(! _GLF_IDENTITY((_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) || false))))), true)))))))))))), true, true, false))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false)))), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(false))))), ! (_GLF_IDENTITY(! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))), false || (! ((bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
