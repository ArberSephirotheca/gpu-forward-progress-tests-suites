#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true, true), true)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(0.5)), bool(false))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x = subgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(bool(! (false))))), (_GLF_IDENTITY((_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bool(! (false)), ! (_GLF_IDENTITY(! (bool(! (false))), bool(bvec4(_GLF_IDENTITY(! (bool(! (false))), (! (bool(! (false)))) && true), true, true, false)))))))), ! (! ((_GLF_IDENTITY(! (false), bool(bool(! (false))))))))) && true))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-913.553, -9.5)))).x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9.6)), max(float(_GLF_FUZZED(-9.6)), float(_GLF_FUZZED(-9.6)))), float(1.0), bool(true))), exp(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.8)), bool(false))), 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, sin(0.0), 1.0), (mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.6)), float(1.0), bool(true))), exp(0.0), 0.0, 1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-810.609) : 1.0)), 1.0, 0.0), vec3(vec4(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-810.609) : 1.0)), 1.0, 0.0), 0.0))))), 1.0, sin(0.0), 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))) || false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), true, true))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true))))), true && (_GLF_IDENTITY(bool(bvec4(false, false, true, true)), ! (! (bool(bvec4(false, false, true, true)))))))))))))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)).x;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z + GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base, uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base, (GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base) >> uvec3(0u, 0u, 0u)))).y + GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = virtual_gid;
 uint next_virtual_gid = GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.z + GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.x * _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y, _GLF_IDENTITY((GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y) / 1u, clamp((GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y) / 1u, (GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y) / 1u, (GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y) / 1u))) + ((_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid, uvec2(0u, 0u) | (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid)).x + 1) % GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) / 1)), (uint(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-86233) : 1)))) << 0u), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)), uint(1)))) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u)))) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), max(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (uint(_GLF_IDENTITY(0u, (0u) | (0u)))) - 0u)))), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), 0 | (int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))))), int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))))))))), (uint(1)) << 0u), uint(1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(1)))) | 0u), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)), uint(1)))) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u)))) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), max(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (uint(_GLF_IDENTITY(0u, (0u) | (0u)))) - 0u)))), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), 0 | (int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))))), int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))))))))), (uint(1)) << 0u), uint(1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(1)))) | 0u), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)), uint(1)))) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u)))) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), max(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (uint(_GLF_IDENTITY(0u, (0u) | (0u)))) - 0u)))), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), 0 | (int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))))), int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))))))))), (uint(1)) << 0u), uint(1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(1)))) | 0u), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))))))) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) | (_GLF_IDENTITY(uint(1), (uint(1)) | (uint(1)))))) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)), uint(1)))) | 0u), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), 1u, 1u, 1u)) - uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u)))) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), max(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) | (0u))), (uint(_GLF_IDENTITY(0u, (0u) | (0u)))) - 0u)))), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))), 0 | (int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1))))))), int(_GLF_IDENTITY(1, 0 + (_GLF_IDENTITY(1, max(1, 1)))))))))), (uint(1)) << 0u), uint(1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, ((uint(1)) << 0u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(1)))) | 0u), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))))))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uint(uint(1)))), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), max(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(_GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) | (1)))))) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (0u) << 0u)), uint(1))))))))))) / 1u), (false ? _GLF_FUZZED(next_virtual_gid) : _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(virtual_gid) : uint(1))), uint(1))), (uint(1)) << 0u), uint(1))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u))), (_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u)))) - 0u), max(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u))), (_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u)))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u))), (_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u)))) - 0u), 0u | (_GLF_IDENTITY(_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u))), (_GLF_IDENTITY((uint(1)), uint(uvec3(_GLF_IDENTITY((uint(1)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), 0u + (~ (_GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))))))), 1u, 0u)))) - 0u))))))) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | 0u), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), _GLF_IDENTITY(uint(1), _GLF_IDENTITY(uint(uvec2(uint(1), 0u)), (_GLF_IDENTITY(uint(uvec2(uint(1), 0u)), (uint(uvec2(uint(1), 0u))) | 0u)) | (uint(uvec2(uint(1), 0u))))))), _GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))))))), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uint(uint(1)))), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, int(ivec3(_GLF_IDENTITY(1, (1) ^ 0), 1, ((((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), min(_GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2))) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))))))), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), clamp((uint(1)), _GLF_IDENTITY((uint(1)), ((uint(1))) * 1u), (uint(1)))) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, min((uint(1)) << 0u, (uint(1)) << 0u))), uint(1)))) | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << _GLF_IDENTITY(0u, (0u) << 0u)), uint(1)))))))), ~ (~ (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (true ? ~ (1) : _GLF_FUZZED(89693))))), 1))), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) << 0u, (true ? _GLF_IDENTITY((uint(1)) << 0u, 1u * ((uint(_GLF_IDENTITY(1, (1) / 1))) << 0u)) : _GLF_FUZZED(workgroup_id)))), uint(1))), _GLF_IDENTITY(max(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))), (uint(1)) << 0u), uint(1)), (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))), (uint(1)) << 0u), uint(1))) | (min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))), (uint(1)) << 0u), uint(1))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (0)))))), (uint(1)) << 0u), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), 0u | ((uint(1)))) << _GLF_IDENTITY(0u, (0u) << 0u)), uint(1)))))), (max(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))), (uint(_GLF_IDENTITY(1, (1) | (1)))) << 0u), uint(1))), uint(uvec4(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))), (uint(1)) << 0u), (false ? _GLF_FUZZED(atomicCompSwap(workgroup_id, 129898u, num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(uvec2(uint(1), 1u))), (uint(1)) << 0u))), uint(1))), 1u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) + _GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(4), int(4))) ^ (0)))))), _GLF_IDENTITY((uint(1)) << 0u, (_GLF_IDENTITY((uint(1)) << 0u, (_GLF_IDENTITY((uint(1)) << 0u, max((uint(1)) << 0u, (uint(1)) << 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(1))), (_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), uint(1)))) | (_GLF_IDENTITY(uint(1), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), 0u | ((uint(1)))) << _GLF_IDENTITY(0u, (0u) << 0u)), uint(1)), clamp(min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), 0u | ((uint(1)))) << _GLF_IDENTITY(0u, (0u) << 0u)), uint(1)), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), 0u | ((uint(1)))) << _GLF_IDENTITY(0u, (0u) << 0u)), uint(1)), min(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), 0u | ((uint(1)))) << _GLF_IDENTITY(0u, (0u) << 0u)), uint(1))))))))) / 1u))))))))) / 1u)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) && true))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) && true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], 4, 64, 0);
 if(_GLF_IDENTITY(GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x, (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(5u)), clamp(_GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)), _GLF_IDENTITY(uint(5u), uint(5u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)))) ^ (GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x)) + 1 < GLF_merged3_0_1_11_1_1_13_2_1_14subgroup_idsubgroup_sizeworkgroup_base.y)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false)))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], read, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))))))))
          return;
         return;
        }
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.9)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true)))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   atomicStore(checker[GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
