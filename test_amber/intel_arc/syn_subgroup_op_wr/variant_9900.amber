#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_15 {
 mat3x4 _f0;
 uint workgroup_base;
 mat2x4 _f1;
} ;

struct _GLF_struct_16 {
 mat3x2 _f0;
 mat4x3 _f1;
 mat4x2 _f2;
 _GLF_struct_15 _f3;
 uint _f4;
} ;

struct _GLF_struct_12 {
 vec2 _f0;
} ;

struct _GLF_struct_11 {
 bvec3 _f0;
 mat4x3 _f1;
 float _f2;
 float _f3;
 mat3x4 _f4;
 uvec2 _f5;
} ;

struct _GLF_struct_10 {
 vec2 _f0;
} ;

struct _GLF_struct_13 {
 _GLF_struct_10 _f0;
 _GLF_struct_11 _f1;
 ivec3 _f2;
 _GLF_struct_12 _f3;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 uvec4 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 uint _f1;
 int _f2;
 uvec2 _f3;
 mat4 _f4;
 vec4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_6 {
 uvec3 _f0;
 int _f1;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 mat3x4 _f1;
 ivec2 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 _GLF_struct_8 _f5;
} ;

struct _GLF_struct_4 {
 int _f0;
 uint _f1;
 bvec2 _f2;
 ivec4 _f3;
 uvec2 _f4;
} ;

struct _GLF_struct_3 {
 bvec3 _f0;
 uvec3 _f1;
 ivec2 _f2;
 bvec2 _f3;
} ;

struct _GLF_struct_2 {
 mat4 _f0;
 ivec3 _f1;
 uvec2 _f2;
 ivec2 _f3;
 mat3 _f4;
 mat2 _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 uint num_workgroup;
 _GLF_struct_3 _f1;
 float _f2;
 _GLF_struct_4 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_0 {
 float _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 _GLF_struct_0 _f1;
 mat3x2 _f2;
 bvec2 _f3;
 mat2x3 _f4;
} ;

struct _GLF_struct_14 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_9 _f2;
 _GLF_struct_13 _f3;
 bvec2 _f4;
 mat3x4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_struct_1(vec3(1.0), _GLF_struct_0(1.0, uvec4(1u)), mat3x2(1.0), bvec2(true), mat2x3(1.0)), _GLF_struct_5(_GLF_struct_2(mat4(1.0), ivec3(1), uvec2(1u), ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, min(_GLF_IDENTITY((1) >> 0, ((1) >> 0) - 0), _GLF_IDENTITY((1) >> 0, 0 | ((1) >> 0)))))), mat3(1.0), mat2(_GLF_IDENTITY(1.0, (1.0) - 0.0)), _GLF_IDENTITY(uvec4(1u), (false ? _GLF_FUZZED(uvec4(80381u, 898u, 10245u, 135893u)) : uvec4(1u)))), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))) << 0u), _GLF_struct_3(bvec3(true), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)), _GLF_IDENTITY(~ (~ ((uvec3(1u)))), ~ (~ (~ (~ ((uvec3(1u)))))))) / uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(760.320, 9.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) * exp(0.0)), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(760.320, 9.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) * exp(0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(760.320, 9.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) * exp(0.0)), _GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), (_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(vec2(760.320, 9.0)) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)) * exp(0.0)))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(45938) : 1)), 1))) - 0)), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) / ivec2(1, 1))) << ivec2(0, 0))) / ivec2(1, 1)), bvec2(true)), 1.0, _GLF_struct_4(1, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, 0u ^ (1u)))), _GLF_IDENTITY(bvec2(true), bvec2(bvec3(bvec2(true), false))), _GLF_IDENTITY(ivec4(1), min(ivec4(1), _GLF_IDENTITY(ivec4(1), (ivec4(1)) * ivec4(1, 1, 1, 1)))), uvec2(1u)), ivec4(1)), _GLF_struct_9(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec4(bvec3(true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true), true)), false)))), mat3x4(1.0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) * 1))))), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (1 ^ 1)), int(int(_GLF_IDENTITY(1, (1) >> (1 ^ 1))))), 1)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) * 1))))), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (1 ^ 1)), int(int(_GLF_IDENTITY(1, (1) >> (1 ^ 1))))), 1)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) * 1))))), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (1 ^ 1)), int(int(_GLF_IDENTITY(1, (1) >> (1 ^ 1))))), 1)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) * 1))))), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (1 ^ 1)), int(int(_GLF_IDENTITY(1, (1) >> (1 ^ 1))))), 1)))) : _GLF_FUZZED(-58863))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) << 0)), (~ (_GLF_IDENTITY(1, (1) << 0))) * 1))))), 0 | (_GLF_IDENTITY(1, min(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> (1 ^ 1)), int(int(_GLF_IDENTITY(1, (1) >> (1 ^ 1))))), 1))))))) >> 0)) | (1)), _GLF_IDENTITY(1, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1 : _GLF_FUZZED(17362)))))), (_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) << ivec2(0, 0))), clamp(ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) << ivec2(0, 0))), ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) << ivec2(0, 0))), ivec2(_GLF_IDENTITY(ivec2(ivec2(1)), (ivec2(ivec2(1))) << ivec2(0, 0))))))) | (ivec2(1)))) ^ ivec2(0, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, max(0, 0)), 0, 0)))), _GLF_struct_6(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(1, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) | (ivec2(1, _GLF_IDENTITY(0, (0) >> 0))), ivec2(0, 0) | ((ivec2(1, 0)) | (ivec2(1, _GLF_IDENTITY(0, (0) >> 0)))))), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, int(ivec3(1, (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) * 1))), 0))), 0)) | (ivec2(1, 0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0), (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(1), ivec2(1))) | (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0), max(ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0), ivec2(_GLF_IDENTITY(1, ~ (~ (1))), 0))))), (ivec2(1, 0)) | (ivec2(1, 0))))))), _GLF_IDENTITY((_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) | (ivec2(1, _GLF_IDENTITY(0, (0) >> 0))), ~ (~ ((ivec2(1, 0)) | (ivec2(1, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, (0) | 0) : _GLF_FUZZED(-997)))))) >> 0))))))), min(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | (ivec2(1, 0))), _GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | (ivec2(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (~ (1))))), 0)))))))), clamp((_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | _GLF_IDENTITY((ivec2(1, _GLF_IDENTITY(0, (0) >> 0))), ~ (_GLF_IDENTITY(~ ((ivec2(1, _GLF_IDENTITY(0, (0) >> 0)))), (~ ((ivec2(1, _GLF_IDENTITY(0, (0) >> 0))))) << (ivec2(0, 0) << _GLF_IDENTITY(ivec2(8), ivec2(8))))))), min(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, min(1, 1)), 0), (ivec2(1, 0)) | (ivec2(1, 0))), _GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | (ivec2(1, 0)))))))), (_GLF_IDENTITY(ivec2(1, _GLF_IDENTITY(0, max(0, 0))), ivec2(0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | (ivec2(1, _GLF_IDENTITY(0, (0) >> 0)))), (_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(-69135))))), 0, 0)))) | (ivec2(1, _GLF_IDENTITY(0, (0) >> 0))))) * ivec2(1, 1)), min(_GLF_IDENTITY(ivec2(1, 0), _GLF_IDENTITY((ivec2(1, 0)) | (ivec2(1, 0)), ~ (~ (_GLF_IDENTITY((ivec2(1, 0)) | (ivec2(1, 0)), ((ivec2(1, 0)) | (ivec2(1, 0))) >> ivec2(0, 0)))))), _GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | (ivec2(1, 0)))))))), (_GLF_IDENTITY(ivec2(1, 0), ivec2(0, 0) + (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | (ivec2(1, _GLF_IDENTITY(0, (0) >> 0)))), min(_GLF_IDENTITY(ivec2(1, 0), (_GLF_IDENTITY(ivec2(1, 0), max(ivec2(1, 0), ivec2(1, 0)))) | (ivec2(1, 0))), _GLF_IDENTITY(ivec2(1, 0), (ivec2(1, 0)) | (ivec2(1, 0)))))))))) ^ _GLF_IDENTITY((ivec2(0, 0) << _GLF_IDENTITY(ivec2(1), ivec2(1))), (ivec2(1, 1) & ivec2(1, 1)) * ((ivec2(0, 0) << _GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), (_GLF_IDENTITY(ivec2(1), (ivec2(1)) << ivec2(0, 0))) | (ivec2(1))), ivec2(1)))))))), max(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), max((~ (0)), _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), 0 + ((~ (0)))), _GLF_IDENTITY((~ (0)), ((~ (0))) | 0), (~ (0))))))), ((1) << _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), max((~ (0)), _GLF_IDENTITY((~ (0)), clamp(_GLF_IDENTITY((~ (0)), 0 + ((~ (0)))), _GLF_IDENTITY(_GLF_IDENTITY((~ (0)), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(34731))) + (_GLF_IDENTITY((~ (0)), (true ? (~ (0)) : _GLF_FUZZED(-14533))))), ((~ (0))) | 0), _GLF_IDENTITY((~ (0)), min((~ (0)), (~ (0)))))))))) / 1)), 1))), _GLF_struct_7(vec3(1.0), 1u, 1, uvec2(1u), mat4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), vec4(1.0), vec3(1.0)), _GLF_struct_8(vec2(1.0), uvec4(1u), vec4(1.0))), _GLF_struct_13(_GLF_struct_10(vec2(1.0)), _GLF_struct_11(bvec3(true), mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7.8)), float(1.0), bool(true))), mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2873.6940)))), float(_GLF_FUZZED((_GLF_IDENTITY(vec4(10.81, 731.651, 281.984, -9.4).r * -6.2, 1.0 * (vec4(10.81, 731.651, 281.984, -9.4).r * -6.2))))), bool(_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)), 0.0, 0.0, 1.0, tan(0.0), determinant(mat2(0.0, cos(0.0), 0.0, 0.0)))), (float(mat2x3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-0.7) : 1.0)), 0.0, 0.0, 1.0, tan(0.0), determinant(mat2(0.0, cos(0.0), 0.0, 0.0))))) - 0.0)), 1.0, mat3x4(1.0), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), (1u) | (1u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))))) >> 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))), ~ (~ (clamp(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), max(1u, 1u))))))))), ~ (~ (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(1u, 1u))))))), _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u))) * (uvec2(1u)))), ivec3(_GLF_IDENTITY(1, min(1, 1))), _GLF_struct_12(vec2(1.0))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true)))), mat3x4(1.0));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)), uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupSize, clamp(gl_WorkGroupSize, gl_WorkGroupSize, gl_WorkGroupSize)))))))).x, min(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), ~ (~ (_GLF_IDENTITY(uvec3(uvec3(gl_WorkGroupSize)), uvec3(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_size)))) * (uvec3(uvec3(gl_WorkGroupSize)))))))).x)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(mat3x2(1.0), mat4x3(1.0), mat4x2(1.0), _GLF_struct_15(mat3x4(1.0), _GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u) * workgroup_id, mat2x4(1.0)), 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (bool(bool(_GLF_DEAD(false)))))))))))), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))))))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))))), (! (! (_GLF_DEAD(false)))) || false), false || (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(4.9), _GLF_FUZZED(4.2)), bvec2(false, false))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(3.8, 69.88, -571.756, 3.1)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, exp(0.0))), dot(vec4(0.0, sin(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, exp(0.0)))), 1.0, tan(0.0), sqrt(0.0))), (float(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 0.0, tan(0.0), _GLF_IDENTITY(dot(vec4(0.0, sin(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, exp(0.0))), dot(vec4(0.0, sin(0.0), 0.0, 1.0), vec4(0.0, 0.0, 0.0, exp(0.0)))), 1.0, tan(0.0), sqrt(0.0)))) * 1.0)))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), _GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0), (false ? _GLF_FUZZED((mat2(116.620, 1.6, -398.896, -7.8))) : (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))))))), float(_GLF_FUZZED(631.944)), bool(false)))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(3.8, 69.88, -571.756, 3.1)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))))), float(_GLF_FUZZED(631.944)), bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(3.8, 69.88, -571.756, 3.1)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))))), float(_GLF_FUZZED(631.944)), bool(false))))))), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), transpose(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(-5600.7952, 9412.1973, 4.2, -0.5)) : _GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))))))), (false ? _GLF_FUZZED(mat2(3.8, 69.88, -571.756, 3.1)) : _GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(9867.0714) : injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)))), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0))))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(_GLF_IDENTITY(mat3x4(mat2(0.0, 0.0, 0.0, 0.0)), (mat3x4(mat2(0.0, 0.0, 0.0, 0.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0), injectionSwitch.y, injectionSwitch.y)), float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) - mat2(0.0, 0.0, 0.0, 0.0))) * mat2(1.0)))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(71.22)), float(0.0), bool(true))), 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))))), float(_GLF_FUZZED(631.944)), bool(false)))))))) - 0.0)) - 0.0))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), _GLF_IDENTITY(mat2(mat3x4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))), mat2(mat2(mat2(mat3x4(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))))))) * mat2(1.0)), (false ? _GLF_FUZZED(mat2(3.8, 69.88, -571.756, 3.1)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), mat2(mat2x4(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0)), (_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))).y, min(injectionSwitch.y, injectionSwitch.y)))), 0.0, 0.0, 0.0), _GLF_IDENTITY((mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0), (true ? (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0) : _GLF_FUZZED(mat2(-7.5, 5.6, 429.374, 5.8)))))) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 5582.1307, 6.4, 2.0)))))), 0.0 + (float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * _GLF_IDENTITY(mat2(1.0), (true ? mat2(1.0) : _GLF_FUZZED(mat2(-1.0, 5582.1307, 6.4, 2.0))))))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), (transpose(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))) / mat2(1.0, 1.0, 1.0, 1.0)))), (mat2(injectionSwitch.y, 0.0, 0.0, 0.0)) * mat2(1.0))))), float(_GLF_FUZZED(631.944)), bool(false)))))))))))))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_16._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), subgroup_base, subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), clamp(_GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + subgroup_local_id, _GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + subgroup_local_id, _GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(subgroup_local_id + 1)), (uint(uint(subgroup_local_id + 1))) << 0u))) % subgroup_size), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_struct_replacement_16._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)) + ((subgroup_local_id + 1) % subgroup_size), (_GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)) >> 0u), _GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), (true ? min(_GLF_IDENTITY(_GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((subgroup_local_id + 1) % subgroup_size)) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) ^ 0u)), _GLF_IDENTITY((_GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)), min((_GLF_struct_replacement_16._f3.workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) * 1u) + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))) >> 0u), _GLF_struct_replacement_16._f3.workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, 0 ^ (1))) % subgroup_size), 0u ^ (((subgroup_local_id + 1) % subgroup_size)))) : _GLF_FUZZED(bitfieldExtract(subgroup_base, 57763, -83209)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y))), float(_GLF_FUZZED(418.302)), bool(false))), injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y))), float(_GLF_FUZZED(418.302)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y))), float(_GLF_FUZZED(418.302)), bool(false))), injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y))), float(_GLF_FUZZED(418.302)), bool(false))), injectionSwitch.y)) : _GLF_FUZZED(92.68))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y))), float(_GLF_FUZZED(418.302)), bool(false))), injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(0.0)))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(58.27)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(0.0)))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(58.27)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, abs(0.0)))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, determinant(mat2(1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 1.0, 1.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0, 1.0))))), injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(58.27)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y)) || false)))) && true))) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-51.54) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(418.302)), bool(false))), injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y, max(injectionSwitch.y, injectionSwitch.y))) * _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), _GLF_IDENTITY((false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), clamp((false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), _GLF_IDENTITY((false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), clamp(_GLF_IDENTITY((false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), mix(float((false ? _GLF_FUZZED(-51.54) : injectionSwitch.y)), float(_GLF_FUZZED(533.287)), bool(false))), (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), _GLF_IDENTITY((false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), (true ? (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y) : _GLF_FUZZED(-2.3))))))))), float(_GLF_FUZZED(418.302)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(bool(false))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false || (! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), false)))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false || (! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), false)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), false || (! (_GLF_IDENTITY(bool(false), bool(bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))), false)))))))) || false), false))))))), injectionSwitch.y)) - 0.0)), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) / vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-0.9), _GLF_FUZZED(6.6)), bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec3(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)))))))), _GLF_IDENTITY(false, (false) || false)))).y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-51.54) : injectionSwitch.y, max(_GLF_IDENTITY(false ? _GLF_FUZZED(-51.54) : injectionSwitch.y, mix(float(false ? _GLF_FUZZED(-51.54) : injectionSwitch.y), float(_GLF_FUZZED(-3199.0649)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false ? _GLF_FUZZED(-51.54) : injectionSwitch.y, clamp(_GLF_IDENTITY(false ? _GLF_FUZZED(-51.54) : injectionSwitch.y, 1.0 * (false ? _GLF_FUZZED(-51.54) : injectionSwitch.y)), _GLF_IDENTITY(false ? _GLF_FUZZED(-51.54) : injectionSwitch.y, clamp(false ? _GLF_FUZZED(-51.54) : injectionSwitch.y, false ? _GLF_FUZZED(-51.54) : injectionSwitch.y, false ? _GLF_FUZZED(-51.54) : injectionSwitch.y)), false ? _GLF_FUZZED(-51.54) : injectionSwitch.y))))))), float(_GLF_IDENTITY(_GLF_FUZZED(418.302), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(_GLF_FUZZED(418.302), mix(float(_GLF_IDENTITY(_GLF_FUZZED(418.302), max(_GLF_FUZZED(418.302), _GLF_FUZZED(418.302)))), float(_GLF_FUZZED(-2.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(6.5)), bool(false))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(length(vec3(-8.5, 3.1, -850.048))))), 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-37.46, 7.3, -5.5, 8.6, -522.471, 4.3, -375.689, 9.7, 50.03, -64.20, 4.4, -299.258, 3643.0144, 9913.9740, 0.8, -4031.7566))))), float(mat3x2(float(_GLF_IDENTITY(mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_IDENTITY(_GLF_FUZZED(418.302), mix(float(_GLF_FUZZED(418.302)), float(_GLF_FUZZED(-2.6)), bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(6.5)), float(mat4x3(float(_GLF_FUZZED(6.5)), _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), 1.0, exp(0.0), 1.0, sin(0.0), 1.0, sin(0.0), 0.0, abs(0.0), 0.0))), bool(false))), _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(length(vec3(-8.5, 3.1, -850.048))))), 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-37.46, 7.3, -5.5, 8.6, -522.471, 4.3, -375.689, 9.7, 50.03, -64.20, 4.4, -299.258, 3643.0144, 9913.9740, 0.8, -4031.7566))))), 1.0, sqrt(0.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), determinant(mat2(0.0, 1.0, 0.0, 0.0))))), clamp(float(_GLF_IDENTITY(mat4(_GLF_FUZZED(418.302), 1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-16.35) : 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, log(1.0), 0.0, 1.0, abs(1.0))))), (true ? mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-37.46, 7.3, -5.5, 8.6, -522.471, 4.3, -375.689, 9.7, 50.03, -64.20, 4.4, -299.258, 3643.0144, 9913.9740, 0.8, -4031.7566))))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (_GLF_IDENTITY(mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (true ? mat4(_GLF_FUZZED(418.302), _GLF_IDENTITY(1.0, (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)) || false)) ? _GLF_FUZZED(7.7) : 1.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-37.46, 7.3, -5.5, 8.6, -522.471, _GLF_IDENTITY(4.3, max(4.3, 4.3)), -375.689, 9.7, 50.03, -64.20, _GLF_IDENTITY(4.4, 1.0 * (4.4)), -299.258, 3643.0144, 9913.9740, _GLF_IDENTITY(0.8, 0.0 + (0.8)), -4031.7566))))), float(_GLF_IDENTITY(mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(_GLF_FUZZED(418.302), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(-37.46, 7.3, -5.5, 8.6, -522.471, 4.3, _GLF_IDENTITY(-375.689, (true ? -375.689 : _GLF_FUZZED(atan(injectionSwitch[0], (false ? 1.6 : 3.7))))), 9.7, 50.03, -64.20, _GLF_IDENTITY(4.4, max(4.4, 4.4)), -299.258, 3643.0144, 9913.9740, 0.8, _GLF_IDENTITY(-4031.7566, clamp(-4031.7566, -4031.7566, -4031.7566))))))))))), _GLF_IDENTITY(bool(false), _GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false, bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false, bool(bool((_GLF_IDENTITY(bool(false), ! (! (bool(false))))) || false))))))))), injectionSwitch.y)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(false, false || (false))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), true && (false || _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(((_GLF_IDENTITY(false, false || (false)))), bool(bool(((_GLF_IDENTITY(false, false || (false))))))) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), false || (_GLF_IDENTITY(bool(false), false || (bool(false))))))), false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), false || (_GLF_IDENTITY(bool(false), false || (bool(false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false))), (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, min(64, 64)), 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, true && (false)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (_GLF_IDENTITY(true ? _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid])) : _GLF_FUZZED(virtual_gid), (true ? _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid])) : _GLF_FUZZED(virtual_gid)) | (_GLF_IDENTITY(true ? _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid])) : _GLF_FUZZED(virtual_gid), 1u * (true ? _GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid])) : _GLF_FUZZED(virtual_gid))))))), 4, 64, 2);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x) / round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))))).x)) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), 0u | (~ (~ (virtual_gid))))), clamp(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(~ (~ (virtual_gid)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(~ (~ (virtual_gid)), 0u ^ _GLF_IDENTITY((~ (~ (virtual_gid))), ((~ (~ (virtual_gid)))) | ((~ (~ (virtual_gid))))))), 0u ^ (uint(_GLF_IDENTITY(~ (~ (virtual_gid)), 0u ^ (~ (~ (virtual_gid)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), (true ? _GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))) : _GLF_FUZZED(subgroup_size))))), _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))) | (virtual_gid))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
