#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 ^ (_GLF_IDENTITY(int(_GLF_IDENTITY(5, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(5, (5) >> 0), (0 << _GLF_IDENTITY(int(3), int(3)))), ivec2(_GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(5, (5) >> 0), (0 << _GLF_IDENTITY(int(3), int(3)))), 0, 0), min(ivec4(ivec2(_GLF_IDENTITY(5, (5) >> 0), (0 << _GLF_IDENTITY(int(3), int(3)))), 0, 0), _GLF_IDENTITY(ivec4(ivec2(_GLF_IDENTITY(5, (5) >> 0), (0 << _GLF_IDENTITY(int(3), int(3)))), 0, 0), max(ivec4(ivec2(_GLF_IDENTITY(5, (5) >> 0), (0 << _GLF_IDENTITY(int(3), int(3)))), 0, 0), ivec4(ivec2(_GLF_IDENTITY(5, (5) >> 0), (0 << _GLF_IDENTITY(int(3), int(3)))), 0, 0)))))))))), ~ (~ (int(5)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(length(injectionSwitch)) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(float(injectionSwitch[0]), max(float(injectionSwitch[0]), float(injectionSwitch[0]))))), injectionSwitch[1])).x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x)) : _GLF_FUZZED(45885))), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(45885), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(45885), (_GLF_FUZZED(45885)) | (_GLF_FUZZED(45885))))))))), int(ivec3(_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(45885), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(45885), (_GLF_FUZZED(45885)) | (_GLF_FUZZED(45885))))))))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(45885), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(45885), (_GLF_FUZZED(45885)) | (_GLF_FUZZED(45885))))))))), (true ? 0 ^ (_GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? int(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(45885), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(45885), (_GLF_FUZZED(45885)) | (_GLF_FUZZED(45885))))))))) : _GLF_FUZZED(-95509)))) << 0), 0, 1)))), (int(_GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(34.96)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), injectionSwitch.x))) * 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.9)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) - 0.0)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.y = num_workgroup;
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true)))))));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = workgroup_size;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])).x;
 do
  {
   for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), max(~ (0), ~ (0)))))); _injected_loop_counter --)
    {
     GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = workgroup_id;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - sqrt(0.0)), 1.0) * (injectionSwitch)).x > injectionSwitch.y))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY((_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (1 ^ 1)) | 0, int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))), 0 | 0, 0 | 0)), 0 | 0))), ((_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))), 0 | 0, 0 | 0)), (_GLF_IDENTITY(0 | _GLF_IDENTITY(0, clamp(0, 0, 0)), clamp(_GLF_IDENTITY(0 | 0, int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | _GLF_IDENTITY(0, (0) + 0))))))), 0 | _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, int(ivec2(0, 1))) : _GLF_FUZZED(-49661))), 0 | 0))) | (_GLF_IDENTITY(0 | 0, clamp(_GLF_IDENTITY(0 | 0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0 | 0, (0 | 0) | (_GLF_IDENTITY(0 | 0, 0 | (0 | 0))))), int(int(int(0 | 0)))))), 0 | 0, 0 | 0)))), _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(78974))) | 0)))) | ((_GLF_IDENTITY(0 | 0, max(_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (0) ^ 0))) | 0, clamp(_GLF_IDENTITY(0 | 0, _GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | _GLF_IDENTITY(0, int(ivec2(0, 0)))))))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, (0) | (0)) | 0), int(int(int(0 | 0))))), (int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))) | (int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))), (int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))) - 0)), max(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))), (int(_GLF_IDENTITY(int(0 | 0), _GLF_IDENTITY(int(int(int(0 | 0))), (int(int(int(0 | 0)))) ^ (0 << _GLF_IDENTITY(int(6), int(6))))))) - 0)), _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))), (int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))) - 0)), 0 | (int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))), (int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))) - 0))))))), clamp(int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(int(0 | 0), int(int(int(_GLF_IDENTITY(0 | 0, max(0 | 0, _GLF_IDENTITY(0 | 0, clamp(0 | 0, 0 | 0, _GLF_IDENTITY(0 | 0, 0 | (0 | 0)))))))))), int(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))), (_GLF_IDENTITY(int(0 | 0), int(_GLF_IDENTITY(int(int(0 | _GLF_IDENTITY(0, min(0, 0)))), (int(int(0 | _GLF_IDENTITY(0, min(0, 0))))) << int(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))), 1, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))), (int(_GLF_IDENTITY(int(0 | _GLF_IDENTITY(0, (0) << 0)), int(int(int(0 | 0)))))) - 0))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))), _GLF_IDENTITY((int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))), min((int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))), (int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0)))))))) - 0))), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(int(0 | 0), int(int(int(0 | 0))))), (int(_GLF_IDENTITY(int(0 | _GLF_IDENTITY(0, (0) >> int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(int(int(0 | 0)))))) - 0))))))))), 0 | 0, 0 | 0)), 0 | 0)))))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec4(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(true, (true) || false), false, false)))))))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), vec2(mat3x2(sqrt(vec2(1.0, 1.0)), sin(0.0), 1.0, 0.0, 0.0)))) - log(vec2(1.0, 1.0)))).x > injectionSwitch.y)), bool(bool(bool((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > injectionSwitch.y))))))))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        barrier();
      }
    }
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) ^ 0), int(6)))))), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ~ (~ ((1 << _GLF_IDENTITY(int(6), int(6)))))))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               barrier();
              }
             else
              {
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
          }
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
    }
   else
    {
    }
  }
 uint workgroup_base = GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  barrier();
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 do
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true))), false, false)))), false, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), false, false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), false, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), true, false)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))))), true, true)), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)), true)), false, false))))))))) && true))))), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true))), false, false)))), false, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), false, false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), false, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), true, false)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))))), true, true)), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)), true)), false, false))))))))) && true))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true))), false, false)))), false, false)))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), false, false))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), false, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), true, false)))), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))))), true, true)), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)), true)), false, false))))))))) && true))))), true && (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true))), false, false)))), false, false))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true))), false, false)))), false, false))), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true))), false, false)))), false, false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false)), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(true, (true) && true))), false, false)))), false, false))), true)), true))), true, false))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), true, true)), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true, true)), false, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))), true, true, false)))), true)))), false, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), true)))), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, false)))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))))), true, true, false)))), true)))), false, false))))), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), false, false)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true, true))))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec2(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))))))), true, false)))), bvec2(bvec4(bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))))), true)), bvec2(bvec4(bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) && true)) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))))), true)), false, true)))), true, true)), false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec3((false), true, true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)), true)), false, false))))))))) && true)))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (((injectionSwitch.x > injectionSwitch.y))) || false) || false))))
          barrier();
         GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, uvec3(0u, 0u, 0u) ^ (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base))) >> uvec3(0u, 0u, 0u)).z, _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[0], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[1], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[2])).z, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z), (max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z)) ^ _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[0], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[1], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[2])).z, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z), (max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z)) ^ 0u), 0u, 1u, 0u)), (uint(uvec4(_GLF_IDENTITY(max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, uvec3(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[0], GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[1], _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[2], (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[2]) | (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base[2])))).z, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z), (max(_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, max(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z)), GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z)) ^ 0u), 0u, 1u, 0u))) << 0u))) + _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_id)), 0u + (uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((subgroup_id))))) ^ 0u) * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(0 | 0, min(0 | 0, _GLF_IDENTITY(0 | 0, max(0 | 0, 0 | 0)))))); _injected_loop_counter --)
        {
         GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), ! (! (true && (false))))) || false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       else
        {
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))))), (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), ! (! (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ((! (_GLF_IDENTITY(false, false || (false))))) || false))))))))))) && true)))))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), bool(bvec2(! (! (_GLF_IDENTITY(true, (true) || false))), false))))))))) && true))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) && true), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true, ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true) && true))), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))) && true))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true)))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true)))), true, false)), true && (bool(bvec3(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, (false) || false), true), true)))), true, false))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (false) || false)) || false))) && true, ((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), (bool(bvec4(false, false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))), false))) && true)), (false) || false)) || false))) && true) && true)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), true, false, false))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-430.769)), vec2(_GLF_FUZZED(-2587.5379), (injectionSwitch)[1]), bvec2(false, true))).x < injectionSwitch.y))))))) && true), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))), false, false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, false || ((_GLF_DEAD(false)) && true))), false, false, false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false, true)), true, true, false))))) || false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && true), false, false, false))))))) && true), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false, false)))) || false))) || false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true))))))) && true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(-4101.4455))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(dot(vec3(-4.8, -675.919, -6.5), vec3(-189.741, 4.9, 0.9))) : _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (true ? float(vec3(injectionSwitch.y, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-0.1))), mix(float(_GLF_FUZZED(640.408)), float(0.0), bool(true)))) / 1.0), 1.0)) : _GLF_FUZZED(-4.4))), max(_GLF_IDENTITY(false ? _GLF_FUZZED(dot(vec3(-4.8, -675.919, -6.5), vec3(_GLF_IDENTITY(-189.741, (false ? _GLF_FUZZED(-7.3) : -189.741)), 4.9, 0.9))) : _GLF_IDENTITY(float(vec3(injectionSwitch.y, 0.0, 1.0)), (true ? float(vec3(injectionSwitch.y, 0.0, 1.0)) : _GLF_FUZZED(_GLF_IDENTITY(-4.4, (false ? _GLF_FUZZED(-685.490) : -4.4))))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-2.9), (false ? _GLF_FUZZED(-56.67) : _GLF_FUZZED(-2.9)))), float(false ? _GLF_FUZZED(dot(vec3(-4.8, -675.919, _GLF_IDENTITY(-6.5, _GLF_IDENTITY(float(vec3(-6.5, 0.0, 0.0)), exp(_GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0)))) * (float(vec3(-6.5, 0.0, 0.0)))))), vec3(-189.741, _GLF_IDENTITY(4.9, _GLF_IDENTITY(float(mat4x2(4.9, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0)))), 1.0)), max(_GLF_IDENTITY(float(mat4x2(4.9, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-1435.8958)), float(float(mat4x2(4.9, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(mat4x2(4.9, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 1.0)), (float(mat4x2(4.9, 1.0, 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, (injectionSwitch.y) - 0.0)), 0.0, 0.0, 1.0, 1.0))) * 1.0)))), 0.9))) : _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, 1.0), (vec3(injectionSwitch.y, 0.0, 1.0)) / vec3(1.0, 1.0, 1.0))), float(mat3x2(float(vec3(injectionSwitch.y, 0.0, 1.0)), 0.0, _GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(-2.2))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.3)), bool(false))), determinant(_GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, log(1.0), 0.0, 1.0, 1.0, 1.0), (mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.2)), float(1.0), bool(true))), 1.0, 1.0)) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) : _GLF_FUZZED(mat4(951.663, 44.54, 89.26, -99.11, _GLF_IDENTITY(-171.752, max(-171.752, -171.752)), -885.757, 7.3, 6965.5527, 759.266, -89.14, _GLF_IDENTITY(-99.48, (_GLF_IDENTITY(-99.48, (true ? -99.48 : _GLF_FUZZED(6.0)))) * 1.0), -52.20, 0.2, 1.4, 0.9, -427.450))))), 1.0))), (true ? float(vec3(injectionSwitch.y, 0.0, 1.0)) : _GLF_FUZZED(-4.4)))), bool(true))), false ? _GLF_FUZZED(dot(vec3(-4.8, -675.919, -6.5), vec3(-189.741, 4.9, _GLF_IDENTITY(0.9, max(0.9, 0.9))))) : _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0, 1.0)), (true ? float(vec3(injectionSwitch.y, 0.0, 1.0)) : _GLF_FUZZED(-4.4)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true)))))))), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (true ? _injected_loop_counter ++ : _GLF_FUZZED(_injected_loop_counter)))) / 1), _GLF_IDENTITY((_injected_loop_counter ++) >> (0 >> _GLF_IDENTITY(int(7), int(7))), ((_injected_loop_counter ++) >> (0 >> _GLF_IDENTITY(int(7), int(7)))) << 0)))
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), (_GLF_DEAD(false)) || false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z, _GLF_IDENTITY((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z), max((GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z), (GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.z))) + 0u) + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 for(int _injected_loop_counter = (((1 | 1) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) >> (1 ^ 1)), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base.x = next_virtual_gid;
 atomicStore(buf[_GLF_IDENTITY(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, min(GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base, GLF_merged3_0_1_16_1_1_13_2_1_14next_virtual_gidnum_workgroupworkgroup_base)).x], _GLF_IDENTITY(uint(1), max(uint(1), uint(1))), 4, 64, 4);
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
      barrier();
     barrier();
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(_GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), (0u) / 1u) ^ (_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], min(_GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))), clamp(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))), _GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))), max(_GLF_IDENTITY(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))), min(_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))), _GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))))), _GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))))), _GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], ~ (~ (buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0], _GLF_IDENTITY(_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY((GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]), (true ? (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base[0]) : _GLF_FUZZED(num_workgroup)))) / 1u) | ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) & _GLF_IDENTITY(39352u, min(39352u, _GLF_IDENTITY(39352u, 0u | (39352u)))))), _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base, uvec2(0u, 0u) ^ (GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base))[1])).x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY(1u, (1u) << 0u), 1u), (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), 1u, 1u)) | (uvec4(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u, 1u)))))]))))), _GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, max(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x))], (_GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], max(buf[_GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, _GLF_IDENTITY(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, min(GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x, GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x))))], _GLF_IDENTITY(buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], (buf[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x]) ^ 0u)))) + 0u) : _GLF_IDENTITY(_GLF_FUZZED(next_virtual_gid), min(_GLF_FUZZED(next_virtual_gid), _GLF_FUZZED(next_virtual_gid))))))))), 4, 64, _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0, (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (1 * (0)) << 0))) / 1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, ((_GLF_IDENTITY(0, 1 * (0))) / 1) / 1), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) >> 0)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(_GLF_IDENTITY(4, int(ivec4(_GLF_IDENTITY(4, (4) | (4)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))), int(4)))))))), _GLF_IDENTITY((ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, ((_GLF_IDENTITY(0, 1 * (0))) / 1) / 1), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))))))) | ivec2(0, 0), ((ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, ((_GLF_IDENTITY(0, 1 * (0))) / 1) / 1), (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(int(4), int(4)), clamp(_GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4)), _GLF_IDENTITY(int(4), int(4))))))))) | ivec2(0, 0)) >> ivec2(0, 0)))), min(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, ((_GLF_IDENTITY(0, 1 * (0))) / 1) / 1), (0 >> _GLF_IDENTITY(int(4), int(4))))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true) ? _GLF_FUZZED(-84225) : _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, ((_GLF_IDENTITY(0, 1 * (0))) / _GLF_IDENTITY(1, (1) >> 0)) / 1), (0 >> _GLF_IDENTITY(int(4), int(4))))), int(ivec2(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), 0 ^ ((_GLF_IDENTITY(0, 1 * (0))))) / 1, (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (_GLF_IDENTITY(1 * (0), (1 * (0)) | (1 * (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), 1 * (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (_GLF_IDENTITY(1 * (0), (1 * (0)) | (1 * (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x))))), int(int((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), (_GLF_IDENTITY(1 * (0), (1 * (0)) | (1 * (0)))) | int(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) / _GLF_IDENTITY(1, (1) >> 0)) / 1), (0 >> _GLF_IDENTITY(int(4), int(4))))), 0))))), int(ivec2(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 1 * (1))) | (1)), ((_GLF_IDENTITY(0, 1 * (0))) / _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))) / 1), (0 >> _GLF_IDENTITY(int(4), int(4)))))))))) >> 0, min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0, (_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 1 * (~ (0))))))))))) / 1), (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), 1 * (~ (0))))))))))) / 1)) << 0)) >> 0))) << 0))), max((_GLF_IDENTITY(_GLF_IDENTITY(0, (0) * int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(70993) : 0)), (0) / 1), (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, (1) << 0))), 1, 1)))) >> _GLF_IDENTITY(0, (0) | (0)), _GLF_IDENTITY(min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) / 1) * (0))) / 1)) >> 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) | (1)) * (0))) / 1 : _GLF_FUZZED(-74216))), ((_GLF_IDENTITY(0, 1 * (0))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) | ((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1))))) ^ 0))) >> 0), clamp(min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) / 1) * (0))) / 1)) >> 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) | (1)) * (0))) / 1 : _GLF_FUZZED(-74216))), ((_GLF_IDENTITY(0, 1 * (0))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) | ((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1))))) ^ 0))) >> 0), min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) / 1) * (0))) / 1)) >> 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) | (1)) * (0))) / 1 : _GLF_FUZZED(-74216))), ((_GLF_IDENTITY(0, 1 * (0))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) | ((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1))))) ^ 0))) >> 0), _GLF_IDENTITY(min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) / 1) * (0))) / 1)) >> 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) | (1)) * (0))) / 1 : _GLF_FUZZED(-74216))), ((_GLF_IDENTITY(0, 1 * (0))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) | ((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1))))) ^ 0))) >> 0), (min((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) / 1) * (0))) / 1)) >> 0, (_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1, 0 ^ (1)) * (0))) / 1, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, (_GLF_IDENTITY(true, (true) || false) ? (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (1) | (1)) * (0))) / 1 : _GLF_FUZZED(-74216))), ((_GLF_IDENTITY(0, 1 * (0))) / 1) | _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1), (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), (int(1)) ^ 0))) | ((_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), ((_GLF_IDENTITY(0, 1 * (0)))) | ((_GLF_IDENTITY(0, 1 * (0)))))) ^ 0) / 1))))) ^ 0))) >> 0)) >> 0))))) << 0))), (_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(ivec3(1, 1, 1)))) | (1)) * (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, int(ivec3(0, 1, 1)))))))) / 1)) >> 0, _GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0) | 0, ~ (~ (_GLF_IDENTITY(((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0) | 0, (true ? ((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0) | 0 : _GLF_FUZZED(14834))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(53807) : _GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0, _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1), ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1))))) >> 0) | 0, (false ? _GLF_FUZZED(-80355) : ((_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, max(0, 0)), 1 * _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-91733) : (0))))) / 1)) >> 0) | 0))))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0, min((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1)), (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1))) / 1)) ^ 0)))) >> 0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> _GLF_IDENTITY(0, (0) | (0))))), max((_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0, min((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1)), (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1))) / 1)) ^ 0)))) >> 0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> _GLF_IDENTITY(0, (0) | (0))))), (_GLF_IDENTITY((_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> 0, min((_GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))) / 1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1)), (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0, 1 * (0))) / 1), (~ (_GLF_IDENTITY((_GLF_IDENTITY(0, 1 * (0))), (_GLF_IDENTITY((_GLF_IDENTITY(0, _GLF_IDENTITY(1 * (0), int(ivec2(1 * (0), 1))))), ~ (~ ((_GLF_IDENTITY(0, 1 * (0))))))) >> _GLF_IDENTITY(0, max(0, 0))) / 1)) * 1))) / 1)) ^ 0)))) >> 0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, 1 * (0))) / 1)) >> _GLF_IDENTITY(0, (0) | (0))))))) << 0))))))));
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), clamp(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (true ? _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])) : _GLF_FUZZED(192.402))))), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, _GLF_IDENTITY(3.5, clamp(_GLF_IDENTITY(_GLF_IDENTITY(3.5, max(3.5, 3.5)), float(mat2(3.5, 1.0, 1.0, 0.0))), 3.5, 3.5)), -719.154).z)), bvec2(false, false)))[0], injectionSwitch[0])), injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))), 0.0, 1.0)), vec2(mat3x4(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))), 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))[0], injectionSwitch[0]), max(max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))), 0.0, 1.0)), vec2(mat3x4(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))), 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))[0], injectionSwitch[0]), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))), 0.0, 1.0)), vec2(mat3x4(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))), 0.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 1.0))))[0], injectionSwitch[0]))), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1506.4812, clamp(1506.4812, 1506.4812, _GLF_IDENTITY(1506.4812, min(1506.4812, _GLF_IDENTITY(1506.4812, clamp(1506.4812, 1506.4812, 1506.4812)))))), 3.5, -719.154).z, (false ? _GLF_FUZZED(-96.86) : vec3(_GLF_IDENTITY(1506.4812, clamp(1506.4812, 1506.4812, _GLF_IDENTITY(1506.4812, min(1506.4812, _GLF_IDENTITY(1506.4812, clamp(1506.4812, 1506.4812, 1506.4812)))))), 3.5, -719.154).z)))), bvec2(false, false)))[0], injectionSwitch[0]), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(531.539, clamp(531.539, _GLF_IDENTITY(531.539, (true ? 531.539 : _GLF_FUZZED(4.5))), 531.539))), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), vec2(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, _GLF_IDENTITY(-719.154, clamp(-719.154, -719.154, -719.154))).z)), bvec2(false, false))))[1]), vec2(_GLF_FUZZED(3669.2540), _GLF_FUZZED(8979.9810)), bvec2(false, false))), exp(0.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), transpose(transpose(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))), mix(vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(0, 0 ^ (0))])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false))))[1]), vec2(_GLF_FUZZED(3669.2540), _GLF_FUZZED(8979.9810)), bvec2(false, false))), exp(0.0), round(length(normalize(1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, sqrt(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))))[0], injectionSwitch[0]), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z)), bvec2(false, false)), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_IDENTITY(_GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z), min(_GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z), _GLF_FUZZED(vec3(1506.4812, 3.5, -719.154).z))), 0.0)))), bvec2(false, false))) + vec2(0.0, 0.0)), (mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), vec2(_GLF_FUZZED(531.539), _GLF_FUZZED(vec3(_GLF_IDENTITY(1506.4812, clamp(1506.4812, 1506.4812, _GLF_IDENTITY(1506.4812, (_GLF_IDENTITY(1506.4812, min(1506.4812, 1506.4812))) + 0.0))), 3.5, -719.154).z)), bvec2(false, false))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))[_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), (false ? _GLF_FUZZED(-87222) : (0)))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))], injectionSwitch[0])))), injectionSwitch[1])).y))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(76.06, 4.6)) : injectionSwitch)).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))))))
            {
             if(_GLF_DEAD(false))
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(subgroup_local_id + 1 < subgroup_size)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(vec2(64.79, -7.6)) : (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           else
            {
            }
           for(int _injected_loop_counter = ((_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) + 0) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) - 0), int(7))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)) > 0); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 ^ (0 ^ 1)) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], _GLF_IDENTITY(read, (read) | (read)), 4, 64, 4);
              }
            }
           subgroupAll(_GLF_IDENTITY(false, bool(bool(false))));
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(injectionSwitch.y, 0.0, cos(0.0), 1.0, 0.0, 1.0))), injectionSwitch.y))))));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, ~ (~ (_injected_loop_counter --))))
                {
                 barrier();
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y))), false, true, true))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               else
                {
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           do
            {
             atomicStore(checker[GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY((64) >> 0, ((64) >> 0) | (_GLF_IDENTITY(_GLF_IDENTITY((64) >> 0, min((64) >> 0, (64) >> 0)), min((64) >> 0, (64) >> 0))))), 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             do
              {
               subgroupAll(_GLF_IDENTITY(true, ! (! (true))));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, false)), true && (bool(bvec4(false, false, true, false)))))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                }
              }
             barrier();
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) >> 0)], injectionSwitch[1])).x > injectionSwitch.y)) && true))))))
              {
               if(_GLF_DEAD(false))
                barrier();
               barrier();
              }
            }
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), _GLF_IDENTITY(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), bool(bvec3(bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, true)), true, false))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-155.716, max(_GLF_IDENTITY(-155.716, mix(float(-155.716), float(_GLF_FUZZED(-613.191)), bool(false))), -155.716))), _GLF_FUZZED(-38.60)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))))).x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(188120u))), bool(false)))), true)), false || (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(188120u))), bool(false)))), true)))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))), true)), (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), true))) && true))))))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false))) && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))))))))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(8456.4565))) > injectionSwitch.y), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(8456.4565))) > injectionSwitch.y), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, false || (true)))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false)), true, true)))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true)), false)), true, true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), true)), false)), true, true)))))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)), false)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y), true)), false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y), true), bvec2(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y), true))))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).y), true)), false)), false, true))), false))), _GLF_IDENTITY(true, true && (true)), true))))), true), true))))))))))))))))))) || false))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false), _GLF_IDENTITY(true, bool(bvec2(true, false))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (true ? mat4x3(injectionSwitch.y, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(-483.586, 70.75, -8112.8331, 2.7, -4.4, -238.197, 0.8, -3.3, 6.4, -712.013, -0.2, 1.8))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true, true, true))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))), true))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true && (bool(injectionSwitch.x > injectionSwitch.y)))))), true))))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED((-419.859 - -32.96))), bool(false))))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))).x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED((-419.859 - -32.96))), bool(false))))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) || false))))))))))) || false))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false), _GLF_IDENTITY(true, bool(bvec2(true, false)))))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), ! (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0), (true ? mat4x3(injectionSwitch.y, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0) : _GLF_FUZZED(mat4x3(-483.586, 70.75, -8112.8331, 2.7, -4.4, -238.197, 0.8, -3.3, 6.4, -712.013, -0.2, 1.8))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0))).x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), true, true, true))))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))), false, true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))), true))))), false || (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true && (bool(injectionSwitch.x > injectionSwitch.y)))))), true))))))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED((-419.859 - -32.96))), bool(false))))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0))).x) / 1.0), mix(float(injectionSwitch.x), float(_GLF_FUZZED((-419.859 - -32.96))), bool(false))))) > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))) || false))))))))))) || false))), _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), false), _GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 | (0)), _GLF_IDENTITY(0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0 : _GLF_FUZZED(79175)))))], max(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), true, false), _GLF_IDENTITY(true, (true) && true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), mix(float(_GLF_FUZZED(5021.6819)), float(max(injectionSwitch[1], injectionSwitch[1])), bool(true)))), float(_GLF_FUZZED(-6.3)), bool(false)), 0.0 + (mix(float(_GLF_IDENTITY(max(injectionSwitch[1], injectionSwitch[1]), mix(float(_GLF_FUZZED(5021.6819)), float(max(injectionSwitch[1], injectionSwitch[1])), bool(true)))), float(_GLF_FUZZED(-6.3)), bool(false)))))))).x > injectionSwitch.y)))))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1))])).x > injectionSwitch.y))))), true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-54.55)), float(injectionSwitch.y), bool(true))))), 1.0 * (injectionSwitch.y))))), true, false), true))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1))])).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) + 0), 1, 1))])).x > injectionSwitch.y))))))), true, _GLF_IDENTITY(false, (false) && true)), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))), true, _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true))), false))))), true)))))), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.4)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)))))))))), false, true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-120.989) : injectionSwitch.y)), 0.0 + (injectionSwitch.y)), bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), true, true, true))))) ? injectionSwitch : _GLF_FUZZED(vec2(3.3, 8.3))))[1])).x > injectionSwitch.y)))), (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.4)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)))))))))), false, true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-120.989) : injectionSwitch.y)), 0.0 + (injectionSwitch.y)), bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), true, true, true))))) ? injectionSwitch : _GLF_FUZZED(vec2(3.3, 8.3))))[1])).x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.4)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)))))))))), false, true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-120.989) : injectionSwitch.y)), 0.0 + (injectionSwitch.y)), bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), true, true, true))))) ? injectionSwitch : _GLF_FUZZED(vec2(3.3, 8.3))))[1])).x > injectionSwitch.y))))), false || (bool(true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-9.4)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) < injectionSwitch.y), false || (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-96.45)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y)))))))))), false, true))))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-120.989) : injectionSwitch.y)), 0.0 + (injectionSwitch.y)), bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), true, true, true))))) ? injectionSwitch : _GLF_FUZZED(vec2(3.3, 8.3))))[1])).x > injectionSwitch.y)))))))))) || false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(! (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)).y))), true, false), true))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mod(injectionSwitch, 6070.2262).rg))), vec2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch))[0], _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-9.9, -99.68))))[1])), clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(mat2x4(_GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(intBitsToFloat(ivec2(-79298, -69468))) : vec2(injectionSwitch[0], injectionSwitch[1]))))), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 1.0, 0.0), clamp(vec4(0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 1.0, 0.0), vec4(0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 1.0, 0.0), vec4(0.0, abs(_GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0)))), 1.0, 0.0))))), 0.0, 1.0, sqrt(0.0), 0.0)))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))))).x > injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.4)))))), true, false), true))), false)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)], (injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)]) * 1.0), injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)])), (false ? _GLF_FUZZED(3.8) : _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)], min(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)], (injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)]) * 1.0), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) - 0)) / 1)])))), injectionSwitch[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true), false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, false), bvec3(bvec4(bvec3(true, true, false), true)))))))), _GLF_IDENTITY(false, (false) && true)), true))), false)), true))))))) && true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)) > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), true))), true))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)), true))))))), false)))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))))), _GLF_IDENTITY(bool(bvec2(! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.43), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(847.297)), bvec2(true, false))).y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), (! (((false)) && true)) && true))), ! (! (((false)) && true))), true, true, false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(bvec4(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))), true, true, false)))))))))))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), ((false)) && true))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - sqrt(vec2(0.0, 0.0)))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - sqrt(vec2(0.0, 0.0)))))).x)) > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) && true), true && (true && _GLF_IDENTITY((false), ((false)) && true))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), true)), true, true, false))))) || false) && true)))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (0))], injectionSwitch[1])).x > injectionSwitch.y))))), true, false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true))))))), false)), bool(bvec4(bool(bvec2(! ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) + 0))) | (1))])).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true)))))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), false, true, true))))), (_GLF_IDENTITY((_GLF_IDENTITY(! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)) > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), true))), true))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)), true))))))), false)))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))))), _GLF_IDENTITY(bool(bvec2(! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.43), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(847.297)), bvec2(true, false))).y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), (! (((false)) && true)) && true))), ! (! (((false)) && true))), true, true, false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(bvec4(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))), true, true, false)))))))))))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), ((false)) && true))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - sqrt(vec2(0.0, 0.0)))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - sqrt(vec2(0.0, 0.0)))))).x)) > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) && true), true && (true && _GLF_IDENTITY((false), ((false)) && true))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), true)), true, true, false))))) || false) && true)))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (0))], injectionSwitch[1])).x > injectionSwitch.y))))), true, false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true))))))), false)), bool(bvec4(bool(bvec2(! ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) + 0))) | (1))])).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true)))))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), false, true, true))))), bool(bvec3((_GLF_IDENTITY(! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0)))[1])).x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), true && (! (! _GLF_IDENTITY((true), ((true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))), true, false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(3113.2441), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.7)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x)) > injectionSwitch.y))), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), _GLF_IDENTITY(true, (true) || false), false)))))), true))), true))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))), true)), true))))))), false)))), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))))))))), _GLF_IDENTITY(bool(bvec2(! ((! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(30.43), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(847.297)), bvec2(true, false))).y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)), _GLF_IDENTITY(((false)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))), true, true, false)), bool(_GLF_IDENTITY(bool(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((false)) && true, ! (_GLF_IDENTITY(! (((false)) && true), (! (((false)) && true)) && true))), ! (! (((false)) && true))), true, true, false))), _GLF_IDENTITY(true, (true) || false) && (bool(bool(bvec4(_GLF_IDENTITY(((false)) && true, ! (! (((false)) && true))), true, true, false)))))))))))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), (~ (0)) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))], injectionSwitch[1])).x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat2x4(mat2(1.0) * (injectionSwitch), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0)))).y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && _GLF_IDENTITY((false), ((false)) && true))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - sqrt(vec2(0.0, 0.0)))))).x, 1.0 * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) - sqrt(vec2(0.0, 0.0)))))).x)) > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bool(false))) || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY((false), ((false)) && true), true && (true && _GLF_IDENTITY((false), ((false)) && true))))), ((_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bvec4(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(((false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true)))))), true)), true, true, false))))) || false) && true)))) && true)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) * (0))], injectionSwitch[1])).x > injectionSwitch.y))))), true, false))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true))))))), false)), bool(bvec4(bool(bvec2(! ((! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) | (1))])).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), _GLF_IDENTITY((1), ((1)) + 0))) | (1))])).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), (_GLF_IDENTITY(true, (true) && true)) && true), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true))), true)))))))))), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))), false, true, true))))), true, false)))) && true)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))
              {
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))))))), false || (_GLF_DEAD(false))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                   else
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                    }
                  }
                }
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
              }
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               barrier();
               if(_GLF_DEAD(false))
                barrier();
              }
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
      }
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(_GLF_WRAPPED_LOOP(false)), false))))));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 0, (_injected_loop_counter != 0) || false)); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      {
      }
     else
      {
       for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _GLF_IDENTITY(_injected_loop_counter ++, ~ (~ (_injected_loop_counter ++))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-9.6)), float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true)))), (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-9.6)), float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true))), clamp(_GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-9.6)), float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), bool(true))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-9.6)), _GLF_IDENTITY(float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), max(_GLF_IDENTITY(float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), (float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)))) / 1.0), _GLF_IDENTITY(float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), clamp(float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))), float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0))))))), bool(true))), _GLF_IDENTITY(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0)), mix(float(_GLF_FUZZED(-9.6)), float(float(mat2x3(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((757.314 - 6250.4929))))))), bool(true))))))) * round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))) - 0.0)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)), true))));
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
