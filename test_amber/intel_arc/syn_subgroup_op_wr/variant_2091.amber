#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 mat3x4 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_2 {
 int _f0;
 bvec4 _f1;
 mat4 _f2;
 vec3 _f3;
} ;

struct _GLF_struct_1 {
 mat3 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 mat4 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 uvec3 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
} ;

struct _GLF_struct_5 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 uvec3 GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
    continue;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
    {
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)) * mat2(1.0), (((injectionSwitch)) * mat2(1.0)) + vec2(0.0, 0.0)))[1]), vec2(_GLF_FUZZED(24.21), _GLF_FUZZED(51.97)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
              continue;
            }
           if(_GLF_DEAD(false))
            return;
          }
        }
       else
        {
         do
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = (_GLF_IDENTITY(((1 & 1) << _GLF_IDENTITY(int(3), int(3))), (((1 & 1) << _GLF_IDENTITY(int(3), int(3)))) / 1) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))), ~ (~ (_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), max(int(3), int(3)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                  continue;
                 for(int _injected_loop_counter = (64875 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   do
                    {
                     return;
                     if(_GLF_DEAD(false))
                      break;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
              }
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         do
          {
           do
            {
             for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_injected_loop_counter != 1, (_injected_loop_counter != 1) || false))), ! (! (bool(bool(_GLF_IDENTITY(_injected_loop_counter != 1, (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) - 0)) - 0) != 1) || false)))))))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              break;
            }
           while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7782.7991), _GLF_FUZZED(_GLF_IDENTITY(765.897, clamp(765.897, _GLF_IDENTITY(765.897, float(mat2x4(765.897, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0))), 765.897)))), bvec2(false, false)), (true ? _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7782.7991), _GLF_FUZZED(_GLF_IDENTITY(765.897, clamp(765.897, _GLF_IDENTITY(765.897, float(mat2x4(765.897, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0))), 765.897)))), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7782.7991), _GLF_FUZZED(_GLF_IDENTITY(765.897, clamp(765.897, _GLF_IDENTITY(765.897, float(mat2x4(765.897, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0))), 765.897)))), bvec2(false, false))) * mat2(1.0)) : _GLF_FUZZED(vec2(-0.9, 0.6))))).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7782.7991), _GLF_FUZZED(_GLF_IDENTITY(765.897, clamp(765.897, _GLF_IDENTITY(765.897, float(mat2x4(765.897, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0))), 765.897)))), bvec2(false, false)), (true ? _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7782.7991), _GLF_FUZZED(_GLF_IDENTITY(765.897, clamp(765.897, _GLF_IDENTITY(765.897, float(mat2x4(765.897, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0))), 765.897)))), bvec2(false, false)), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-7782.7991), _GLF_FUZZED(_GLF_IDENTITY(765.897, clamp(765.897, _GLF_IDENTITY(765.897, float(mat2x4(765.897, 1.0, 0.0, 0.0, 1.0, 1.0, sqrt(0.0), 0.0))), 765.897)))), bvec2(false, false))) * mat2(1.0)) : _GLF_FUZZED(vec2(-0.9, 0.6))))).x > injectionSwitch.y)))))))));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))));
    }
  }
 _GLF_struct_5 _GLF_struct_replacement_5;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float((true && true)))), vec2(_GLF_FUZZED(-954.393), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      continue;
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      continue;
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), ! (! (_GLF_WRAPPED_LOOP(false)))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7863.2557) : injectionSwitch.y)), 1.0)), max(float(vec2(injectionSwitch.y, 1.0)), float(vec2(injectionSwitch.y, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0), min(vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0))))))))))))))
    break;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   for(int _injected_loop_counter = (0 | _GLF_IDENTITY(0, clamp(0, 0, 0))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (_GLF_IDENTITY(1, (1) >> 0) | 1), bool(bvec4(_injected_loop_counter != (_GLF_IDENTITY(1 | 1, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (1 | 1)), ((~ (1 | 1))) | (_GLF_IDENTITY((~ (1 | 1)), ((~ (1 | 1))) | 0))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(~ (~ (1 | 1)), _GLF_IDENTITY(int(ivec3(~ (~ (_GLF_IDENTITY(1 | 1, (1 | 1) / 1))), 0, 1)), min(int(ivec3(~ (~ (1 | 1)), 0, 1)), int(ivec3(~ (~ (1 | 1)), 0, 1))))), 0, 0)), (int(ivec3(_GLF_IDENTITY(~ (~ (1 | 1)), _GLF_IDENTITY(int(ivec3(~ (~ (_GLF_IDENTITY(1, ~ (~ (1))) | 1)), 0, 1)), min(int(ivec3(~ (~ (1 | 1)), 0, 1)), int(ivec3(~ (~ (1 | 1)), 0, 1))))), 0, 0))) | 0)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-520.306)), float(0.0), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(7214.7290))), 0.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, tan(0.0), 1.0, 1.0)), 1.0, 0.0), (_GLF_IDENTITY(mat3x2(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-520.306)), float(0.0), bool(true))), determinant(mat4(1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * 1.0), 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, tan(0.0), 1.0, 1.0)), 1.0, 0.0), mat3x2(mat3(mat3x2(1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-520.306)), float(0.0), _GLF_IDENTITY(bool(true), false || (bool(true))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), cos(0.0), 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0)), 1.0, tan(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0, 0.0))))) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))).y)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), (_GLF_WRAPPED_IF_FALSE(false)) && true))
        {
         if(_GLF_DEAD(false))
          break;
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     break;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, ! (! (_injected_loop_counter != 1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false)))))))))))
        return;
       for(int _injected_loop_counter = (0 & 76133); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true), false || (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  {
   GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = subgroup_size;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     return;
    }
  }
 for(int _injected_loop_counter = ((1 & int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 | 1) & ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(5), max(_GLF_IDENTITY(int(5), (true ? int(5) : _GLF_FUZZED(-64045))), int(5))), 0 | (int(5))), int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))))))); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)) >> 0), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) / 1)) >> 0), (_GLF_IDENTITY(_injected_loop_counter ++, (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) ^ 0), (_injected_loop_counter ++) / 1)) >> 0)) / 1)) - 0))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-149.937) : injectionSwitch.y))), false, false, _GLF_IDENTITY(true, ! (! (true)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))) && true))
        return;
       return;
      }
     _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y = _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id)));
     do
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-9.4, -8.2), injectionSwitch, vec2(-0.2, -2.6))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-9.4, -8.2), injectionSwitch, vec2(-0.2, -2.6))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-9.4, -8.2), injectionSwitch, vec2(-0.2, -2.6))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-9.4, -8.2), injectionSwitch, vec2(-0.2, -2.6))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mix(vec2(-9.4, -8.2), injectionSwitch, vec2(-0.2, -2.6))) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true)))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - 0.0) * _GLF_ONE(1.0, injectionSwitch.y), mix(float((_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_FUZZED(12.82)), bool(false)))))))))))
        {
         do
          {
           if(_GLF_DEAD(false))
            continue;
           for(int _injected_loop_counter = (((1 & 1) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), max(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | 0)), int(int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), (int(_GLF_IDENTITY(2, (2) | 0))) * 1)))), int(_GLF_IDENTITY(2, (2) | 0)))), _GLF_IDENTITY(int(_GLF_IDENTITY(2, (2) | 0)), (_GLF_IDENTITY(int(2), 0 | (int(2)))) | (_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(23580))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
              break;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               do
                {
                 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | _GLF_IDENTITY(0, ~ (~ (0))))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_DEAD(false))
                continue;
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)))))
      {
      }
     else
      {
       do
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) ^ 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) - uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) | 0u), 0u))))).x;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, _GLF_IDENTITY(0 ^ (0), (0 ^ (0)) << _GLF_IDENTITY(0, ~ (~ (0))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))); _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bool(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1)))), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter < 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
        break;
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), injectionSwitch)).x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
          continue;
         return;
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, max(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID))))) | (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))).x, _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x)), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_WorkGroupID.x), ~ (~ (clamp(_GLF_IDENTITY(gl_WorkGroupID.x, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && true) ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x) >> 0u))), _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), gl_WorkGroupID.x)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)), (false ? _GLF_FUZZED(uvec3(83094u, 109230u, 2696u)) : _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)))).x, (false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x), 0u + (clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, ((uvec3(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_local_id))), 1u, 1u) << _GLF_IDENTITY(uvec3(6u), uvec3(6u))) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u))) * (gl_WorkGroupID))) - uvec3(_GLF_IDENTITY(0u, (0u) - _GLF_IDENTITY(0u, uint(uint(0u)))), 0u, 0u))) | (gl_WorkGroupID)).x, (false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x)), gl_WorkGroupID.x, gl_WorkGroupID.x))), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)) * uvec3(1u, 1u, 1u)), max(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, 0u | (0u)), 0u | (_GLF_IDENTITY(0u, 0u | (0u)))))), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)) * uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), 0u | (0u)), 0u), (uvec3(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)) * uvec3(_GLF_IDENTITY(1u, (1u) ^ (0u >> _GLF_IDENTITY(uint(7u), uint(7u)))), 1u, 1u))) / uvec3(1u, 1u, 1u)))))) | (gl_WorkGroupID)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(uvec3(uvec3(2u))))))))) | (gl_WorkGroupID))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(uvec3(uvec3(2u))))))))) | (gl_WorkGroupID))))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(uvec3(uvec3(2u))))))))) | (gl_WorkGroupID))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - uvec3(0u, 0u, 0u))) | (gl_WorkGroupID)), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID) - uvec3(0u, 0u, 0u), ((gl_WorkGroupID) - uvec3(0u, 0u, 0u)) >> (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(2u), _GLF_IDENTITY(uvec3(2u), uvec3(uvec3(uvec3(2u))))))))) | (gl_WorkGroupID))))))))) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), 0u)), (_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u) + 0u), 0u))) ^ 0u)))).x, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x, (false ? _GLF_FUZZED(workgroup_size) : gl_WorkGroupID.x) ^ 0u)) / 1u))), gl_WorkGroupID.x, gl_WorkGroupID.x))))));
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) ^ 0u);
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, (subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x) / uint(_GLF_ONE(1.0, injectionSwitch.y))) + _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = ((0 | 0) & 27022); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter ++)
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
  }
 do
  {
   GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = virtual_gid;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(1)), 1 * (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | 0)) << 0))), _GLF_IDENTITY((0 << _GLF_IDENTITY(int(1), int(1))) ^ (0 << _GLF_IDENTITY(int(3), int(3))), ((0 << _GLF_IDENTITY(int(1), int(1))) ^ (0 << _GLF_IDENTITY(int(3), int(3)))) - 0))))) << _GLF_IDENTITY(int(1), int(_GLF_IDENTITY(1, (1) | _GLF_IDENTITY((_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), 0 ^ ((1))), (1), (_GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(0), int(0))))))), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), min((_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), 0 + (~ (1))), (_GLF_IDENTITY(~ (1), 0 + (~ (1)))) << (95474 & 0))) + 0)) ^ 0)))))))), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((1), clamp(_GLF_IDENTITY((1), 0 ^ ((1))), (1), (1))), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), min((_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), _GLF_IDENTITY(0 + (~ (1)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (0 + (~ (1)))))) + 0)) ^ 0)))))))), (false ? _GLF_FUZZED(_injected_loop_counter) : (_GLF_IDENTITY(1, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) >> 0)), clamp(_GLF_IDENTITY((1), 0 ^ ((1))), (1), (1))), 0 ^ (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)))), min((_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (_GLF_IDENTITY(1, (1) ^ (0 >> _GLF_IDENTITY(int(7), int(7)))))) ^ 0), (_GLF_IDENTITY(~ (1), (~ (1)) ^ 0)) << _GLF_IDENTITY(0, ~ (~ (0))))))), (_GLF_IDENTITY(~ (1), 0 ^ (_GLF_IDENTITY(~ _GLF_IDENTITY((1), ((1)) | ((1))), (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), 0 + _GLF_IDENTITY((~ (1)), ((~ (1))) ^ 0))) + 0)) ^ 0)))))))))), 0, 1)))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      break;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       return;
      }
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ _GLF_IDENTITY(0, (0) * 1)) < 1), false))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
            {
             if(_GLF_DEAD(false))
              return;
             continue;
            }
           continue;
          }
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      continue;
     break;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      continue;
     _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z = GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, min(workgroup_base + subgroup_id * GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x, workgroup_base + subgroup_id * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) >> uvec2(0u, 0u)).x)) + ((_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, (_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y) * 1u), _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y)) + _GLF_IDENTITY(1, (1) | (1))) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(0u, 0u) + (_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, clamp(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid) | (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)))))).x);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    return;
  }
 else
  {
  }
 _GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x = next_virtual_gid, (false ? _GLF_FUZZED(subgroup_id) : _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x = next_virtual_gid));
 for(int _injected_loop_counter = (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 ^ (0 << _GLF_IDENTITY(int(7), int(7))))) + 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(0)), min(_GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (_GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))) / 1)), _GLF_IDENTITY(int(0), int(0)))))); _injected_loop_counter ++)
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), false, true))))), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) && true))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))), (! (_GLF_DEAD(false))) && true)))) && true))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(0.0), abs(sqrt(1.0)), 0.0, length(0.0), 0.0, exp(0.0), 1.0)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), max(_GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(0.0, 0.0) + (clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), _GLF_IDENTITY(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))))))) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(-73.09), 1.0 * (_GLF_IDENTITY(_GLF_FUZZED(-73.09), (_GLF_FUZZED(-73.09)) / 1.0)))), float(mat3((true ? 1.0 : _GLF_FUZZED(-73.09)), 0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), exp(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, sqrt(1.0))), 1.0, log(1.0)))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), _GLF_IDENTITY(float(_GLF_FUZZED(-308.568)), clamp(float(_GLF_FUZZED(-308.568)), float(_GLF_FUZZED(-308.568)), float(_GLF_FUZZED(-308.568)))), bool(false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mat2(1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1]))) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_FUZZED(5.5), _GLF_FUZZED(-1.6)), bvec2(false, false))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-308.568)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)), (bool(false)) && true)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), mat2(1.0) * (vec2((injectionSwitch)[0], (injectionSwitch)[1]))) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_FUZZED(5.5), _GLF_FUZZED(-1.6)), bvec2(false, false))).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(-308.568)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))) && true)), (bool(false)) && true))))) / 1.0) / 1.0), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (! (true)))))) ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))), injectionSwitch.y)), mix(float(injectionSwitch.y), float(_GLF_FUZZED(-308.568)), bool(false))), false, true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), false))))))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), mat2(1.0) * (injectionSwitch)), (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true) ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(2.4, mix(float(_GLF_IDENTITY(_GLF_FUZZED(6933.0715), min(_GLF_FUZZED(6933.0715), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(6933.0715, min(6933.0715, 6933.0715))), mix(float(_GLF_FUZZED(6933.0715)), float(_GLF_FUZZED(-0.8)), bool(false)))))), float(2.4), bool(true))))))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 1.0, 0.0))) + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), 1.0)))))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (normalize(vec2(1.0, 1.0))) * mat2(1.0)))), 0.0, _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))), min(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))), float(mat4x2(_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))), (false ? _GLF_FUZZED(-493.159) : round(length(normalize(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))), (true ? round(length(normalize(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))) : _GLF_FUZZED(7828.6514))))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(184227u))), _GLF_IDENTITY(float(1.0), 0.0 + (float(1.0))), bool(true))), 0.0), (false ? _GLF_FUZZED(mat3(_GLF_IDENTITY(-2.7, mix(float(-2.7), float(_GLF_FUZZED(4.4)), bool(false))), 6.4, -0.9, 547.339, _GLF_IDENTITY(28.25, (false ? _GLF_FUZZED(-23.85) : 28.25)), 343.028, 2.8, 13.28, 33.45)) : mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))) * 1.0))))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), mix(float(_GLF_FUZZED(-5.3)), float(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0))))), bool(true))), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - abs(0.0)), float(float(0.0))), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3x4(0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, sqrt(1.0), 0.0)))) - _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(log(1.0), 0.0, 1.0)), 1.0 * (dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(1.2)), bool(false))), 0.0), vec3(log(1.0), 0.0, 1.0)))))), 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-183.161)), float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, 1.0, 1.0, 0.0))), 1.0, 1.0, 1.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0)) : _GLF_FUZZED(-1.7), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, 1.0))), 1.0, 1.0)) : _GLF_FUZZED(-1.7)) / 1.0))), 1.0)))), 0.0, round(length(normalize(sqrt(1.0)))), 1.0, 0.0)))), min(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), clamp(round(length(normalize(sqrt(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), 1.0 * _GLF_IDENTITY((round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (true ? (round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(0.7)), bool(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), (injectionSwitch.x > injectionSwitch.y))))))))) : _GLF_FUZZED(-5.7)))), (_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(sqrt(1.0), float(_GLF_IDENTITY(mat3x4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat3x4(sqrt(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-10.15) : 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), mat4x3(mat4x3(transpose(_GLF_IDENTITY(mat3x4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), (mat3x4(sqrt(1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)))) - mat3x4(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))))))))), 1.0 * _GLF_IDENTITY((round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (true ? (round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), _GLF_IDENTITY(float(_GLF_FUZZED(0.7)), max(float(_GLF_FUZZED(0.7)), float(_GLF_FUZZED(0.7)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) : _GLF_FUZZED(_GLF_IDENTITY(-5.7, (-5.7) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))))))) * 1.0), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), 1.0 * (round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (false ? _GLF_FUZZED(-6866.2726) : _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), 1.0 * (round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), 0.0 + (float(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), 1.0 * (_GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(0.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (round(length(normalize(_GLF_IDENTITY(sqrt(1.0), mix(float(sqrt(1.0)), float(_GLF_FUZZED(_GLF_IDENTITY(0.7, determinant(mat4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)) * (0.7)))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) + 0.0))), (false ? _GLF_FUZZED(-6866.2726) : _GLF_IDENTITY(round(_GLF_IDENTITY(length(normalize(sqrt(1.0))), (true ? length(normalize(sqrt(1.0))) : _GLF_FUZZED(distance(vec3(-7.2, -917.690, -772.396), vec3(_GLF_IDENTITY(-8.2, (-8.2) - 0.0), 2.4, 4.2)))))), 1.0 * (round(length(normalize(_GLF_IDENTITY(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), mix(float(sqrt(1.0)), float(_GLF_FUZZED(0.7)), bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || false))))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), (_GLF_IDENTITY(normalize(sqrt(1.0)), clamp(normalize(sqrt(1.0)), _GLF_IDENTITY(normalize(sqrt(1.0)), clamp(normalize(sqrt(1.0)), normalize(sqrt(1.0)), normalize(sqrt(1.0)))), normalize(sqrt(1.0))))) - 0.0))), clamp(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), mix(float(_GLF_FUZZED(-6501.2138)), float(round(length(normalize(sqrt(1.0))))), bool(true))), round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), max(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), (round(length(normalize(sqrt(1.0))))) / 1.0), round(length(normalize(sqrt(1.0)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), mix(float(_GLF_FUZZED(-6501.2138)), float(round(length(normalize(sqrt(1.0))))), bool(true))), (_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), mix(float(_GLF_FUZZED(-6501.2138)), float(round(length(normalize(sqrt(1.0))))), _GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), (_GLF_IDENTITY(bool(true), true && (bool(true)))) && true)))))) / 1.0), round(length(normalize(sqrt(1.0)))), _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), min(round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))))), 0.0, 0.0)), (false ? _GLF_FUZZED(-578.268) : float(vec3(_GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), min(round(length(normalize(sqrt(1.0)))), round(length(normalize(sqrt(1.0)))))), 0.0, 0.0))))))) : _GLF_FUZZED(-6.0))))), 1.0, 0.0), (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(_GLF_IDENTITY(mat3(-2.7, 6.4, -0.9, _GLF_IDENTITY(547.339, min(547.339, 547.339)), 28.25, _GLF_IDENTITY(343.028, float(vec4(343.028, 0.0, 1.0, 0.0))), 2.8, 13.28, 33.45), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(0.2, 9469.3290, 761.191, 483.636, -64.48, 382.674, -27.52, 2399.8246, 94.20)) : mat3(-2.7, 6.4, -0.9, 547.339, 28.25, _GLF_IDENTITY(343.028, float(vec4(_GLF_IDENTITY(343.028, (343.028) - 0.0), 0.0, 1.0, 0.0))), 2.8, 13.28, 33.45)), mat3(mat3x4((false ? _GLF_FUZZED(mat3(0.2, 9469.3290, 761.191, 483.636, -64.48, 382.674, -27.52, 2399.8246, 94.20)) : mat3(-2.7, 6.4, _GLF_IDENTITY(-0.9, (-0.9) * 1.0), 547.339, 28.25, _GLF_IDENTITY(343.028, float(vec4(343.028, 0.0, 1.0, 0.0))), 2.8, 13.28, 33.45))))))) : mat3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(0.0, sin(0.0) + (0.0)), _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), (round(length(normalize(sqrt(1.0))))) - 0.0), 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(9720.0797)), bool(false))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * abs(1.0)), max(1.0, 1.0)))), cos(0.0), log(1.0), 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), (round(length(normalize(vec2(1.0, 1.0))))) + 0.0), 0.0, round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))))) + 0.0), 1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0)), float(mat2x4(_GLF_IDENTITY(float(mat3(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0))))) + 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-558.326))), 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0)), (true ? _GLF_IDENTITY(float(mat3(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0))))) + 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-558.326))), 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0)), (float(mat3(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(_GLF_IDENTITY(1.0, 0.0 + (1.0))))) + 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-558.326))), 0.0, 1.0, 1.0, 0.0, tan(0.0), 0.0, 1.0))) - 0.0) : _GLF_FUZZED(-0.6))), 1.0, 1.0, sqrt(round(length(normalize(1.0)))), 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), max(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))) : _GLF_FUZZED(-1589.4821))), 1.0)))))), 1.0, 0.0), (false ? _GLF_FUZZED(mat3(-2.7, _GLF_IDENTITY(6.4, _GLF_IDENTITY((6.4), ((6.4)) / 1.0) + 0.0), -0.9, 547.339, _GLF_IDENTITY(28.25, 1.0 * (28.25)), _GLF_IDENTITY(343.028, max(343.028, 343.028)), 2.8, 13.28, 33.45)) : mat3(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-9.5)), float(1.0), bool(true))), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, round(length(normalize(sqrt(1.0)))), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0)))), 0.0)))), (true ? float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), float(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), cos(0.0), log(1.0), 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), cos(vec2(0.0, 0.0)) * (normalize(vec2(1.0, 1.0)))))), (round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(mat3x4(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), clamp(float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), (true ? float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)) : _GLF_FUZZED(827.883))), float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 1.0, 0.0, 0.0))), abs(0.0), 1.0))))) + 0.0), 0.0, round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(normalize(sqrt(1.0)), _GLF_IDENTITY((normalize(sqrt(1.0))) + 0.0, mix(float(_GLF_FUZZED(-224.296)), float(_GLF_IDENTITY((normalize(sqrt(1.0))) + 0.0, float(mat2x4((normalize(sqrt(1.0))) + 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat2(-2.1, -292.111, -451.744, -6.6))))), 1.0)))), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), clamp(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), tan(0.0), 1.0, 1.0, 1.0, 1.0), mat2(1.0) * (mat3x2(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), tan(0.0), 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), tan(0.0) + (mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false))))) * 1.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.8)), float(0.0), bool(true))), tan(0.0), 0.0, 1.0))))), 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0 + (_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), float(mat2(_GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), cos(0.0), log(1.0), 1.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), cos(vec2(0.0, 0.0)) * (normalize(vec2(1.0, 1.0)))))), (round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), float(mat3x4(length(normalize(vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), clamp(float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), _GLF_IDENTITY(float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)), (true ? float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0)) : _GLF_FUZZED(827.883))), float(mat3x2(0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))))), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(sqrt(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 1.0, 0.0, 0.0))), abs(0.0), 1.0))))) + 0.0), 0.0, round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(normalize(sqrt(1.0)), _GLF_IDENTITY((normalize(sqrt(1.0))) + 0.0, mix(float(_GLF_FUZZED(-224.296)), float(_GLF_IDENTITY((normalize(sqrt(1.0))) + 0.0, float(mat2x4((normalize(sqrt(1.0))) + 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(determinant(mat2(-2.1, -292.111, -451.744, -6.6))))), 1.0)))), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), clamp(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), float(_GLF_IDENTITY(mat3x2(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), tan(0.0), 1.0, 1.0, 1.0, 1.0), mat2(1.0) * (mat3x2(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), tan(0.0), 1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), (_GLF_IDENTITY(mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false)), tan(0.0) + (mix(float(_GLF_IDENTITY(normalize(sqrt(1.0)), (normalize(sqrt(1.0))) + 0.0)), float(_GLF_FUZZED(6.4)), bool(false))))) * 1.0)))), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.8)), float(0.0), bool(true))), tan(0.0), 0.0, 1.0))))), 1.0, 0.0)))), (false ? _GLF_FUZZED(mat3(-2.7, _GLF_IDENTITY(_GLF_IDENTITY(6.4, (false ? _GLF_FUZZED(61.35) : 6.4)), _GLF_IDENTITY(_GLF_IDENTITY((6.4), 0.0 + (_GLF_IDENTITY((6.4), max((6.4), (6.4))))), (_GLF_IDENTITY(_GLF_IDENTITY((6.4), 0.0 + (_GLF_IDENTITY((6.4), max((6.4), (_GLF_IDENTITY(6.4, (false ? _GLF_FUZZED(5.6) : 6.4))))))), float(mat2x3(_GLF_IDENTITY((6.4), 0.0 + (_GLF_IDENTITY((6.4), max((6.4), (_GLF_IDENTITY(6.4, (false ? _GLF_FUZZED(5.6) : 6.4))))))), abs(1.0), 0.0, cos(0.0), 0.0, tan(tan(0.0)))))) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))) + 0.0), -0.9, 547.339, _GLF_IDENTITY(28.25, _GLF_IDENTITY(1.0 * (28.25), max(_GLF_IDENTITY(1.0 * (28.25), float(vec2(1.0 * (28.25), 0.0))), 1.0 * (28.25)))), 343.028, 2.8, 13.28, 33.45)) : mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(next_virtual_gid)), min(_GLF_IDENTITY(_GLF_FUZZED(uintBitsToFloat(next_virtual_gid)), (true ? _GLF_FUZZED(uintBitsToFloat(next_virtual_gid)) : _GLF_FUZZED(-9.0))), _GLF_FUZZED(uintBitsToFloat(next_virtual_gid)))) : _GLF_IDENTITY(0.0, float(vec3(0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 1.0))))) + (_GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0, 1.0, 1.0, round(length(normalize(_GLF_IDENTITY(vec2(1.0, 1.0), (_GLF_IDENTITY(vec2(1.0, 1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))))) - vec2(0.0, 0.0))))), 0.0, round(length(normalize(_GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0)))))), 1.0, 0.0)))) : _GLF_FUZZED(-357.459))))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), min(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) : _GLF_FUZZED(vec2(-4.2, -306.972))))))))))).x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-308.568)), bool(false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) / round(length(normalize(cos(vec4(0.0, 0.0, 0.0, 0.0)))))))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (! (true)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (! (true)))), true && ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (! (true)))), true && ((_GLF_IDENTITY(! (true), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))) && (! (true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), min(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x) / 1.0) : _GLF_FUZZED(2.4)))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(86.87, -4.7)))).x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(-308.568, (-308.568) / 1.0))), bool(false))))))), (bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), max((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4))))) - 0.0))) / 1.0), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(12.27)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), (true ? _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) : _GLF_FUZZED(3.7)))))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)) - 0.0))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)), _GLF_IDENTITY((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, clamp((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, _GLF_IDENTITY((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (_GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, float(mat2x4((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), (mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), max((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4))))) - 0.0))), mix(float(_GLF_FUZZED((- -24.94))), float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(2.4)))), max((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))), ((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4))))) - 0.0)))), bool(true))) / _GLF_IDENTITY(1.0, max(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(12.27)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), mix(float(_GLF_FUZZED(-6.3)), float(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), clamp(_GLF_IDENTITY(min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), determinant(mat2(1.0, 0.0, 1.0, 1.0)) * (min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))))), (true ? _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) : _GLF_IDENTITY(_GLF_FUZZED(3.7), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(3.7), min(_GLF_IDENTITY(_GLF_FUZZED(3.7), max(_GLF_FUZZED(3.7), _GLF_FUZZED(3.7))), _GLF_IDENTITY(_GLF_FUZZED(3.7), clamp(_GLF_FUZZED(3.7), _GLF_FUZZED(3.7), _GLF_FUZZED(3.7))))), 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0)), float(_GLF_IDENTITY(mat4x2(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(3.7), min(_GLF_IDENTITY(_GLF_FUZZED(3.7), _GLF_IDENTITY(max(_GLF_FUZZED(3.7), _GLF_FUZZED(3.7)), float(mat2x3(max(_GLF_FUZZED(3.7), _GLF_FUZZED(3.7)), 1.0, sin(0.0), 1.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_FUZZED(3.7), clamp(_GLF_FUZZED(3.7), _GLF_FUZZED(3.7), _GLF_FUZZED(3.7))))), 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0)), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0), mat4x2(mat4(mat4x2(float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(3.7), min(_GLF_IDENTITY(_GLF_FUZZED(3.7), max(_GLF_FUZZED(3.7), _GLF_FUZZED(3.7))), _GLF_IDENTITY(_GLF_FUZZED(3.7), clamp(_GLF_FUZZED(3.7), _GLF_FUZZED(3.7), _GLF_FUZZED(3.7))))), 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(3078.1658)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), 1.0, 1.0, 1.0, sqrt(0.0), 0.0, 1.0, 1.0)))))))))))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)) - 0.0))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(injectionSwitch), min(vec2(injectionSwitch), vec2(injectionSwitch)))))), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)), _GLF_IDENTITY((mix(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(1.0 * (float(injectionSwitch.y)), min(1.0 * (float(injectionSwitch.y)), 1.0 * (float(injectionSwitch.y))))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, clamp(_GLF_IDENTITY((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, max(_GLF_IDENTITY((_GLF_IDENTITY(mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)), (mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0)) - 0.0, mix(float(_GLF_FUZZED(-0.9)), float((mix(_GLF_IDENTITY(float(injectionSwitch.y), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0)) * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0), bool(true))), _GLF_IDENTITY((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, ((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0) + 0.0))), _GLF_IDENTITY((mix(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y)))), float(_GLF_FUZZED(-1.7)), bool(false))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, _GLF_IDENTITY(float(mat2x4((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) * 1.0), 1.0)), mix(float(float(mat2x4((mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) / 1.0)) * 1.0), 1.0))), float(_GLF_FUZZED(6.6)), bool(false)))), (mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false))) - 0.0))))))))))) && _GLF_IDENTITY(true, ! (! (true)))), (_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))), (injectionSwitch))) * mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true)), max(mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(8.5)), float(1.0), bool(true))))) + sqrt(0.0))))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(578.191)))), float(_GLF_FUZZED(2.6)), bool(false)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), determinant(mat2(0.0, sin(0.0), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), abs(0.0), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-6.9, 9.3, -92.64, 2.1, 9.8, -8.2, 5.0, -654.930)) : mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(mat3((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((3850.4542 / 15.18))), bool(false)))), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))) / 1.0), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), min((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-431.363)), bool(false)))))))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-73.43) : 0.0)), log(1.0), 1.0, 1.0))))) : _GLF_FUZZED(2.4))), max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true))))) ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), determinant(_GLF_IDENTITY(mat2(0.0, sin(0.0), 0.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat2(0.0, sin(0.0), 0.0, 0.0))), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(transpose(mat2(0.0, sin(0.0), 0.0, 0.0))))))), abs(0.0), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-6.9, 9.3, -92.64, 2.1, 9.8, -8.2, 5.0, _GLF_IDENTITY(-654.930, clamp(-654.930, _GLF_IDENTITY(-654.930, _GLF_IDENTITY((-654.930) - 0.0, ((-654.930) - 0.0) / 1.0)), _GLF_IDENTITY(-654.930, min(-654.930, -654.930)))))) : mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, exp(0.0), 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(0.0), round(length(normalize(1.0))), 0.0, _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(5642.5971) : log(1.0))), 1.0, 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), determinant(mat2(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(sin(0.0), float(mat2(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), sqrt(1.0), 0.0, sin(0.0)))), 0.0, 0.0)), abs(0.0), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false) ? _GLF_FUZZED(mat4x2(-6.9, 9.3, -92.64, 2.1, 9.8, -8.2, 5.0, -654.930)) : mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-8342.9119), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8328.0716)), bvec2(true, false)))) - vec2(0.0, 0.0)).x, (injectionSwitch.x) / 1.0))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(0.0), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), max(round(length(normalize(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), _GLF_IDENTITY(round(length(normalize(_GLF_IDENTITY(1.0, (1.0) * 1.0)))), (false ? _GLF_FUZZED(-4856.9157) : round(length(normalize(_GLF_IDENTITY(1.0, (1.0) * 1.0)))))))), 0.0, log(1.0), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(3.6))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), float(_GLF_IDENTITY(vec2(0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0), _GLF_IDENTITY(vec2(vec4(vec2(0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0), 0.0, 1.0)), (vec2(vec4(vec2(0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), 1.0), 0.0, 1.0))) + vec2(0.0, 0.0)))))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(0.0), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-6.9, 9.3, -92.64, 2.1, 9.8, -8.2, 5.0, -654.930)) : mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0) + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(float(vec3((injectionSwitch.x), 0.0, 1.0)), float(mat3x2(float(vec3((injectionSwitch.x), 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0)))) / 1.0))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.7)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / 1.0, max((injectionSwitch.x) / 1.0, (injectionSwitch.x) / 1.0))), _GLF_IDENTITY(0.0, (0.0) - sqrt(0.0)) + (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, (injectionSwitch.x) - length(vec4(0.0, 0.0, 0.0, 0.0)))) / 1.0))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(0.0), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-6.9, 9.3, -92.64, 2.1, 9.8, -8.2, 5.0, -654.930)) : mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)), (false ? _GLF_FUZZED(length(-92.31)) : (injectionSwitch.x) / _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))))))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(0.0), round(length(normalize(1.0))), 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1.0, 1.0))))))) : _GLF_FUZZED(_GLF_IDENTITY(2.4, log(1.0) + (2.4))))), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (true), ! (_GLF_IDENTITY(! (! (true)), ! (! (! (! (true))))))), true && (! (true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), ! (! (_GLF_IDENTITY(! (true), true && _GLF_IDENTITY((! (true)), (_GLF_IDENTITY((! (true)), false || (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))) && true))))), _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))))) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(_GLF_IDENTITY(0.0, (0.0) + tan(0.0))), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(mat4x2(-6.9, 9.3, -92.64, 2.1, 9.8, -8.2, 5.0, -654.930)) : mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), 0.0 + ((injectionSwitch.x))) / 1.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), determinant(mat2(0.0, sin(0.0), 0.0, 0.0)), abs(0.0), round(length(normalize(1.0))), 0.0, log(1.0), 1.0, 1.0))))) : _GLF_FUZZED(2.4)))))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(max(1.0, 1.0), max(max(1.0, 1.0), _GLF_IDENTITY(max(1.0, 1.0), (max(1.0, 1.0)) / 1.0))))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-308.568)), bool(false))))))), _GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0)), _GLF_IDENTITY(min(float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))), max(min(float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))), _GLF_IDENTITY(min(float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))), min(min(float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))), min(float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0)), float(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, (true ? (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0 : _GLF_FUZZED(dot(vec3(2.8, injectionSwitch), vec3(9.9, 96.67, -78.25)))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_FUZZED(-3347.7123)), float(min(injectionSwitch.x, injectionSwitch.x)), bool(true))), min(min(injectionSwitch.x, injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0))))))), 1.0, 1.0, 0.0), min(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), min(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), clamp(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), _GLF_IDENTITY(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), float(mat3x2(max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0)))))))), 1.0, 1.0, 0.0), (vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0)) / vec4(1.0, 1.0, 1.0, 1.0)), vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0))))), mix(_GLF_IDENTITY(float(injectionSwitch.y), 1.0 * _GLF_IDENTITY((float(_GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), min(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (false ? _GLF_FUZZED(vec2(-8.8, 2180.7423)) : vec2(injectionSwitch.y, 0.0))))))))), clamp(_GLF_IDENTITY((float(injectionSwitch.y)), clamp((float(injectionSwitch.y)), (_GLF_IDENTITY(float(injectionSwitch.y), float(float(_GLF_IDENTITY(float(injectionSwitch.y), max(float(injectionSwitch.y), float(injectionSwitch.y))))))), (float(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), _GLF_IDENTITY((float(injectionSwitch.y)), float(mat3((_GLF_IDENTITY(float(injectionSwitch.y), mix(float(float(injectionSwitch.y)), float(_GLF_FUZZED((863.773 / -3.4))), bool(false)))), 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (float(injectionSwitch.y))))), float(_GLF_FUZZED(-308.568)), bool(false)))))))) && true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)))))))), false || ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)))))))))))), bool(bvec3(_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)))))))), true && (_GLF_IDENTITY((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)))))))), false || ((bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, min((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2.4)))) / 1.0))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), min(min(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(1.0)), bool(false))))), injectionSwitch.x), min(_GLF_IDENTITY(injectionSwitch, log(vec2(1.0, 1.0)) + (injectionSwitch)).x, injectionSwitch.x)))), injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec4(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 1.0, 1.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)), 1.0 * (float(injectionSwitch.y))), float(_GLF_FUZZED(-308.568)), bool(false)))))))))))), true, true))) && true))))) && true)), true, true, true)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = _GLF_IDENTITY((0 & 25853), ((0 & 25853)) << 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ (0 | 0))); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, false)))))
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (false)))))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
              break;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(false, false, false, false))) || (false))) || false, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || false), (! ((_GLF_IDENTITY(false, false || (false))) || false)) || false))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || false), (! ((_GLF_IDENTITY(false, false || (false))) || false)) || false))), false), true)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false))) || false), (! ((_GLF_IDENTITY(false, false || (false))) || false)) || false))), false), true)), true)))))), false, false, true))))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
               return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 do
                  {
                   return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))));
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))), true))), false))), false)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))), true))))))))), true && (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false)))), true))))))))))))))
          {
           for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(0 ^ 1, (_GLF_IDENTITY(0 ^ 1, max(0 ^ 1, _GLF_IDENTITY(_GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1)), 0 | (_GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1)), 0 | (_GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1))))) + 0), _GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1)), _GLF_IDENTITY(0 ^ 1, clamp(0 ^ 1, 0 ^ 1, 0 ^ 1))))))) / _GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-86343) : max(1, 1))))))); _injected_loop_counter ++)
            {
             return;
            }
          }
         if(_GLF_DEAD(false))
          continue;
         return;
         if(_GLF_DEAD(false))
          continue;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      continue;
     if(_GLF_DEAD(false))
      break;
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ! (! ((false)))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), ! (! (bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), true)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (int(_GLF_ZERO(0.0, injectionSwitch.x)) | 0)); _injected_loop_counter --)
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (false), ! (! (! (false)))))), (! ((_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false))))));
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || (false))))) || false)))
    {
     for(int _injected_loop_counter = (int(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6868.5829) : _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(-92.85))))), injectionSwitch.y)) | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
    {
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), false, false))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), bool(bool(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))))))))
    return;
   atomicStore(buf[_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.x], uint(1), _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) >> 0))), 64, 4);
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
       if(_GLF_DEAD(false))
        break;
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), false)))))))))))
        return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), false))))))), true && (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), _GLF_IDENTITY(true, true && (true)) && ((! (_GLF_DEAD(false))))))), false), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) || false)))))), false)))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))))) && true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0)) - 0.0, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0)) - 0.0, 1.0, 0.0, sqrt(0.0)), (true ? mat2(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0)) - 0.0, 1.0, 0.0, sqrt(0.0)) : _GLF_FUZZED(mat2(-6.3, 93.41, 73.98, -4682.9083))))))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.34)), float(injectionSwitch.y), bool(true)))))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.34)), float(injectionSwitch.y), bool(true)))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 0.0)))).x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec2(bvec2((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(16.34), 1.0 * (_GLF_FUZZED(16.34)))), float(injectionSwitch.y), bool(true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec2(bvec4(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0)) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.34)), float(injectionSwitch.y), bool(true))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0)), (_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), clamp((injectionSwitch.x), (injectionSwitch.x), (injectionSwitch.x)))) / sqrt(1.0))) * 1.0) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(16.34)), float(injectionSwitch.y), bool(true)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, false)))))) && true)))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z], max(_GLF_IDENTITY(buf[_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z], (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(149219u, clamp(149219u, 149219u, 149219u)), _GLF_IDENTITY((149219u), max(_GLF_IDENTITY((149219u), 0u + ((149219u))), _GLF_IDENTITY((149219u), ((149219u)) << 0u))) + 0u)) : buf[_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z])), _GLF_IDENTITY(buf[_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z], (true ? buf[_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, (_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid) | _GLF_IDENTITY((_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid), (false ? _GLF_FUZZED((uvec3(8790u, 10437u, 112774u) / uvec3(113019u, 143779u, 40876u))) : (_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid)))).z] : _GLF_FUZZED(workgroup_size))))), 4, _GLF_IDENTITY(64, max(64, 64)), _GLF_IDENTITY(0, (0) << 0));
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), clamp(vec4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(1.0, max(1.0, 1.0))), vec4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0), vec4(injectionSwitch.y, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0))))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))), false)))), _GLF_IDENTITY(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch, sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)), bool(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), mix(vec2(_GLF_FUZZED(2.2), (vec2(0.0, 0.0) + (injectionSwitch))[1]), vec2((vec2(0.0, 0.0) + (injectionSwitch))[0], _GLF_FUZZED(14.50)), bvec2(true, false)))).y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(0.5), _GLF_FUZZED(-876.310)), bvec2(false, false))))).y))) - 0.0))), false)))))), bool(_GLF_IDENTITY(bool(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.y), bool(true))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(length(vec3(0.0, 0.0, 0.0))), 1.0), mat4x3(mat4(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(length(vec3(0.0, 0.0, 0.0))), 1.0), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, length(length(vec3(0.0, 0.0, 0.0))), 1.0)))))))), injectionSwitch.y)))), false), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), false))), true))), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), false))), true))), true))), bvec3(bvec4(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))), false))), true))), true))), false))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false), bvec3(bvec4(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), false), true))))))))))))))), (bool(bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))).y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, true))), bool(bvec3(_GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), false)))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = (0 ^ int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])).x)) >> _GLF_IDENTITY(int(8), int(8)))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       do
        {
         for(int _injected_loop_counter = (_GLF_IDENTITY(0, 0 ^ (0)) >> _GLF_IDENTITY(int(5), int(5))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < 1), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_injected_loop_counter < 1), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_injected_loop_counter < 1))))))) && true)))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.y, (_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, uvec3(0u, 0u, 0u) ^ (_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid)).y) - 0u) + 1 < _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid, uvec2(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u))) ^ (GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid)).x)
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             atomicStore(checker[_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid.z], read, _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * 1)), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)))))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * 1)), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1))))))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) | (1)))), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)))))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, clamp((4) * 1, (4) * 1, (4) * 1)))), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1))))))))) ^ 0)) + 0)), (_GLF_IDENTITY(0, 1 * (0)) ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * 1)), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)))))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * 1)), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1))))))))) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) | (1)))), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)))))))), (_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (4) * _GLF_IDENTITY(1, (1) << 0))), clamp(~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), _GLF_IDENTITY(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) * 1, clamp((4) * 1, (4) * 1, (4) * 1)))), clamp(~ (_GLF_IDENTITY(4, _GLF_IDENTITY((4), ~ (~ ((4)))) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1)), ~ (_GLF_IDENTITY(4, (4) * 1))))))))) ^ 0)) + 0))) ^ 0)), 64, 4);
             do
              {
               do
                {
                 do
                  {
                   do
                    {
                     do
                      {
                       subgroupAll(false);
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                  }
                 atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, _GLF_IDENTITY((_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), (_GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ uvec3(0u, 0u, 0u))), (true ? _GLF_IDENTITY((_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), (_GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u + (0u))), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))))), ((_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid) - (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), (_GLF_IDENTITY(uvec3(4u), uvec3(4u))) * uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), min(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(4u), uvec3(4u)), (_GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> uvec3(0u, 0u, 0u)))), (_GLF_IDENTITY(uvec3(4u), uvec3(4u))) ^ uvec3(0u, 0u, 0u)))) << uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec3(40214u, 33023u, 7677u))))), (_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, (_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid) >> uvec3(0u, 0u, 0u))), min(~ (_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, (_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid) >> uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, (_GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid) >> uvec3(0u, 0u, 0u))))))), _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid, _GLF_struct_replacement_5.GLF_merged3_0_1_16_1_1_17_2_1_11next_virtual_gidsubgroup_local_idvirtual_gid))) >> uvec3(0u, 0u, 0u)).z], read, 4, _GLF_IDENTITY(64, clamp(64, 64, 64)), 4);
                }
               while(_GLF_WRAPPED_LOOP(false));
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     return;
                    }
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              continue;
             subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(true, ! (! (true))))), bool(bool((bool(true))))) || false)), false || (bool(_GLF_IDENTITY(bool(true), (bool(true)) || false))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false)))), true))), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), false, false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))), false, false)))), true))))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), false)))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((false), ! (! ((false))))), ! (! _GLF_IDENTITY((false), ! (! ((false))))))), false)))), bvec2(bvec3(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(! (! (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), false)))), true))), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), false, false)))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(bvec2(true, false))), false, false)))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), _GLF_IDENTITY(bvec2(bvec2(bvec2(true, false))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), true, true)))))))), false, false)))), true))))))))))))));
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))) && true))
        break;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-0.6)), bool(false)))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter != 0, false || (_injected_loop_counter != 0)), ! (! (_injected_loop_counter != 0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) && true)), true && (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_TRUE(true))), (! (! (_GLF_WRAPPED_IF_TRUE(true)))) && true))))))))
          {
           if(_GLF_DEAD(false))
            break;
           for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)) + (_GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > ((ivec2(-21433, -72125) ^ _GLF_IDENTITY(-52405, ~ (~ (-52405)))).t & int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), ivec2(0, 0) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), ivec2(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405)), (_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))) - ivec2(0, 0))), ((_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405)), (_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))) - ivec2(0, 0)))) ^ ivec2(0, 0)), 1)))))) * ivec2(1, 1), (false ? _GLF_FUZZED(ivec2(-25321, 34788)) : (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0)) + (ivec2(-21433, _GLF_IDENTITY(-72125, (_GLF_IDENTITY(-72125, int(_GLF_IDENTITY(ivec3(-72125, 0, 1), max(ivec3(-72125, 0, 1), ivec3(-72125, 0, 1)))))) | (0 | 0))) ^ -52405))), ((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, _GLF_IDENTITY(ivec2(0, 0), (ivec2(0, 0)) >> ivec2(0, 0)) + (ivec2(-21433, _GLF_IDENTITY(-72125, (_GLF_IDENTITY(-72125, int(_GLF_IDENTITY(ivec3(-72125, 0, 1), max(ivec3(-72125, 0, 1), ivec3(-72125, 0, 1)))))) | (0 | 0))) ^ -52405)))) * ((ivec2(1, 1) << _GLF_IDENTITY(ivec2(1), ivec2(1))) >> _GLF_IDENTITY(ivec2(1), ivec2(1)))), _GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + _GLF_IDENTITY((ivec2(-21433, -72125) ^ -52405), ((ivec2(-21433, -72125) ^ -52405)) | ((ivec2(-21433, -72125) ^ -52405))))), ivec2(ivec3((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), 1)))), (_GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + _GLF_IDENTITY((ivec2(-21433, -72125) ^ -52405), ((ivec2(-21433, -72125) ^ -52405)) | ((ivec2(-21433, -72125) ^ -52405))))), ivec2(ivec3((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), 1)))), min(_GLF_IDENTITY(ivec2(0, 0) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + _GLF_IDENTITY((ivec2(-21433, -72125) ^ -52405), ((ivec2(-21433, -72125) ^ -52405)) | ((ivec2(-21433, -72125) ^ -52405))))), ivec2(ivec3((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), 1)))), (ivec2(0, 0) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + _GLF_IDENTITY((ivec2(-21433, -72125) ^ -52405), ((ivec2(-21433, -72125) ^ -52405)) | ((ivec2(-21433, -72125) ^ -52405))))), ivec2(ivec3((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), 1))))) | ivec2(0, 0)), ivec2(0, 0) + (_GLF_IDENTITY((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + _GLF_IDENTITY((ivec2(-21433, -72125) ^ -52405), ((ivec2(-21433, -72125) ^ -52405)) | ((ivec2(-21433, -72125) ^ -52405))))), ivec2(ivec3((_GLF_IDENTITY(ivec2(-21433, -72125) ^ -52405, ivec2(0, 0) + (ivec2(-21433, -72125) ^ -52405))), 1))))))) ^ ivec2(0, 0)))) * ivec2(1, 1)))).t & int(_GLF_ZERO(0.0, injectionSwitch.x)))), bool(bvec3(_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY((ivec2(-21433, -72125) ^ -52405), (false ? _GLF_FUZZED(ivec2(-78489, 38619)) : _GLF_IDENTITY((ivec2(-21433, -72125) ^ -52405), ((ivec2(-21433, -72125) ^ -52405)) | ((ivec2(-21433, -72125) ^ -52405))))).t & int(_GLF_ZERO(0.0, injectionSwitch.x)))), true, false)))) && true); _injected_loop_counter --)
            {
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bool(bool(bool(_GLF_IDENTITY(false, bool(bool(false)))))))))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))));
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
