#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), false || (bool(bvec3(_GLF_DEAD(false), true, false)))))))))))) && true))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, true && (false)))))) && true))), bool(bvec2(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(false, true && (false)))))) && true))), true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec3(true, true, true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))), _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))), bool(bool(! (bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! (_GLF_IDENTITY((false), ! (! ((false)))))), bool(bool(! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))))))))))) || false)), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), bool(bool((! ((_GLF_IDENTITY(false, true && (false))))))))), bool(bool(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), bool(bool((! ((_GLF_IDENTITY(false, true && (false))))))))))))))) || false))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec2(! (! ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bool(! (bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))))), bool(bool((! ((_GLF_IDENTITY(false, true && (false))))))))), bool(bool(! (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, true && (false))))), bool(bool((! ((_GLF_IDENTITY(false, true && (false))))))))))))))) || false))))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec2(! (! ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec2(! (! ((false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(920.711))))))))))))))))), bool(bool(! (bool(bool(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! ((false)))))))))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))).y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))).y), false, false)))), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))))))).y), false, false)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))) && true)) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)).x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, _GLF_IDENTITY(-0.2, (false ? _GLF_FUZZED(93.49) : -0.2)), -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046))))), transpose(transpose(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7616.5775), _GLF_FUZZED(float(104644u))), bvec2(false, false))), 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046)))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), length(0.0), 1.0, 0.0, 0.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046))))), transpose(transpose(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-474.738)), float(1.0), bool(true))))), 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046))))))))))))), mix(vec2(_GLF_FUZZED(-1.0), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), length(0.0), 1.0, 0.0, 0.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046))))), transpose(transpose(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-474.738)), float(1.0), bool(true))))), 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046))))))))))))))[1]), vec2(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1]))))))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))), vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), length(0.0), 1.0, 0.0, 0.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046))))), transpose(transpose(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-474.738)), float(1.0), bool(true))))), 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, -2396.9046))))))))))))))[0], _GLF_FUZZED(86.24)), bvec2(true, false))) - vec2(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(-7004.1958, -5230.7382, -4472.4093, 4.6, 7.4, -792.866, 3.4, -69.92, -6.3, 820.672, 4.8, 822.485, 6.1, 5.9, -5.7, -4229.1157)) : mat4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).y, (false ? _GLF_FUZZED(7.9) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), mat3x4(_GLF_IDENTITY(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1.2)), _GLF_IDENTITY(bool(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(false))))), 1.0, 0.0, 1.0, _GLF_IDENTITY(length(0.0), float(vec2(length(0.0), 1.0))), 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, _GLF_IDENTITY(9.7, (9.7) / 1.0), -5.5, 9.0, 93.44, _GLF_IDENTITY(-7.8, (_GLF_IDENTITY(-7.8, (-7.8) / sqrt(1.0))) - 0.0), -2396.9046))))), transpose(transpose(mat4(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), 1.0, 0.0, 0.0, 1.0), (true ? mat3x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0) : _GLF_FUZZED(mat3x4(7.8, 436.808, 9606.6913, -0.2, -41.67, 7876.6886, 9.7, -5.5, 9.0, 93.44, -7.8, _GLF_IDENTITY(-2396.9046, determinant(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) * (-2396.9046)))))))))))))).y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(113.050), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282)), bvec2(true, false))).y)))))) || false), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(113.050), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, max(1, 1)), 1))], 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282)), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282))) * mat2(1.0), min((vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282))) * mat2(1.0), _GLF_IDENTITY((vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282))) * mat2(1.0), clamp((vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282))) * mat2(1.0), (vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282))) * mat2(1.0), (vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282))) * mat2(1.0)))))), bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, true && (true)))), false))), vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(113.050), _GLF_IDENTITY((injectionSwitch)[1], float(mat2x4((injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))], 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(8449.8282)), bvec2(true, false))), 1.0, 1.0, 1.0, 0.0, 1.0, 1.0))).y)))))) || false)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(1.0)), min(vec3(injectionSwitch, log(1.0)), vec3(injectionSwitch, log(1.0))))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(1.0)), min(vec3(injectionSwitch, log(1.0)), vec3(injectionSwitch, log(1.0)))))) - vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(1.0)), min(vec3(injectionSwitch, log(1.0)), vec3(injectionSwitch, log(1.0))))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(1.0)), min(vec3(injectionSwitch, log(1.0)), vec3(injectionSwitch, log(1.0)))))) - vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(1.0)), min(vec3(injectionSwitch, log(1.0)), vec3(injectionSwitch, log(1.0))))), (vec2(_GLF_IDENTITY(vec3(injectionSwitch, log(1.0)), min(vec3(injectionSwitch, log(1.0)), vec3(injectionSwitch, log(1.0)))))) - vec2(0.0, 0.0))))).y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), 1.0)))))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.y), (false ? _GLF_FUZZED(roundEven(812.693)) : (injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.y), float(mat4x3((injectionSwitch.y), 0.0, abs(1.0), determinant(mat4(1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, length(vec2(0.0, 0.0)), 1.0, abs(0.0), 0.0, 0.0, sqrt(0.0), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, tan(0.0))))) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(658.522))))) - 0.0)))), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) - 0.0)))), true, false)), true, false))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), true, false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), true, false))), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), bool(bvec3(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) - _GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)))), true, false)), true, false))), true, false)), false, true, false)))), false, false, true))))))))), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])))).y))), true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true), true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false)))))))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])))).y))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), true))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), true))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)))))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)))))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)))))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))) && true))))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))), true, true, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))), bvec2(bvec4(bvec2(true, false), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))), bvec2(bvec4(bvec2(true, false), false, false)))), true, false)))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))) && true), _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), false))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), false))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true)))), true, true, false))), true, true, true))) && true)) && true)))))), bool(bool((! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 + (1))])))).y))), true, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true), bvec2(bvec3(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true), true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false)), bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false)))))))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])))).y))), true, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), true))), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), false)))) && true))), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false), true)))), true))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)))))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)))))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true))), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 1.0)))))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))) && true))))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))), true, true, true)), (_GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))), true, false)), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true)))), true, _GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))), bvec2(bvec4(bvec2(true, false), false, false)))), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false))), bvec2(bvec4(bvec2(true, false), false, false)))), true, false)))), (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, false)))))) && true), _GLF_IDENTITY(true, ! (! (true))))), (bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), false))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true)))), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (_GLF_IDENTITY(! (bool(bvec2(false, false))), (! (bool(bvec2(false, false)))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false)), bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false))))), false))), bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), bool(bool(bool(bvec3(false, true, false)))))))), true)))), true, true, false))), true, true, true))) && true)) && true))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))), false || ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y)))))))) && true), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))) || false), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false, true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)), true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))))))) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y) && true)))) || false, true && ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4(! (_GLF_DEAD(false)), true, false, true)), ! (! (bool(bvec4(! (_GLF_DEAD(false)), true, false, true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_IDENTITY(true, true && (true))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))) || false, ! (! ((_GLF_IDENTITY(false, ! (! (false)))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))) || false), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))) || false)) && true)) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) || false)))))), true))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(9594.4611)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u), (_GLF_IDENTITY(workgroup_size, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (workgroup_size)) * workgroup_id) << _GLF_IDENTITY((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) + 0u), _GLF_IDENTITY(0u, ~ (~ (0u))))) + (uint(1u))), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (0u) >> 0u))), (false ? _GLF_FUZZED(subgroup_local_id) : uint(uint(_GLF_IDENTITY(0u, (0u) >> 0u))))))))), uint(1u))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), uint(uvec4((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(_GLF_IDENTITY(1u, max(1u, 1u))))), ~ (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(_GLF_IDENTITY(1u, min(1u, 1u))))), ~ (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u)))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), ~ (~ (_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u)))), ((_GLF_IDENTITY(uint(1u), max(_GLF_IDENTITY(uint(1u), (uint(1u)) ^ 0u), uint(1u))))) ^ 0u)))) ^ 0u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (true ? _GLF_ONE(1.0, injectionSwitch.y) : _GLF_FUZZED(3.7)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 1.0 * (_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 0.0), (true ? vec2(injectionSwitch.x, 0.0) : _GLF_FUZZED(vec2(833.371, -555.896)))))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-75.89, (_GLF_IDENTITY(-75.89, max(-75.89, -75.89))) - 0.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), mix(vec2(_GLF_FUZZED(-18.76), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1], (false ? _GLF_FUZZED(0.6) : (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))[1]))), vec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), max((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))))[_GLF_IDENTITY(0, clamp(0, 0, 0))], _GLF_FUZZED(-38.69)), bvec2(true, false))).x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(77.29, -39.68)))), injectionSwitch)), _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]), mat2(1.0) * (vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | 0)], injectionSwitch[1]))))) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0)))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(385.191) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1474.8873))))), injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_size) : subgroup_id)), max(subgroup_id, subgroup_id)) * _GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size)) + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) * ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), min(1u << _GLF_IDENTITY(uint(3u), uint(3u)), 1u << _GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))) + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 1u * (next_virtual_gid))], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((4), max((4), (4))) / _GLF_IDENTITY(1, clamp(1, 1, 1))), _GLF_IDENTITY(64, (64) >> 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), clamp(max(64, 64), max(64, 64), max(64, 64)))), 0);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))), (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))), mix(vec2((_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))[0], _GLF_FUZZED(-8434.7967)), vec2(_GLF_FUZZED(515.389), (_GLF_IDENTITY(vec2(0.0, 0.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))))))[1]), bvec2(false, true)))) + vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0)))))))), 1.0 * (float(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3(0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))))), _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(2.4), (vec4(0.0, 0.0, 0.0, 1.0))[1], (vec4(0.0, 0.0, 0.0, 1.0))[2], (vec4(0.0, 0.0, 0.0, 1.0))[3]), vec4((vec4(0.0, 0.0, 0.0, 1.0))[0], _GLF_FUZZED((3.3 + 533.303)), _GLF_FUZZED((false ? -8.3 : -8.8)), _GLF_FUZZED(8438.3672)), bvec4(true, false, false, false)))), dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + length(vec4(0.0, 0.0, 0.0, 0.0)))), vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-0.2), (vec4(0.0, 0.0, 0.0, 1.0))[1], _GLF_FUZZED(-5.2), (vec4(0.0, 0.0, 0.0, 1.0))[3]), vec4((vec4(0.0, 0.0, 0.0, 1.0))[0], _GLF_FUZZED(-77.72), (vec4(0.0, 0.0, 0.0, 1.0))[2], _GLF_FUZZED(-104.100)), bvec4(true, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), clamp((injectionSwitch) * vec2(1.0, 1.0), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), vec2(mat3((injectionSwitch) * vec2(1.0, 1.0), 0.0, 0.0, sqrt(0.0), 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), vec2(1.0, 1.0) * ((injectionSwitch) * vec2(1.0, 1.0)))))).y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false)))), ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((940.218 - (-1.8))), _GLF_FUZZED(-457.149)), bvec2(false, false))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) - 0), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec3(false, false, false)))), ((_GLF_IDENTITY(false, bool(bvec3(false, false, false))))) && true) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec4(-2.7, -13.19, -6852.9420, 9290.5480).w), _GLF_FUZZED(4.6)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))) / abs(1.0))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(_GLF_IDENTITY(51318, (_GLF_IDENTITY(_GLF_IDENTITY(51318, (_GLF_IDENTITY(51318, (51318) - 0)) | int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(51318, ~ (~ (51318)))) / 1)) * ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))))))), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, (false) || false), false), _GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY(true, true && (true))))), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) || false), false), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(false, true, true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, true))), bvec3(bvec4(bvec3(bvec3(bvec3(false, true, true))), false)))), true))))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, true))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(9.1)))) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))))) || false, true && (((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))))))) || false)), ! _GLF_IDENTITY((! (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false))))))) || false)), false || ((! (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) || false), true, false, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), (true && (_GLF_IDENTITY(false, bool(bool(false))))) || false))))))) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, 0 | (0))], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1)))))], injectionSwitch[1])))))).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(float(90979))), vec2(_GLF_FUZZED(5534.1609), (injectionSwitch)[1]), bvec2(false, true))).y, injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(log(1.0), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))) ? _GLF_IDENTITY(log(1.0), clamp(log(1.0), log(1.0), log(1.0))) : _GLF_FUZZED(-342.639))), 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0)), (false ? _GLF_FUZZED(intBitsToFloat(-88443)) : float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)))), 1.0, 0.0, 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(-7.6)), float(sin(0.0)), bool(true))), 1.0)))), clamp(float(mat4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-7453.7755)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) * (injectionSwitch))) / vec2(1.0, 1.0)).y, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-808.273) : 0.0)), 0.0)), 0.0))), (clamp(0.0, 0.0, 0.0)) / 1.0)), 0.0, 1.0, log(1.0), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3(0.0, cos(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, abs(exp(0.0)), 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3(0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? -574.959 : float(true)))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0, 0.0, abs(exp(0.0)), 1.0)), float(mat3(float(mat3(0.0, cos(0.0), 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((true ? -574.959 : float(true)))), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 1.0, 0.0, abs(exp(0.0)), 1.0)), 1.0, 0.0, 1.0, exp(0.0), 1.0, exp(0.0), 1.0, 0.0)))), min(_GLF_IDENTITY(0.0, float(mat3(0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, abs(exp(0.0)), 1.0))), _GLF_IDENTITY(0.0, float(mat3(0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, 0.0, abs(exp(0.0)), 1.0))))), _GLF_IDENTITY(0.0, float(mat3(0.0, cos(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-600.838))), abs(exp(0.0)), 1.0))))), _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-2.2))), 1.0, 1.0, tan(0.0), 0.0))), 1.0, sin(0.0), 1.0)), float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (0.0) + 0.0), 0.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0, sin(0.0), 1.0)), float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)), max(_GLF_IDENTITY(mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)), clamp(mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)), mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)))), mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true)))), mix(float(_GLF_FUZZED(365.844)), float(1.0), bool(true))))), 1.0)))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-25.53)), bool(false))), 0.0, _GLF_IDENTITY(0.0, abs(sqrt(0.0)) + (_GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, log(1.0), 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, abs(0.0)))), sin(0.0), 1.0)))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))) || false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
