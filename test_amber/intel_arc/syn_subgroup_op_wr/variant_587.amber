#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), float(_GLF_FUZZED(-8693.8218)), bool(false))), injectionSwitch.y, injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), (bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-0.4)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (! ((injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(exp2(vec2(6.3, -842.381))) : injectionSwitch)).x > injectionSwitch.y))))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), min(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), false, false))))))))) && true) || (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true), false || ((_GLF_IDENTITY(false, true && (false))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), bool(bvec2(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))))), true)))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false))))))), ! (! (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))) || false), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false, false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), false, false)))))))) || false), false))))) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(subgroup_id))) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x))), float(_GLF_FUZZED((-7.6 / -8.0))), bool(false))) > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, 0u | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u)))), ~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u)))), min(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u)))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), min(uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u), uvec3(_GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), 0u, 1u)))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 1u)))))))), 0u | (_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)))) + 1) % subgroup_size), uint(uvec2(((subgroup_local_id + 1) % subgroup_size), 1u)));
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -8.7)))).y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false))))), ((! _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), min(_GLF_IDENTITY(1, (1) - 0), _GLF_IDENTITY(1, (1) - 0))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(1, min(1, 1)) * (4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)) * (4), (true ? _GLF_IDENTITY(1, min(1, 1)) * (4) : _GLF_FUZZED(20225)))))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)) * (_GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, max(4, 4)), 4)), 4))), (_GLF_IDENTITY(1, min(1, 1)) * (4)) / 1))), min((_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)) * (4), (_GLF_IDENTITY(1, min(1, 1)) * (4)) / 1))), (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)) * (4), (_GLF_IDENTITY(1, min(1, 1)) * (4)) / 1))))))) << 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x)), (_GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY(1, min(1, 1)) * (4))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(1, min(1, 1)) * (4)))), (~ ((_GLF_IDENTITY(4, _GLF_IDENTITY(1, min(1, 1)) * (4))))) << 0))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))) << 0))) << _GLF_IDENTITY(0, 0 ^ (0))), 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (false) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))) && true), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bool(! (! (! (_GLF_IDENTITY(false, (false) && true))))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (false) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true))) && true), ! (! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) && true)) && true)))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ((false)) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(29.55), _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-50.98, (-50.98) / 1.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(-50.98, (-50.98) / 1.0), clamp(_GLF_IDENTITY(-50.98, (-50.98) / 1.0), _GLF_IDENTITY(-50.98, (-50.98) / 1.0), _GLF_IDENTITY(-50.98, (-50.98) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(-50.98, (-50.98) / 1.0), (_GLF_IDENTITY(-50.98, (-50.98) / 1.0)) * 1.0), _GLF_IDENTITY(-50.98, (-50.98) / 1.0)))), (_GLF_FUZZED(-50.98)) * _GLF_IDENTITY(1.0, 0.0 + (1.0)))), bvec2(false, false))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat4x2(-6.6, -6998.8267, 2594.8976, -353.255, 5.1, -3.6, -4131.7236, -4.9)))))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y))))), (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), true && (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, bool(bvec3(_GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bool((false) || false), true && (bool((false) || false))))), false, true))), false || _GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false))) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), true && ((false))) || false), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && ((false))) || false)), _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(! ((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && ((false))) || false)), ! (! (! ((_GLF_IDENTITY((false), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))) && ((false))) || false)))))))))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
          barrier();
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (bool(bvec4(false, true, true, false)))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(int(4))), 64, 2);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-880.722, 794.503)))).x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y)))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), true, false))))), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, false || (false))))))), true)))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true), true)))))))))))), ! (! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true)))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true))))))))))))))))), ! (! ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true))), false, false))), true, false))))), true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true))))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, _GLF_IDENTITY(false, false || (false))))))), true)))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true), true)))))))))))), ! (! (! (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true)), true && (bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true)))))))), ! (! ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))), true))))))))))))))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, true)), (bool(bvec4(! (false), true, true, true))) && true))), true && (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec4(! (false), true, true, true)), (bool(bvec4(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), false, true), bvec3(bvec4(bvec3(! (false), false, true), true))))), true, true, true))) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (false) && _GLF_IDENTITY(true, (true) && true))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), (false) && _GLF_IDENTITY(true, (true) && true)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, false))), false, true, true))), ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid))], 4, 64, 2);
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bool(false)))), bvec3(bvec3(bvec3(false, true, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(550.115), _GLF_FUZZED(-5.6)), vec2((true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))[0], (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))[1]), bvec2(true, true))))).x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x : _GLF_FUZZED(determinant(mat4(78.67, 44.15, -7211.4635, 8.1, -3.4, 8.6, -369.568, 9.6, -4.9, -76.82, 53.43, 6.9, 446.332, 7.5, 28.77, -5408.7506))))))), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x)))) > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), false || (bool(bool(injectionSwitch.x > injectionSwitch.y))))))))) && true)))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))) - sqrt(vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(527.271, -50.80))))))).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), false, false, true)))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))) - sqrt(vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(527.271, -50.80))))))).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), false, false, true)))) || false)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))) - sqrt(vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(527.271, -50.80))))))).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), false, false, true)))) || false))), ! (! (bool((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))) - sqrt(vec2(0.0, 0.0))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), (_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0), mat3(1.0) * (mat3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(647.783))), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0)))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))) > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (bool(bool(injectionSwitch.x > injectionSwitch.y))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), min(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (true ? mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(527.271, -50.80))))))).x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(bool(bool(injectionSwitch.x > injectionSwitch.y)), ! (! (bool(bool(injectionSwitch.x > injectionSwitch.y)))))) && true))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) || false)), false, false, true)))) || false))))))))))))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2603.6665, clamp(2603.6665, 2603.6665, _GLF_IDENTITY(2603.6665, clamp(2603.6665, 2603.6665, 2603.6665)))))), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), bool(bvec2(bool(injectionSwitch.x > injectionSwitch.y), false))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 0.0, 1.0))), 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), max(float(mat3x4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), float(mat3x4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0))), min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0)))))))), float(_GLF_FUZZED(-42.98)), bool(false))), 0.0), vec3(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, determinant(mat3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 1.0, 1.0, 1.0))))), 0.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(347.747)), float(injectionSwitch.x), bool(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false))))))), float(_GLF_FUZZED(vec2(98.26).s)), bool(false))) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))) && true))) && true)))))))) && true, bool(bool((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(2603.6665, clamp(2603.6665, 2603.6665, _GLF_IDENTITY(2603.6665, clamp(2603.6665, 2603.6665, 2603.6665))))), (_GLF_FUZZED(_GLF_IDENTITY(2603.6665, clamp(2603.6665, 2603.6665, _GLF_IDENTITY(2603.6665, clamp(2603.6665, 2603.6665, 2603.6665)))))) / 1.0)), float(injectionSwitch.y), bool(true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))) || false))))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))), 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(dot(vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, abs(1.0), 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.7))), 1.0, abs(1.0), 1.0, 0.0, 1.0))), 1.0 * (_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, abs(1.0), 1.0, 0.0, 1.0)))))))), float(_GLF_FUZZED(-42.98)), bool(false))), 0.0), vec3(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0)), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, length(vec3(0.0, 0.0, 0.0)), 1.0))), 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, _GLF_IDENTITY(determinant(mat3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (_GLF_IDENTITY(determinant(mat3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), (true ? determinant(mat3(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)) : _GLF_FUZZED(-5353.7189)))) - 0.0), 1.0))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(347.747)), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(vec2(98.26).s)), bool(false))) > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), true && (bool(injectionSwitch.x > injectionSwitch.y)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), vec2(_GLF_FUZZED((-58.46 / 8.5)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), ! (! ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))))) && true))) && true)))))))) && true))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((false) || false, true && ((false) || false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], (false ? _GLF_FUZZED(-50.73) : (injectionSwitch)[1]))), vec2(_GLF_FUZZED(24.33), _GLF_FUZZED(9349.2686)), bvec2(false, false))).y, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_FUZZED(24.33), _GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), clamp(_GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), mix(float(_GLF_FUZZED(-908.198)), float(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0))), bool(true))), float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0))))), _GLF_FUZZED(9349.2686)), mix(vec2(_GLF_FUZZED(8.8), _GLF_FUZZED(-832.034)), vec2((vec2(_GLF_IDENTITY(_GLF_FUZZED(24.33), _GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), clamp(_GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), mix(float(_GLF_FUZZED(-908.198)), float(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0))), bool(true))), float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0))))), _GLF_FUZZED(9349.2686)))[0], (vec2(_GLF_IDENTITY(_GLF_FUZZED(24.33), _GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), clamp(_GLF_IDENTITY(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), mix(float(_GLF_FUZZED(-908.198)), float(float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0))), bool(true))), float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0)), float(mat4x2(_GLF_FUZZED(24.33), 1.0, 0.0, 1.0, cos(0.0), 0.0, sin(0.0), 1.0))))), _GLF_FUZZED(9349.2686)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec2(false, false))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(24.33), _GLF_FUZZED(9349.2686)), bvec2(false, false))).y))))))), _GLF_IDENTITY((false), bool(bool((false)))) || false)))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec3(0.0, round(length(normalize(1.0))), length(0.0)), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, round(length(normalize(1.0))), length(0.0)), vec3(0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), determinant(mat2(1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0))), sqrt(1.0), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(exp(0.0), 0.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(exp(0.0), 0.0, 0.0, tan(0.0))), max(dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(exp(0.0), 0.0, 0.0, tan(0.0))), _GLF_IDENTITY(dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(exp(0.0), 0.0, 0.0, tan(0.0))), max(dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(exp(0.0), 0.0, 0.0, tan(0.0))), dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), vec4(exp(0.0), 0.0, 0.0, tan(0.0)))))))) * (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(-67.40)), bool(false)))))))).y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), false || (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))))), bool(bvec3(((_GLF_IDENTITY(false, (false) || false)) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! ((false) || false), false || (! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) && (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false))) || false), bool(bool(! ((false) || false))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false))) || false), bool(bool(! ((false) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), ! (! ((_GLF_IDENTITY(! ((false) || false), bool(bool(! ((false) || false)))))))))))))))), (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))), false, false, true)))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))))) && true), bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), bool(bvec3(((false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_IDENTITY(! ((false) || false), false || (! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false))))))), ! (! (true && (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), _GLF_IDENTITY(bool(bvec3(((false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(((false) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(_GLF_IDENTITY(! ((false) || false), false || (! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false))))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), ! (_GLF_IDENTITY(! (((false) || false)), true && (! ((_GLF_IDENTITY((false) || false, ((false) || false) || false))))))), bool(bool(! ((false) || false))))), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(! ((false) || false), bool(bool(! _GLF_IDENTITY(((false) || false), true && (_GLF_IDENTITY(((false) || false), ! (! (((false) || false)))))))))))), (! (! ((_GLF_IDENTITY(! ((false) || false), bool(bool(! _GLF_IDENTITY(((false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(((false) || false), ! (! (((false) || false))))), ! (! ((_GLF_IDENTITY(((false) || false), ! (! (((false) || false)))))))))))))))) && true)))))))))), bool(bvec2(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-59.78), _GLF_FUZZED(5.9)), bvec2(false, false))).y))), bvec3(bvec3(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], _GLF_IDENTITY(float(vec4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], sqrt(0.0), 0.0, 1.0)), (false ? _GLF_FUZZED(0.9) : float(vec4(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch)))[1], sqrt(0.0), 0.0, 1.0))))), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))[1]))), (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))))[1])))) / vec2(1.0, 1.0)), vec2(_GLF_FUZZED(-59.78), _GLF_FUZZED(5.9)), bvec2(false, false))).y)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), true))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), true)))))))) && true), bool(bvec3(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) < _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y)))))))))))), _GLF_IDENTITY(_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((false) || false), bool(bvec3(((false) || false), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y)))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! ((false) || false), false || (! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false))), bool(bvec4(_GLF_IDENTITY(! ((false) || false), false || (! (_GLF_IDENTITY((false), bool(bvec4((false), false, false, false))) || false))), true, true, true)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), true && _GLF_IDENTITY((_GLF_IDENTITY(! ((false) || false), bool(bool(_GLF_IDENTITY(! ((false) || false), (! ((false) || false)) && true))))), ! (! ((_GLF_IDENTITY(! ((false) || false), bool(bool(! ((false) || false)))))))))))))))), true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, min(read, read)), _GLF_IDENTITY(_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, 0u ^ (read))), clamp(_GLF_IDENTITY(_GLF_IDENTITY((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((read), min((read), (read))), (0u ^ (read)) - (_GLF_IDENTITY(uvec2(197934u, 175791u).t, min(_GLF_IDENTITY(uvec2(197934u, 175791u).t, (uvec2(197934u, 175791u).t) + 0u), uvec2(197934u, 175791u).t)) & 0u)))), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))) * (_GLF_IDENTITY((_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((read), _GLF_IDENTITY(min((read), (read)), (min((read), (read))) | (min((read), (read))))), (0u ^ (read)) - (_GLF_IDENTITY(uvec2(197934u, 175791u).t, min(_GLF_IDENTITY(uvec2(197934u, 175791u).t, (uvec2(197934u, 175791u).t) + 0u), uvec2(197934u, 175791u).t)) & 0u)))), ((_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((read), min((read), (read))), (0u ^ (read)) - (_GLF_IDENTITY(uvec2(197934u, 175791u).t, min(_GLF_IDENTITY(uvec2(197934u, 175791u).t, (uvec2(197934u, 175791u).t) + 0u), uvec2(197934u, 175791u).t)) & 0u))))) | (_GLF_IDENTITY((_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((read), min((read), (read))), (0u ^ (read)) - (_GLF_IDENTITY(uvec2(197934u, 175791u).t, min(_GLF_IDENTITY(uvec2(197934u, 175791u).t, (uvec2(197934u, 175791u).t) + 0u), uvec2(197934u, 175791u).t)) & 0u)))), uint(uint((_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ _GLF_IDENTITY((read), min((read), (read))), (0u ^ (read)) - (_GLF_IDENTITY(uvec2(197934u, 175791u).t, min(_GLF_IDENTITY(uvec2(197934u, 175791u).t, (uvec2(197934u, 175791u).t) + 0u), uvec2(197934u, 175791u).t)) & 0u))))))))))), clamp((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) - (uvec2(197934u, 175791u).t & 0u)))), (read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) - (uvec2(197934u, 175791u).t & 0u)))), (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) ^ 0u))) | (_GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (read), (0u ^ (read)) - (uvec2(197934u, 175791u).t & 0u)), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) + (_GLF_IDENTITY(0u, min(0u, 0u)))))) ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) - 0u)) - 0u)), (0u ^ (_GLF_IDENTITY(read, (read) | _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))), clamp(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))), (uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))))))) ^ 0u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))), (true ? uint(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(subgroup_base))))))))) - (uvec2(197934u, 175791u).t & 0u)))))))), ((read) | (_GLF_IDENTITY(read, 0u ^ (read)))) | ((read) | (_GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, clamp(read, read, read))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(read, (read) | 0u)) | (_GLF_IDENTITY(read, 0u ^ (read))), _GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), uint(uvec2(_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), (((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u))) | (_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), clamp(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)))))), (0u ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))))), ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))) | ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(read, (read) | 0u)) | (_GLF_IDENTITY(read, 0u ^ (read))), _GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), uint(uvec2(_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), (((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u))) | (_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), clamp(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)))))), (0u ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))))), ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))) | ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | 0u)) | (_GLF_IDENTITY(read, 0u ^ (read))), _GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), uint(uvec2(_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), (((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u))) | (_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), clamp(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)))))), (0u ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))))), ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))) | ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(read, (read) | 0u)) | (_GLF_IDENTITY(read, 0u ^ (read))), _GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), uint(uvec2(_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), (((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u))) | (_GLF_IDENTITY(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), clamp(((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)), ((read) | _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) - 0u)))))), (0u ^ 0u)))) | _GLF_IDENTITY((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))))), ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))) | ((_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))), ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u)))) | ((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (read), (0u ^ (read)) / 1u))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(read, (_GLF_IDENTITY(read, clamp(read, read, read))) | (read))) | (_GLF_IDENTITY(read, 0u ^ (read))), (_GLF_IDENTITY((read), ~ (~ ((read)))) | (_GLF_IDENTITY(read, 0u ^ (read)))) * 1u))), (_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) - 0u)), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) - 0u)), (0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) - 0u))) - 0u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) - 0u)), ~ (_GLF_IDENTITY(~ (0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) - 0u))), (~ (0u ^ (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, min(read, read))) - 0u)))) / 1u))))))), clamp(_GLF_IDENTITY((read) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - 0u), (_GLF_IDENTITY(read, (read) - 0u)) | (_GLF_IDENTITY(read, (read) - 0u))), 0u ^ (_GLF_IDENTITY(read, (true ? _GLF_IDENTITY(read, 0u ^ (read)) : _GLF_FUZZED(subgroup_base)))))), ((read) | (_GLF_IDENTITY(read, 0u ^ (read)))) | ((read) | (_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), ~ (~ (_GLF_IDENTITY(read, 0u ^ (read)))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), _GLF_IDENTITY((_GLF_IDENTITY(read, 0u ^ (read))), ((_GLF_IDENTITY(read, 0u ^ (read)))) ^ 0u) / 1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(read, 0u ^ (read)), (_GLF_IDENTITY(read, 0u ^ (read))) / 1u))) * uint(_GLF_ONE(1.0, injectionSwitch.y))))))), _GLF_IDENTITY((read) | (_GLF_IDENTITY(read, 0u ^ (read))), (_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, 0u ^ (read))), min(_GLF_IDENTITY((read) | (_GLF_IDENTITY(read, 0u ^ (read))), max((read) | (_GLF_IDENTITY(read, 0u ^ (read))), (read) | (_GLF_IDENTITY(read, 0u ^ (read))))), (read) | (_GLF_IDENTITY(read, 0u ^ (read)))))) | ((read) | (_GLF_IDENTITY(read, 0u ^ (read))))), (read) | (_GLF_IDENTITY(read, 0u ^ (read)))))) / 1u)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
