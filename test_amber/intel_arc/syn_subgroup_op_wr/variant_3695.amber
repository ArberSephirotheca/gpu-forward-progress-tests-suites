#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_42 {
 ivec3 _f0;
 mat2x3 _f1;
 int _f2;
 vec3 _f3;
} ;

struct _GLF_struct_41 {
 uvec2 _f0;
 uint _f1;
 mat4x3 _f2;
 mat3x2 _f3;
 bvec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_40 {
 bvec3 _f0;
 bvec2 _f1;
 bvec4 _f2;
 mat4x3 _f3;
 mat2x3 _f4;
 uvec2 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_39 {
 uvec2 _f0;
 bvec4 _f1;
 uvec2 _f2;
} ;

struct _GLF_struct_43 {
 _GLF_struct_39 _f0;
 _GLF_struct_40 _f1;
 ivec4 _f2;
 _GLF_struct_41 _f3;
 _GLF_struct_42 _f4;
} ;

struct _GLF_struct_44 {
 _GLF_struct_43 _f0;
 uvec2 GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id;
} ;

struct _GLF_struct_36 {
 int _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_37 {
 _GLF_struct_36 _f0;
} ;

struct _GLF_struct_34 {
 uvec4 _f0;
} ;

struct _GLF_struct_33 {
 float _f0;
 uvec2 _f1;
 uint read;
} ;

struct _GLF_struct_32 {
 float _f0;
 mat3x4 _f1;
 mat3x2 _f2;
 bool _f3;
 mat2x4 _f4;
 mat2x3 _f5;
} ;

struct _GLF_struct_31 {
 mat2x3 _f0;
 vec3 _f1;
} ;

struct _GLF_struct_35 {
 _GLF_struct_31 _f0;
 ivec4 _f1;
 _GLF_struct_32 _f2;
 _GLF_struct_33 _f3;
 _GLF_struct_34 _f4;
} ;

struct _GLF_struct_29 {
 mat4x2 _f0;
} ;

struct _GLF_struct_28 {
 mat4x3 _f0;
 float _f1;
 vec4 _f2;
 bool _f3;
 mat2x3 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_27 {
 int _f0;
 uint _f1;
 mat3x4 _f2;
 float _f3;
 int _f4;
 uvec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_30 {
 uvec3 _f0;
 mat4x2 _f1;
 bool _f2;
 _GLF_struct_27 _f3;
 _GLF_struct_28 _f4;
 _GLF_struct_29 _f5;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
} ;

struct _GLF_struct_24 {
 mat4x3 _f0;
} ;

struct _GLF_struct_23 {
 uvec2 _f0;
 mat2x3 _f1;
 vec2 _f2;
 bool _f3;
} ;

struct _GLF_struct_22 {
 ivec2 _f0;
 mat2 _f1;
 mat4 _f2;
 bvec3 _f3;
 int _f4;
} ;

struct _GLF_struct_26 {
 _GLF_struct_22 _f0;
 _GLF_struct_23 _f1;
 uvec4 _f2;
 _GLF_struct_24 _f3;
 int _f4;
 _GLF_struct_25 _f5;
 int _f6;
} ;

struct _GLF_struct_20 {
 bvec3 _f0;
 uvec3 _f1;
 mat2x3 _f2;
 int _f3;
 uvec4 _f4;
 mat3 _f5;
 mat4x3 _f6;
} ;

struct _GLF_struct_19 {
 float _f0;
 bvec3 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 bvec2 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_21 {
 uvec2 _f0;
 _GLF_struct_19 _f1;
 _GLF_struct_20 _f2;
} ;

struct _GLF_struct_38 {
 _GLF_struct_21 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_30 _f2;
 _GLF_struct_35 _f3;
 _GLF_struct_37 _f4;
} ;

struct _GLF_struct_16 {
 int _f0;
 float _f1;
 uvec3 _f2;
 mat3x4 _f3;
 bvec2 _f4;
 mat4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_15 {
 uint _f0;
 uvec4 _f1;
 mat3 _f2;
 int _f3;
} ;

struct _GLF_struct_14 {
 vec3 _f0;
 ivec3 _f1;
 mat2x4 _f2;
} ;

struct _GLF_struct_13 {
 ivec2 _f0;
 mat3 _f1;
 ivec3 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_17 {
 _GLF_struct_13 _f0;
 mat4x3 _f1;
 bvec2 _f2;
 _GLF_struct_14 _f3;
 vec3 _f4;
 _GLF_struct_15 _f5;
 _GLF_struct_16 _f6;
} ;

struct _GLF_struct_18 {
 bvec2 _f0;
 _GLF_struct_17 _f1;
 bvec3 _f2;
 uint _f3;
 uvec4 _f4;
 uint workgroup_base;
 uvec2 _f5;
} ;

struct _GLF_struct_10 {
 int _f0;
 ivec3 _f1;
 uint num_workgroup;
 uvec4 _f2;
} ;

struct _GLF_struct_9 {
 uint _f0;
 ivec3 _f1;
 mat4x3 _f2;
 uint _f3;
 uvec4 _f4;
 mat4 _f5;
 bool _f6;
} ;

struct _GLF_struct_11 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 mat4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_12 {
 ivec4 _f0;
 bvec4 _f1;
 _GLF_struct_11 _f2;
 ivec4 _f3;
 uint _f4;
} ;

struct _GLF_struct_6 {
 bvec2 _f0;
 ivec3 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_5 {
 ivec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat4x3 _f1;
 uvec4 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_3 {
 mat4 _f0;
 int _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 _GLF_struct_4 _f3;
 _GLF_struct_5 _f4;
 _GLF_struct_6 _f5;
} ;

struct _GLF_struct_1 {
 bool _f0;
 mat4x3 _f1;
 float _f2;
 mat3x2 _f3;
 vec4 _f4;
 float _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_0 {
 bool _f0;
 bvec2 _f1;
 vec2 _f2;
 float _f3;
 mat2x4 _f4;
 mat4x2 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_8 {
 _GLF_struct_2 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 ivec4 _f3;
 _GLF_struct_7 _f4;
 uint workgroup_size;
 ivec4 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), max(float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0)), float(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3.0) : injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(float(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(-5.1)), float(float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) < injectionSwitch.y)))))))), max(float(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, 1.0, 0.0, 0.0, 1.0, tan(_GLF_IDENTITY(0.0, (0.0) + 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))), float(float(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-783.629)), bool(false))))), 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_44 _GLF_struct_replacement_44;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uvec3 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + _GLF_IDENTITY(vec2(0.0, 0.0), vec2(vec4(vec2(0.0, 0.0), exp(0.0), 1.0)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + vec2(0.0, 0.0)).x > injectionSwitch.y)), true && (bool((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) + vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)).x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), (true && (false)) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && true)))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).x < injectionSwitch.y))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))), true, false)), false))))), true)))), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))))), true, false))), _GLF_IDENTITY((! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))) || false, false || ((! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))) || false))))))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).x < injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, round(length(normalize(1.0))), _GLF_ONE(1.0, injectionSwitch.y), sqrt(1.0), 1.0, 0.0, 0.0, 1.0))), injectionSwitch)).x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, abs(1.0) * (injectionSwitch.y))) - _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(cos(0.0), 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(cos(0.0), 1.0, 1.0)))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false))), (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, false)))) || false))))) && true), false, false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(97.13) : injectionSwitch[0])), injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)) && true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), ! (! (bool(bvec2(_GLF_DEAD(false), true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, tan(0.0), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, tan(0.0), 1.0))), exp(0.0), 0.0, 1.0))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true), false)))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true), bvec2(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y, true), false))))) || false))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0)) * mat2(1.0)))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0)) * mat2(1.0)))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0)) * mat2(1.0)))) > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0), (mat2x3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0), (true ? mat2x3(injectionSwitch.x, 0.0, 1.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat2x3(-6756.8320, -82.27, -90.74, -4.1, -46.15, -271.129)))))), exp(0.0), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 1.0, 1.0)) * mat2(1.0)))) > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
    return;
   barrier();
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(ivec4(1), bvec4(true), _GLF_struct_11(_GLF_struct_9(1u, ivec3(1), mat4x3(1.0), 1u, uvec4(1u), mat4(1.0), true), _GLF_struct_10(1, ivec3(1), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x, _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))), mat4(1.0), mat2(1.0)), ivec4(1), 1u);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))) && true)), true, false))), false, true))))), true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false)), (bool(bvec3(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, false))) && true)), true, false))), false, true))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) || false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))), true))))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((505.073 / -99.29))), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), bool(true))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, false, false))), true, false))))) && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))), true, false, true))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), (bool(bool(_GLF_DEAD(false)))) || false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))), (_GLF_DEAD(false)) && true)))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), (bool(bvec4((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (_GLF_DEAD(false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), bool(bvec3((_GLF_IDENTITY(false, false || (false))), true, true))) && true), (false) && true)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), bool(bool(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.2)), float(injectionSwitch.y), bool(true))))) && true))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))))))) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   return;
  }
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_2(_GLF_struct_0(true, bvec2(_GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(vec2(1.0), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((vec2(1.0)), vec2(1.0, 1.0) * ((vec2(1.0))))), 1.0, mat2x4(1.0), mat4x2(1.0)), _GLF_struct_1(true, mat4x3(1.0), 1.0, mat3x2(1.0), _GLF_IDENTITY(vec4(1.0), vec4(mat3(vec4(1.0), 0.0, log(1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), length(0.0), 0.0))), _GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-7288.3257) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0))), 1.0)), min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(97.80)), _GLF_IDENTITY(bool(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))))) && true))), 1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (false ? _GLF_FUZZED(-7288.3257) : _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(97.80)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))) : _GLF_FUZZED(-620.925)))), ivec4(1))), bvec3(true), mat2x3(1.0), ivec4(1), _GLF_struct_7(_GLF_struct_3(mat4(1.0), 1, mat2x3(1.0)), mat4x2(1.0), mat4x3(_GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 0.0, sqrt(0.0), 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true, ! (! (true))) ? 0.0 : _GLF_FUZZED(159.686))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), _GLF_IDENTITY(vec4(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.7))))), (mat2(vec4(_GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), 0.0, 1.0, 0.0))) * mat2(1.0))), _GLF_IDENTITY(vec4(mat2x3(vec4(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 1.0, 0.0)), (mat2(vec4(0.0, 0.0, 1.0, 0.0))) * mat2(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0)), (vec4(mat2x3(vec4(_GLF_IDENTITY(mat2(vec4(0.0, 0.0, 1.0, 0.0)), (mat2(vec4(0.0, 0.0, 1.0, 0.0))) * mat2(1.0))), length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0))) / vec4(1.0, 1.0, 1.0, 1.0)))), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), 1.0)))), _GLF_struct_4(mat3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), (false ? _GLF_FUZZED(755.093) : (1.0)))) / abs(1.0)) + _GLF_IDENTITY(dot(vec2(1.0, _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5312.2719) : _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-6.4) : 0.0)), 0.0, 0.0))))), _GLF_IDENTITY(vec2(0.0, 1.0), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-3.0), mix(float(_GLF_FUZZED(66.96)), float(_GLF_FUZZED(-3.0)), bool(true))), (_GLF_IDENTITY(_GLF_FUZZED(-3.0), mix(float(_GLF_FUZZED(66.96)), float(_GLF_FUZZED(-3.0)), bool(true)))) / 1.0), (vec2(0.0, 1.0))[1]), vec2(_GLF_IDENTITY((vec2(0.0, 1.0)), ((vec2(0.0, 1.0))) / vec2(1.0, 1.0))[0], _GLF_FUZZED(1.9)), bvec2(true, false))), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-3.0), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(1.9)), bvec2(true, _GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), (_GLF_IDENTITY(vec2(0.0, 1.0), mix(vec2(_GLF_FUZZED(-3.0), (vec2(0.0, 1.0))[1]), vec2((vec2(0.0, 1.0))[0], _GLF_FUZZED(1.9)), bvec2(true, false)))) * mat2(1.0)), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((9.8 / -792.413))), float(1.0), bool(true)))))), vec2(0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))), 0.0), vec2(0.0, 1.0))) + (1.0)))))), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))))), mat4x3(1.0), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)) ^ (1u))) ^ 0u)), mat3(1.0)), _GLF_struct_5(ivec4(1), ivec4(1)), _GLF_struct_6(bvec2(true), ivec3(1), bvec4(true))), gl_WorkGroupSize.x, ivec4(1));
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z = _GLF_struct_replacement_8.workgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 _GLF_struct_replacement_44.GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(bvec4(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2.1), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4925.3483), _GLF_IDENTITY(float(mat4(_GLF_FUZZED(-4925.3483), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, length(log(1.0)), 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 1.0)), float(mat2x3(float(mat4(_GLF_FUZZED(-4925.3483), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, length(log(1.0)), 0.0, 1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(0.0, (0.0) * determinant(mat2(1.0, sqrt(0.0), 0.0, 1.0))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, 1.0, exp(0.0)))))), bvec2(true, false))).x > injectionSwitch.y)), false), false, true)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(bvec2(true), _GLF_struct_17(_GLF_struct_13(ivec2(1), _GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), mat3(_GLF_IDENTITY(mat4x3(mat3(1.0)), (mat4x3(_GLF_IDENTITY(mat3(1.0), transpose(transpose(mat3(1.0)))))) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), ivec3(1), mat4x2(1.0)), mat4x3(1.0), bvec2(true), _GLF_struct_14(vec3(1.0), ivec3(1), mat2x4(1.0)), vec3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 1.0)) : _GLF_FUZZED(6.8), (true ? _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(float(1.0))))), 1.0, 1.0)) : _GLF_FUZZED(6.8)) - log(1.0))))), _GLF_struct_15(1u, uvec4(1u), mat3(1.0), 1), _GLF_struct_16(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) - 0)) ^ 0)) | (_GLF_IDENTITY(1, (1) | (1)))), 1.0, uvec3(1u), mat3x4(1.0), bvec2(true), mat4(1.0), mat4(1.0))), bvec3(true), 1u, uvec4(1u), GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.z * _GLF_struct_replacement_44.GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.y, uvec2(1u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(tan(vec2(0.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, false)), (bool(bvec3(false, false, false))) || false))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_replacement_44.GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x = _GLF_IDENTITY(_GLF_struct_replacement_18.workgroup_base, (_GLF_struct_replacement_18.workgroup_base) | (_GLF_struct_replacement_18.workgroup_base));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y = _GLF_struct_replacement_44.GLF_merged2_0_1_14_1_1_12workgroup_baseworkgroup_id.x;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, 0u, 1u), max(uvec4(uint(5u), 1u, 0u, 1u), uvec4(uint(5u), 1u, 0u, 1u))))), uint(5u)))) / 1u)))), clamp((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), (uint(uint(5u))) | (uint(uint(5u)))))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), _GLF_IDENTITY(uint(uvec4((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (uint(uvec4((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) - (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))) ^ (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), _GLF_IDENTITY((_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), min(_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))) + 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))))), ((_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), min(_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))) + 0u), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(uint(6u), uint(6u))) | (_GLF_IDENTITY(uint(6u), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))))))) << (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0u)))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)))))) * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size)).x + subgroup_local_id, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, min(5u, 5u))) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))), clamp((((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 1u)), (uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(1u), uint(1u))), 1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) | 0u), (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | 0u)) / 1u)))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, min((5u) - 0u, _GLF_IDENTITY((5u) - 0u, max((5u) - 0u, (5u) - 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), uint(uvec4(_GLF_IDENTITY(uint(5u), (uint(5u)) / 1u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))))), (((_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u)))))))))))), (_GLF_IDENTITY(1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u)))))))))))), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) * 1u)) | (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) - 0u), (_GLF_IDENTITY(5u, (5u) - 0u)) | 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)))))) * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size)).x + subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), _GLF_IDENTITY((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, (false ? _GLF_FUZZED(subgroup_local_id) : 5u))))), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))), clamp((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) << 0u)), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (0u | 0u) | (_GLF_IDENTITY(5u, (5u) + 0u)))) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(uint(uint(5u))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(3.1, -74.15, -1.8, -2.7))) : uint(uint(uint(5u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(uint(uint(5u))), (uint(uint(uint(5u)))) * 1u)))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(uint(uint(5u))), (false ? _GLF_FUZZED(packUnorm4x8(vec4(3.1, -74.15, -1.8, -2.7))) : uint(uint(uint(5u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(uint(uint(5u))), (uint(uint(uint(5u)))) * 1u)))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))) / (1u & ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), min(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), clamp(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), 0u ^ (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))))) | (0u >> _GLF_IDENTITY(uint(0u), uint(0u)))), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(2u, 2u))), uint(2u)))))) * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, ~ (~ (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size))), max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size)).x + subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))), _GLF_IDENTITY(((_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (false ? _GLF_FUZZED(152680u) : _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), clamp((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))))))) << 0u))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)), ~ (~ (_GLF_IDENTITY((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (false ? _GLF_FUZZED(152680u) : _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), clamp((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))))))) << 0u))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)), 1u * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), (uint(5u)) >> 0u), uint(5u))), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (false ? _GLF_FUZZED(152680u) : _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), (0u << _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), clamp((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))))))) << 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) - 0u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))) | (_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) << 0u), (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) / 1u, (0u ^ 0u) | ((uint(5u)) / 1u))))))))))), clamp((((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), (_GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), ~ (~ ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))))) / 1u) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), (uint(5u)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), (0u & 155579u) ^ (_GLF_IDENTITY(uint(5u), (uint(5u)) / ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))))) - 0u), 1u)))), (uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u)))), (_GLF_IDENTITY(5u, (5u) ^ _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(6u), uint(6u))), ~ (~ ((0u >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) - 0u), _GLF_IDENTITY(1u, ~ (~ (1u)))))))) - 0u)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(5u, (5u) - 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u)), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(5u, (5u) - 0u), (_GLF_IDENTITY(5u, (5u) - 0u)) | 0u)), _GLF_IDENTITY(uint(5u), (uint(5u)) / 1u))) / 1u))), (((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), max(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u))))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(_GLF_IDENTITY(uint(uint(5u)), clamp(uint(uint(5u)), uint(uint(5u)), _GLF_IDENTITY(uint(uint(5u)), (uint(uint(5u))) / 1u))))))), 1u * ((_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), clamp(_GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))), _GLF_IDENTITY(uint(5u), uint(uint(uint(5u)))))))) | (_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), uint(uint(uint(_GLF_IDENTITY(5u, uint(uvec2(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) ^ (0u >> _GLF_IDENTITY(uint(6u), uint(6u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) + ((5u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), 0u + (_GLF_IDENTITY(uint(6u), max(uint(6u), uint(6u))))), uint(6u)))))), 1u))))))))))))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, _GLF_IDENTITY((5u) - 0u, (_GLF_IDENTITY((5u) - 0u, ~ (~ ((_GLF_IDENTITY(5u, clamp(5u, 5u, _GLF_IDENTITY(5u, (true ? 5u : _GLF_FUZZED(subgroup_id)))))) - 0u)))) - 0u))), _GLF_IDENTITY(uint(5u), _GLF_IDENTITY((uint(5u)) / 1u, max((uint(5u)) / 1u, (uint(5u)) / 1u)))))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(0u))) - 0u))), 1u, (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, min(_GLF_IDENTITY(2u, (_GLF_IDENTITY(2u, 0u ^ (2u))) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))), 2u))), uint(2u)))))) * _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, max(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size)).x + subgroup_local_id))))) / _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, max(1u, 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, true)), true, false, false)), (bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, true, true)), true, false, false))) && true))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], cos(0.0), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0))), injectionSwitch[1])).y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9812.8390) : injectionSwitch.y))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))))
      return;
     return;
    }
   return;
  }
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.y + subgroup_id * GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + _GLF_IDENTITY(1, (0 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))) * (_GLF_IDENTITY(1, (1) * 1)))) % GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x);
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_38 _GLF_struct_replacement_38 = _GLF_struct_38(_GLF_struct_21(uvec2(_GLF_IDENTITY(1u, 1u * (1u))), _GLF_struct_19(1.0, bvec3(true), ivec3(1), mat2x3(1.0), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), ivec3(1)), _GLF_struct_20(bvec3(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(61.60)), float(injectionSwitch.x), bool(true))))))) < injectionSwitch.y)))), uvec3(1u), mat2x3(1.0), 1, uvec4(1u), mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4x3(1.0))), _GLF_struct_26(_GLF_struct_22(ivec2(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (false ? _GLF_FUZZED(62236) : _GLF_IDENTITY(1, clamp(1, 1, 1))))))), mat2(1.0), mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x3(1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat4x3(1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x3(1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)), float(mat4x3(1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))), bvec3(true), 1), _GLF_struct_23(uvec2(_GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) / _GLF_IDENTITY(1u, max(1u, 1u))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), max(_GLF_IDENTITY(_GLF_IDENTITY(uint(4u), uint(4u)), (_GLF_IDENTITY(uint(4u), uint(4u))) | (_GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, max(4u, 4u))) | 0u))))), _GLF_IDENTITY(uint(4u), uint(4u))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (4u) - 0u)))), (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) | (uint(0u))), uint(0u))), 1u)))), mat2x3(1.0), vec2(1.0), true), uvec4(_GLF_IDENTITY(1u, max(1u, 1u))), _GLF_struct_24(mat4x3(1.0)), 1, _GLF_struct_25(vec2(1.0)), 1), _GLF_struct_30(uvec3(1u), mat4x2(1.0), true, _GLF_struct_27(1, _GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(max(1u, 1u), (max(1u, 1u)) << 0u)))), mat3x4(1.0), 1.0, 1, uvec4(1u), uvec3(1u)), _GLF_struct_28(mat4x3(1.0), 1.0, vec4(1.0), true, mat2x3(1.0), ivec4(1)), _GLF_struct_29(mat4x2(1.0))), _GLF_struct_35(_GLF_struct_31(mat2x3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(4551.6441) : 1.0))), float(_GLF_FUZZED(58.52)), bool(false)), (mix(float(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))) ? _GLF_FUZZED(4551.6441) : 1.0))), float(_GLF_FUZZED(58.52)), bool(false))) / 1.0))))), vec3(1.0)), ivec4(1), _GLF_struct_32(1.0, mat3x4(1.0), mat3x2(1.0), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), mat2x4(1.0), mat2x3(1.0)), _GLF_struct_33(1.0, uvec2(1u), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(buf[virtual_gid], (buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))]) | (buf[virtual_gid])), buf[virtual_gid], buf[virtual_gid])), 4, 64, _GLF_IDENTITY(0, min(0, 0)))), _GLF_struct_34(uvec4(1u))), _GLF_struct_37(_GLF_struct_36(1, bvec4(true))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec3(bvec3(_GLF_DEAD(false), true, false))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, sqrt(0.0))), min(vec2(mat2(injectionSwitch, 1.0, sqrt(0.0))), vec2(mat2(injectionSwitch, 1.0, sqrt(0.0)))))).y)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-443.322, max(-443.322, -443.322)))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))) || false, ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-443.322)), float(injectionSwitch.y), bool(true)), (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-443.322)), float(injectionSwitch.y), bool(true)), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(-443.322), (_GLF_IDENTITY(_GLF_FUZZED(-443.322), (_GLF_FUZZED(-443.322)) + 0.0)) + 0.0)), float(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(true)), max(mix(float(_GLF_FUZZED(-443.322)), float(injectionSwitch.y), bool(true)), mix(float(_GLF_FUZZED(-443.322)), _GLF_IDENTITY(float(injectionSwitch.y), 0.0 + (_GLF_IDENTITY(float(injectionSwitch.y), float(vec3(float(injectionSwitch.y), 0.0, 0.0))))), bool(true)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-443.322)), float(injectionSwitch.y), bool(true)), mix(float(mix(float(_GLF_FUZZED(-443.322)), float(injectionSwitch.y), bool(true))), float(_GLF_FUZZED(-0.0)), bool(false))), mix(float(_GLF_FUZZED(-443.322)), float(injectionSwitch.y), bool(true))))) / 1.0)), injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-74.63))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-74.63))), injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0)), transpose(transpose(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0)))))))), clamp(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0)), transpose(transpose(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0)))))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0)), transpose(transpose(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0)))))))), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0)), transpose(transpose(mat3x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, sin(0.0))))))))))).x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0) * (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true))))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), (injectionSwitch.x > injectionSwitch.y)))), (! ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))) && _GLF_IDENTITY(true, ! (! (true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, exp(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(subgroup_local_id + _GLF_IDENTITY(1, (1) | (1)) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u), clamp((GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u), (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size) ^ uvec3(0u, 0u, 0u)))).x, (GLF_merged3_0_1_13_1_1_14_2_1_14subgroup_sizeworkgroup_baseworkgroup_size.x) - 0u))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false))), (false) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(checker[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid))), 1u * (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), ~ (~ (virtual_gid)))))], _GLF_struct_replacement_38._f3._f3.read, 4, 64, _GLF_IDENTITY(4, (4) | (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0), max(_GLF_IDENTITY((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0), max((mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))), (mat2(1.0) * (injectionSwitch)) + vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_struct_replacement_38._f3._f3.read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   subgroupAll(true);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)) && true))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0), transpose(transpose(mat4x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, 1.0)))))).y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))), false))))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
