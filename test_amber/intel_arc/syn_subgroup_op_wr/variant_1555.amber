#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_11 {
 uint subgroup_size;
 bvec2 _f0;
} ;

struct _GLF_struct_8 {
 vec2 _f0;
 mat3 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_9 {
 _GLF_struct_8 _f0;
} ;

struct _GLF_struct_7 {
 mat3x2 _f0;
} ;

struct _GLF_struct_5 {
 uvec4 _f0;
 mat4x2 _f1;
 bvec3 _f2;
} ;

struct _GLF_struct_6 {
 mat4x2 _f0;
 _GLF_struct_5 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_10 {
 _GLF_struct_6 _f0;
 _GLF_struct_7 _f1;
 _GLF_struct_9 _f2;
 uint virtual_gid;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 int _f1;
 bvec3 _f2;
 bvec4 _f3;
 ivec3 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_4 {
 uint subgroup_base;
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_0 {
 mat2 _f0;
 int _f1;
 mat4x3 _f2;
 uint num_workgroup;
 bvec2 _f3;
 bvec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
 mat4x2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, true)), _GLF_IDENTITY(true, ! (! (true))), false, true))), bool(bool(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), bool(bool(bool(bvec2(true, false)))))), true, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.z = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), subgroup_id)), clamp(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id)), _GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id)), (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), subgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))))), 1u * (_GLF_IDENTITY(subgroup_id, min(_GLF_IDENTITY(subgroup_id, 0u | _GLF_IDENTITY((subgroup_id), ((subgroup_id)) ^ 0u)), _GLF_IDENTITY(subgroup_id, 0u + (subgroup_id))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(gl_SubgroupSize, bvec2(true));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w = subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat2(1.0), 1, mat4x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), gl_NumWorkGroups.x, bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), ! (! (false))), true, true)), false, false))))) && true)))), ! (! (true)))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-16.23), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-57.10)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) && true), false))), vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-16.23), min(_GLF_FUZZED(-16.23), _GLF_FUZZED(-16.23))), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-57.10)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) && true), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true)))))) && true), false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-16.23), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)), mix(vec2(_GLF_FUZZED((- -379.147)), _GLF_FUZZED(-60.99)), vec2((vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)))[0], (vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 1.0)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))[0], (injectionSwitch)[0])), _GLF_FUZZED(-57.10)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(_GLF_IDENTITY(true, (true) && true)))), false))) : _GLF_FUZZED(injectionSwitch))))).y)))), bvec2(true), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(inverse(mat2(3668.0807, -503.089, 328.111, 5.5))) : _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat2x4(mat2(1.0))))) - mat2(0.0, 0.0, 0.0, 0.0))))), clamp(_GLF_IDENTITY(vec2(1.0), (vec2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-463.705)), bool(false))), 1.0)))) * mat2(1.0)), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(4766.9992, -36.82, 2548.8848, 1.2)) : mat2(1.0)))), transpose(transpose(mat2x4(mat2(1.0))))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0)))))), (vec2(1.0)) * mat2(1.0)), (false ? _GLF_FUZZED(intBitsToFloat(ivec2(7048, -36343))) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0)))))), (vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))) - mat2(0.0, 0.0, 0.0, 0.0))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(vec2(1.0), (vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-747.618) : 1.0)))) * mat2(1.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * mat2(1.0)), clamp(_GLF_IDENTITY(vec2(1.0), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 1.0, 0.0, 0.0), mix(vec4((vec4(1.0, 1.0, 0.0, 0.0))[0], (vec4(1.0, 1.0, 0.0, 0.0))[1], (vec4(1.0, 1.0, 0.0, 0.0))[2], _GLF_IDENTITY((vec4(1.0, 1.0, 0.0, 0.0))[3], float(mat4x3((vec4(1.0, 1.0, 0.0, 0.0))[3], 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))), vec4(_GLF_FUZZED(26.37), _GLF_FUZZED(7.9), _GLF_FUZZED(5.9), _GLF_FUZZED(6.2)), bvec4(false, false, false, false))))), clamp(1.0, 1.0, 1.0)))) * mat2(1.0)), _GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * _GLF_IDENTITY(mat2(1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), 0.0)), clamp(_GLF_IDENTITY(vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), 0.0)), (vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), 0.0))) - vec2(0.0, 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), 0.0)), vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, abs(1.0), 0.0))))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + _GLF_IDENTITY((mat2(1.0)), ((mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat2x4(mat2(1.0)), transpose(transpose(mat2x4(mat2(1.0))))))), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0)))))), min(vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(_GLF_IDENTITY(exp(0.0), float(mat4(_GLF_IDENTITY(exp(0.0), min(exp(0.0), exp(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, cos(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, cos(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, cos(0.0), 0.0)), mix(float(dot(vec3(0.0, 1.0, abs(0.0)), vec3(0.0, cos(0.0), 0.0))), float(_GLF_FUZZED(-5116.2331)), bool(false)))), 0.0)))), _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0)))))), vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x4(1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), 0.0, 0.0, 1.0), mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat3x4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-5231.0410))), 0.0, 0.0, 0.0, 1.0, log(exp(0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)))), 0.0, 1.0)))))))), (vec2(1.0)) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), transpose(transpose(mat2(1.0))))), _GLF_IDENTITY(vec2(1.0), (vec2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED((true ? -5.2 : -3676.7152))), float(1.0), bool(true)), min(mix(float(_GLF_FUZZED((true ? -5.2 : -3676.7152))), float(1.0), bool(true)), mix(float(_GLF_FUZZED((true ? -5.2 : -3676.7152))), float(1.0), bool(true))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-747.618) : 1.0, max(false ? _GLF_FUZZED(-747.618) : 1.0, false ? _GLF_FUZZED(-747.618) : 1.0)))))) * mat2(1.0))))))) / vec2(1.0, 1.0)))), mat4x2(1.0));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true, true, false)), (bool(bvec4(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true, true, false))) && true)))))), bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, abs(0.0)))).x)), sqrt(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec3(0.0, 1.0, 1.0), clamp(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0))), vec3(0.0, 1.0, 1.0)))) - sqrt(vec3(0.0, 0.0, 0.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), log(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-39.66), 1.0 * (_GLF_FUZZED(-39.66)))), bool(false))), 1.0)), injectionSwitch.y)), 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9921.6571)), float(0.0), bool(true)))))), bool(true))))) > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(true))))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(true))))) > injectionSwitch.y)), bool(bvec3(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(true))))) > injectionSwitch.y)), true, false)))))), (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-1.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), 1.0 * (_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(true))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)), mix(float(_GLF_FUZZED(9.1)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), bool(true))))) > injectionSwitch.y)))))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), true, true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))))) > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true))))), true, false)))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.27))), injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false), true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), sin(0.0)))) > injectionSwitch.y), true, true))))), true, false, true)))), false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), true, true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))))) > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true))))), true, false)))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.27))), injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false), true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), sin(0.0)))) > injectionSwitch.y), true, true))))), true, false, true)))), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), true, true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))))) > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true))))), true, false)))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.27))), injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false), true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), sin(0.0)))) > injectionSwitch.y), true, true))))), true, false, true)))), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))), (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), true, true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))))) > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true))))), true, false)))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.27))), injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false), true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), sin(0.0)))) > injectionSwitch.y), true, true))))), true, false, true)))), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), true, true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.5))))) > injectionSwitch.y), true, true)), bool(bool(bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), true, true))))), true, false)))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(33.27))), injectionSwitch.x))) - sin(0.0)) > injectionSwitch.y), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))) || false), true))))), bool(bvec4(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0))), sin(0.0)))) > injectionSwitch.y), true, true))))), true, false, true)))), false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))) || false)) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), true && (! (! (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 0.0))).x > injectionSwitch.y), true)))) || false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id), clamp(uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id), uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id), uvec4(0u, 0u, 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id))), (true ? uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u))) + 0u, min((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u))) + 0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (0u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u)))))), (~ (~ (0u))) << 0u))) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u)))), uint(uint(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u)))), ~ (~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u)))))))))))) + 0u, 0u ^ ((_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u))) + 0u)), (_GLF_IDENTITY(0u, _GLF_IDENTITY(~ (~ (0u)), (~ (~ (0u))) << 0u))) + 0u)))) | (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))), max(uint(uint(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(workgroup_base))))), uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), clamp(true ? 0u : _GLF_FUZZED(workgroup_base), true ? 0u : _GLF_FUZZED(workgroup_base), _GLF_IDENTITY(true ? 0u : _GLF_FUZZED(workgroup_base), (0u | 0u) | (true ? 0u : _GLF_FUZZED(workgroup_base)))))))))))))), 0u, 0u) ^ (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id) : _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id)))).z * _GLF_struct_replacement_11.subgroup_size, _GLF_struct_3(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), 1, bvec3(true), bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (true) || false)) && true, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (true) || false)) && true), false || (! ((_GLF_IDENTITY(true, (true) || false)) && true))))))), _GLF_IDENTITY(ivec3(1), (ivec3(1)) ^ ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))), mat4x3(1.0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(454.913), _GLF_FUZZED(-32.09)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(454.913), _GLF_FUZZED(-32.09)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(454.913), _GLF_FUZZED(-32.09)), vec2(_GLF_IDENTITY((injectionSwitch)[0], clamp((injectionSwitch)[0], (injectionSwitch)[0], (injectionSwitch)[0])), (injectionSwitch)[1]), bvec2(true, true)))) - vec2(0.0, 0.0)).x > injectionSwitch.y))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))) / vec2(1.0, 1.0)).y))))), true, false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - tan(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_10 _GLF_struct_replacement_10 = _GLF_struct_10(_GLF_struct_6(mat4x2(1.0), _GLF_struct_5(_GLF_IDENTITY(uvec4(1u), min(uvec4(1u), uvec4(1u))), mat4x2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, true)), (bool(bvec2(true, true))) && true)))))), false))), true))), true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (true), false || (! (true))), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))))))))), uvec4(1u)), _GLF_struct_7(mat3x2(1.0)), _GLF_struct_9(_GLF_struct_8(vec2(1.0), mat3(1.0), mat4x2(1.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_struct_replacement_4.subgroup_base, (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_struct_replacement_4.subgroup_base) | (_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_struct_replacement_4.subgroup_base)), (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u), (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base))) / 1u)) - _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)), 0u))))) + _GLF_IDENTITY(_GLF_struct_replacement_4.subgroup_base, uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_struct_replacement_4.subgroup_base), ~ (~ (_GLF_IDENTITY(uint(_GLF_struct_replacement_4.subgroup_base), max(uint(_GLF_struct_replacement_4.subgroup_base), uint(_GLF_struct_replacement_4.subgroup_base)))))), (uint(_GLF_struct_replacement_4.subgroup_base)) | (uint(_GLF_struct_replacement_4.subgroup_base)))))) | 0u) + GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w);
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base))), (workgroup_base))) | (workgroup_base)) + _GLF_struct_replacement_4.subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base))), (workgroup_base))) | (workgroup_base)) + _GLF_struct_replacement_4.subgroup_base), ((_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u)), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_base))), (workgroup_base))) | (workgroup_base)) + _GLF_struct_replacement_4.subgroup_base)) ^ 0u) | ((0u | _GLF_IDENTITY(0u, min(0u, 0u))) << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), max(uint(4u), uint(4u)))))) + (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, (_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, clamp((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, clamp(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, min((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size)), _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size, ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size) * 1u), (GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w + 1) % _GLF_struct_replacement_11.subgroup_size))))) | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y = read;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))).y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[1], (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[1], clamp(GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[1], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[1]))) / 1u), GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[2], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id[3])).x], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, 1.0, 0.0, abs(0.0), 1.0))).y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) && true), false, true, true)))))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) && true), false, true, true)))))) || false)), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) && true), false, true, true)))))) || false)), true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w % 2), ((GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.w % 2)) << 0u) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))), true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(84.76), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - _GLF_IDENTITY(0.0, sqrt(1.0) * (0.0)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-51.58)), bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))).x, float(vec3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(84.76), _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), vec2((injectionSwitch)[0], _GLF_FUZZED(-51.58)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x, 1.0, 0.0))) > injectionSwitch.y)), false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, false, true)))))), true, true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))) + 0.0))) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true))))))))
    barrier();
   GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y = atomicLoad(buf[_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, (_GLF_struct_replacement_10.virtual_gid) << 0u)], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, _GLF_IDENTITY(~ _GLF_IDENTITY((~ (_GLF_IDENTITY(4, clamp(4, 4, 4)))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-16883) : 4)), clamp(4, 4, 4))))) | _GLF_IDENTITY(((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4)))))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), _GLF_IDENTITY(int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))), int(int(_GLF_IDENTITY(int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))), (true ? int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))) : _GLF_FUZZED(84466)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))), _GLF_IDENTITY((((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))))))) | (_GLF_IDENTITY(((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))), int(ivec2(((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))), 1)))), 0 ^ ((((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))))))) | (_GLF_IDENTITY(((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))), int(ivec2(((~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, 4))), int(int((_GLF_IDENTITY(4, clamp(4, 4, 4)))))))))), 1)))))))), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((4), 0 ^ (_GLF_IDENTITY((4), 0 | ((4))))), max(~ (4), _GLF_IDENTITY(~ (4), (_GLF_IDENTITY(~ (4), _GLF_IDENTITY((~ (4)) | 0, 0 ^ (_GLF_IDENTITY((~ (4)) | 0, ((~ (4)) | 0) / ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))))))) | (~ (4)))))), (_GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY(0 ^ (_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0)))))), (_GLF_IDENTITY(0 ^ (_GLF_IDENTITY(~ (~ (4)), ~ (~ (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), ((4)) - 0)), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), ((4)) - 0)), 0 | (~ _GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) - 0)), (_GLF_IDENTITY((~ _GLF_IDENTITY((4), ((4)) - 0)), 0 ^ ((~ _GLF_IDENTITY((4), ((4)) - 0))))) ^ 0)))) - 0))))), (0 ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> 0), ~ _GLF_IDENTITY((~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0)))), ((~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))), min((_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> 0), ~ _GLF_IDENTITY((~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0)))), ((~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))) / int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (~ (~ (4))) >> 0), ~ _GLF_IDENTITY((~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0)))), ((~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))) | (0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), clamp(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), _GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), 0 ^ (_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0)))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), (_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), clamp(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), _GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))), _GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ _GLF_IDENTITY((4), ((4)) - 0))))))))))))))) | 0))) >> 0), ~ (~ (4)), ~ (~ (_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, clamp(4, 4, 4)), 4))))))), 4, 4)), 64, _GLF_IDENTITY(2, (2) / 1));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), ! (! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))))), _GLF_IDENTITY(false, (false) && true) || (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(float(611u)), _GLF_FUZZED(233.405)), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[1]), bvec2(true, true))))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))))), clamp(float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))))), float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))))), float(mat3x4(1.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0), 1.0, 0.0, sqrt(1.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0)), dot(vec4(1.0, length(0.0), 0.0, 0.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0))))))))), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), injectionSwitch[1])))).x > injectionSwitch.y) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false) || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (false))) || false)) || false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((+ -115.962))), bool(false))) : _GLF_FUZZED(93.88))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])))))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(0.7)), mix(float(float(_GLF_FUZZED(0.7))), float(_GLF_FUZZED(0.8)), bool(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, _GLF_IDENTITY(length(vec2(0.0, 0.0)), float(_GLF_IDENTITY(float(length(vec2(0.0, 0.0))), max(float(length(vec2(0.0, 0.0))), _GLF_IDENTITY(float(length(vec2(0.0, 0.0))), mix(float(_GLF_FUZZED(-6829.9604)), float(float(length(vec2(0.0, 0.0)))), bool(true))))))), 0.0))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))))), mat3(1.0) * (transpose(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))))), float(mat4x2(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0))))), mat3(1.0) * (transpose(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0), transpose(transpose(mat3x4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0)))))))))), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0)))), (true ? _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_IDENTITY(_GLF_FUZZED((+ -115.962)), max(_GLF_FUZZED((+ -115.962)), _GLF_FUZZED((+ -115.962))))), bool(false))) : _GLF_IDENTITY(_GLF_FUZZED(93.88), (_GLF_FUZZED(93.88)) - 0.0))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[_GLF_IDENTITY(0, (0) | (0))], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(7.9, -1119.1708)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), vec2(injectionSwitch[0], injectionSwitch[1])))))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, max(0, 0)))), 0))], max(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat4(injectionSwitch[0], _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0), (mat4(injectionSwitch[0], _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch[1])), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(_GLF_IDENTITY(sin(0.0), float(mat3x2(sin(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))), sin(0.0))), 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, log(1.0))), 1.0, 0.0, _GLF_IDENTITY(sin(0.0), mix(float(sin(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(0.7)), mix(float(float(_GLF_FUZZED(0.7))), float(_GLF_FUZZED(0.8)), bool(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, _GLF_IDENTITY(length(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(1457.2064), _GLF_FUZZED(6968.8447)), vec2((vec2(0.0, 0.0))[0], (vec2(0.0, 0.0))[1]), bvec2(true, true)))), float(_GLF_IDENTITY(_GLF_IDENTITY(float(length(vec2(0.0, 0.0))), _GLF_IDENTITY(float(vec3(float(length(vec2(0.0, 0.0))), 1.0, 1.0)), max(float(vec3(float(length(vec2(0.0, 0.0))), 1.0, 1.0)), float(vec3(float(length(vec2(0.0, 0.0))), 1.0, 1.0))))), max(float(length(vec2(0.0, 0.0))), _GLF_IDENTITY(float(length(vec2(0.0, 0.0))), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-6829.9604)), min(float(_GLF_FUZZED(-6829.9604)), float(_GLF_FUZZED(-6829.9604)))), float(float(length(vec2(0.0, 0.0)))), bool(true))))))), 0.0))).y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false)))))), false, false, false)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false))) || false)))), ! (! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false))))))), true && ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false)), (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false))) || false)))), ! (! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), false, false, false))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y) || false))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x < injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))))))) && (false)), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true)), false, false)))), false))))), (bool(! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), false, false)))))) && true), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))) || (bool(! (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : injectionSwitch.y)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false, false, false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, abs(1.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bvec3(false, true, false))) || (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), false)))))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), false)))))), ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false), false))))))) || false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(true && ((injectionSwitch.x > injectionSwitch.y)), (true && ((injectionSwitch.x > injectionSwitch.y))) && true), ! (! (true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), vec2(_GLF_FUZZED(float(true)), (injectionSwitch)[1]), bvec2(false, true))).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)))))))))))) || false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))), 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(929.474)), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-8116.8541))))), bool(true))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(sqrt(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) - 0.0, float(mat2((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) - 0.0, 0.0, 1.0, tan(0.0)))))))))[1])).y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))) || false))))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))) && true), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))) && true), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true)), _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), true, true))), bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), true, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))))), false, true, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, log(1.0), 1.0, 0.0, 1.0, 1.0))), 0.0))))))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(929.474)), _GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (true ? float(injectionSwitch.x) : _GLF_FUZZED(-8116.8541))))), bool(true))))) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(sqrt(vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) - 0.0, float(mat2((_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0))) - 0.0, 0.0, 1.0, tan(0.0)))))))))[1])).y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), (! (bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))) || false))))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))) && true), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-83.85), _GLF_FUZZED((7845.3051 + float(122857u)))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y))))) && true), false || ((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))))))))))) && true)))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false, true && (false)) || (true)), _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), true, true))), bool(bvec2(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), (bool(bvec3(true, false, false))) && true)), true, true))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true)))))))))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))), false, false))))))), false, true, _GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(8834.3241)), bool(false))) > injectionSwitch.y))))))) && true)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y = atomicLoad(_GLF_IDENTITY(buf[_GLF_struct_replacement_10.virtual_gid], max(_GLF_IDENTITY(buf[_GLF_struct_replacement_10.virtual_gid], clamp(buf[_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, _GLF_IDENTITY(~ (~ (_GLF_struct_replacement_10.virtual_gid)), min(_GLF_IDENTITY(~ (~ (_GLF_struct_replacement_10.virtual_gid)), (~ (~ (_GLF_struct_replacement_10.virtual_gid))) / 1u), ~ (~ (_GLF_struct_replacement_10.virtual_gid)))))], buf[_GLF_struct_replacement_10.virtual_gid], _GLF_IDENTITY(buf[_GLF_struct_replacement_10.virtual_gid], max(buf[_GLF_struct_replacement_10.virtual_gid], _GLF_IDENTITY(buf[_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, (_GLF_struct_replacement_10.virtual_gid) - 0u)], (_GLF_IDENTITY(buf[_GLF_struct_replacement_10.virtual_gid], max(buf[_GLF_struct_replacement_10.virtual_gid], buf[_GLF_struct_replacement_10.virtual_gid]))) >> 0u))))), buf[_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, 0u ^ (_GLF_struct_replacement_10.virtual_gid)), _GLF_struct_replacement_10.virtual_gid)), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, 0u ^ (_GLF_struct_replacement_10.virtual_gid)), _GLF_struct_replacement_10.virtual_gid)), 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, max(_GLF_IDENTITY(_GLF_struct_replacement_10.virtual_gid, 0u ^ (_GLF_struct_replacement_10.virtual_gid)), _GLF_struct_replacement_10.virtual_gid)), 0u, 1u)))))])), 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[_GLF_struct_replacement_10.virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_11_3_1_17next_virtual_gidreadsubgroup_idsubgroup_local_id.y, 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
