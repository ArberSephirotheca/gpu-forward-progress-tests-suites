#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_26 {
 ivec2 _f0;
 mat3x2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_27 {
 _GLF_struct_26 _f0;
 mat3x4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_28 {
 uint next_virtual_gid;
 _GLF_struct_25 _f0;
 bool _f1;
 _GLF_struct_27 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_22 {
 mat4x3 _f0;
} ;

struct _GLF_struct_21 {
 mat3x2 _f0;
 mat2x3 _f1;
 ivec3 _f2;
 mat4x3 _f3;
 uvec3 _f4;
 int _f5;
} ;

struct _GLF_struct_23 {
 _GLF_struct_21 _f0;
 _GLF_struct_22 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_19 {
 mat3 _f0;
 ivec4 _f1;
 bool _f2;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 mat4x2 _f1;
 uvec2 _f2;
 vec2 _f3;
 mat4 _f4;
 uint workgroup_size;
 mat3 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 uvec4 _f1;
 _GLF_struct_19 _f2;
 mat4x3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_16 {
 uint _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_15 {
 ivec3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_17 {
 _GLF_struct_15 _f0;
 ivec3 _f1;
 _GLF_struct_16 _f2;
 mat3x2 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_24 {
 ivec4 _f0;
 _GLF_struct_17 _f1;
 _GLF_struct_20 _f2;
 ivec2 _f3;
 _GLF_struct_23 _f4;
} ;

struct _GLF_struct_12 {
 bvec3 _f0;
 uint _f1;
 vec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 mat2x3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_13 {
 _GLF_struct_11 _f0;
 _GLF_struct_12 _f1;
} ;

struct _GLF_struct_9 {
 uvec3 _f0;
} ;

struct _GLF_struct_8 {
 ivec3 _f0;
} ;

struct _GLF_struct_10 {
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 bool _f0;
 vec4 _f1;
 int _f2;
 mat4x2 _f3;
 mat4x2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_5 {
 bvec2 _f0;
 bool _f1;
 int _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 uvec2 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 ivec2 _f1;
 _GLF_struct_5 _f2;
 bvec2 _f3;
 _GLF_struct_6 _f4;
 uvec3 _f5;
 uint subgroup_id;
} ;

struct _GLF_struct_14 {
 mat3 _f0;
 ivec2 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_10 _f3;
 _GLF_struct_13 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_0 {
 mat2x3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
 bool _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 uint workgroup_id;
 _GLF_struct_1 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 _GLF_struct_2 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))), false, true, false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((false), bool(bvec4((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) && true))), true, true, false))) || false)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))), ! (! (bool(bool((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, length(vec3(0.0, 0.0, 0.0)), 0.0, 0.0, abs(0.0)))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))))) && true), true), false))), true, true)))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))) && true), true))) && true, _GLF_IDENTITY(! (! ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))))) && true)), ! (! (! (_GLF_IDENTITY(! ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))))))))), false || ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec3(bvec2(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), true))))))))))))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(3815.7908), _GLF_FUZZED(2.0)), bvec2(false, false))).x > injectionSwitch.y)))))))) && true), _GLF_IDENTITY(true, _GLF_IDENTITY(true, true && (true)) && (true))))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))) && true))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_14 _GLF_struct_replacement_14 = _GLF_struct_14(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), bool(true)))), transpose(transpose(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(7.1)), float(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0))), bool(true))))))), mat3(mat3(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(7.1, (7.1) - length(0.0)))), float(1.0), bool(true))))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, (_GLF_IDENTITY((78851 & 0) & (64305 * -73468), ((78851 & 0) & (64305 * -73468)) - 0)), 0)), min(_GLF_IDENTITY(int(ivec3(1, ((_GLF_IDENTITY(78851 & 0, max(78851 & 0, _GLF_IDENTITY(78851 & 0, min(78851 & 0, 78851 & 0))))) & (64305 * -73468)), 0)), (_GLF_IDENTITY(int(ivec3(1, ((78851 & 0) & (_GLF_IDENTITY(64305, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1)), (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))))) * -73468)), 0)), int(int(int(ivec3(1, ((78851 & 0) & (_GLF_IDENTITY(64305, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1)), (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))))) * -73468)), 0)))))) ^ 0), int(ivec3(1, ((78851 & 0) & (64305 * -73468)), 0)))))), (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, (_GLF_IDENTITY((78851 & 0) & (64305 * -73468), ((78851 & 0) & (64305 * -73468)) - 0)), 0)), min(_GLF_IDENTITY(int(ivec3(1, ((_GLF_IDENTITY(78851 & 0, max(78851 & 0, _GLF_IDENTITY(78851 & 0, min(78851 & 0, 78851 & 0))))) & (64305 * -73468)), 0)), (_GLF_IDENTITY(int(ivec3(1, ((78851 & 0) & (_GLF_IDENTITY(64305, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1)), (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))))) * -73468)), 0)), int(int(int(ivec3(1, ((78851 & 0) & (_GLF_IDENTITY(64305, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1)), (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))))) * -73468)), 0)))))) ^ 0), int(ivec3(1, ((78851 & 0) & (64305 * -73468)), 0))))))) | (ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec3(1, (_GLF_IDENTITY((78851 & 0) & (64305 * -73468), ((78851 & 0) & (64305 * -73468)) - 0)), 0)), min(_GLF_IDENTITY(int(ivec3(1, ((_GLF_IDENTITY(78851 & 0, max(78851 & 0, _GLF_IDENTITY(78851 & 0, min(78851 & 0, 78851 & 0))))) & (64305 * -73468)), 0)), (_GLF_IDENTITY(int(ivec3(1, ((78851 & 0) & (_GLF_IDENTITY(64305, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1)), (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))))) * -73468)), 0)), int(int(int(ivec3(1, ((78851 & 0) & (_GLF_IDENTITY(64305, _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1)), (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))) | (int(ivec3(_GLF_IDENTITY(64305, max(64305, 64305)), 0, 1))))) * -73468)), 0)))))) ^ 0), int(ivec3(1, ((78851 & 0) & (64305 * -73468)), 0)))))))), _GLF_struct_7(_GLF_struct_4(bvec4(true), uvec2(1u), mat2(1.0)), ivec2(_GLF_IDENTITY(1, ~ (~ (1)))), _GLF_struct_5(_GLF_IDENTITY(bvec2(true), _GLF_IDENTITY(bvec2(bvec4(bvec2(true), true, true)), bvec2(bvec4(bvec2(bvec4(bvec2(true), true, true)), true, true)))), true, 1, mat3x4(1.0)), bvec2(true), _GLF_struct_6(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true)))))), vec4(1.0), 1, mat4x2(1.0), mat4x2(1.0), uvec4(1u)), uvec3(1u), gl_SubgroupID), _GLF_struct_10(_GLF_struct_8(ivec3(1)), _GLF_struct_9(uvec3(_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) + 0u)))))), _GLF_struct_13(_GLF_struct_11(mat4(1.0), mat2x3(1.0), vec4(1.0)), _GLF_struct_12(bvec3(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) && true)))), 1u, _GLF_IDENTITY(vec3(1.0), min(_GLF_IDENTITY(vec3(1.0), vec3(_GLF_IDENTITY(mat3x4(vec3(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x4(vec3(1.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec3(1.0))), bvec3(true))), mat3x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false)))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) && true)), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, true)))), true)))), false))), true, true)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat2(9111.4616, -70.61, -4.7, -125.050)[1]))).y))))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, determinant(mat2(1.0, round(length(normalize(1.0))), 0.0, 1.0)), 1.0)), float(vec3(float(mat3x4(injectionSwitch.x, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, determinant(mat2(1.0, round(length(normalize(1.0))), 0.0, 1.0)), 1.0)), 1.0, 1.0)))) < injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) * 1.0)), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false)), false || (bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, false, false)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, false), true))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bool(_GLF_IDENTITY(false, false || (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, false)))))), _GLF_IDENTITY(false || ((! (false))), true && (false || ((! (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true, false)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true, true, false))) || false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(_GLF_FUZZED(5.3), mix(float(_GLF_FUZZED(5.3)), float(_GLF_FUZZED(6.5)), bool(false)))), vec2(_GLF_FUZZED(-7.7), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3x2((injectionSwitch) * mat2(1.0), 0.0, 1.0, 0.0, 1.0))))))[1]), bvec2(false, true)))), injectionSwitch)).y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, true)))))), true))))) && true)))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), true))))))
  return;
 _GLF_struct_24 _GLF_struct_replacement_24 = _GLF_struct_24(ivec4(1), _GLF_struct_17(_GLF_struct_15(ivec3(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(28022, 0 | (28022))) : 1))), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec3(-1.5, -5.7, 62.58) * mat4x3(0.4, 5.2, 40.91, -6481.6341, 59.04, 9.7, -3.4, 7431.8819, -9183.9637, -4967.6040, -819.617, -1414.4883)).z)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(ivec3(ivec3(1)))), min(ivec3(1), _GLF_IDENTITY(ivec3(1), ivec3(0, 0, 0) | (ivec3(1))))), _GLF_struct_16(1u, ivec3(1)), mat3x2(1.0), uvec4(1u)), _GLF_struct_20(_GLF_struct_18(uvec4(1u), mat4x2(1.0), uvec2(1u), vec2(1.0), mat4(1.0), gl_WorkGroupSize.x, mat3(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(8090.1324, mix(float(_GLF_IDENTITY(8090.1324, _GLF_IDENTITY(float(vec2(8090.1324, 1.0)), (true ? float(vec2(8090.1324, 1.0)) : _GLF_FUZZED(-60.97))))), float(_GLF_FUZZED(69.13)), bool(false))))), max(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(8090.1324, mix(float(_GLF_IDENTITY(8090.1324, _GLF_IDENTITY(float(vec2(8090.1324, 1.0)), (true ? float(vec2(8090.1324, 1.0)) : _GLF_FUZZED(-60.97))))), float(_GLF_FUZZED(69.13)), bool(false))))), (float(_GLF_FUZZED(_GLF_IDENTITY(8090.1324, mix(float(_GLF_IDENTITY(8090.1324, _GLF_IDENTITY(float(vec2(8090.1324, 1.0)), (true ? float(vec2(8090.1324, 1.0)) : _GLF_FUZZED(-60.97))))), float(_GLF_FUZZED(69.13)), bool(false)))))) - 0.0), float(_GLF_FUZZED(_GLF_IDENTITY(8090.1324, mix(float(_GLF_IDENTITY(8090.1324, _GLF_IDENTITY(float(vec2(8090.1324, 1.0)), (true ? float(vec2(8090.1324, 1.0)) : _GLF_FUZZED(-60.97))))), float(_GLF_FUZZED(69.13)), bool(false))))))), float(1.0), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4))))), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4))))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4)))))) * 1.0)), bool(true))), max(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4))))), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4))))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4)))))) * 1.0)), bool(true))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4))))), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4))))), (float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), (true ? _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0), vec3(1.0, 1.0, 1.0) * (vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0))) : _GLF_FUZZED(vec3(-35.08, -644.203, -1.4)))))) * 1.0)), bool(true)))))), 1.0, 1.0)))))), uvec4(1u), _GLF_struct_19(mat3(1.0), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(-21047, -818, -85841), min(bitfieldExtract(-21047, -818, -85841), bitfieldExtract(-21047, -818, -85841)))) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1)))), (int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1))))) | (int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1)))))))), 0 + ((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), 0 | (_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841))))) + 0)) << (0 | 0)), 0))) : 1))), (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(-21047, -818, -85841), min(bitfieldExtract(-21047, -818, -85841), bitfieldExtract(-21047, -818, -85841)))) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1)))), (int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1))))) | (int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1)))))))), 0 + ((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), 0 | (_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841))))) + 0)) << (0 | 0)), 0))) : 1)))) | (_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(bitfieldExtract(-21047, -818, -85841), min(bitfieldExtract(-21047, -818, -85841), bitfieldExtract(-21047, -818, -85841)))) : _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1)))), (int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1))))) | (int(_GLF_IDENTITY(ivec3(1, 0, 1), min(ivec3(1, 0, 1), ivec3(1, 0, 1)))))))), 0 + ((false ? _GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), int(ivec2(_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), (_GLF_IDENTITY(_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841)), 0 | (_GLF_FUZZED(bitfieldExtract(-21047, -818, -85841))))) + 0)) << (0 | 0)), 0))) : 1))))))), true), mat4x3(1.0), ivec4(1)), ivec2(1), _GLF_struct_23(_GLF_struct_21(mat3x2(1.0), mat2x3(1.0), ivec3(1), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(uvec3(1u), ~ _GLF_IDENTITY((~ (uvec3(1u))), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(1u)), (_GLF_IDENTITY(~ (uvec3(1u)), uvec3(0u, 0u, 0u) | (~ (uvec3(1u))))) << (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(5u), uvec3(5u))))), uvec3(_GLF_IDENTITY(0u, (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(0u, 1u * (0u)), (0u) / 1u) : _GLF_FUZZED(num_workgroup))), 0u, 0u) + ((~ (uvec3(1u)))))))), 1), _GLF_struct_22(mat4x3(1.0)), uvec4(_GLF_IDENTITY(1u, max(1u, 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0) + 0.0) : _GLF_FUZZED(radians(-6.6))))), float(_GLF_FUZZED(float(-89379))), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(ivec4(1), _GLF_struct_2(_GLF_struct_0(mat2x3(1.0), mat3x4(1.0), mat4x2(1.0), true), gl_WorkGroupID.x, _GLF_struct_1(uvec4(1u), ivec4(1)), bvec2(true)));
 uint workgroup_base = _GLF_struct_replacement_24._f2._f0.workgroup_size * _GLF_struct_replacement_3._f1.workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 1.0)), (true ? vec2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))))), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), 0.0, 1.0)) : _GLF_FUZZED(vec2(3034.0097, -64.83))))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-1.7 * 151.285)), _GLF_FUZZED((-3356.4981 + 7.9))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec2(bool(bvec2(false, true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))))), bool(bvec2(bool(bvec2(false, true)), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(38.09) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), min(injectionSwitch.y, injectionSwitch.y)))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-891.492), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9850.2437)), bool(false)))))), (min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-891.492), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(1.0, 1.0))[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-9850.2437)), bool(false))))))) * mat2(1.0))).y, max(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y))))))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), true, true)), _GLF_IDENTITY(! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))), false || (! (! (bool(bvec4(_GLF_DEAD(false), true, true, true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), ~ _GLF_IDENTITY((~ (~ (workgroup_base))), 0u ^ (_GLF_IDENTITY((~ (~ (workgroup_base))), ((~ (~ (workgroup_base)))) + 0u)))))) + _GLF_struct_replacement_14._f2.subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), true), bvec2(bvec2(bvec2(false, true))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), _GLF_IDENTITY((bool(_GLF_DEAD(false))) || false, _GLF_IDENTITY(bool(bool((bool(_GLF_DEAD(false))) || false)), ! (! (bool(bool((bool(_GLF_DEAD(false))) || false))))))), false))), true && (_GLF_IDENTITY(bool(_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))), (bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))) && true)) || false), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-3923.6344 / 931.012))), vec2(_GLF_FUZZED(-8.4), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 _GLF_struct_28 _GLF_struct_replacement_28 = _GLF_struct_28(_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_14._f2.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_14._f2.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), (workgroup_base + _GLF_struct_replacement_14._f2.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size)) / 1u)), (true ? 0u ^ (_GLF_IDENTITY(workgroup_base + _GLF_struct_replacement_14._f2.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) + 1) % subgroup_size), (workgroup_base + _GLF_struct_replacement_14._f2.subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)))) + 1) % subgroup_size)) / 1u)) : _GLF_FUZZED((bvec4(false, true, false, true) , 36309u))))), _GLF_struct_25(vec2(1.0), mat2(1.0)), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))), _GLF_struct_27(_GLF_struct_26(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), clamp(ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), clamp(ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))))))), ivec2(_GLF_IDENTITY(ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0), ~ (~ (ivec4(ivec2(1), int(_GLF_ONE(1.0, injectionSwitch.y)), 0)))))))), mat3x2(1.0), ivec3(1)), mat3x4(1.0), mat2(1.0)), mat2x4(1.0));
 atomicStore(buf[_GLF_struct_replacement_28.next_virtual_gid], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * (1 & 1)), max(1, 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(false), false)), true))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED(-2.4), (injectionSwitch)[1]), bvec2(false, true))).y)), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (_GLF_IDENTITY(~ (buf[virtual_gid]), max(~ (buf[virtual_gid]), ~ (buf[virtual_gid])))) - 0u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (_GLF_IDENTITY(~ (buf[virtual_gid]), max(~ (buf[virtual_gid]), ~ (buf[virtual_gid])))) - 0u)), 0u ^ (~ (_GLF_IDENTITY(~ (buf[virtual_gid]), (_GLF_IDENTITY(~ (buf[virtual_gid]), max(~ (buf[virtual_gid]), ~ (buf[virtual_gid])))) - 0u))))) / ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u ^ (uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))), 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(21.53)), bool(false))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! (! (false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true))))) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true))))) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true))))) && true))), true && (! ((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true))))) && true))))))))) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), 0.0, 0.0, sin(0.0), 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y) && true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false), (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), true)))))))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) : _GLF_FUZZED(vec2(-498.002, -7.3).g))))) > injectionSwitch.y))), true), false)))))) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true), false)))))) || false, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true)))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)) / 1.0) > injectionSwitch.y))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), true))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), true))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), false)), true))))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))))))), true))), true, true))), false, true)))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), false)))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(subgroup_local_id + 1 < subgroup_size, ! (! (subgroup_local_id + 1 < subgroup_size))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(8), ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (_GLF_IDENTITY(int(8), max(int(8), int(8))))), _GLF_IDENTITY(int(_GLF_IDENTITY(8, ~ (~ (_GLF_IDENTITY(8, ~ (~ (8))))))), (true ? int(8) : _GLF_FUZZED(-86834))))) ^ (4)), 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false)))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))), ! (! (! (_GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false || (false)))))))))))) || false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), bool(bvec4(bool(bvec4(false, true, true, false)), false, false, false))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false), false)), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(true, (true) || false)) || false)) || false), false))))), ! (! (bool(bvec4(false, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) || false), false))))), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, false))))), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, false))))), (bool(_GLF_IDENTITY(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), false, false)))))) && true))))), false)), false, false, false)))))) && true)), (false) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * cos(tan(vec2(0.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))))), 1.0)), (vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(vec2(vec3(mat2(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(min(vec2(-8.6, 9376.8250), vec2(3.1, 2.2))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(min(vec2(-8.6, 9376.8250), vec2(3.1, 2.2)))))))), 1.0)), (vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))) / _GLF_IDENTITY(vec2(1.0, 1.0), (true ? _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(9.7), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-366.368)), bvec2(true, false))), vec2(1.0, 1.0))) : _GLF_FUZZED((injectionSwitch + vec2(82.22, 9.1)))))), mix(vec2((_GLF_IDENTITY(vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0)), (vec2(vec3(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-2364.2882), _GLF_FUZZED(26.10)), bvec2(false, false))), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(89.53), _GLF_FUZZED(-837.185)), vec3(_GLF_FUZZED((false ? -0.4 : 828.173)), (vec3(0.0, 0.0, 1.0))[1], (vec3(0.0, 0.0, 1.0))[2]), bvec3(false, true, true)))), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), tan(0.0), 0.0, 1.0, 1.0)))))), 1.0))) / vec2(1.0, 1.0)))[0], _GLF_FUZZED(_GLF_IDENTITY(52.69, mix(float(52.69), float(_GLF_FUZZED(-2.6)), bool(false))))), vec2(_GLF_FUZZED(-4.0), _GLF_IDENTITY((_GLF_IDENTITY(vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0)), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0))))) / vec2(1.0, 1.0)))[1], clamp((_GLF_IDENTITY(vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0)), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0))))) / vec2(1.0, 1.0)))[1], (_GLF_IDENTITY(vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0)), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0))))) / vec2(1.0, 1.0)))[1], (_GLF_IDENTITY(vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0)), (vec2(_GLF_IDENTITY(vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0), vec3(0.0, 0.0, 0.0) + (vec3(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))), 1.0))))) / vec2(1.0, 1.0)))[1]))), bvec2(false, true))), _GLF_IDENTITY(vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0)), (vec2(vec3(mat2(1.0) * (injectionSwitch), 1.0))) / vec2(1.0, 1.0)))))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) ^ 0)))], injectionSwitch[1]), _GLF_IDENTITY(vec2(mat4(vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) ^ 0)))], injectionSwitch[1]), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, cos(0.0))), round(length(normalize(1.0))), round(length(normalize(1.0))), 0.0, 1.0, 1.0, exp(0.0))), (false ? _GLF_FUZZED(vec2(4.3, 80.12)) : vec2(mat4(vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) << 0), _GLF_IDENTITY(0, (0) ^ 0)))], injectionSwitch[1]), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, cos(0.0))), round(length(normalize(1.0))), round(length(normalize(1.0))), 0.0, 1.0, 1.0, exp(0.0))))))).y)))) && true))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
