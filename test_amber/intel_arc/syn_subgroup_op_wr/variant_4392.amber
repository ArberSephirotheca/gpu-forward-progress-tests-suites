#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 ivec2 _f0;
 bvec2 _f1;
 mat4x2 _f2;
 mat4 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_4 {
 vec2 _f0;
 uint _f1;
 vec4 _f2;
 vec2 _f3;
 mat4x2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_3 {
 bvec2 _f0;
 vec2 _f1;
 mat2x3 _f2;
 mat3 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 uvec4 _f2;
 uint workgroup_size;
 _GLF_struct_5 _f3;
} ;

struct _GLF_struct_1 {
 mat4x2 _f0;
 mat2 _f1;
 int _f2;
 mat3x4 _f3;
 mat2x3 _f4;
 uvec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 uvec2 _f1;
 bool _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_2 _f0;
 bvec3 _f1;
 mat4 _f2;
 _GLF_struct_6 _f3;
 bvec2 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.x = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  barrier();
 for(int _injected_loop_counter = (1 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
        {
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.y = subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), bool(bvec2(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)))), (! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))) || false))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))) || false)))), (_GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(29.50) : injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true)))) || false)))), _GLF_IDENTITY((! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))).y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))) || false))))) && true, true && ((! (! (_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), clamp(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) + vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch), max(injectionSwitch, injectionSwitch)))))))).y) && true))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))))) || false))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(bvec2(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))), false))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) << 0)))); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ (0 << _GLF_IDENTITY(int(6), int(6))))); _injected_loop_counter ++)
        {
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(_GLF_struct_2(_GLF_struct_0(ivec4(1), uvec2(1u), true, bvec4(true)), _GLF_struct_1(mat4x2(1.0), mat2(1.0), 1, mat3x4(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))), mat2x3(_GLF_IDENTITY(1.0, (1.0) - determinant(mat2(0.0, 0.0, 0.0, 0.0)))), uvec4(1u), mat4(1.0))), bvec3(true), mat4(1.0), _GLF_struct_6(_GLF_struct_3(bvec2(true), vec2(1.0), mat2x3(1.0), mat3(1.0), mat3x2(1.0)), _GLF_struct_4(vec2(1.0), 1u, vec4(1.0), vec2(1.0), mat4x2(1.0), mat3x4(1.0)), uvec4(1u), gl_WorkGroupSize.x, _GLF_struct_5(ivec2(1), bvec2(true), mat4x2(1.0), mat4(1.0), mat2x4(1.0))), bvec2(true));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.w;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_7._f3.workgroup_size * _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y)), 0u, 1u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)), max(_GLF_IDENTITY(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)))), _GLF_IDENTITY(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)), min(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)), uvec3(uvec3(_GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, max(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id)).y, 0u, 1u))))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) << 0u)) >> 0u)) ^ (uvec3(_GLF_IDENTITY(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)), max(_GLF_IDENTITY(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)), uvec3(0u, 0u, 0u) | (uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)))), _GLF_IDENTITY(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, _GLF_IDENTITY(1u, (1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)), uvec3(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u))))))))))), (false ? _GLF_FUZZED(subgroup_size) : uint(uvec3(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y, 0u, 1u)))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.x, 0u | (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.x)) * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x + GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.y;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.z = _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid));
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id, min(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id, _GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id, (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id) >> uvec4(0u, 0u, 0u, 0u)))).x * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, uint(_GLF_IDENTITY(uvec2(workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.x * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, 0u), (false ? _GLF_FUZZED(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) : uvec2(workgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.x * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, 0u))))) + ((_GLF_IDENTITY(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.y, ~ (_GLF_IDENTITY(~ (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.y), 1u * (~ (GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.y))))) + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id) ^ uvec2(0u, 0u)).x);
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), ~ (_GLF_IDENTITY(~ (uint(1)), min(~ (uint(1)), ~ (uint(1)))))), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(16856) : 4)), 4))) | 0));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 uint read = atomicLoad(buf[GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.z], _GLF_IDENTITY(4, (4) | (4)), 64, _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) / (1 & 1)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.y + 1 < GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(checker[GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.z], read, 4, 64, 4);
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(1, (1) / 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 1.0)), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 0.0, 0.0))))), 1.0))), injectionSwitch)))).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-6329.5937), _GLF_FUZZED(-25.97)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4x3(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, 1)), 1))]), bvec2(true, true)), clamp(mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, _GLF_IDENTITY(true, true && (true)))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)), vec2(mat3(mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)), 1.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0))), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)), mix(vec2(_GLF_FUZZED(0.7), _GLF_FUZZED(float(68803u))), vec2((mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[0], (mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true)))[1]), bvec2(true, true)))))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(787.474)), bool(false))))), 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0)), _GLF_IDENTITY(vec2(mat3x4(vec2(mat4x3(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0)), (true ? vec2(mat3x4(vec2(mat4x3(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(3.2), _GLF_FUZZED(-809.666)), vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), bvec2(true, true))), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0)), 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(0.0), 0.0, 1.0, tan(0.0), 0.0)) : _GLF_FUZZED(injectionSwitch)))))[1], (injectionSwitch)[1]), max(_GLF_IDENTITY(min((injectionSwitch)[_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), 1))], (injectionSwitch)[1]), clamp(min((injectionSwitch)[1], (injectionSwitch)[_GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 ^ (1)) : _GLF_FUZZED(76648)))]), _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], _GLF_FUZZED(-4490.4207)), vec2(_GLF_FUZZED((7947.0294 + -3270.7721)), ((injectionSwitch))[1]), bvec2(false, true)))[1]))), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) + _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), (false ? _GLF_FUZZED(127.499) : round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0)))), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), mix(float(_GLF_FUZZED(27.56)), float(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), bool(true))), 0.0, _GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), 1.0, 0.0))) * 1.0)))))), vec2(_GLF_FUZZED(9926.0628), _GLF_FUZZED(-987.472)), bvec2(false, false))).x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat2x4(vec2(0.0, 1.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, 1.0))), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) / exp(vec2(0.0, 0.0))))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))))), vec2(_GLF_FUZZED(_GLF_IDENTITY(9926.0628, mix(float(_GLF_IDENTITY(9926.0628, min(9926.0628, _GLF_IDENTITY(9926.0628, (9926.0628) / 1.0)))), float(_GLF_FUZZED(float(false))), bool(false)))), _GLF_FUZZED(-987.472)), bvec2(false, false)), _GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0))) + (_GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[_GLF_IDENTITY(1, 0 + (1))], (injectionSwitch)[1]), min((injectionSwitch)[_GLF_IDENTITY(1, max(1, 1))], (injectionSwitch)[1]))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))))), vec2(_GLF_FUZZED(9926.0628), _GLF_FUZZED(-987.472)), bvec2(false, false)), mix(vec2((mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY((float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-488.103), _GLF_FUZZED(99.50)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0))))))[1], float(vec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-488.103), _GLF_FUZZED(99.50)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0))))))[1], 0.0, 0.0))), (injectionSwitch)[1])), (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-488.103), _GLF_FUZZED(99.50)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0))))))[1], float(vec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-488.103), _GLF_FUZZED(99.50)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 0.0, 1.0, 0.0, 1.0))))))[1], 0.0, 0.0))), (injectionSwitch)[1])), (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(9.3))) * 1.0)))), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-78.55 - -23.15))), float(0.0), bool(true))), 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))))), vec2(_GLF_FUZZED(9926.0628), _GLF_FUZZED(-987.472)), bvec2(false, false)))[0], _GLF_FUZZED(-63.22)), vec2(_GLF_FUZZED(8194.0949), (mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min(_GLF_IDENTITY((injectionSwitch), mat2(1.0) * ((injectionSwitch)))[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(float(vec2(cos(0.0), 0.0)), float(vec3(float(vec2(cos(0.0), 0.0)), 0.0, 1.0)))), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min(_GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1])), (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0), (vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0)) - vec3(0.0, 0.0, 0.0)), vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(4.3)) : 1.0)), 1.0, 1.0))))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[_GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) + (1))], _GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(vec2(310.792, -4.7))))) * vec2(1.0, 1.0))[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))))), vec2(_GLF_FUZZED(9926.0628), _GLF_FUZZED(-987.472)), bvec2(false, false)))[1]), bvec2(false, true)))))).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- 2.9))), vec2(_GLF_FUZZED(-1.7), (injectionSwitch)[1]), bvec2(false, true))))[1], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(-57.99, -9.6, 8850.0767).t)), vec2(_GLF_FUZZED(-7.1), (injectionSwitch)[1]), bvec2(false, true)))), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(mat3x4(injectionSwitch[1], abs(0.0), 1.0, 1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0)))))), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED((true ? -465.032 : -4.6)), _GLF_FUZZED((5.9 - -194.912))), bvec2(false, false)))[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 0.0)), max(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_IDENTITY(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(8215.2290), (vec2(1.0, 1.0))[1]), vec2((vec2(1.0, 1.0))[0], _GLF_FUZZED(-6.4)), bvec2(true, false))) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), (false ? _GLF_FUZZED(356.080) : _GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))))) : _GLF_FUZZED(9.8), (true ? _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), (false ? _GLF_FUZZED(356.080) : _GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))))) : _GLF_FUZZED(9.8)) - 0.0))), _GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(61972) : 1))], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1])))), bool(true))))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), _GLF_IDENTITY(0.0, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(8513.9274) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), vec2(mat3((injectionSwitch), 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(6.1) : 1.0)))), 1.0))), (injectionSwitch))), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch)))))[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)))), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))))[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))), mat2(1.0) * (vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], _GLF_IDENTITY(min((injectionSwitch)[_GLF_IDENTITY(1, (1) / 1)], (injectionSwitch)[1]), _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((injectionSwitch)[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(2.2))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0)), (float(mat4(_GLF_IDENTITY(min((injectionSwitch)[1], (injectionSwitch)[1]), max(min((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1], (injectionSwitch)[1]), min((injectionSwitch)[1], (injectionSwitch)[1]))), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), cos(0.0), 0.0, 1.0, 0.0, 0.0, round(length(normalize(abs(vec3(1.0, 1.0, 1.0))))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 1.0, 0.0))) * 1.0)))))), vec2(_GLF_FUZZED(9926.0628), _GLF_FUZZED(-987.472)), bvec2(false, false))).x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, (6) | 0)), int(_GLF_IDENTITY(6, ~ (~ (6)))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0) != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0)))); _GLF_IDENTITY(_injected_loop_counter ++, 1 * (_injected_loop_counter ++)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(checker[GLF_merged4_0_1_11_1_1_17_2_1_11_3_1_12subgroup_idsubgroup_local_idvirtual_gidworkgroup_id.z], read, 4, 64, 4);
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         else
          {
          }
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         barrier();
        }
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         subgroupAll(true);
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
    {
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0))), (vec2(mat4x3(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))) / vec2(1.0, 1.0))), injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, true))) && true)))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
