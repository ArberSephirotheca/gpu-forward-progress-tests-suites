#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, sin(0.0), 0.0, 1.0, 0.0, 1.0, abs(1.0), log(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), max(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 1.0))).x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-43.24, -2.0)) : injectionSwitch)), injectionSwitch, injectionSwitch)).x) - 0.0), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)), (_GLF_IDENTITY(false ? _GLF_FUZZED(347.997) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), min(false ? _GLF_FUZZED(347.997) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), false ? _GLF_FUZZED(347.997) : _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), float(mat3(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) * 1.0), (injectionSwitch.x), (injectionSwitch.x)), max(clamp(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) * 1.0), (injectionSwitch.x), (injectionSwitch.x)), clamp(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) * 1.0), (injectionSwitch.x), (injectionSwitch.x))))) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) * 1.0, ((_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) * 1.0) - 0.0)), (injectionSwitch.x), (injectionSwitch.x))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), _GLF_IDENTITY(max((injectionSwitch.x), (injectionSwitch.x)), max(_GLF_IDENTITY(max((injectionSwitch.x), (injectionSwitch.x)), (max((injectionSwitch.x), (injectionSwitch.x))) - 0.0), max((injectionSwitch.x), (injectionSwitch.x)))))) * 1.0), (injectionSwitch.x), (injectionSwitch.x))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), clamp(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x)))) * 1.0), (injectionSwitch.x), (injectionSwitch.x))) - 0.0)) - 0.0))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4409.1472) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(sqrt(9733.1546))))), clamp(_GLF_IDENTITY((injectionSwitch.x), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), min(_GLF_IDENTITY((injectionSwitch.x), max((injectionSwitch.x), (injectionSwitch.x))), _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED(17.14)), bool(false))))), max((injectionSwitch.x), (injectionSwitch.x)))) * 1.0), (injectionSwitch.x), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x))) - 0.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, true)), bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, true, true)), true), bvec2(bvec4(bvec2(bool(bvec4(false, false, true, true)), true), false, false)))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))), (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (false) || false), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch))), cos(vec2(0.0, 0.0)) * (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat4(transpose(mat2(1.0))))))) * (injectionSwitch)))))).x > injectionSwitch.y), _GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-55.20, 2.1)) : injectionSwitch))) - vec2(0.0, 0.0)), 1.0, 0.0), vec4(mat4x2(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-55.20, 2.1)) : injectionSwitch))) - vec2(0.0, 0.0)), 1.0, 0.0), 0.0, sqrt(0.0), sin(0.0), 1.0))))), _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - sqrt(vec2(0.0, 0.0)))))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), true, false), bvec3(bvec4(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y))), true, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y)), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y))))))), true, false), bvec3(bvec4(bvec3(! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))) * (injectionSwitch), vec2(0.0, 0.0) + (mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec3(injectionSwitch, 1.0)), (false ? _GLF_FUZZED(injectionSwitch) : vec2(vec3(injectionSwitch, 1.0))))).y))), true, false), true))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true, false, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, true), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(false, _GLF_IDENTITY(true, (true) || false)), false, false)), false))))))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base + subgroup_base), uint(uvec2(~ (workgroup_base + subgroup_base), 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, uint(_GLF_IDENTITY(uvec2((subgroup_local_id + _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) | 0), 1))) % subgroup_size, 0u), uvec2(uvec2(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 0u), clamp(_GLF_IDENTITY(uvec2((subgroup_local_id + 1) % subgroup_size, 0u), clamp(uvec2((subgroup_local_id + 1) % subgroup_size, 0u), uvec2((subgroup_local_id + 1) % subgroup_size, 0u), uvec2((subgroup_local_id + 1) % subgroup_size, 0u))), uvec2((subgroup_local_id + 1) % subgroup_size, 0u), uvec2((subgroup_local_id + 1) % subgroup_size, 0u)))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))))))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, 0.0, 1.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0))) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sqrt(0.0)))))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), true, false, true))))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-13.45, 7.4)))).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_FUZZED(95255) : 4), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3((false ? _GLF_FUZZED(95255) : 4), 0, 1), ~ (~ (ivec3((false ? _GLF_FUZZED(95255) : 4), 0, 1))))), (int(_GLF_IDENTITY(ivec3((false ? _GLF_FUZZED(95255) : 4), 0, 1), ~ (~ (ivec3((false ? _GLF_FUZZED(95255) : 4), 0, 1)))))) * 1))), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-4393))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-4393))), (0 | 1)), (ivec2(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(-4393))), (0 | 1))) - ivec2(0, 0))))))) == _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) - (0 >> _GLF_IDENTITY(int(2), int(2))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u)))) / 1u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u)))) / 1u))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u)))) / 1u)))))) % 2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec2(uvec4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 0u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), ~ (~ ((3u)))) / 1u)) << _GLF_IDENTITY(0u, min(0u, 0u)))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (subgroup_local_id) | 0u)) / _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 1u))) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) == 0, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, clamp((subgroup_local_id) | 0u, (subgroup_local_id) | 0u, (subgroup_local_id) | 0u)))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, clamp(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(true, ! (! (true))) ? (subgroup_local_id) : _GLF_FUZZED(131575u))) | 0u, (subgroup_local_id) | 0u, (subgroup_local_id) | 0u)))), 0u))) / 1u) % 2) == 0, ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u)) % 2) == 0))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u))) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | uvec4(0u, 0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(packSnorm2x16(vec2(8.2, 4239.6405)))))) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u) % 2) == 0))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), 1u, 1u, 1u))) / 1u) % 2) == 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)))) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u) % 2) == 0))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)))))) | 0u)) / 1u) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2)))))) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u) % _GLF_IDENTITY(2, min(2, 2))) == 0))))))), true, false, true)), bool(bvec2(bool(bvec4(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))))) / 1u) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) | 0u)))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u), ((subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u) % 2) == 0))))))), true, _GLF_IDENTITY(false, ! (! (false))), true)), false))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), false))))), ! (! ((! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), 1u * (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) / 1u, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u)))) / 1u)), (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u)))) / 1u))) | (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u))), (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u, 1u, 1u))) >> 0u)))) / 1u)))))) % 2, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec2(uvec4(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 0u))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_IDENTITY(3u, _GLF_IDENTITY((3u), ~ (~ ((3u)))) / 1u)) << _GLF_IDENTITY(0u, min(0u, 0u)))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (subgroup_local_id) | 0u)) / _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : 1u))) % 2, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))))) == 0, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, clamp((subgroup_local_id) | 0u, (subgroup_local_id) | 0u, (subgroup_local_id) | 0u)))), uint(uvec2((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | 0u, clamp(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY(true, ! (! (true))) ? (subgroup_local_id) : _GLF_FUZZED(131575u))) | 0u, (subgroup_local_id) | 0u, (subgroup_local_id) | 0u)))), 0u))) / 1u) % 2) == 0, ! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), min(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))))) / _GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), (_GLF_IDENTITY(1u, max(1u, 1u))) / 1u)) % 2) == 0))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u, clamp((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u))) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | uvec4(0u, 0u, 0u, 0u))), (true ? uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (uvec4(_GLF_IDENTITY((subgroup_local_id), 0u ^ ((subgroup_local_id))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)) | uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED(packSnorm2x16(vec2(8.2, 4239.6405)))))) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u))))) / 1u) % 2) == 0))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)), 1u, 1u, 1u))) / 1u) % 2) == 0, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 0u)))) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u) % 2) == 0))))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)))))) | 0u)) / 1u) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2)))))) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))) / 1u) % _GLF_IDENTITY(2, min(2, 2))) == 0))))))), true, false, true)), bool(bvec2(bool(bvec4(! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)))) | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u))))) / 1u) % 2) == 0))), false || ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, 0u + (subgroup_local_id)), subgroup_local_id, subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) | 0u)))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(1u), uint(1u))))) / 1u) % 2) == 0, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u), ((subgroup_local_id) | _GLF_IDENTITY(0u, (0u) | 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u) % 2) == 0))))))), true, _GLF_IDENTITY(false, ! (! (false))), true)), false))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))))), false))))))))))
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), (read = atomicLoad(buf[virtual_gid], 4, 64, 2)) * 1u);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (_GLF_IDENTITY(~ (buf[virtual_gid]), uint(_GLF_IDENTITY(uvec2(~ (_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid]))), 1u), min(_GLF_IDENTITY(uvec2(~ _GLF_IDENTITY((buf[virtual_gid]), clamp((buf[virtual_gid]), _GLF_IDENTITY((buf[virtual_gid]), 0u ^ ((buf[virtual_gid]))), _GLF_IDENTITY((buf[virtual_gid]), min((buf[virtual_gid]), (buf[virtual_gid]))))), 1u), (uvec2(~ _GLF_IDENTITY((buf[virtual_gid]), ((buf[virtual_gid])) | ((buf[virtual_gid]))), 1u)) - uvec2(0u, 0u)), _GLF_IDENTITY(uvec2(~ (buf[virtual_gid]), 1u), ~ (_GLF_IDENTITY(~ (uvec2(~ (buf[virtual_gid]), 1u)), (true ? ~ (uvec2(~ (_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[virtual_gid]))), 1u)) : _GLF_FUZZED(uvec2(65307u, 84778u)))))))))))), 4, 64, 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false || (bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4.3, -4036.5512)) : injectionSwitch)).x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (max(injectionSwitch, injectionSwitch)))).y))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - _GLF_IDENTITY(tan(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED((- 0.1)), _GLF_FUZZED(vec4(6119.7652, 5485.5426, 9.6, -9.3).z)), vec2(_GLF_IDENTITY((tan(vec2(0.0, 0.0)))[0], max((tan(vec2(0.0, 0.0)))[0], (tan(vec2(0.0, 0.0)))[0])), (tan(vec2(0.0, 0.0)))[1]), bvec2(true, true)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(-7784.6895, 2.2, -4.1, -8.3).p)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))), bool(true))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, int(ivec4(4, _GLF_IDENTITY(1, int(int(1))), (0 | int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))), 0))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true, (true) && true))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
