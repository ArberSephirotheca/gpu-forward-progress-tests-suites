#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0))).y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, 1.0, determinant(mat3(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(injectionSwitch)), min(vec2(vec2(injectionSwitch)), vec2(vec2(injectionSwitch))))).x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), (_GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), clamp(_GLF_IDENTITY(min((injectionSwitch)[0], (injectionSwitch)[0]), min(min((injectionSwitch)[0], (injectionSwitch)[0]), min((injectionSwitch)[0], (injectionSwitch)[0]))), min((injectionSwitch)[0], (injectionSwitch)[0]), min((injectionSwitch)[0], (injectionSwitch)[0])))) / 1.0)), _GLF_FUZZED(_GLF_IDENTITY(float(196882u), mix(float(_GLF_FUZZED(-7.7)), float(float(196882u)), _GLF_IDENTITY(bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 1.0))))).y), false))))), (bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false)))))) && true))))), vec2(_GLF_FUZZED(float(-76556)), (injectionSwitch)[1]), bvec2(false, true))).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, log(1.0), 0.0))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))), false)))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), (bool(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) && true)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))))
          barrier();
         return;
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), (bool(_GLF_IDENTITY(false, (false) || false))) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, true))) || false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y))) ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(abs(injectionSwitch)) : injectionSwitch)).y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sin(0.0), cos(0.0), 1.0, 0.0, 1.0, 0.0))) : _GLF_FUZZED(degrees(vec2(-221.358, 4.7))))).y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id))) ^ 0u)));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(_GLF_IDENTITY(8.7, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(8.7, (false ? _GLF_FUZZED(-4.2) : 8.7)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), clamp(float(mat3x2(_GLF_IDENTITY(8.7, (false ? _GLF_FUZZED(-4.2) : 8.7)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(8.7, (false ? _GLF_FUZZED(-4.2) : 8.7)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), 0.0)), (float(mat3x2(_GLF_IDENTITY(8.7, (false ? _GLF_FUZZED(-4.2) : 8.7)), 1.0, 0.0, _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(0.0, 1.0, 0.0, 0.0), (vec4(0.0, 1.0, 0.0, 0.0)) * mat4(1.0)), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), 0.0))) * 1.0), float(mat3x2(_GLF_IDENTITY(8.7, (false ? _GLF_FUZZED(-4.2) : 8.7)), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), sqrt(1.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-771.361)), bool(false)))))))))), bool(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED((_GLF_IDENTITY(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)), min(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)), ((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)))))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, _GLF_IDENTITY(86575u, (_GLF_IDENTITY(86575u, (_GLF_IDENTITY(86575u, (86575u) << 0u)) << 0u)) | (_GLF_IDENTITY(86575u, (86575u) ^ 0u))))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(_GLF_IDENTITY(183004u, 0u ^ (183004u)), 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, _GLF_IDENTITY(86575u, (true ? _GLF_IDENTITY(86575u, (86575u) | (86575u)) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)), ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))) > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(183004u, (183004u) | (183004u)), 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), (true ? uvec3(183004u, 47528u, 86575u) : _GLF_FUZZED(uvec3(138436u, 85309u, 171340u)))), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(183004u, 47528u, 86575u)), max((uvec3(183004u, 47528u, 86575u)), (uvec3(183004u, 47528u, 86575u)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch), mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(7194.1006)), vec2(((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch))[0], ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch))[1]), bvec2(true, true)))))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, _GLF_IDENTITY(47528u, 0u | (47528u)), 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : _GLF_IDENTITY(uvec3(82151u, 34290u, 5678u), (_GLF_IDENTITY(uvec3(82151u, 34290u, 5678u), max(uvec3(82151u, 34290u, 5678u), uvec3(82151u, 34290u, 5678u)))) - uvec3(0u, 0u, 0u))) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))), ((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))), ((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) - uvec3(0u, 0u, 0u))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), clamp(float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0))))), injectionSwitch.y), 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))), bool(bool(_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED((_GLF_IDENTITY(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)), min(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)), ((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)))))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, _GLF_IDENTITY(86575u, (_GLF_IDENTITY(86575u, (_GLF_IDENTITY(86575u, (86575u) << 0u)) << 0u)) | (_GLF_IDENTITY(86575u, (86575u) ^ 0u))))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(_GLF_IDENTITY(183004u, 0u ^ (183004u)), 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, _GLF_IDENTITY(86575u, (true ? _GLF_IDENTITY(86575u, (86575u) | (86575u)) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)), ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))) > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(183004u, (183004u) | (183004u)), 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), (true ? uvec3(183004u, 47528u, 86575u) : _GLF_FUZZED(uvec3(138436u, 85309u, 171340u)))), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(183004u, 47528u, 86575u)), max((uvec3(183004u, 47528u, 86575u)), (uvec3(183004u, 47528u, 86575u)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch), mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(7194.1006)), vec2(((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch))[0], ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch))[1]), bvec2(true, true)))))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, _GLF_IDENTITY(47528u, 0u | (47528u)), 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : _GLF_IDENTITY(uvec3(82151u, 34290u, 5678u), (_GLF_IDENTITY(uvec3(82151u, 34290u, 5678u), max(uvec3(82151u, 34290u, 5678u), uvec3(82151u, 34290u, 5678u)))) - uvec3(0u, 0u, 0u))) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))), ((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))), ((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) - uvec3(0u, 0u, 0u))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), clamp(float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0))))), injectionSwitch.y), 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))), bool(bvec3(false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(6u)))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED((_GLF_IDENTITY(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)), min(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)), ((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253)))))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, _GLF_IDENTITY(86575u, (_GLF_IDENTITY(86575u, (_GLF_IDENTITY(86575u, (86575u) << 0u)) << 0u)) | (_GLF_IDENTITY(86575u, (86575u) ^ 0u))))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(_GLF_IDENTITY(183004u, 0u ^ (183004u)), 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, _GLF_IDENTITY(86575u, (true ? _GLF_IDENTITY(86575u, (86575u) | (86575u)) : _GLF_FUZZED(virtual_gid)))), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)), ~ (~ (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0))) > injectionSwitch.y))), bool(bool((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(183004u, (183004u) | (183004u)), 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), (true ? uvec3(183004u, 47528u, 86575u) : _GLF_FUZZED(uvec3(138436u, 85309u, 171340u)))), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((uvec3(183004u, 47528u, 86575u)), max((uvec3(183004u, 47528u, 86575u)), (uvec3(183004u, 47528u, 86575u)))), (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch), mix(vec2(_GLF_FUZZED(5.7), _GLF_FUZZED(7194.1006)), vec2(((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch))[0], ((_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(uvec3(2840u, 140785u, 34772u), (uvec3(2840u, 140785u, 34772u)) >> uvec3(0u, 0u, 0u))) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, _GLF_IDENTITY(-6938.1253, (_GLF_IDENTITY(-6938.1253, (true ? -6938.1253 : _GLF_FUZZED(-90.12)))) + 0.0)))) : injectionSwitch))[1]), bvec2(true, true)))))))).x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, _GLF_IDENTITY(47528u, 0u | (47528u)), 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), max((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : _GLF_IDENTITY(uvec3(82151u, 34290u, 5678u), (_GLF_IDENTITY(uvec3(82151u, 34290u, 5678u), max(uvec3(82151u, 34290u, 5678u), uvec3(82151u, 34290u, 5678u)))) - uvec3(0u, 0u, 0u))) , vec2(80.71, -6938.1253))) : injectionSwitch), _GLF_IDENTITY((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))), ((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) | (_GLF_IDENTITY((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u))))), ((_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) - uvec3(0u, 0u, 0u))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch), mat2(1.0) * ((false ? _GLF_FUZZED(((true ? _GLF_IDENTITY(uvec3(183004u, 47528u, 86575u), ~ (_GLF_IDENTITY(~ (uvec3(183004u, 47528u, 86575u)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) ? _GLF_FUZZED(uvec3(2840u, 140785u, 34772u)) : ~ (uvec3(183004u, 47528u, 86575u)))))) : uvec3(82151u, 34290u, 5678u)) , vec2(80.71, -6938.1253))) : injectionSwitch)))))).x, 0.0, _GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), clamp(float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)), float(mat4x2(1.0, 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0))))), injectionSwitch.y), 1.0, 0.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y)))))))), true, false)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat3x2(_GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)), vec2(vec2((vec2(1.0, 1.0))))) - vec2(0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0))) * (injectionSwitch)).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-6.8, 1626.4166)) : injectionSwitch)))).x) / 1.0) > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)), (_GLF_IDENTITY(false, bool(bool(false)))) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec2(-669.442, 9793.2688) * -5.4)) : injectionSwitch)))).x, 0.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y)))) && (false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7199.7309), _GLF_FUZZED(-2.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))) && true))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false)))), _GLF_IDENTITY(false, (false) || false))), bool(bvec2(bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false, bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(137082u))), float(injectionSwitch.y), bool(true)))))) || false, false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) << 0u)) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_FUZZED(workgroup_base)))), ~ (~ (((_GLF_IDENTITY(subgroup_local_id + 1, (true ? _GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) ^ 0u) : _GLF_FUZZED(virtual_gid)))) % subgroup_size))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), true && (! ((false)))))))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0))))), injectionSwitch.y, injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && (false)) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0), (true ? mat3x4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), tan(0.0), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY((0.0), sqrt(0.0) + ((0.0))), min(_GLF_IDENTITY((0.0), sqrt(0.0) + ((0.0))), _GLF_IDENTITY((0.0), sqrt(0.0) + ((0.0))))) / _GLF_IDENTITY(dot(vec4(round(length(normalize(vec4(1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(dot(704.914, -8.9)) : 1.0))) - 0.0), 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, sin(0.0), 0.0)), _GLF_IDENTITY(dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, sin(0.0), 0.0)), float(vec4(dot(vec4(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0), vec4(1.0, 0.0, sin(0.0), 0.0)), cos(tan(0.0)), 0.0, length(vec2(0.0, 0.0))))))), injectionSwitch.x), sqrt(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0) : _GLF_FUZZED(mat3x4(2.0, -1.0, _GLF_IDENTITY(1.4, (true ? _GLF_IDENTITY(1.4, min(1.4, 1.4)) : _GLF_FUZZED(-623.100))), -8417.7019, 3.0, -6653.1638, 2.4, -81.45, -10.44, 28.50, 4641.4928, 3569.6887)))))).y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y))), true)))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(((false)) || false, _GLF_IDENTITY(bool(bvec3(((false)) || false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(((false)) || false, true, _GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))), true, true)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))) && true)))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), _GLF_IDENTITY(2, (2) | (2))), (read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, (64) | (64)), 2)) << 0u);
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(2.4)), float(injectionSwitch.x), bool(true))), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
