#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), false, true))), _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), (bool(bvec2(false, false))) && true), true && (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))), (bool(bvec2(false, false))) || false))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), false, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || false))), (bool(bvec2(false, false))) || false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))), (bool(bvec2(false, false))) || false))))), false))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), false, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || false))), (bool(bvec2(false, false))) || false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))), (bool(bvec2(false, false))) || false))))), false))), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), false, true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))), (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false))))) || false))), (bool(bvec2(false, false))) || false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) && true), _GLF_IDENTITY(false, true && (false)), true))), _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), true && (_GLF_IDENTITY(bool(bvec2(false, false)), true && (bool(bvec2(false, false)))))), (bool(bvec2(false, false))) || false))))), false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false))), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 1.0, log(1.0), 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-3.4))), injectionSwitch.x), 0.0, 0.0, 0.0))) > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size)), workgroup_size)) * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), ! (! (bool(bvec4(false, false, false, true))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, _GLF_IDENTITY(0, 0 + (0))), max(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, _GLF_IDENTITY(0, 0 + (0))), min(ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, _GLF_IDENTITY(0, 0 + (0))), ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, _GLF_IDENTITY(0, 0 + (0))))), ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, _GLF_IDENTITY(0, 0 + (0))))), (ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, _GLF_IDENTITY(0, 0 + (0)))) | (ivec4(_GLF_IDENTITY(4, (4) / 1), 0, 0, _GLF_IDENTITY(0, 0 + (0))))))));
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(max(log(1.0), log(1.0)), min(max(log(1.0), log(1.0)), max(log(1.0), log(1.0))))), 1.0, 0.0, tan(0.0), 1.0)), float(mat2x3(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(log(1.0), _GLF_IDENTITY(max(log(1.0), log(1.0)), mix(float(_GLF_FUZZED(189.707)), float(max(log(1.0), log(1.0))), bool(true)))), 1.0, 0.0, tan(0.0), 1.0)), max(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(log(1.0), max(log(1.0), _GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(-3.6) : log(1.0))))), 1.0, 0.0, tan(0.0), 1.0)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(log(1.0), max(log(1.0), log(1.0))), 1.0, 0.0, tan(0.0), 1.0)))), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 0.0, 0.0)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0)))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), max(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))))).y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), max(_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 0.0, 1.0), clamp(vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0), vec3(1.0, 0.0, 1.0)))) / vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(vec3(1.0, 0.0, 1.0), vec3(_GLF_IDENTITY(mat3x4(vec3(1.0, 0.0, 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0), mat4(1.0) * (mat3x4(vec3(1.0, 0.0, 1.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0)))))))), max(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))), 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0))).y)), false, true, true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-5.4)), float(injectionSwitch[1]), bool(true))))).y, true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0)))[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, 0 | (1))))])).y, false || (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, min(1, 1))]), clamp(vec2(injectionSwitch[_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, 0 ^ (0)), 0))], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) - vec2(0.0, 0.0))[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])))))).y, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])), (min(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1, max(1, 1)), (_GLF_IDENTITY(1, max(1, 1))) ^ 0), _GLF_IDENTITY(1, max(1, 1))))]))) / vec2(1.0, 1.0)))))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1]))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(921.328)), bool(false))), injectionSwitch[0])), injectionSwitch[1]), vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, max(1, 1))], (injectionSwitch[_GLF_IDENTITY(1, max(1, 1))]) - 0.0)) / _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, sqrt(0.0), 1.0)), dot(vec4(tan(0.0), 0.0, 0.0, 1.0), vec4(0.0, 0.0, sqrt(0.0), 1.0)))))))))).y))))))))))
    {
    }
   else
    {
     subgroupAll(false);
    }
   read = atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) | ((virtual_gid)))) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))) << _GLF_IDENTITY(0u, (0u) | (0u)))) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u, (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * _GLF_IDENTITY(1u, (1u) | 0u), max((_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u))) ^ 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), max(_GLF_IDENTITY((virtual_gid), ((virtual_gid)) ^ 0u), (virtual_gid))) << 0u)) * 1u)), (0u ^ (_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)) * 1u))) | 0u))) ^ 0u)) / _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(169836u)))), (_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u)), ((_GLF_IDENTITY(virtual_gid, (virtual_gid) << 0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) * _GLF_IDENTITY(1u, 0u | (1u)))) / 1u)) | 0u), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) << _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec4(0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u + (1u)), 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), ((0u << _GLF_IDENTITY(uint(6u), uint(6u)))) | 0u)) + 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), ((0u << _GLF_IDENTITY(uint(6u), uint(6u)))) | 0u)) + 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 1u)), (uint(uvec4(0u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(6u), uint(6u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) | _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), ((0u << _GLF_IDENTITY(uint(6u), uint(6u)))) | 0u)) + 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), 0u, 1u))) << 0u)) ^ 0u), clamp(uint(uvec4(0u, (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, ~ (~ (6u)))))), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(1u, min(1u, 1u)))), uint(uvec4(0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u)), uint(uvec4(0u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(6u))), (0u | 1u) * ((0u << _GLF_IDENTITY(uint(6u), uint(6u))))), 0u, 1u))))) | (uint(uvec4(0u, (0u << _GLF_IDENTITY(uint(6u), uint(6u))), 0u, 1u))))))) * _GLF_IDENTITY(1u, (1u) << 0u))))], 4, 64, 2);
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     subgroupAll(false);
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 4, 64, 2), (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], 4, 64, 2)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[virtual_gid])), _GLF_IDENTITY(4, max(_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(_GLF_IDENTITY(4, min(4, 4)), 4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) ^ 0))))), clamp(clamp(_GLF_IDENTITY(4, min(4, 4)), 4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) ^ 0))))), clamp(_GLF_IDENTITY(4, min(4, 4)), _GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (false ? _GLF_FUZZED(21464) : _GLF_IDENTITY(4, 0 + (4)))) : _GLF_FUZZED(-98292))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) ^ 0))))), clamp(_GLF_IDENTITY(4, min(4, 4)), 4, _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) - 0)) << 0), (4) ^ 0)))))))), 4)), 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)), clamp(0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)), 0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)), 0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2))))), (~ (_GLF_IDENTITY(0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)), clamp(0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)), 0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)), 0u ^ (atomicLoad(buf[_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(virtual_gid, uint(uvec4(virtual_gid, 1u, 0u, 1u))), 0u, 1u)))))], 4, 64, 2)))))) / 1u))), (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), subgroup_size))) : _GLF_IDENTITY(0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)), 0u | (0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2)))))))), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | _GLF_IDENTITY((2), ((2)) | ((2))))))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (0u)), 0u | (0u)) ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))))), (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0))), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (ivec2(2, 1)))), 0 + (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), min(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, _GLF_IDENTITY(1, (1) ^ 0))) + ivec2(0, 0)), _GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), ivec2(2, 1), ivec2(2, 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ~ (~ (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) / ivec2(1, 1))))), (ivec2(2, 1)) - ivec2(0, 0))) | _GLF_IDENTITY((ivec2(2, 1)), ivec2(0, 0) ^ ((ivec2(2, 1))))))))), (2) ^ 0)))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) - 0u))) ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) | 0u)), max(_GLF_IDENTITY(min(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(0u, 0u | (0u)) ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))))), (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0))), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (ivec2(2, 1)))), 0 + (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), min(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) + ivec2(0, 0)), _GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), ivec2(2, 1), ivec2(2, 1))))), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (ivec2(2, 1))))))), (2) ^ 0)))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) | 0u)), (min(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, _GLF_IDENTITY((2) | (2), 0 + ((2) | (2))))))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (4) | 0), 64, 2), _GLF_IDENTITY(0u, 0u | (0u)) ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))))), (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0))), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (ivec2(2, 1)))), 0 + (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), min(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) + ivec2(0, 0)), _GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), (false ? _GLF_FUZZED(ivec2(-88859, 27938)) : ivec2(2, 1))), clamp(ivec2(2, 1), ivec2(2, 1), ivec2(2, 1))))), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) ^ ivec2(0, 0)))))))), (2) ^ 0)))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) | 0u))) / (1u ^ 0u)), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(uvec2(21298u, 18419u).s) : virtual_gid))], 4, 64, _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) << 0)) | (2))))), 0u ^ _GLF_IDENTITY((atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))))), 0u | ((atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | 0))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(0u, 0u | (0u)) ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))))), (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0)) - 0))), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (ivec2(2, 1)))), 0 + (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), min(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) + ivec2(0, 0)), _GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), ivec2(2, 1), ivec2(2, _GLF_IDENTITY(1, 0 | (1))))))), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(_GLF_IDENTITY(0, ~ (~ (0))), 0))) | (ivec2(2, 1))))))), (2) ^ 0)))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) | 0u)), 0u | (min(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2))))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, _GLF_IDENTITY((2), (_GLF_IDENTITY((2), 0 | ((2)))) << 0) | 0))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(0u, 0u | (0u)) ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2))))))), (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY(0u, 0u | (0u)) ^ (atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, ~ (~ (2)))))))) ^ (uint(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uint(8u), uint(8u)))), (~ (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, 0 | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))))) * 1))), _GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))))) * 1))), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0)), max(_GLF_IDENTITY(int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))))) * 1))), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0)), (int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))))) * 1))), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0))) | 0), int(ivec4((_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0)))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), clamp(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0), ivec2(1, 1) * (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), int(ivec2(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, ~ (~ (64)))) | 0), 0))), 0))))) * 1))), 0, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0)))))), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (ivec2(2, 1)))), 0 + (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), min(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-75357)))), (ivec2(2, 1)) + ivec2(0, 0)), _GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), ivec2(2, 1), ivec2(2, 1))))), (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) - ivec2(0, 0))) | (_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) + ivec2(0, 0)))))))), (2) ^ 0)))), 0u ^ (atomicLoad(buf[virtual_gid], 4, 64, 2))))) | 0u)))))))));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, abs(0.0), 1.0))).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, float(mat3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 1.0))), abs(0.0), 1.0))).x), float(_GLF_FUZZED(-8000.7613)), bool(false))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, 0 + (4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
