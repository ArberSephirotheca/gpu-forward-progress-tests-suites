#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_3 {
 uint _f0;
 mat4x3 _f1;
 ivec2 _f2;
 uvec3 _f3;
 ivec4 _f4;
} ;

struct _GLF_struct_2 {
 mat3x4 _f0;
 ivec2 _f1;
 vec3 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_1 {
 ivec2 _f0;
 mat2x3 _f1;
 float _f2;
} ;

struct _GLF_struct_0 {
 uvec4 _f0;
 uint _f1;
 bvec4 _f2;
 mat4 _f3;
 uvec3 _f4;
 bool _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 uint subgroup_size;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 vec2 _f1;
 _GLF_struct_4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(737.639, -65.36)))))), (_GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4681.8026) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(449.656)), bool(false))), 1.0)), max(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4681.8026) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(449.656)), bool(false))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4681.8026) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(449.656)), bool(false))), 1.0)), (_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(4681.8026) : 1.0)), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(449.656)), bool(false))), 1.0))) / 1.0)))) - 0.0, clamp((_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(449.656)), bool(false))), 1.0), (clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(449.656)), bool(false))), 1.0)) / 1.0))) - 0.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(449.656)), min(float(_GLF_FUZZED(449.656)), float(_GLF_FUZZED(449.656)))), bool(false))), 1.0))) - 0.0, (_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(449.656)), bool(false))), 1.0))) - _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))))) * (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(737.639, -65.36))))))) * vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[1] : _GLF_FUZZED(-9.1))), _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0), injectionSwitch[1])))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0))), mix(vec2((vec2(mat3(injectionSwitch, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0))))[0], _GLF_FUZZED(-5.0)), vec2(_GLF_FUZZED(vec2(-7582.5313, 2554.4927).r), (vec2(mat3(injectionSwitch, tan(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, cos(0.0))))[1]), bvec2(false, true))))[1]) - 0.0))).y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false))))))
    return;
   return;
  }
 _GLF_struct_5 _GLF_struct_replacement_5 = _GLF_struct_5(mat2x3(1.0), _GLF_IDENTITY(vec2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY((vec2(1.0)), mix(vec2(((vec2(1.0)))[0], ((vec2(1.0)))[1]), vec2(_GLF_FUZZED(-4.8), _GLF_FUZZED(36.01)), bvec2(false, false))) - vec2(0.0, 0.0)))), _GLF_struct_4(_GLF_struct_0(uvec4(1u), 1u, bvec4(true), mat4(1.0), uvec3(1u), true), gl_SubgroupSize, _GLF_struct_1(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), (_GLF_IDENTITY(1, (1) + 0)) | (0 << _GLF_IDENTITY(int(0), int(0))))), mat2x3(1.0), 1.0), _GLF_struct_2(mat3x4(1.0), ivec2(1), _GLF_IDENTITY(vec3(1.0), min(vec3(1.0), vec3(1.0))), mat3(1.0)), _GLF_struct_3(1u, mat4x3(1.0), ivec2(1), uvec3(1u), ivec4(1)), mat2x4(1.0)));
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false)))) && true))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), true && (bool(bvec4(false, true, false, true)))))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))))))), ! (! (bool(bool((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), true, false, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), true, false, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ((_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), bvec3(bvec3(bvec3(bvec3(bvec3((_GLF_DEAD(false)) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), true, false, false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false, false)))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true && (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
          }
        }
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))) || false), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))))))));
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), 0 + (int(6))), int(6))) << _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
      }
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), clamp(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize))))).x, (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) + 0u)))))))) | _GLF_IDENTITY(0u, (0u) - 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), true && (bool(bool(_GLF_IDENTITY(false, true && (false)))))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)))), 0u)), uvec3(0u, 0u, 0u) ^ (uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u))), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))))), 0u))))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint virtual_gid = workgroup_base + subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size + subgroup_local_id;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, ((_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(workgroup_size))) * _GLF_struct_replacement_5._f2.subgroup_size) * 1u) / 1u)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (1u) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (false ? _GLF_FUZZED(atomicAnd(workgroup_size, 164218u)) : _GLF_struct_replacement_5._f2.subgroup_size))) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) ^ 0u) * 1u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, uint(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u)))) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))) / 1u), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), max(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (false ? _GLF_FUZZED(min(packUnorm4x8(vec4(45.74, 962.900, -6.4, 412.619)), (workgroup_base))) : (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), clamp(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) >> 0u)) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, ~ (~ ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))), (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size))) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY(max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u), min(max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u), _GLF_IDENTITY(max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u), (max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)) << 0u)))), max(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) >> 0u), _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) >> 0u)))) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(67010u) : subgroup_id)) * _GLF_struct_replacement_5._f2.subgroup_size) * _GLF_IDENTITY(1u, (1u) + (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (true ? (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u : _GLF_FUZZED(subgroup_id))), max((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, min(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) * 1u)))) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)))))))), (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)))), 0u ^ ((workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (false ? _GLF_FUZZED(atomicOr(workgroup_base, workgroup_size)) : _GLF_struct_replacement_5._f2.subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, clamp(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, clamp(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size)))))) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, min((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))))))) ^ 0u)), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (false ? _GLF_FUZZED(atomicOr(workgroup_base, workgroup_size)) : _GLF_struct_replacement_5._f2.subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, clamp(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, clamp(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size)))))) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, min((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))))))) ^ 0u))) >> 0u)))) / 1u) + ((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_struct_replacement_5._f2.subgroup_size), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) * 1u) / 1u)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * _GLF_IDENTITY(1u, (1u) + 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), clamp(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u)) : _GLF_FUZZED((num_workgroup ^ subgroup_local_id))))) ^ 0u))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u) | ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), max(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, 0u, 1u)), (_GLF_IDENTITY(uint(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, 0u, 1u)), (uint(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, 0u, 1u))) | (uint(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, 0u, 1u))))) | 0u))) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, uint(uint((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))))), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (true ? subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size : _GLF_FUZZED(virtual_gid)))) * 1u)))))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u)) * 1u, _GLF_IDENTITY(max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (false ? _GLF_FUZZED(173937u) : (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))) * _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) / 1u)) ^ 0u)), min(max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u), max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, uint(uint(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)))) * 1u)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, ~ (~ (_GLF_struct_replacement_5._f2.subgroup_size)))) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size)), (_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size))) / 1u)) * 1u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) << 0u), _GLF_struct_replacement_5._f2.subgroup_size))) * 1u)), max(_GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) - 0u)) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, 0u ^ (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u) | ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)))), (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)))))))), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, uint(_GLF_IDENTITY(uint(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), max(_GLF_IDENTITY(uint(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (uint(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) | (uint(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))), uint(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)))))) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)))), 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicOr(workgroup_base, workgroup_size)) : _GLF_struct_replacement_5._f2.subgroup_size), 0u | ((false ? _GLF_FUZZED(atomicOr(workgroup_base, workgroup_size)) : _GLF_struct_replacement_5._f2.subgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, clamp(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY(max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) * 1u) * 1u), (max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, clamp(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)), (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)) * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))) << 0u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size)))))))), (subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size)))))) * 1u)) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, min((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, _GLF_IDENTITY((subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, max(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) + 0u))), _GLF_IDENTITY(max(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size), (max(_GLF_struct_replacement_5._f2.subgroup_size, _GLF_struct_replacement_5._f2.subgroup_size)) >> 0u))) * 1u, max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))))))) ^ 0u))))) / 1u) + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_struct_replacement_5._f2.subgroup_size), (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_struct_replacement_5._f2.subgroup_size)) | (((subgroup_local_id + _GLF_IDENTITY(1, min(1, 1))) % _GLF_struct_replacement_5._f2.subgroup_size)))) * 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u) * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u), (_GLF_IDENTITY(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u), max(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u), uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u)))) | (uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u)))), (uint(_GLF_IDENTITY(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u), (_GLF_IDENTITY(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u), max(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u), uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u)))) | (uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, ((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (0u & 40604u)), 1u))))) - 0u))))) * 1u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), ((subgroup_local_id + 1)) - uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) % _GLF_struct_replacement_5._f2.subgroup_size), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % _GLF_struct_replacement_5._f2.subgroup_size), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % _GLF_struct_replacement_5._f2.subgroup_size))), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, uint(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, 1u, 0u))))))) / 1u)), ((_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, uint(uvec4(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, 1u, 1u, 0u))))))) / 1u))) * (1u & 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))), min(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / _GLF_IDENTITY(1u, (1u) / (1u & 1u))))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))), ~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (0u | 0u) | (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))) * 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))), (_GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))) ^ 0u)), _GLF_IDENTITY(max(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), 0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))), min(max(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), 0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))), max(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), 0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))))))) + (_GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), clamp((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), max((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), 0u + ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))))))) * 1u))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) ^ 0))) % _GLF_struct_replacement_5._f2.subgroup_size)))) | (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) << 0u)) - 0u)), ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_5._f2.subgroup_size) - 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)))) - 0u))) | 0u) * 1u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, ~ (~ (_GLF_struct_replacement_5._f2.subgroup_size))), _GLF_struct_replacement_5._f2.subgroup_size)), (_GLF_struct_replacement_5._f2.subgroup_size) << 0u))), 0u | ((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), min((_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))) | 0u) * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id)))) : subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))) * 1u) + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (~ ((subgroup_local_id + 1)))), ((subgroup_local_id + 1)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) % _GLF_struct_replacement_5._f2.subgroup_size), min(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u) + ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % _GLF_struct_replacement_5._f2.subgroup_size), 0u ^ (workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, 0u ^ (_GLF_struct_replacement_5._f2.subgroup_size)), (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u)) | (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))))) % _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) * 1u)))), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))), min(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))), ~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))))))), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), max(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), 0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u)))))))) + ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u)), ~ (~ (~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u)))))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u))) * _GLF_struct_replacement_5._f2.subgroup_size))), min(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u)))) >> 0u), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), _GLF_IDENTITY((~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), max((~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)))) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)))))), uint(uint((_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u)), ~ (~ (~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u)))))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), _GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) + 0u)) - 0u))) * _GLF_struct_replacement_5._f2.subgroup_size))), min(~ (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u))), (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)) / 1u)))) >> 0u), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))), ~ (~ (~ (_GLF_IDENTITY(subgroup_id, 1u * (subgroup_id))))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))) * _GLF_struct_replacement_5._f2.subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size), _GLF_IDENTITY((~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), max((~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)), (~ (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)))) / 1u))), _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) / 1u), subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size)))))))))), _GLF_IDENTITY((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u, (_GLF_IDENTITY(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), max(0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), ~ (~ (uint(5u))))), 0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, max(5u, _GLF_IDENTITY(5u, min(5u, 5u))))), _GLF_IDENTITY(uint(5u), ~ (_GLF_IDENTITY(~ (uint(5u)), max(~ (uint(5u)), ~ (uint(5u)))))))))) + ((subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) * 1u))))) + ((subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(1, 0)), (int(ivec2(1, 0))) ^ 0))) % _GLF_struct_replacement_5._f2.subgroup_size)))) | (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u)), ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u))) | 0u) * 1u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) << 0u)), min(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u)), ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u))) | 0u) * 1u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) << 0u)), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u)), ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u))) | 0u) * 1u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) << 0u)), (workgroup_base + _GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u)), ((_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id * _GLF_struct_replacement_5._f2.subgroup_size, (_GLF_IDENTITY(subgroup_id, (subgroup_id) * 1u) * _GLF_struct_replacement_5._f2.subgroup_size) - 0u)) - 0u))) | 0u) * 1u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_struct_replacement_5._f2.subgroup_size, (_GLF_struct_replacement_5._f2.subgroup_size) << 0u))) << 0u)))))));
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)), ! (! ((_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(64.45)), bool(false))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0))))) > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      break;
     for(int _injected_loop_counter = (0 ^ _GLF_IDENTITY(1, clamp(1, 1, 1))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, 0 ^ (_injected_loop_counter)) > (_GLF_IDENTITY(0, clamp(0, 0, 0)) << _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    break;
   for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) | (1))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(3, clamp(_GLF_IDENTITY(3, (3) << 0), 3, 3)), (3) ^ 0)), _GLF_IDENTITY(0 | _GLF_IDENTITY((int(3)), _GLF_IDENTITY(min((int(3)), (int(3))), ((0 | 0) << _GLF_IDENTITY(int(5), int(5))) + (_GLF_IDENTITY(min(_GLF_IDENTITY((int(3)), 0 | ((int(3)))), (int(3))), clamp(min((int(3)), (int(3))), _GLF_IDENTITY(min((int(3)), (int(3))), min(min((int(3)), (int(3))), min((int(3)), (int(3))))), min((_GLF_IDENTITY(int(3), (true ? _GLF_IDENTITY(int(3), 0 | (int(3))) : _GLF_FUZZED(-56389)))), (_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(49700)))))))))), 0 ^ (0 | _GLF_IDENTITY((int(3)), _GLF_IDENTITY(min((int(3)), (int(3))), ((0 | 0) << _GLF_IDENTITY(int(5), int(5))) + (_GLF_IDENTITY(min(_GLF_IDENTITY((int(3)), 0 | ((int(3)))), (int(3))), clamp(min((int(3)), (int(3))), _GLF_IDENTITY(min((int(3)), (int(3))), min(min((int(3)), (int(3))), min((int(3)), (int(3))))), min((_GLF_IDENTITY(int(3), (true ? _GLF_IDENTITY(int(3), 0 | (int(3))) : _GLF_FUZZED(-56389)))), (_GLF_IDENTITY(int(3), (true ? int(3) : _GLF_FUZZED(49700))))))))))))), int(3))), clamp((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(clamp(int(3), int(3), int(3)), int(int(clamp(int(3), int(3), int(3)))))), _GLF_IDENTITY(0 | (int(3)), (_GLF_IDENTITY(0 | (int(3)), (0 | (int(3))) | (_GLF_IDENTITY(0 | (int(3)), (0 | (int(3))) >> 0)))) ^ 0)), int(3))), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 0 | (int(_GLF_IDENTITY(3, max(_GLF_IDENTITY(3, 0 ^ (3)), 3)))))) << 0))), _GLF_IDENTITY((_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(0, int(int(0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), (_GLF_IDENTITY(int(0), ~ (~ (int(0))))) | 0)) / (1 & 1)))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), ~ (~ (clamp(0, 0, 0))))))) ^ 0)), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(0), ~ (~ (int(0)))), (_GLF_IDENTITY(int(0), ~ (~ (int(0))))) | 0)) / (1 & 1)))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), ~ (~ (clamp(0, 0, 0))))))) ^ 0))) | 0)) | (int(3))), int(3))), _GLF_IDENTITY(max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3)))), (_GLF_IDENTITY(max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3)))), 0 ^ (max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3))))))) | (max((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3))), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (_GLF_IDENTITY(true, ! (! (true))) ? ~ (_GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(0), ~ (~ (int(0)))))))), 0, 0))) : _GLF_IDENTITY(_GLF_FUZZED(-87049), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(-87049), clamp(_GLF_FUZZED(-87049), _GLF_IDENTITY(_GLF_FUZZED(-87049), (_GLF_FUZZED(-87049)) | (_GLF_FUZZED(-87049))), _GLF_FUZZED(-87049))))))))) - 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3)))))))), max(_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) << 0)) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), min(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), ~ (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), (~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), min(~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))), ~ (~ (_GLF_IDENTITY(0, clamp(0, 0, 0))))))))))) + 0), (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(8214) : 0))) >> 0))))) ^ 0))) | (_GLF_IDENTITY(int(3), ~ (~ (int(3)))))), int(3)))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), ((_GLF_IDENTITY(0, clamp(0, 0, 0)))) | ((_GLF_IDENTITY(0, clamp(0, 0, 0))))), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), max(int(3), int(3))), 1 * (_GLF_IDENTITY(int(3), max(int(3), int(3)))))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))), 1, 1, (0 | 1)), ~ (~ (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (~ (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, clamp(0, 0, 0)))))) ^ 0))) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))), 1, 1, (0 | 1)), ivec4(0, 0, 0, 0) ^ (ivec4(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (_GLF_IDENTITY(int(3), max(int(3), int(3)))), 1, 1, (0 | 1)))))))))), int(3)))))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (0) / 1), 0))), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3)), (_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY((~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0, ~ (_GLF_IDENTITY(~ ((~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0), (~ ((~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0)) | (~ ((~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0)))))))) | (int(3))) >> 0)), int(3)))), (((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), ~ (~ (_GLF_IDENTITY(clamp(0, 0, 0), max(clamp(0, 0, 0), _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) ^ _GLF_IDENTITY(0, (0) | (0)))))))))), (~ (_GLF_IDENTITY(0, clamp(0, 0, 0)))) ^ 0))) | (int(3))), int(3))))) >> 0))) ^ 0), _GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 | (int(_GLF_IDENTITY(3, 1 * (_GLF_IDENTITY(3, 1 * (3))))))), (_GLF_IDENTITY(int(3), _GLF_IDENTITY(0, 0 | (0)) | (int(3)))) >> 0), int(_GLF_IDENTITY(3, (_GLF_IDENTITY(3, 1 * (3))) >> 0)))), ((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (int(3))), (_GLF_IDENTITY(int(3), 0 + (int(_GLF_IDENTITY(3, (3) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))) / 1)), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(int(3), 0 + (int(3))), (_GLF_IDENTITY(int(3), 0 + (int(_GLF_IDENTITY(3, (3) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))))))) / 1)), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ivec3(1, 1, 1))), (int(_GLF_IDENTITY(ivec3(int(3), 1, 0), (ivec3(int(3), 1, 0)) / ivec3(1, 1, 1)))) * 1)), 0 + (int(3))), (_GLF_IDENTITY(int(3), 0 + (int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), ~ (~ ((3) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))))))))))) / 1))) | 0)))))), 0 | (int(3))), int(3)))) | (_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(3), int(3)))))) & -5554)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) / 1)) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), 0 ^ (int(7))), int(7)), _GLF_IDENTITY((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(17679) : _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED((~ -12166)) : _GLF_IDENTITY(int(7), (int(7)) / 1))))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), min((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(_GLF_IDENTITY(7, ~ (~ (7)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) << 0), 1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))), 1 << _GLF_IDENTITY(int(7), int(7))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) << 0), 1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))), 1 << _GLF_IDENTITY(int(7), int(7)))))) / 1) >> _GLF_IDENTITY(int(7), int(7))), int(ivec3((_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(17679) : _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED((~ -12166)) : _GLF_IDENTITY(int(7), (int(7)) / 1))))), int(7))) >> _GLF_IDENTITY(int(7), int(7)), min((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) << _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) | (int(7))), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), min(int(7), _GLF_IDENTITY(int(7), 0 | (int(7))))), int(_GLF_IDENTITY(7, ~ (~ (7)))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) << 0), 1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))), 1 << _GLF_IDENTITY(int(7), int(7))))), ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), max(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), clamp(_GLF_IDENTITY(1 << _GLF_IDENTITY(int(7), int(7)), (1 << _GLF_IDENTITY(int(7), int(7))) << 0), 1 << _GLF_IDENTITY(int(7), int(7)), 1 << _GLF_IDENTITY(int(7), int(7)))), 1 << _GLF_IDENTITY(int(7), int(7)))))) / 1) >> _GLF_IDENTITY(int(7), int(7))), 0, 0))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(34374)))) - 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (_GLF_IDENTITY(7, (_GLF_IDENTITY(7, 0 | (7))) << 0)) + 0)), int(7)), max(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) + 0)), int(7)), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) + 0)), int(7)))), _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) + 0)), _GLF_IDENTITY(int(7), (int(7)) | (int(7)))), (_GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) + 0)), int(7))) ^ 0))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)) / (1 | 0), _GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)) / (1 | 0))), int(_GLF_IDENTITY(ivec3(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)) / (1 | 0))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1), ivec3(0, 0, 0) ^ (ivec3(~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) << 0)) / (1 | 0))), ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))), 1)))))))), ~ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) - 0))))), 0 ^ (_GLF_IDENTITY(~ ((1 << _GLF_IDENTITY(int(7), int(7)))), (~ ((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, 0 ^ (7))))))) - 0))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) - 0)), min(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (int(7)))), clamp(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))), int(7))), ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), max(int(7), int(_GLF_IDENTITY(7, max(7, _GLF_IDENTITY(7, ~ (~ (7)))))))), int(7))), int(7)))) | 0), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), 0 | (int(7))), clamp(int(7), _GLF_IDENTITY(int(7), max(int(7), int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (7) << 0), 7))))), int(7))), int(7))), _GLF_IDENTITY(max((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(7), _GLF_IDENTITY(max(int(7), int(7)), (max(int(7), int(7))) >> (0 ^ 0))), int(7))), int(7))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), max(int(7), int(7))), int(7))), int(7)))), (false ? _GLF_FUZZED(74927) : max((1 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), max(_GLF_IDENTITY(int(7), 0 ^ (int(7))), _GLF_IDENTITY(int(7), (int(7)) >> 0))), clamp(int(7), _GLF_IDENTITY(int(7), max(int(7), int(7))), int(7))), int(7))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(int(_GLF_IDENTITY(7, min(7, 7))), max(int(7), int(7))), int(7))), int(7))))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), max(int(7), int(7))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(int(7), max(int(7), int(7))))), int(7))), int(7))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(_injected_loop_counter))), clamp(7, 7, 7)), 7, _GLF_IDENTITY(7, (7) | 0)))), int(7)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), (int(7)) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, abs(0.0))))))), int(_GLF_IDENTITY(7, 0 ^ (7))))) >> _GLF_IDENTITY(int(7), int(7))))), ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, clamp(7, _GLF_IDENTITY(7, (_GLF_IDENTITY(7, max(7, 7))) >> _GLF_IDENTITY(0, (0) >> 0)), 7))))) >> _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (7) >> _GLF_IDENTITY(0, 0 ^ (0))))), min(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, clamp(7, 7, _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) >> 0)) << 0))), 7, 7))), int(7)), int(_GLF_IDENTITY(ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, clamp(7, 7, _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) >> 0)) << 0))), 7, 7))), int(7)), 1, 1), (ivec3((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) + 0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(_GLF_IDENTITY(7, clamp(7, 7, _GLF_IDENTITY(7, (_GLF_IDENTITY(7, (7) >> 0)) << 0))), 7, 7))), int(7)), 1, 1)) << (ivec3(0, 0, 0) ^ ivec3(0, 0, 0))))), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, clamp(7, 7, 7))), (int(7)) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), int(_GLF_IDENTITY(7, 0 ^ _GLF_IDENTITY((7), 0 | ((7))))))) >> _GLF_IDENTITY(int(7), int(7)))))) >> 0) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(_GLF_IDENTITY(7, (true ? 7 : _GLF_FUZZED(63378)))))) >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(7, (7) >> 0)), int(7))) | 0), int(ivec4(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)), ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (int(7)) | (int(7))))) >> _GLF_IDENTITY(int(7), int(7))) | 0), 1, 0, 0)))) ^ ((-73169 % 53154) & 0)))))) | _GLF_IDENTITY(0, int(_GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), max(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(0, clamp(0, 0, 0))), ~ (~ (int(_GLF_IDENTITY(0, clamp(0, 0, 0)))))))))))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
    continue;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6740.6770)))), float(_GLF_FUZZED(128.228)), bool(false))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       return;
      }
    }
   do
    {
     atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, int(int(_GLF_IDENTITY(64, (64) | 0)))), 4);
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, false, true, false))))))))))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), ~ (~ (int(1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), clamp(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0), _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), int(7))), ((0 >> _GLF_IDENTITY(int(7), int(7)))) - 0), (0 >> _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), bool(bvec2(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), false))))))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch)).y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))) && true)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), _GLF_IDENTITY(false, ! (! (false))) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), injectionSwitch)).y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))))) && true)))))))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), false || ((false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), false))), true), false)))))), _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) && true))))))), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))), ! (! (! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false)))))) && true))))))))))), (injectionSwitch.x > injectionSwitch.y))), false)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-896.368))), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-896.368))), sin(0.0), 1.0, abs(1.0), 0.0, 1.0)), max(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-896.368))), sin(0.0), 1.0, abs(1.0), 0.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-896.368))), sin(0.0), 1.0, abs(1.0), 0.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(737.215)), bool(false)))) * (injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false)))) || false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        barrier();
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(1, 0 ^ (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1 | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY((0), (_GLF_IDENTITY((0), clamp((0), (0), (0)))) ^ 0) ^ 0), 0, 0)), (true ? _GLF_IDENTITY(1, 0 | (1)) | _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, int(ivec3(0, 1, (1 & _GLF_IDENTITY(1, (1) | 0))))), _GLF_IDENTITY((0), (_GLF_IDENTITY((0), _GLF_IDENTITY(clamp((0), (0), (0)), (clamp((0), (0), (0))) << 0))) ^ 0) ^ 0), 0, 0)) : _GLF_FUZZED(_injected_loop_counter))))); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), true, true, true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), true, true, true))))))) && true))
      continue;
    }
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, true && (true)))))))
          continue;
         if(_GLF_DEAD(false))
          break;
         barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) && true) && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != 1, _GLF_IDENTITY(bool(bvec3(_injected_loop_counter != 1, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y))))), true)), true && (bool(bvec3(_injected_loop_counter != 1, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(subgroup_local_id + 1 < _GLF_struct_replacement_5._f2.subgroup_size)
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
          {
          }
         else
          {
           atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : virtual_gid))], read, 4, 64, 4);
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
       subgroupAll(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false));
       for(int _injected_loop_counter = (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(4), int(4))) & 79049, ((0 >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (4) / (1 & int(_GLF_ONE(1.0, injectionSwitch.y))))))) & 79049) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
        }
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), (bool(true)) && true))), false, false, true)), true && (_GLF_IDENTITY(bool(bvec4(true, false, _GLF_IDENTITY(false, bool(bvec2(false, false))), true)), true && (_GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bvec2(bool(bvec4(true, false, false, true)), false))))))), true, true, true))))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            break;
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                barrier();
              }
             else
              {
              }
             barrier();
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, false || (false)), true, false), true))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2571.3732), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(189.062)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))));
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false)))))
          barrier();
        }
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)), ((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))) - 0)))), 0 | (((_GLF_IDENTITY(1, (1) | 0) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             barrier();
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        barrier();
       atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u), virtual_gid))) << 0u)], read, 4, 64, _GLF_IDENTITY(4, max(4, 4)));
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-201.641) : injectionSwitch.y)), injectionSwitch.y))))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)));
              }
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(false))
                break;
               barrier();
              }
            }
           else
            {
            }
          }
        }
       if(_GLF_DEAD(false))
        continue;
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), false || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)), true, true))))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
