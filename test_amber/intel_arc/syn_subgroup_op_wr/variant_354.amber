#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY((false) || false, bool(bvec2(_GLF_IDENTITY((false) || false, false || ((_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(determinant(mat2(-21.75, 2.7, -9.7, -89.65))) : injectionSwitch.y)))))))) || false)), true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], float(float(injectionSwitch[1])))))))) - sin(vec2(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0))))).y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0)))).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(mat4x2(mat2(1.0) * (injectionSwitch), 1.0, 1.0, abs(1.0), 0.0, 0.0, 0.0)))).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY((true ? gl_WorkGroupID.x : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u)), (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u))) | (_GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u))))), max((_GLF_IDENTITY(true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u)), uint(uvec4(true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u)), 0u, 1u, 1u)))), _GLF_IDENTITY((true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(subgroup_id) : subgroup_id)), _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), 0u + ((subgroup_id)))) | ((subgroup_id))) ^ 0u)) << 0u))), clamp((_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u))), (uint(uint(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u)))) * 1u)))), (true ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (true))) ? gl_WorkGroupID.x : _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) << 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (0u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), 0u | (uint(2u)))))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, max(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size)), workgroup_size))) | (workgroup_size), 0u + ((workgroup_size) | _GLF_IDENTITY((workgroup_size), uint(uvec4((workgroup_size), 1u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), (workgroup_size) * _GLF_IDENTITY(1u, (1u) ^ 0u)))) * workgroup_id) >> 0u);
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) + 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), true && (bool(bvec4(false, true, true, false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) | (_GLF_IDENTITY(0u, max(0u, 0u)) ^ 0u)) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ((_GLF_IDENTITY(false, true && (false)))) && true))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, ! (! ((_GLF_IDENTITY(false, (false) || false)) && true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec4(true && (_GLF_IDENTITY(false, ! (! (false)))), false, false, false)))), ! (! (false))), (false) || false)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false)))))), false || ((_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bvec2(! (! (false)), false))))))))), (false) || false)) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (true))), false || (! _GLF_IDENTITY((_GLF_IDENTITY(true, true && (true))), ((_GLF_IDENTITY(true, true && (true)))) && true))))), ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(_GLF_IDENTITY(true, ! (! (true))), false))) && true)) && (true))), false || (! (_GLF_IDENTITY(true, true && (true))))))), ! (! (true)))) && true), true, true, true))))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, true && (false)) || (_GLF_IDENTITY((false), true && ((false))) || false)))) || false)) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))) || false)) || false)) && true))), ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))) || false)) && true) && true)) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(_GLF_IDENTITY(true, false || (true))))), true), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), (false) || false)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(false || ((false)), ! (! (false || ((false)))))))), (false) || false)) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (true), (true && (true)) && true)), ! (! (! (_GLF_IDENTITY(true && (true), _GLF_IDENTITY((true && (true)) && true, ((true && (true)) && true) || false)))))))))), false || (! (_GLF_IDENTITY(true, true && (true))))))), ! (! (true))), true, true, true))))))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), ! (! (bool((false))))))) || false)))) || false)) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), false))))))) || false)) && true) && true)) && _GLF_IDENTITY(true, (true) || false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), (true) && true), bool(bool(true))), true)), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false))), (false) || false)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) || false, bool(bvec2(_GLF_IDENTITY((false) || false, ((false) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))) && true, ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), false || (! (_GLF_IDENTITY(true, true && (true))))))), ! (! (true))), true, true, true))))))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))) || false)) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))), _GLF_IDENTITY(! (! (bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec2(false, false))))), true && (! (! (_GLF_IDENTITY(! (bool(bvec2(false, false))), true && (_GLF_IDENTITY(! (bool(bvec2(false, false))), bool(bool(! (bool(bvec2(false, false))))))))))))))))) || false)) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))) && true)) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), bool(bool(true))), true)), false))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 0u)))) / 1u), (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u))) | 0u), 0u)))) / 1u, max((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u), 1u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u))), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u), 1u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))))) / 1u, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u + (1u)) : _GLF_FUZZED(virtual_gid))), 1u, 0u)))) / 1u))) : _GLF_FUZZED(subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, (0u) / 1u) ^ (subgroup_local_id)) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-43021)))) / 1))) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))), int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))), 0 + (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))))), 1, 1, 1))))), 0, 1), (false ? _GLF_FUZZED(_GLF_IDENTITY(ivec4(-27206, 36598, 58539, _GLF_IDENTITY(-52139, ~ (~ (-52139)))), (ivec4(-27206, 36598, 58539, _GLF_IDENTITY(-52139, ~ (~ (-52139))))) | (ivec4(-27206, 36598, 58539, _GLF_IDENTITY(-52139, ~ (~ (-52139))))))) : ivec4(1, ((_GLF_IDENTITY(1, clamp(1, 1, 1)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((int(1)), int(int((int(1))))), max((_GLF_IDENTITY(int(1), (int(1)) | 0)), (_GLF_IDENTITY(int(1), (0 ^ 1) * (int(1)))))) - 0), int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))))), 0, 1)))))) % subgroup_size), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_base)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 0u))), max(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 0u))), _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 0u)))))) / 1u), (true ? _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), max(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), max(uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))), uint(uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)))))) / 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u, 1u))) | 0u), 0u)))) / 1u, max((_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u), 1u, _GLF_IDENTITY(1u, min(1u, 1u)), 0u)))) / 1u, (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec4(workgroup_base + subgroup_base, 1u, 1u, 0u)))) / 1u))) : _GLF_FUZZED(subgroup_size))) + ((_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec4(1, ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(1), ~ (~ (int(1)))), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) - 0), _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))), int(ivec4(_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) + 0)) + 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), max(1, 1))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))), 0 ^ (int(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))))))), 1, 1, 1))))), 0, 1), (false ? _GLF_FUZZED(ivec4(-27206, 36598, 58539, -52139)) : ivec4(1, ((_GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, 1)), (_GLF_IDENTITY(1, clamp(1, 1, 1))) / ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 0 + (int(7))))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(25957)))))) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)), max((int(1)), (int(1)))) - 0), int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1)))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 0 ^ (_GLF_IDENTITY(1, max(1, 1))))))))), 0, 1)))))) % subgroup_size), ((1u ^ 0u) & 1u), 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (_GLF_IDENTITY(false, false || (false))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))), (_GLF_IDENTITY(false, false || (false))) || false))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(_GLF_IDENTITY(-31.50, min(-31.50, -31.50)))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], _GLF_IDENTITY((injectionSwitch)[1], float(mat2x3((injectionSwitch)[1], 0.0, 0.0, 0.0, 0.0, 0.0)))))), bvec2(true, true))).y, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, length(vec2(0.0, 0.0)), sin(0.0), sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))))), injectionSwitch.x)) : _GLF_FUZZED(-4.0))))) > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))) || false)), ((_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y)))), ((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))) || false) || false))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(74.53)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(-4.0))))) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0), _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)), clamp(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)), min(0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - 0.0)))))) + sqrt(0.0))), (_GLF_IDENTITY(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 42.39))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (injectionSwitch.x > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ 42.39))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (! (injectionSwitch.x > injectionSwitch.y)) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], clamp(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], (true ? (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1] : _GLF_FUZZED(5.6))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]))), vec2(_GLF_FUZZED(6.8), _GLF_FUZZED(6.2)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), false))))))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, 0))))), ((_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) + 0))))))) >> _GLF_IDENTITY(0, 0 ^ (0))) | (0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true, false, false)), bool(_GLF_IDENTITY(bvec2(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true, false, false)), true), bvec2(bvec2(bvec2(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), true, false, false)), true)))))))), false))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0), (mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), injectionSwitch)), vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))))))).x > injectionSwitch.y))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) - 0)) << 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))) - _GLF_IDENTITY(vec2(0.0, 0.0), (vec2(0.0, 0.0)) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) << 0u) | 0u)))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) ^ (0u | 0u), min((subgroup_local_id) ^ (0u | 0u), (subgroup_local_id) ^ (_GLF_IDENTITY(0u, min(0u, 0u)) | 0u))))))) + 0u), (1u & 1u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)), 1u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u))))) + 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u))))) + 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u))))) + 0u) + 0u)))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) * (0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u))))) + 0u, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u))))) + 0u, ((_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u))))) + 0u) + 0u)))))), (1u & 1u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), min(_GLF_IDENTITY((subgroup_local_id), 0u | (_GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) / 1u))), _GLF_IDENTITY((subgroup_local_id), max((subgroup_local_id), (subgroup_local_id))))) ^ (0u | 0u)))), (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | _GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uint(0u), (false ? _GLF_FUZZED(workgroup_size) : uint(0u)))))))))) + 0u), (1u & 1u), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-7.9)), vec2(_GLF_FUZZED(float(false)), (injectionSwitch)[1]), bvec2(false, true)))), (true ? clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-7.9, min(-7.9, -7.9)))), vec2(_GLF_FUZZED(_GLF_IDENTITY(float(false), exp(0.0) * (_GLF_IDENTITY(float(false), float(float(float(false))))))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), ! (! (! (_GLF_IDENTITY(true, (true) || false))))))))))) : _GLF_FUZZED(injectionSwitch)))).x)), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << 0u)) >> 0u)), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ (0u | 0u)))), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(next_virtual_gid)))) / 1u) / 1u)) ^ (0u | 0u), uint(uint((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), (true ? (subgroup_local_id) : _GLF_FUZZED(next_virtual_gid)))) / 1u) / 1u)) ^ (0u | 0u)))))))) + 0u), _GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), ((1u & 1u)) >> 0u), _GLF_IDENTITY((1u & 1u), uint(uvec2(_GLF_IDENTITY((1u & 1u), _GLF_IDENTITY((_GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), clamp((1u & 1u), (1u & 1u), (1u & 1u))), (1u & 1u), (1u & 1u))), (1u & 1u)))) + 0u, min((_GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), clamp((1u & 1u), (1u & 1u), (1u & 1u))), (1u & 1u), (1u & 1u))), (1u & 1u)))) + 0u, (_GLF_IDENTITY((1u & 1u), min(_GLF_IDENTITY((1u & 1u), clamp(_GLF_IDENTITY((1u & 1u), clamp((1u & 1u), (1u & 1u), (1u & 1u))), (1u & 1u), (1u & 1u))), (1u & 1u)))) + 0u))), 1u))), (1u & 1u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), (_GLF_IDENTITY(uvec2(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), uvec2(uvec3(uvec2(1u, ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), 0u)))) << uvec2(0u, 0u)))))))))))) % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) | (_GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), ~ (~ ((4)))))))), (~ (4)), (~ (4))))))), max(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) | (_GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), ~ (~ ((4)))))))), (~ (4)), (~ (4))))))), (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) | (_GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), ~ (~ ((4)))))))), (~ (4)), (~ (4)))))))) | (_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) | (_GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), ~ (~ ((4)))))))), (~ (4)), (~ (4))))))))), _GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), ((~ (4))) | (_GLF_IDENTITY((~ (4)), clamp((~ _GLF_IDENTITY((4), ~ (~ (_GLF_IDENTITY((4), ~ (~ ((4)))))))), (~ (4)), (~ (4))))))))), _GLF_IDENTITY(64, ~ (~ (64))), 2), (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, ~ (~ (4))), 64, 2)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)));
  }
 else
  {
   subgroupAll(false);
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || false, (_GLF_IDENTITY((false), ! (! ((false)))) || false) && true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * _GLF_IDENTITY((injectionSwitch), clamp(_GLF_IDENTITY((injectionSwitch), abs(vec2(1.0, 1.0)) * ((injectionSwitch))), (injectionSwitch), (injectionSwitch)))))).y), ! (! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))))), _GLF_IDENTITY(((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, true, true, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false))))))), ! (_GLF_IDENTITY(! (((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), false)))))))), ! (! (! (((! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), bool(bvec2(bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))))))))))))) || false))), (bool(bool(_GLF_IDENTITY((! (injectionSwitch.x > injectionSwitch.y)), ((! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) || false)))) || false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))), bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))), true, false, true)))), true)))) && true), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, true)))), bool(bvec2((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), ! (! (false)))), false, false, true))))), true))), true, false, true)))), true)))) && true)) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (_GLF_IDENTITY(false, ! (! (false))) || (true)) || false)) && ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (_GLF_IDENTITY(false, bool(bool(false)))))) || false), true, _GLF_IDENTITY(false, bool(bool(false))), true)))))))) && _GLF_IDENTITY(true, (true) || false))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true)))))))), (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y))), bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED((- 9.0))), float(1.0), bool(true))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))) : _GLF_FUZZED(vec2(8.5, -8202.2857)))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 1.0, 0.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))).x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) && true))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) ? _GLF_FUZZED(acos(-0.7)) : injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED((vec2(4.3, 1.6) * mat2(mat3(6124.1216, -8.8, -64.19, 492.554, 5645.2680, -5394.7412, 70.30, 3732.0837, 338.302))))))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-34.16)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), true, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)))), true, false), false)))))) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, true && (false)))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec2(bvec2(true, true)))))), false))), (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8.0) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y)))) || false)))), (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(5264.5992))), _GLF_FUZZED(0.9)), vec2(_GLF_FUZZED(845.108), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y)))))), false, true)))) || false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, 0u ^ (read)), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)))), mat2(1.0) * (vec2(vec4(injectionSwitch, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0))))))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
