#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-69.58)), bool(false)))) / 1.0))), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-965.512)), bool(false))), injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0), 1.0), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0), 1.0), mat2(1.0) * (vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0), 1.0))))))), (false ? _GLF_FUZZED(normalize(-4.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED(-6.2), max(_GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED(-6.2), _GLF_IDENTITY(true, false || (true)) ? injectionSwitch.x : _GLF_FUZZED(-6.2))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, 1.0, 0.0, 1.0)))) + 0.0))), (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4240.0230), _GLF_FUZZED(19.85)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], max((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2)))))) - log(1.0)))) > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(normalize(-4.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2)))))) - log(1.0)))) > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(normalize(-4.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(mat4(1.0) * (vec4(injectionSwitch.x, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), min(mat4(1.0) * (vec4(injectionSwitch.x, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), mat4(1.0) * (vec4(injectionSwitch.x, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))))))))) : _GLF_FUZZED(-6.2))), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2)))))) - log(1.0)))) > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(normalize(-4.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-6.2, mix(float(_GLF_FUZZED((2.2 * 33.33))), float(_GLF_IDENTITY(-6.2, max(-6.2, -6.2))), bool(true)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-6.2)), clamp((true ? injectionSwitch.x : _GLF_FUZZED(-6.2)), _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-6.2)), ((true ? injectionSwitch.x : _GLF_FUZZED(-6.2))) - 0.0), (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2)))))) - log(1.0)))) > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (false ? _GLF_FUZZED(normalize(-4.6)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), clamp(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2))))), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-6.2)))))) - log(1.0)))) > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))), true, true, true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), true)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), injectionSwitch.y))))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) / 1.0) : _GLF_FUZZED(953.731)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), (bool(bvec4(false, true, true, false))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))), true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), true), bvec3(bvec4(bvec3(bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y)))), true), false))), true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)) && true)), true && (_GLF_DEAD(false))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))), subgroup_id, subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))) - 0.0)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y)))))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, float(_GLF_IDENTITY(float(injectionSwitch.y), clamp(float(injectionSwitch.y), float(injectionSwitch.y), _GLF_IDENTITY(float(injectionSwitch.y), min(float(injectionSwitch.y), float(injectionSwitch.y))))))))))) || false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)))) + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base))) >> 0u))) + subgroup_local_id) << 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) | 0u)) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)) | (workgroup_base + subgroup_base)))) + subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), bool(true)))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id))), 0u | (clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base))) >> 0u))) + subgroup_local_id) << 0u), _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base)), (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - (0u << _GLF_IDENTITY(uint(4u), uint(4u))))) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) | 0u)) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u)) | (workgroup_base + subgroup_base)))) + subgroup_local_id, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) << uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (false ? _GLF_FUZZED(1.0) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-0.3)), float(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x), bool(true)))))))), min(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), workgroup_base + subgroup_base))) + 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id))))));
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), (72894u & (0u | 0u)) ^ (_GLF_IDENTITY(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), ~ (~ (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size)))))), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), 0u | (((subgroup_local_id + 1) % subgroup_size))))), max(uint(uint(workgroup_base + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) * 1u)))))), _GLF_IDENTITY(uint(uint(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), max(uint(uint(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))), uint(uint(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.6, 8.5)) : injectionSwitch)).x < injectionSwitch.y, _GLF_IDENTITY(bool(bool(injectionSwitch.x < injectionSwitch.y)), bool(bool(bool(bool(injectionSwitch.x < injectionSwitch.y))))))) && true))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))) || false), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y) || false))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))) / 1u)], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if((subgroup_local_id % _GLF_IDENTITY(2, (2) ^ 0)) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch), _GLF_IDENTITY(vec2(mat2(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch), 1.0, 1.0)), (vec2(mat2(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch), 1.0, 1.0))) / vec2(1.0, 1.0))), clamp(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(_GLF_IDENTITY(1.0, float(mat4(_GLF_IDENTITY(1.0, min(1.0, 1.0)), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), sqrt(0.0), 0.0, 0.0, 0.0))), 1.0)), injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), clamp((injectionSwitch) + vec2(0.0, 0.0), _GLF_IDENTITY((injectionSwitch) + vec2(0.0, 0.0), ((injectionSwitch) + vec2(0.0, 0.0)) * mat2(1.0)), (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch) : _GLF_FUZZED(vec2(-12.10, 338.820)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))), _GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2(_GLF_FUZZED(-5010.7876), _GLF_FUZZED(744.040)), vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), bvec2(true, true)))))), injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch) : _GLF_FUZZED(vec2(-12.10, 338.820)))), log(1.0), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), vec2(mat4(vec2(mat2x3(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), (injectionSwitch.x < injectionSwitch.y)) ? clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * vec2(1.0, 1.0)), injectionSwitch) : _GLF_FUZZED(vec2(-12.10, 338.820)))), log(1.0), 0.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.7) : injectionSwitch.y)), injectionSwitch.y)), injectionSwitch.y))))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, exp(0.0), 0.0)))), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * vec2(1.0, 1.0)), injectionSwitch)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))) - vec2(0.0, 0.0)))).x > injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], 4, 64, 2), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid))], 4, 64, 2), (_GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY((virtual_gid), ~ (~ ((_GLF_IDENTITY(virtual_gid, 0u ^ (virtual_gid)))))) | (virtual_gid))], 4, 64, 2), (true ? _GLF_IDENTITY(read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), max((virtual_gid), (virtual_gid))), ~ (~ ((virtual_gid)))), (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))), min(_GLF_IDENTITY((virtual_gid), ~ (_GLF_IDENTITY(~ ((virtual_gid)), _GLF_IDENTITY(uint(uvec2(~ ((virtual_gid)), 0u)), uint(uint(uint(uvec2(~ ((virtual_gid)), 0u)))))))), _GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid))))))) >> _GLF_IDENTITY(0u, (0u) / 1u)) | (virtual_gid))], 4, 64, 2), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid), (_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid)) | 0u)))))], 4, 64, 2), ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), min(uint(2u), uint(2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u))) * _GLF_IDENTITY((atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u)))) | (virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid)))))], 4, 64, 2)), 0u ^ ((atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) / 1u)))) | (virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid)))))], 4, 64, 2))))), ~ (_GLF_IDENTITY(~ (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)))))), ((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ((~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)))))), ((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | (_GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)))))), ((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (true ? _GLF_IDENTITY((~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)))))), ((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))), 0u | ((~ (_GLF_IDENTITY((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u)))))), ((_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) >> 0u))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) : _GLF_FUZZED(subgroup_local_id)))))) | (virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid)))))], 4, 64, 2)), (~ (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid), ~ (~ (_GLF_IDENTITY((virtual_gid), ~ (~ ((virtual_gid)))) | (virtual_gid)))))], 4, 64, 2))) >> 0u))))) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) << 0u))))) / 1u), (read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(_GLF_IDENTITY((virtual_gid), (_GLF_IDENTITY((virtual_gid), ((virtual_gid)) << 0u)) / 1u), _GLF_IDENTITY(~ (~ ((virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ ((virtual_gid))), (_GLF_IDENTITY(~ (~ ((virtual_gid))), uint(uvec2(~ (~ ((virtual_gid))), 0u)))) | 0u), min(_GLF_IDENTITY(~ (~ ((virtual_gid))), (_GLF_IDENTITY(~ (~ ((virtual_gid))), uint(uvec2(~ (~ ((virtual_gid))), 0u)))) | 0u), _GLF_IDENTITY(~ (~ ((virtual_gid))), (_GLF_IDENTITY(~ (~ ((virtual_gid))), uint(uvec2(~ (~ ((virtual_gid))), 0u)))) | 0u)))) * 1u)) | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], 4, _GLF_IDENTITY(64, min(64, _GLF_IDENTITY(64, (64) / 1))), 2)) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), min((0u) | (0u), (0u) | (0u)))))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(0.0, float(mat4x2(0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0, 0.0)), 0.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), clamp(vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0), vec3(0.0, 1.0, 1.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-4054.5519, -8111.0932).x)), float(1.0), bool(true))), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0))), 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-85.34)), float(abs(1.0)), bool(true))))), 1.0, sin(0.0), 0.0, sqrt(1.0)), (mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, _GLF_IDENTITY(determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 1.0, sqrt(0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0))), sin(0.0))), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)), max(determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 1.0, sqrt(0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0))), sin(0.0))), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)), determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(8.1)), bool(false))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), clamp(sin(0.0), _GLF_IDENTITY(sin(0.0), float(mat3(sin(0.0), 1.0, sqrt(0.0), 1.0, tan(0.0), 1.0, 1.0, 1.0, 0.0))), sin(0.0))), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)))), 0.0, 0.0, _GLF_IDENTITY(abs(1.0), (false ? _GLF_FUZZED(-847.092) : abs(1.0))), 1.0, sin(0.0), 0.0, sqrt(1.0))) + mat3x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (false ? _GLF_FUZZED(-1.0) : float(_GLF_IDENTITY(mat3x4(injectionSwitch.x, 1.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9.0)), bool(false)))), 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)), 0.0, 0.0, abs(1.0), 1.0, sin(0.0), 0.0, sqrt(1.0)), (mat3x4(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8295.4904) : injectionSwitch.x)), 1.0, 0.0, 0.0, determinant(mat4(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, determinant(mat2(1.0, 0.0, 1.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 1.0, 0.0))), 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, sin(0.0), 1.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0)), 0.0, sin(0.0), 1.0, 0.0, 0.0, 1.0, abs(1.0), 0.0, 0.0)), 0.0, 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(0.8)), float(1.0), bool(true)))), 1.0, sin(0.0), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY((0.0) / 1.0, ((0.0) / 1.0) - 0.0)), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0)), (max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) / 1.0), clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5338.8600)), float(0.0), bool(true)))) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0))) - _GLF_ZERO(0.0, injectionSwitch.x))), sqrt(1.0))) + mat3x4(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) > injectionSwitch.y))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false))))) && true)), (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false))))) && true)), (injectionSwitch.x > injectionSwitch.y))), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), false, true, false))))) && true)), (injectionSwitch.x > injectionSwitch.y))), true, false))), false))), true)))))))), bool(bool(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))))).y))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, false)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, false)), bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), true, false)), false))), true))))))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true, ! (! (true))) && (! (! (false)))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)))))))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)))))))))), true))))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), true && (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), true)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! (false)))), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))), false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true)))), false, true)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false, false)), true)))), false, true))))), (_GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false, false)), true)))), false, true))))), bool(bvec3((bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec4(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)), true), bvec2(bvec2(bvec2(bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true))))))), false, false)), true)))), false, true))))), false, true)))) && true))), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (false)), true && (! (! (false)))), false, false, false)))))))))), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(_GLF_IDENTITY(9820.8945, max(9820.8945, 9820.8945)))), 0.0 + (float(_GLF_FUZZED(_GLF_IDENTITY(9820.8945, max(9820.8945, 9820.8945)))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (64) / 1), _GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) / 1))) : _GLF_FUZZED(84001), clamp(true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) / 1))) : _GLF_FUZZED(_GLF_IDENTITY(84001, (_GLF_IDENTITY(84001, clamp(_GLF_IDENTITY(84001, 0 ^ (84001)), 84001, 84001))) | (84001))), true ? _GLF_IDENTITY(4, _GLF_IDENTITY(0 + (_GLF_IDENTITY(4, (4) / 1)), clamp(0 + (_GLF_IDENTITY(4, (4) / 1)), 0 + (_GLF_IDENTITY(4, (4) / 1)), 0 + (_GLF_IDENTITY(4, (4) / 1))))) : _GLF_FUZZED(84001), true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) / 1))) : _GLF_FUZZED(_GLF_IDENTITY(84001, int(ivec3(84001, 1, 1)))))))), (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) / 1))) : _GLF_FUZZED(84001), clamp(true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), 4)), (4) / 1))) : _GLF_FUZZED(84001), true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) / 1))) : _GLF_FUZZED(84001), true ? _GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, (4) / 1))) : _GLF_FUZZED(84001)))))) >> _GLF_IDENTITY(0, (0) - 0)), (4) - 0)) << _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1)), 1)), 0)), (int(ivec3(0, 1, 0))) | (int(ivec3(0, 1, 0)))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false), false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), (bool(bvec4(false, false, false, false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-3464.7229, -93.83)))))).x), _GLF_ZERO(0.0, injectionSwitch.x))).y, 0.0 + _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) + 0.0)), 0.0, 1.0, 0.0), (true ? vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-83.79, -307.155, 44.22, 4.4)))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat3x4(mat4(mat3x4(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat3x4(-7.1, 4.0, 2375.3643, 2.0, 463.428, 7534.3552, -95.98, -7839.8727, -6.2, 894.388, 4811.1743, -0.9)) : mat3x4(mat4(mat3x4(0.0, 1.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0))))))))), _GLF_IDENTITY((true ? vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-83.79, -307.155, 44.22, 4.4))), min(_GLF_IDENTITY((true ? vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-83.79, -307.155, 44.22, 4.4))), max((true ? vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-83.79, -307.155, 44.22, 4.4))), (true ? vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-83.79, -307.155, 44.22, 4.4))))), (true ? vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-83.79, -307.155, 44.22, 4.4)))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0), (true ? vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), 0.0, 1.0, 0.0) : _GLF_FUZZED(vec4(-83.79, _GLF_IDENTITY(-307.155, clamp(-307.155, -307.155, _GLF_IDENTITY(-307.155, clamp(-307.155, -307.155, -307.155)))), 44.22, 4.4)))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true, false)))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
