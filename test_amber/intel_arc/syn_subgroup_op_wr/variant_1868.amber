#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)), ! (! (bool(bvec2(injectionSwitch.x < injectionSwitch.y, true)))))), bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), ! (! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (injectionSwitch.x < injectionSwitch.y) && true)))))))))))) && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))) && true)) && true)), true && (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), false))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), _GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), false))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), _GLF_IDENTITY(true, ! (! (true)))))))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), false, true), false))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))), _GLF_IDENTITY(true, ! (! (true))))))))))) || false), true))) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(70626u, 77338u, 174504u)))).x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), (_GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x)) * 1u), (_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x)) * 1u)) | (_GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x)) * 1u)))) << 0u));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0))) * (injectionSwitch)), 1.0, 1.0, _GLF_IDENTITY(dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, sqrt(0.0), 0.0)), dot(vec4(determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, sqrt(0.0), 0.0))), 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || ((false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), _GLF_IDENTITY(vec2(vec2(max(injectionSwitch, injectionSwitch))), clamp(vec2(vec2(max(injectionSwitch, injectionSwitch))), vec2(vec2(max(injectionSwitch, injectionSwitch))), vec2(vec2(max(injectionSwitch, injectionSwitch))))))).x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)) || _GLF_IDENTITY(false, ! (! (false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(bvec4(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(true, true && (true)), true, false)))), _GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(bool(true && (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), float(mat2x3(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(sinh(22.58)) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), sqrt(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(sinh(22.58)) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), sqrt(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(sinh(22.58)) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), sqrt(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(sinh(22.58)) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), sqrt(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (false ? _GLF_FUZZED(sinh(22.58)) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), sqrt(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y)), true, false)))))))))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), max(dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(mat3(vec2(0.0, 1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(_GLF_FUZZED(3.4)), float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), bool(true))), (false ? _GLF_FUZZED(sinh(22.58)) : dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))), sqrt(0.0), 1.0, 0.0, 1.0))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)), ! (! (bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (injectionSwitch.x > injectionSwitch.y)), false, false, true))))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (gl_WorkGroupID), (~ (gl_WorkGroupID)) << uvec3(0u, 0u, 0u)))).x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch)), vec2(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)) * ((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch))))), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch)), max((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, tan(vec2(0.0, 0.0)) + (injectionSwitch)).y, 0.0), (true ? _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], 0.0 + ((injectionSwitch)[1]))), vec2(_GLF_FUZZED(318.692), _GLF_FUZZED(8.2)), bvec2(false, false))).y, 0.0), _GLF_IDENTITY(max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0)), (false ? _GLF_FUZZED(vec2(-3.3, 7.3)) : max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), clamp(_GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch), _GLF_FUZZED(injectionSwitch)))))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), (_GLF_FUZZED(injectionSwitch)) + vec2(0.0, 0.0)))), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, 0.0))) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), max(injectionSwitch, injectionSwitch)))))))), float(vec2(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) + _GLF_ZERO(0.0, injectionSwitch.x)), 0.0), _GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(5.0, -9.5)))), vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED((- _GLF_IDENTITY(331.103, max(331.103, 331.103))))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))) : _GLF_FUZZED(injectionSwitch)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(5.0, -9.5)))), vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED((- _GLF_IDENTITY(331.103, max(331.103, 331.103))))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))) : _GLF_FUZZED(injectionSwitch)), ((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)), 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), clamp(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(vec2(5.0, -9.5)))), vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), mix(vec2(_GLF_FUZZED(-6.9), _GLF_FUZZED((- _GLF_IDENTITY(331.103, max(331.103, 331.103))))), vec2((vec2(injectionSwitch.y, 0.0))[0], (vec2(injectionSwitch.y, 0.0))[1]), bvec2(true, true))))))) : _GLF_FUZZED(injectionSwitch))) - vec2(0.0, 0.0))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, 0.0))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) / sqrt(vec2(1.0, 1.0))).y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch)))))), 1.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, 0.0 + (0.0))), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch))), max(_GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2.6, 1.0 * (2.6)))), float(0.0), bool(true)))))), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED((_GLF_IDENTITY(625.689, (true ? 625.689 : _GLF_FUZZED(-4.6))) - -659.541))), bool(false)))), max(vec2(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) / 1.0)) * round(length(normalize(vec2(1.0, 1.0))))), 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (_GLF_IDENTITY(true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0))) : _GLF_FUZZED(injectionSwitch), mix(vec2((true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0))) : _GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(8.9)), vec2(_GLF_FUZZED(734.560), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, 0.0))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_FUZZED(injectionSwitch))))[1]), bvec2(false, true)))))))))), mix(float(float(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), (true ? _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), max(vec2(injectionSwitch.y, 0.0), vec2(injectionSwitch.y, 0.0))) : _GLF_FUZZED(injectionSwitch))))), float(_GLF_IDENTITY(_GLF_FUZZED((-527.371 * -2.6)), (_GLF_FUZZED((-527.371 * _GLF_IDENTITY(-2.6, mix(float(-2.6), float(_GLF_FUZZED(_GLF_IDENTITY(-7062.3473, (false ? _GLF_FUZZED(1830.4664) : -7062.3473)))), bool(_GLF_IDENTITY(false, (false) || false))))))) / sqrt(1.0))), bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(true, ! (! (true))), false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))), true, false))))))))), (bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false)), ! (! (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), false)))))))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, true && (true)), bool(bvec4((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(482.850, -7103.6073, -7732.3636, 942.119, -74.34, 9486.6856, -77.46, 727.444, 677.512, -89.42, 4.5, -5.6, 0.3, 6.3, -374.954, 9773.1709)) : mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))))))[1]), bvec2(true, true))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(485.096, 315.383, 1745.4222, 2.4)) : mat2(1.0))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(482.850, -7103.6073, -7732.3636, 942.119, -74.34, 9486.6856, -77.46, 727.444, 677.512, -89.42, 4.5, -5.6, 0.3, 6.3, -374.954, 9773.1709)) : mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))))))[1]), bvec2(true, true))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(485.096, 315.383, 1745.4222, 2.4)) : mat2(1.0))))).x, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(482.850, -7103.6073, -7732.3636, 942.119, -74.34, 9486.6856, -77.46, 727.444, 677.512, -89.42, 4.5, -5.6, 0.3, 6.3, -374.954, 9773.1709)) : mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))))))[1]), bvec2(true, true))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(485.096, 315.383, 1745.4222, 2.4)) : mat2(1.0))))).x, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(482.850, -7103.6073, -7732.3636, 942.119, -74.34, 9486.6856, -77.46, 727.444, 677.512, -89.42, 4.5, -5.6, 0.3, 6.3, -374.954, 9773.1709)) : mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))))))[1]), bvec2(true, true))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(485.096, 315.383, 1745.4222, 2.4)) : mat2(1.0))))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], ((injectionSwitch)[1]) - 0.0)), bvec2(true, true)), (mix(vec2(_GLF_FUZZED(9.8), _GLF_FUZZED(6656.4843)), vec2((injectionSwitch)[0], (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4(482.850, -7103.6073, -7732.3636, 942.119, -74.34, 9486.6856, -77.46, 727.444, 677.512, -89.42, 4.5, -5.6, 0.3, 6.3, -374.954, 9773.1709)) : mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), _GLF_IDENTITY(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), clamp(dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(length(0.0), 0.0), vec2(1.0, 1.0))))), round(length(normalize(vec2(1.0, 1.0)))), 0.0, 1.0, 1.0, 0.0))))))[1]), bvec2(true, true))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(485.096, 315.383, 1745.4222, 2.4)) : mat2(1.0))))).x))), float(_GLF_FUZZED(-859.277)), bool(false)))) + 0.0) > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))) && _GLF_IDENTITY(true, true && (true)), false, false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))
      return;
     return;
    }
   return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0) < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)), vec2(injectionSwitch[0], injectionSwitch[1])).y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(930.014)), float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)).y), bool(true))))))), false, true))) && true))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
       if(_GLF_DEAD(false))
        break;
      }
     continue;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      break;
     return;
    }
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(float(_GLF_FUZZED((- -4.6))), max(_GLF_IDENTITY(float(_GLF_FUZZED((- -4.6))), mix(float(_GLF_FUZZED(7564.2605)), float(float(_GLF_FUZZED((- -4.6)))), bool(true))), float(_GLF_FUZZED((- -4.6))))), bool(false)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        break;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6.8)), bool(false))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       continue;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))
    continue;
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(0u + (workgroup_base), clamp(0u + (workgroup_base), 0u + (workgroup_base), _GLF_IDENTITY(0u + (workgroup_base), 0u | (0u + (workgroup_base))))))) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, bool(bool(true))) ? 0u : _GLF_FUZZED(147556u)))) + subgroup_id * subgroup_size + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (_GLF_IDENTITY(~ (1), (~ (1)) >> 0)) + (0 >> _GLF_IDENTITY(int(7), int(7)))))), max(1, 1))), max(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), min((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))) ^ 0u))), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | ((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)), ((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1))) << 0u))), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))), _GLF_IDENTITY(((~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1)))), (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((workgroup_id / workgroup_base)) : ((~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)), (false ? _GLF_FUZZED(workgroup_base) : ~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, (1u) | 0u))))))) + 1)))))) / 1u), ((~ ((subgroup_local_id + 1)))) | (_GLF_IDENTITY((~ ((subgroup_local_id + 1))), max(_GLF_IDENTITY((~ ((subgroup_local_id + 1))), ((~ ((subgroup_local_id + 1)))) | ((~ ((subgroup_local_id + 1))))), _GLF_IDENTITY((~ ((subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((~ ((subgroup_local_id + 1))), clamp((~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1)))))), clamp(~ (_GLF_IDENTITY((~ ((subgroup_local_id + 1))), clamp((~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY((~ ((subgroup_local_id + 1))), clamp((~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1)))))), ~ (_GLF_IDENTITY((~ ((subgroup_local_id + 1))), clamp((~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1))))))))))))))) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u)) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1))), ~ _GLF_IDENTITY(_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, ~ (~ (1u)))) + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1))))))), ((_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1)))))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1)))))))))) | ((~ ((subgroup_local_id + 1))))), uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, ~ (~ (1u)))) + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1))))))), ((_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1)))))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1)))))))))) | ((~ ((subgroup_local_id + 1))))), (true ? _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(1u, ~ (~ (1u)))) + 1))), (_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1))))))), ((_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1)))), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1)))))))) / 1u), (_GLF_IDENTITY(~ ((subgroup_local_id + 1)), min(~ ((subgroup_local_id + 1)), _GLF_IDENTITY(~ ((subgroup_local_id + 1)), 0u ^ (~ ((subgroup_local_id + 1)))))))))) | ((~ ((subgroup_local_id + 1))))) : _GLF_FUZZED(subgroup_size))), 1u)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - _GLF_IDENTITY(0u, (1u ^ 1u) + (0u)))), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))), ((~ ((subgroup_local_id + 1)))) | ((~ (_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (1) - 0)), ((subgroup_local_id + 1)) >> 0u)))))) % subgroup_size) << 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), 0u | ((subgroup_local_id + 1))), (subgroup_local_id + 1))), _GLF_IDENTITY(~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id)))) | ((subgroup_local_id))) / 1u) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id)))) | ((subgroup_local_id))) / 1u) + 1, min(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id)))) | ((subgroup_local_id))) / 1u) + 1, _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id)))) | ((subgroup_local_id))) / 1u) + 1))) ^ 0u)))), ((~ ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)))) + 1)))) | ((~ ((subgroup_local_id + 1))))), (~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), max(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), (subgroup_local_id)))) | ((subgroup_local_id))) / 1u) + 1))), (_GLF_IDENTITY((~ ((subgroup_local_id + 1))), max((~ ((subgroup_local_id + 1))), _GLF_IDENTITY((~ ((subgroup_local_id + 1))), min((~ ((subgroup_local_id + 1))), (~ ((subgroup_local_id + 1)))))))) | ((~ (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u ^ ((subgroup_local_id + 1)), uint(uvec3(0u ^ ((subgroup_local_id + 1)), 1u, 1u))))))))) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(0u, min(0u, 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1), 0u, 0u, 1u), max(uvec4((subgroup_local_id + 1), 0u, 0u, 1u), uvec4((subgroup_local_id + 1), 0u, 0u, 1u)))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (uint(_GLF_IDENTITY(uvec4((subgroup_local_id + 1), 0u, 0u, 1u), max(uvec4((subgroup_local_id + 1), 0u, 0u, 1u), uvec4((subgroup_local_id + 1), 0u, 0u, 1u))))))))), (subgroup_local_id + 1))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1))), ((~ ((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, 0 ^ (1)), max(1, 1))) / 1))))) | ((~ ((subgroup_local_id + 1))))))) << 0u) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false))), bool(_GLF_IDENTITY(bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false)))), (bool((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false))))) || false)))), true, true)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)) || false)))), true, true))))), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false)), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 0.0, 1.0))), injectionSwitch.y)), (injectionSwitch.x > injectionSwitch.y) && true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(false, (false) || false), true), true))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))) && true), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true)))), true && (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), true)), (bool(bvec2(_GLF_DEAD(false), true))) && true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-9121) : 4)), 64, 0);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), uint(_GLF_IDENTITY(uvec3(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec3(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u, 0u)), (~ (uvec3(clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id), 1u, 0u))) >> uvec3(0u, 0u, 0u))))))))) + 1 < subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u) + 1 < subgroup_size) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, bool(bool((true) && true)))), false, false, true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) << 0u))) + 1 < subgroup_size), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u))) + _GLF_IDENTITY(1, min(1, 1)) < _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 1u * (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0u)))), bool(bvec2(bool(bool((subgroup_local_id + 1 < subgroup_size))), false)))) && _GLF_IDENTITY(true, ! (! (true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, (64) ^ 0))), 4);
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) + 0), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) + 0), (_GLF_IDENTITY(64, (_GLF_IDENTITY(64, 1 * (64))) + 0)) ^ 0), 1)))) ^ 0), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4269.2257)), bool(false))), injectionSwitch.x)) > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, false))), (_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))).x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(0.0), 0.0), mat2x3(mat4x3(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(0.0), 0.0)))))))) > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(0.0), 0.0), mat2x3(mat4x3(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(0.0), 0.0)))))))) > injectionSwitch.y)))))))), (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), sqrt(0.0), 0.0), mat2x3(mat4x3(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(0.0), 0.0)))))))) > injectionSwitch.y))))), ! (! ((! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(423.571)), bool(false)))))))), sqrt(0.0), 0.0), mat2x3(mat4x3(mat2x3(injectionSwitch.x, 0.0, 1.0, 1.0, sqrt(0.0), 0.0)))))))) > injectionSwitch.y))))))))) || false)))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y)))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))) || false)))
        return;
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            return;
          }
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - log(1.0)))).y, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - log(1.0)))).y, (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - log(1.0)))).y : _GLF_FUZZED(-59.33)))), float(_GLF_FUZZED(450.031)), bool(false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, false, true)))) || false)))), true))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(154.175)), vec2(_GLF_FUZZED(vec2(96.51, -1657.7913).g), (injectionSwitch)[1]), bvec2(false, true))).x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), false || (_GLF_DEAD(false))))) || false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0))), mix(float(_GLF_FUZZED(6.0)), float(min(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY(0.0, 1.0 * (0.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0)))), mix(float(_GLF_FUZZED(-74.50)), float(_GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, tan(0.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) - _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(injectionSwitch)))) / vec2(1.0, 1.0))))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0), max((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))) * mat2(1.0))) - vec2(0.0, 0.0), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) - vec2(0.0, 0.0))))) + vec2(0.0, _GLF_IDENTITY(0.0, float(mat4x3(0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), log(1.0), 0.0, 1.0))))).y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       subgroupAll(true);
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || (false)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((vec2(-8.9, 5.1).t / -6.5)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-2764.1138)), bvec2(true, false))).x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), clamp(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), vec2(mat2(injectionSwitch, sin(0.0), 1.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0), ((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0)) + vec2(0.0, 0.0)), max(_GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0), ((vec2(_GLF_IDENTITY(mat2(injectionSwitch, sin(0.0), 1.0), transpose(transpose(mat2(injectionSwitch, _GLF_IDENTITY(sin(0.0), max(_GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0))), sin(0.0))), 1.0)))))) * mat2(1.0)) * mat2(1.0)), (vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0))))))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-796.260), mix(_GLF_IDENTITY(float(_GLF_FUZZED(-796.260)), float(mat3(float(_GLF_FUZZED(-796.260)), 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-9.7)), clamp(float(_GLF_FUZZED(-9.7)), float(_GLF_FUZZED(-9.7)), float(_GLF_FUZZED(-9.7)))), bool(false))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), clamp(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), vec2(mat2(injectionSwitch, sin(0.0), 1.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), _GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0), max(_GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0), ((vec2(mat2(injectionSwitch, sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 1.0))) * mat2(1.0)) * mat2(1.0)), (vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0))))))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-796.260), mix(float(_GLF_FUZZED(-796.260)), float(_GLF_FUZZED(-9.7)), bool(false))))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), clamp(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), sin(0.0), 1.0)), _GLF_IDENTITY(vec2(mat2(injectionSwitch, sin(0.0), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2(1.0, determinant(mat2(exp(0.0), 0.0, exp(0.0), 1.0)), length(vec2(0.0, 0.0)), 0.0)))) - _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), max(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), mix(float(_GLF_FUZZED((62.40))), float(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))), bool(true))), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))))), max(_GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0), ((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0)) * mat2(1.0)), (vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0))), (_GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, sqrt(0.0) + (1.0)), (1.0) - _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), max(dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0)), dot(vec4(1.0, 0.0, 1.0, 0.0), vec4(0.0, 1.0, 0.0, 1.0))))))), max(_GLF_IDENTITY((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0), ((vec2(mat2(injectionSwitch, sin(0.0), 1.0))) * mat2(1.0)) * mat2(1.0)), (vec2(mat2(injectionSwitch, _GLF_IDENTITY(sin(0.0), mix(float(_GLF_FUZZED(1.3)), float(_GLF_IDENTITY(sin(0.0), (true ? sin(0.0) : _GLF_FUZZED(dot(vec2(-26.41, -60.26), injectionSwitch))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0))) * mat2(1.0)))) * mat2(1.0)))))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-796.260), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-796.260)), float(_GLF_FUZZED(-9.7)), bool(false)), (false ? _GLF_FUZZED(-4.5) : mix(float(_GLF_FUZZED(-796.260)), float(_GLF_FUZZED(-9.7)), bool(false))))))))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             return;
            }
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(mat4(min(injectionSwitch, injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, abs(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), 1.0, 1.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), clamp(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(-4.3), (vec4(1.0, 0.0, 1.0, 1.0))[1], (vec4(1.0, 0.0, 1.0, 1.0))[2], (vec4(1.0, 0.0, 1.0, 1.0))[3]), vec4((vec4(1.0, 0.0, 1.0, 1.0))[0], _GLF_FUZZED(89.27), _GLF_FUZZED((95.51 + 2.3)), _GLF_FUZZED(-8.2)), bvec4(true, false, false, false))), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), min(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 1.0), (true ? vec4(1.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(vec4(5.6, -549.413, -7.9, -8.0)))), vec4(1.0, 0.0, 1.0, 1.0))), vec4(1.0, 0.0, 1.0, 1.0))))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0)))).y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) && true)))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4x3(injectionSwitch, 1.0, 1.0, sqrt(0.0), _GLF_IDENTITY(1.0, min(1.0, 1.0)), sqrt(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), transpose(transpose(mat4x3(injectionSwitch, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((5.7)) : 1.0)), _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), sqrt(0.0), 1.0, _GLF_IDENTITY(sqrt(0.0), clamp(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (false ? _GLF_FUZZED(-16.28) : sqrt(0.0))), sqrt(0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.7))) > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))) || false)))))))), true, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true, true)), true, false))), false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat3(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))) * mat2(1.0), 0.0, 0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5746.4610)), float(0.0), bool(true))), length(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(ceil(5884.1294)) : 0.0)), 0.0, 0.0), vec3(_GLF_IDENTITY(mat4(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-4.3))), 0.0, 0.0), (vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-30.15))), 0.0)) * vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(vec2(-1.8, _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, (4.6) / 1.0)) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)))).t, min(_GLF_IDENTITY(vec2(-1.8, _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, (4.6) / 1.0)) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)))).t, float(vec4(vec2(-1.8, _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, (4.6) / 1.0)) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)))).t, 1.0, 1.0, sqrt(1.0)))), vec2(-1.8, _GLF_IDENTITY(4.6, (_GLF_IDENTITY(4.6, (4.6) / 1.0)) - determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)))).t)))), bool(false)))), 1.0, 0.0, cos(0.0), 0.0, 0.0), transpose(transpose(mat4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-5211.6194, 4.7, 1.4)) : vec3(0.0, 0.0, 0.0))), (vec3(0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), min(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))), mix(vec3(_GLF_FUZZED(-8.3), ((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))))[1], _GLF_FUZZED(99.39)), vec3(((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))))[0], _GLF_FUZZED(-967.105), ((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))))[2]), bvec3(true, false, true))) * vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(1.0, 1.0, 1.0) * ((_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-33.37)), float(0.0), bool(true)))), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)), min(vec3(1.0, 1.0, 1.0) * ((_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-33.37)), float(0.0), bool(true)))), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)), vec3(1.0, 1.0, 1.0) * ((_GLF_IDENTITY(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-33.37)), float(0.0), bool(true)))), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)))))), vec3(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-5211.6194, 4.7, 1.4)) : vec3(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4607.4399)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 0.0))), (vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)))), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-5211.6194, 4.7, 1.4)) : vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)))), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-5211.6194, 4.7, 1.4), vec3(mat2(vec3(-5211.6194, 4.7, 1.4), 1.0)))) : vec3(0.0, 0.0, 0.0))), (vec3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, (0.0) - sin(0.0)))), 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))) * vec3(1.0, 1.0, 1.0)))), 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 0.0, cos(0.0), 0.0, 0.0))))))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false, false || ((! (_GLF_DEAD(false))) || false)))), true && (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && (! (false)))))))))) || false, _GLF_IDENTITY(false || ((! (_GLF_DEAD(false))) || false), (_GLF_IDENTITY(false || ((! (_GLF_DEAD(false))) || false), ! (! (false || ((! (_GLF_DEAD(false))) || false))))) && true)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), false || (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! (false)), bool(bool((! (false))))))))))))) || false, false || ((! _GLF_IDENTITY((_GLF_DEAD(false)), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3((_GLF_DEAD(false)), false, true)))) && true)) || false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.6), _GLF_FUZZED(-3.2)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
