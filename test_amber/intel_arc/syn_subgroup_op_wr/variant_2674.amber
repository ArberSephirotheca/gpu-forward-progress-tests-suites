#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint virtual_gid = workgroup_base + subgroup_id * subgroup_size + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 for(int _injected_loop_counter = _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))), _GLF_IDENTITY(int(ivec2((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))), 1)), min(int(ivec2((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))), 1)), int(ivec2((0 >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), 1 * (int(7))))), 1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
      continue;
     break;
    }
   if(_GLF_DEAD(false))
    return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(subgroup_local_id + 1 < subgroup_size)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
        {
         return;
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | (0 >> _GLF_IDENTITY(int(7), int(7))))); _injected_loop_counter --)
          {
           return;
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 22:
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(4), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(false))
                  return;
                 ivec4(-68060, 19744, 91661, -20847);
                }
              }
            }
           else
            {
            }
          }
        }
       case 0:
       case 62:
       if(_GLF_DEAD(false))
        return;
       case 69:
       case 96:
       case 81:
       case 44:
       case 92:
       if(_GLF_DEAD(false))
        return;
       do
        {
         switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))))
          {
           case 0:
           case 72:
           case 54:
           case 3:
           case 21:
           if(_GLF_DEAD(false))
            return;
           break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (69525 & 0)); _injected_loop_counter --)
                {
                 return;
                }
              }
            }
           default:
           1;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
       break;
       case 2:
       do
        {
        }
       while(_GLF_WRAPPED_LOOP(false));
       default:
       1;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(0))
      {
       case 3:
       uvec3(162360u, 55959u, 84377u);
       case 0:
       case 42:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       case 16:
       case 92:
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       case 6:
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          return;
         for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               return;
              }
             else
              {
              }
             if(_GLF_DEAD(false))
              return;
            }
          }
         if(_GLF_DEAD(false))
          break;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         switch(_GLF_SWITCH(0))
          {
           case 26:
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            break;
           mat3x2(939.063, 64.25, -3.7, 244.218, 324.932, -658.887);
           if(_GLF_DEAD(false))
            return;
           case 0:
           case 77:
           case 15:
           case 93:
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 22:
               if(_GLF_DEAD(false))
                break;
               case 53:
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               case 77:
               case 42:
               case 61:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 return;
                }
               case 75:
               case 73:
               for(int _injected_loop_counter = (0 | int(_GLF_ZERO(0.0, injectionSwitch.x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     return;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
               default:
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               1;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
            }
           else
            {
            }
           case 79:
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
           break;
           if(_GLF_DEAD(false))
            break;
           default:
           for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               1;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                {
                 return;
                }
              }
            }
          }
        }
       case 50:
       case 34:
       if(_GLF_DEAD(false))
        return;
       subgroupAll(false);
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          return;
        }
       break;
       case 84:
       if(_GLF_DEAD(false))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), ~ (~ (int(5))))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          return;
        }
       while(true)
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          {
           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), int(6)))))
            {
             case 65:
             int _GLF_SWITCH_6_0v[36], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v;
             case 0:
             case 49:
             if(_GLF_DEAD(false))
              continue;
             case 48:
             continue;
             case 79:
             if(_GLF_DEAD(false))
              break;
             case 31:
             if(_GLF_DEAD(false))
              continue;
             break;
             default:
             for(int _injected_loop_counter = (0 & int(-6.8)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               1;
              }
            }
          }
         ivec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
         if(_GLF_DEAD(false))
          continue;
         do
          {
           if(false)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               continue;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 continue;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
               switch(_GLF_SWITCH(0))
                {
                 case 5:
                 vec4(2717.0509, -57.97, -7.8, 1.6);
                 if(_GLF_DEAD(false))
                  return;
                 case 0:
                 case 11:
                 case 63:
                 case 14:
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, 0 ^ (0))); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 break;
                 case 20:
                 mat3x4 _GLF_SWITCH_4_0v;
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(false))
              return;
             do
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 49:
                   -79605;
                   case 0:
                   case 44:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         switch(_GLF_SWITCH((0 & 56142)))
                          {
                           case 0:
                           case 53:
                           case 82:
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                           case 18:
                           case 5:
                           case 29:
                           case 33:
                           return;
                           break;
                           if(_GLF_DEAD(false))
                            break;
                           case 65:
                           do
                            {
                             bvec4(true, true, false, true);
                            }
                           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                           case 94:
                           int _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v[73], _GLF_SWITCH_6_2v;
                           default:
                           1;
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > ((0 >> _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              return;
                            }
                          }
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     do
                      {
                       do
                        {
                        }
                       while(((-0.6 - mat3(-188.035, 77.62, -8.8, 6156.4900, 6.5, -665.685, 9.0, -4.6, -391.864)) == mat3(mat4x2(-1.2, -96.55, 2262.2502, 783.314, 5.6, -69.77, -6.3, 512.778))));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                    }
                   else
                    {
                    }
                   break;
                   default:
                   1;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               mat4x2(exp2(9.5));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             vec2 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if((bvec2(true, true) != bvec2(false, false)))
              {
               if(_GLF_DEAD(false))
                break;
               mat3x2 _GLF_SWITCH_0_4v;
               uvec3 _GLF_SWITCH_0_5v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
                        return;
                      }
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 break;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               bvec4 _GLF_SWITCH_0_6v;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 _GLF_SWITCH_0_4v;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 continue;
                }
               mat4x3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                break;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 do
                  {
                   bvec3(false);
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  break;
                 ivec4(-88595, -20222, -32153, 96635);
                }
               vec3 _GLF_SWITCH_0_9v[62], _GLF_SWITCH_0_10v[83], _GLF_SWITCH_0_11v;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   do
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       -1.1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                continue;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 bvec3(true, false, true);
                }
               ;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                   break;
                  }
                }
               else
                {
                 bvec3(true, false, false);
                }
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(false))
                break;
               do
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 0)); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 56:
                       bvec2 _GLF_SWITCH_6_0v;
                       case 51:
                       _GLF_SWITCH_0_11v;
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          return;
                         continue;
                        }
                       case 0:
                       case 82:
                       case 11:
                       case 36:
                       case 7:
                       case 16:
                       case 30:
                       return;
                       break;
                       case 40:
                       do
                        {
                         uvec2(24996u, 3019u);
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                       case 89:
                       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                        return;
                       uvec4(31121u, 41715u, 194786u, 182791u).s;
                       default:
                       1;
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  return;
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
              }
             do
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 76:
                 case 68:
                 case 88:
                 case 31:
                 case 4:
                 case 95:
                 case 47:
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (true ? int(0) : _GLF_FUZZED(54055)))))); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 break;
                 default:
                 1;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
             for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
              {
               mat2x3(5.1, -6.3, 4.9, 8.1, -8.1, -7302.8966);
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              break;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               mat2x3(1945.2977, 9.6, 132.053, -0.9, -1656.0919, 7750.5691);
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 86:
                 if(_GLF_DEAD(false))
                  break;
                 case 54:
                 case 41:
                 case 38:
                 if(_GLF_DEAD(false))
                  break;
                 case 33:
                 case 29:
                 if(_GLF_DEAD(false))
                  continue;
                 case 28:
                 if(_GLF_DEAD(false))
                  return;
                 break;
                 case 77:
                 for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   (ivec4(79431, 19240, 86825, -34248) << min((ivec4(-18987, -62983, 4037, -4600) % ivec4(41194, 32088, 47735, -72977)), -49893));
                  }
                 if(_GLF_DEAD(false))
                  return;
                 case 23:
                 ;
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  break;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         if(true)
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                  }
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               break;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 60:
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 (true ? vec4(301.702, 16.51, -981.385, -476.074) : vec4(48.62, -5735.6165, -5.9, 902.637));
                 case 49:
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   continue;
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
                  {
                  }
                 else
                  {
                   mat3x2(8057.2440, -3.1, -8249.5483, 2.9, 445.767, -5.8);
                  }
                 case 0:
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   do
                    {
                     switch(_GLF_SWITCH((0 & 74696)))
                      {
                       case 54:
                       bvec2 _GLF_SWITCH_6_0v;
                       case 0:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       case 40:
                       case 5:
                       case 36:
                       case 81:
                       ;
                       break;
                       case 29:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       (greaterThan(vec2(4.2, 4489.4990), (mat4x2(6.0, 18.40, 29.74, 317.758, -207.521, -8.0, 10.54, 66.23) * vec4(42.33, 6.4, -0.0, -484.731))) != _GLF_SWITCH_6_0v);
                       case 56:
                       if(_GLF_DEAD(false))
                        return;
                       workgroup_size;
                       default:
                       1;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                 case 99:
                 uvec2(123813u, 81777u);
                 if(_GLF_DEAD(false))
                  break;
                 case 17:
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   ;
                  }
                 if(_GLF_DEAD(false))
                  return;
                 default:
                 for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         return;
                        }
                      }
                     else
                      {
                      }
                    }
                  }
                 1;
                 if(_GLF_DEAD(false))
                  {
                   do
                    {
                     return;
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  }
                }
               if(_GLF_DEAD(false))
                continue;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               continue;
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                continue;
               continue;
              }
            }
          }
         else
          {
           vec4 _GLF_SWITCH_0_12v;
           do
            {
             do
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 72:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     mat3x2 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                     case 0:
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (1 & 1))); _injected_loop_counter ++)
                      {
                       mat2x3(6334.7253, 8.3, 371.159, -7953.9345, -1.5, 606.714);
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       continue;
                      }
                     case 28:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       ;
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_DEAD(false))
                        continue;
                       for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              break;
                             continue;
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            break;
                           break;
                          }
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            return;
                          }
                         else
                          {
                          }
                        }
                       if(_GLF_DEAD(false))
                        break;
                      }
                     else
                      {
                      }
                     break;
                     default:
                     if(_GLF_DEAD(false))
                      return;
                     1;
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), 0 ^ (int(2))))) >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter ++)
                {
                 return;
                }
              }
             break;
            }
           bvec4 _GLF_SWITCH_0_13v;
           vec2 _GLF_SWITCH_0_14v[83];
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           else
            {
             while((mat4(1.5, -8.6, -81.24, -66.33, -7.6, -9.1, 201.250, -8988.2831, 8012.8487, 2.1, -8667.1763, 28.95, -1.0, 1533.1971, 47.09, 5.5) == mat4(-1.5, 3070.6005, -235.458, -1.1, -1.1, -2.1, 71.54, 902.620, -0.6, 22.71, 7.9, -3.7, 8.0, 98.40, 1.9, -81.65)))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               ivec2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[71];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   break;
                  }
                 break;
                }
               if(_GLF_DEAD(false))
                break;
               ivec3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 1 * (int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(4), int(4)))))
                  {
                   case 40:
                   mat2x4 _GLF_SWITCH_4_0v[77], _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v;
                   case 97:
                   do
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     ;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   case 0:
                   case 25:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     mat3(2330.7562, 650.115, -314.074, -105.280, -2.2, 9.6, 497.409, 1.6, -1.7);
                    }
                   else
                    {
                    }
                   case 68:
                   for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY((1 & 1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (1 & 1) : _GLF_FUZZED(67612))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | ((0 << _GLF_IDENTITY(int(7), int(7))) << _GLF_IDENTITY(int(2), int(2))))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        break;
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           if(_GLF_DEAD(false))
                            break;
                           switch(_GLF_SWITCH(0))
                            {
                             case 21:
                             for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                              {
                               (77.87 / mat3(-0.6, 1741.5778, -8541.4702, 247.750, 8.0, -118.334, 2.8, 2.9, 4.6));
                              }
                             case 0:
                             case 49:
                             case 23:
                             case 98:
                             case 46:
                             if(_GLF_DEAD(false))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(false))
                                {
                                }
                               else
                                {
                                 switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(ivec2(int(5), 1)), (int(ivec2(int(5), 1))) | 0))))))
                                  {
                                   case 94:
                                   uvec2 _GLF_SWITCH_6_0v;
                                   case 3:
                                   mat4x3(-6566.0513);
                                   case 0:
                                   case 43:
                                   case 34:
                                   case 70:
                                   case 36:
                                   case 4:
                                   case 84:
                                   return;
                                   break;
                                   case 76:
                                   subgroup_id;
                                   default:
                                   do
                                    {
                                     1;
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                }
                              }
                             case 53:
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                               if(_GLF_DEAD(false))
                                {
                                 do
                                  {
                                   return;
                                  }
                                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                }
                               if(_GLF_WRAPPED_IF_TRUE(true))
                                {
                                 return;
                                }
                               else
                                {
                                }
                              }
                             break;
                             if(_GLF_DEAD(false))
                              continue;
                             case 87:
                             mat4x2 _GLF_SWITCH_3_0v;
                             default:
                             do
                              {
                               1;
                              }
                             while(_GLF_WRAPPED_LOOP(false));
                            }
                          }
                         else
                          {
                          }
                        }
                      }
                    }
                   break;
                   default:
                   1;
                  }
                }
               do
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 29:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       (atomicCompSwap(virtual_gid, (true ? num_workgroup : subgroup_id), workgroup_base) < next_virtual_gid);
                      }
                     case 2:
                     notEqual(ivec3(-48792, -33292, -7302), _GLF_SWITCH_0_18v).rgg;
                     if(_GLF_DEAD(false))
                      break;
                     case 0:
                     case 15:
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      return;
                     case 8:
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                      }
                     else
                      {
                       (true ? uvec3(112506u, 151203u, 10347u) : uvec3(53685u, 51794u, 42072u));
                      }
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
                      continue;
                     break;
                     case 53:
                     int _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                     case 97:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (true ? _GLF_IDENTITY(int(8), (int(8)) / 1) : _GLF_FUZZED(_GLF_SWITCH_2_1v))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((0 & -86855) ^ 1)); _injected_loop_counter ++)
                      {
                       _GLF_SWITCH_0_13v;
                      }
                     default:
                     1;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               ivec2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[40];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                    break;
                   break;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 | (_GLF_IDENTITY(int(6), 1 * (int(6)))))))))
                  {
                   case 93:
                   bvec3 _GLF_SWITCH_6_0v[10];
                   case 21:
                   bvec4 _GLF_SWITCH_6_1v[40], _GLF_SWITCH_6_2v;
                   case 0:
                   case 68:
                   case 46:
                   case 4:
                   mat3(874.619, -1.8, 126.626, 1365.8432, 2.1, -21.80, 249.071, -657.336, -5.1);
                   break;
                   case 51:
                   mat4(-27.12, -7.4, 702.651, -8.5, -0.3, -25.18, -1.4, -51.85, 63.40, 1.2, -4.0, -15.56, 9.4, 2.9, 4.9, 1.0);
                   default:
                   1;
                  }
                }
              }
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
            continue;
           continue;
          }
         if(_GLF_DEAD(false))
          break;
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(true)
            {
            }
           else
            {
             do
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 do
                  {
                   findMSB(virtual_gid);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   break;
                  }
                 while(isinf(7.7))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 42:
                     if(_GLF_DEAD(false))
                      continue;
                     vec2 _GLF_SWITCH_2_0v;
                     case 0:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), int(0)))))
                        {
                         case 63:
                         mat3x2(900.345, 1508.2369, -4.2, 35.86, 1.3, -7.6);
                         if(_GLF_DEAD(false))
                          return;
                         case 0:
                         if(_GLF_DEAD(false))
                          break;
                         case 31:
                         case 60:
                         case 39:
                         case 49:
                         case 37:
                         case 25:
                         if(_GLF_DEAD(false))
                          continue;
                         case 52:
                         if(_GLF_DEAD(false))
                          continue;
                         case 99:
                         case 14:
                         ivec2(38449, 42350);
                         break;
                         case 47:
                         vec4(-549.523, -5126.9130, -226.155, 9413.1315);
                         case 22:
                         uvec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                         default:
                         1;
                         if(_GLF_DEAD(false))
                          break;
                        }
                      }
                     else
                      {
                      }
                     case 39:
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                     mat4x2(-78.50, 6.7, 8.5, -2770.9688, -6.7, 41.33, 6.2, 164.366);
                     case 8:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     case 18:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       tanh(88.30);
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     do
                      {
                       switch(_GLF_SWITCH(_GLF_IDENTITY(0, (0) >> 0)))
                        {
                         case 0:
                         case 1:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             mat4(5865.7022, 196.756, -104.960, 7.2, -3.7, -57.82, 5.2, -6392.9854, -879.003, 8437.8736, -9.7, -3.9, -9.5, 478.718, -2.5, 3293.7457);
                            }
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                         case 60:
                         if(_GLF_DEAD(false))
                          continue;
                         do
                          {
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              {
                              }
                             else
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 54:
                                 mat4x2 _GLF_SWITCH_3_0v;
                                 if(_GLF_DEAD(false))
                                  {
                                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                                    {
                                     return;
                                    }
                                   else
                                    {
                                    }
                                  }
                                 case 53:
                                 ivec2 _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[76];
                                 case 0:
                                 mat4x3(659.285, 85.51, 869.980, -2.7, 4.2, 8.1, 9.7, 89.95, -5.0, 4.6, 809.579, -157.283);
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 break;
                                 default:
                                 if(_GLF_WRAPPED_IF_FALSE(false))
                                  {
                                  }
                                 else
                                  {
                                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                    return;
                                   1;
                                  }
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(false))
                                  break;
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  break;
                                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                                  break;
                                }
                              }
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         case 88:
                         do
                          {
                           (mat4x3(-8.3, -0.5, 7.0, 8006.5213, -0.3, -9.9, 504.414, 3.4, 2.2, -769.092, -9.3, -55.43) * mat4(4.3, 17.43, 48.34, 30.61, 2.5, -533.984, 46.11, 392.350, 27.17, -745.854, 841.617, 910.628, 8124.8272, -254.545, 519.042, -354.515));
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
                         default:
                         1;
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_DEAD(false))
                      continue;
                     case 26:
                     case 83:
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       mat2x3(7126.2444, -2.9, 7.5, -7.4, 486.015, -537.339);
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                            {
                             case 97:
                             vec4 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v;
                             case 0:
                             case 46:
                             case 81:
                             case 92:
                             case 75:
                             case 44:
                             return;
                             break;
                             default:
                             1;
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       ;
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       continue;
                      }
                     case 95:
                     bool _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
                     case 20:
                     case 3:
                     case 98:
                     if(_GLF_DEAD(false))
                      return;
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         ;
                        }
                      }
                     if(_GLF_DEAD(false))
                      break;
                     break;
                     if(_GLF_DEAD(false))
                      continue;
                     default:
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                         continue;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                        }
                       continue;
                      }
                     if(_GLF_DEAD(false))
                      return;
                     1;
                    }
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 switch(_GLF_SWITCH(((0 << _GLF_IDENTITY(int(5), int(5))) << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(int(7), (int(7)) + 0)))))))
                  {
                   case 46:
                   if(_GLF_DEAD(false))
                    return;
                   bool _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v[71], _GLF_SWITCH_4_2v;
                   case 48:
                   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                    {
                     ivec4(-45935, 16256, -83258, 11910);
                    }
                   case 0:
                   case 30:
                   if(_GLF_DEAD(false))
                    break;
                   case 40:
                   case 59:
                   case 15:
                   case 43:
                   case 24:
                   case 93:
                   case 29:
                   if(_GLF_DEAD(false))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 0:
                       case 39:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           return;
                           if(_GLF_DEAD(false))
                            break;
                          }
                        }
                       case 64:
                       return;
                       if(_GLF_DEAD(false))
                        break;
                       break;
                       case 86:
                       outerProduct(trunc(vec2(8.6, 0.9)), (vec4(2495.3367, -45.45, -1.3, -3.7) / -538.804));
                       case 80:
                       ivec4(-7856, -99718, 61875, 28283);
                       default:
                       1;
                      }
                     if(_GLF_DEAD(false))
                      continue;
                    }
                   break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   default:
                   if(_GLF_DEAD(false))
                    break;
                   for(int _injected_loop_counter = ((0 | 1) | (1 & 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     1;
                    }
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     switch(_GLF_SWITCH(0))
                      {
                       case 80:
                       bool _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                       case 0:
                       case 56:
                       case 15:
                       case 64:
                       case 44:
                       case 94:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                       break;
                       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                        break;
                       case 9:
                       (mat3(-4.7, 105.370, 620.287, 5911.0583, -516.982, 1.9, -3643.4362, -45.21, -902.596) + mat3(-7.7, -1.4, 834.605, 81.61, -3.1, 2.1, 369.361, -341.030, -0.2));
                       default:
                       1;
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                  }
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               if(_GLF_DEAD(false))
                continue;
              }
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))
              {
               mat3x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v[41], _GLF_SWITCH_0_26v;
               if(_GLF_DEAD(false))
                break;
               ivec4(13291, -4873, -3365, 25568);
               5685.3029;
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               if(_GLF_DEAD(false))
                continue;
              }
             int(-6.0);
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               ;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
          }
         ivec2 _GLF_SWITCH_0_27v[72];
         if(_GLF_DEAD(false))
          break;
         if(bool(-64576))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               while(false)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                  break;
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 1:
                     mat3x2 _GLF_SWITCH_6_0v[43], _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[92];
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     case 98:
                     ;
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
                      break;
                     case 0:
                     case 60:
                     case 62:
                     case 22:
                     case 23:
                     case 47:
                     case 99:
                     case 66:
                     case 94:
                     case 42:
                     switch(_GLF_SWITCH((0 ^ 0)))
                      {
                       case 65:
                       ;
                       case 0:
                       case 49:
                       case 10:
                       case 58:
                       case 79:
                       case 90:
                       case 39:
                       case 94:
                       case 25:
                       case 1:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         do
                          {
                           for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) << 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(false))
                              return;
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               equal(ivec4(89827, -39690, -8843, -23807), ivec4(10264, 27101, -56036, -84788));
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                continue;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                            }
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       break;
                       default:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         1;
                        }
                       else
                        {
                        }
                      }
                     break;
                     if(_GLF_DEAD(false))
                      continue;
                     case 78:
                     ivec4 _GLF_SWITCH_6_3v;
                     default:
                     1;
                    }
                   if(_GLF_DEAD(false))
                    break;
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 ^ 0) ^ 1)); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 41:
                       uvec2(136264u, 170424u);
                       case 0:
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                          {
                           case 26:
                           mat3 _GLF_SWITCH_5_0v;
                           case 0:
                           case 50:
                           asin(vec3(398.280, 7.0, 243.185));
                           break;
                           case 83:
                           (virtual_gid --);
                           default:
                           1;
                          }
                        }
                       else
                        {
                        }
                       case 3:
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_WRAPPED_IF_FALSE(false))
                        {
                        }
                       else
                        {
                         if(_GLF_DEAD(false))
                          return;
                        }
                       break;
                       case 73:
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          break;
                         bvec3(false, false, true);
                        }
                       if(_GLF_DEAD(false))
                        continue;
                       case 88:
                       (mat3(8440.0385, 8556.9611, 3.8, -3.3, 5.5, -306.484, 1.2, 4.3, -0.4) * mat2x3(74.03, -2228.1187, 1.2, -33.34, -26.54, 52.80));
                       default:
                       do
                        {
                         1;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   else
                    {
                    }
                  }
                 float _GLF_SWITCH_0_28v[40], _GLF_SWITCH_0_29v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     mat4(-5.7, 2.6, -5.3, 2686.4776, -5.2, -8.0, 6024.7791, 6.0, -7.8, 63.92, -2.7, 76.20, 32.72, 3625.6432, -779.603, -67.02);
                    }
                   else
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                    }
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 else
                  {
                  }
                 mat3x4 _GLF_SWITCH_0_30v[87], _GLF_SWITCH_0_31v[38];
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 25:
                     ;
                     case 0:
                     case 37:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     case 34:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_DEAD(false))
                        break;
                       break;
                      }
                     case 42:
                     case 86:
                     case 89:
                     case 66:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6)))))); _injected_loop_counter ++)
                        {
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           do
                            {
                             if(_GLF_DEAD(false))
                              continue;
                             switch(_GLF_SWITCH(0))
                              {
                               case 68:
                               ;
                               if(_GLF_DEAD(false))
                                return;
                               case 7:
                               max(uvec2(53736u, 172622u), next_virtual_gid);
                               case 0:
                               case 33:
                               case 83:
                               case 67:
                               case 9:
                               switch(_GLF_SWITCH(0))
                                {
                                 case 90:
                                 mat3x2(-150.608, 5425.7286, -2.3, 48.95, -0.0, 1.2);
                                 case 0:
                                 case 62:
                                 case 21:
                                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  continue;
                                 case 80:
                                 case 33:
                                 case 17:
                                 acos(vec4(6.7, -9794.2891, -0.1, -9.0));
                                 break;
                                 default:
                                 1;
                                }
                               if(_GLF_DEAD(false))
                                break;
                               break;
                               case 20:
                               uvec2(87963u, 171180u);
                               default:
                               1;
                              }
                             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                              continue;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            continue;
                          }
                         else
                          {
                          }
                         if(_GLF_DEAD(false))
                          return;
                        }
                       if(_GLF_DEAD(false))
                        continue;
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     break;
                     if(_GLF_DEAD(false))
                      break;
                     case 51:
                     do
                      {
                       do
                        {
                         ;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     case 99:
                     if(_GLF_DEAD(false))
                      continue;
                     mat4x3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v[44], _GLF_SWITCH_1_2v[57];
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     default:
                     if(_GLF_DEAD(false))
                      return;
                     if(_GLF_DEAD(false))
                      break;
                     1;
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           for(           38948u;
 true; vec3(-3.1, 653.546, -3912.1883))
            {
             float _GLF_SWITCH_0_32v, _GLF_SWITCH_0_33v[61], _GLF_SWITCH_0_34v[40];
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 ^ 1)); _injected_loop_counter ++)
                    {
                     return;
                    }
                  }
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             mat2x3(vec3(72.74, 6.9, -2.4), vec3(562.543, -6.7, 5.2));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))
              {
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 (bvec4(true, true, false, false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
              }
             else
              {
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 54:
             case 76:
             for(int _injected_loop_counter = (0 | (-60897 & 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             case 7:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), int(0)))))
                {
                 case 5:
                 matrixCompMult(mat4(-79.46, -3951.7492, -2.8, -467.123, 9.4, -2.8, -6219.8936, 48.86, -2.1, 4.7, -34.11, 7.7, -0.4, -3690.4965, -18.03, -7.7), mat4(-1.1, -2253.1779, 4210.1478, 5.3, 5883.6761, 597.585, 491.339, -5423.5146, -2109.1285, -962.650, 6955.4375, -29.26, -2.0, -722.874, -5209.4421, -9.1));
                 case 0:
                 case 16:
                 case 70:
                 case 50:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 case 99:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
                  continue;
                 if(_GLF_DEAD(false))
                  continue;
                 case 26:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 for(float _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v; (mat3x4(-1771.6404, 3.1, -9.9, 81.91, 3.1, -921.210, -8.2, -718.632, -246.978, -7581.9714, -7903.8937, -9.4) == mat3x4(-49.32, -8134.0124, 455.703, 8116.1719, 73.12, 3169.7071, -74.01, -9408.9742, -62.84, 478.165, -219.795, 68.50)); equal(not(bvec2(true, false)), bvec2(false, false)))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                      {
                       return;
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                    }
                   if(_GLF_DEAD(false))
                    return;
                   false;
                   mat2x3 _GLF_SWITCH_0_37v, _GLF_SWITCH_0_38v, _GLF_SWITCH_0_39v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      break;
                      if(_GLF_DEAD(false))
                       return;
                     }
                   }
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                    }
                   if(_GLF_DEAD(false))
                    return;
                   bvec4 _GLF_SWITCH_0_40v[37], _GLF_SWITCH_0_41v, _GLF_SWITCH_0_42v[61];
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    break;
                   do
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 67:
                       if(_GLF_DEAD(false))
                        break;
                       ivec4(71167, -38697, -38431, 37021);
                       case 5:
                       injectionSwitch;
                       case 0:
                       if(_GLF_DEAD(false))
                        return;
                       case 45:
                       switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0))))))
                        {
                         case 57:
                         if(_GLF_DEAD(false))
                          continue;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         uint _GLF_SWITCH_2_0v;
                         case 0:
                         case 66:
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(1), int(1)))))
                            {
                             case 30:
                             vec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v;
                             case 0:
                             do
                              {
                               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                return;
                              }
                             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                             case 46:
                             if(_GLF_DEAD(false))
                              return;
                             break;
                             case 9:
                             mat4x3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v[53], _GLF_SWITCH_5_5v[44];
                             case 81:
                             mat3x2(2758.8214, -9325.0873, -4486.1543, 5.5, -9.5, 7472.8130);
                             default:
                             for(int _injected_loop_counter = ((0 ^ 0) << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), clamp(int(5), int(5), int(5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & (1 & int(_GLF_ONE(1.0, injectionSwitch.y))))); _injected_loop_counter ++)
                              {
                               1;
                              }
                            }
                          }
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             break;
                            }
                           break;
                          }
                         bvec2 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v, _GLF_SWITCH_0_45v[10];
                         do
                          {
                           notEqual(exp((mat2(-6187.3858, -3.9, 5.6, 870.371) * injectionSwitch)), fma(injectionSwitch, vec2(-4.0, -34.01), vec2(-33.48, -0.1)));
                           if(_GLF_DEAD(false))
                            continue;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         case 37:
                         case 19:
                         bool _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v[4], _GLF_SWITCH_0_48v;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             if(_GLF_DEAD(false))
                              return;
                             return;
                            }
                           else
                            {
                            }
                          }
                         if(_GLF_DEAD(false))
                          continue;
                         break;
                         if(_GLF_DEAD(false))
                          continue;
                         case 44:
                         if(_GLF_DEAD(false))
                          continue;
                         (+ mat3(24.78, 12.44, -1.1, -20.01, 7564.0722, -0.9, 5634.5559, 96.81, -5256.0034));
                         if(_GLF_DEAD(false))
                          return;
                         default:
                         do
                          {
                           1;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           continue;
                          }
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       case 30:
                       case 89:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(false))
                        return;
                       break;
                       default:
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_DEAD(false))
                          continue;
                         continue;
                        }
                       do
                        {
                         1;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 break;
                 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
                  return;
                 case 21:
                 bvec4 _GLF_SWITCH_3_0v[5], _GLF_SWITCH_3_1v;
                 case 31:
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  continue;
                 mat3x2 _GLF_SWITCH_3_2v;
                 default:
                 1;
                }
              }
             else
              {
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             do
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             while(_GLF_WRAPPED_LOOP(false));
             case 27:
             case 39:
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     return;
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                }
              }
             break;
             case 98:
             bvec4(true, false, false, false).zzyz;
             if(_GLF_DEAD(false))
              return;
             case 53:
             vec2 _GLF_SWITCH_3_0v[79], _GLF_SWITCH_3_1v;
             default:
             1;
            }
          }
         else
          {
          }
        }
       case 71:
       mat3 _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v;
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           return;
          }
        }
       default:
       1;
       for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), (int(4)) | (int(4)))) | (int(4))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
             if(_GLF_DEAD(false))
              return;
            }
           else
            {
            }
          }
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           atomicStore(checker[virtual_gid], read, 4, 64, 4);
          }
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)) || false)))
          return;
         if(_GLF_DEAD(false))
          break;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     do
      {
       switch(_GLF_SWITCH((0 | (0 ^ 0))))
        {
         case 51:
         if(false)
          {
           ivec2 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
           mat3x2 _GLF_SWITCH_5_2v;
           bvec4 _GLF_SWITCH_5_3v[91], _GLF_SWITCH_5_4v;
           mat3x2 _GLF_SWITCH_5_5v, _GLF_SWITCH_5_6v;
           ;
           ;
           mat4x3(-7732.4527, 359.416, -2455.3378, 4142.1940, -0.3, -213.465, 802.931, 1.1, -838.344, 802.541, -9.6, 7.5);
          }
         case 53:
         ;
         case 0:
         case 17:
         case 56:
         case 8:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
          }
         break;
         case 78:
         if(_GLF_DEAD(false))
          break;
         {
         }
         default:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            continue;
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 11:
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             case 46:
             case 94:
             case 43:
             case 45:
             case 56:
             case 29:
             if(_GLF_DEAD(false))
              return;
             1;
             break;
             case 84:
             mat3x2(-32.49, -42.97, -4.3, 3.4, -739.115, -4.7);
             if(_GLF_DEAD(false))
              continue;
             case 99:
             mat3x4(7.5);
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              return;
             default:
             1;
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
        }
      }
     subgroupAll(true);
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
     do
      {
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
