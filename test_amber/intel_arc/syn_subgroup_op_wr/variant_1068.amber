#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), false)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID), (clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)), gl_WorkGroupID)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(2u), uvec3(2u))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.7)), bool(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(117894u))), ~ (~ (_GLF_IDENTITY(subgroup_id, (true ? subgroup_id : _GLF_FUZZED(117894u))))))) | (_GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, (false ? _GLF_FUZZED(workgroup_id) : subgroup_id)), _GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u))), _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, (subgroup_id) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, ~ (~ (_GLF_IDENTITY(1u, min(1u, 1u))))))))))) + 0u))))), (subgroup_id) | 0u) * subgroup_size + subgroup_local_id, (true ? _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(3636u))), _GLF_IDENTITY(0u, max(0u, 0u))))), min(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), max((workgroup_base), _GLF_IDENTITY((workgroup_base), ((workgroup_base)) >> 0u))))) + 0u)))) + subgroup_id * subgroup_size + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, min(workgroup_base + subgroup_id * subgroup_size + subgroup_local_id, workgroup_base + subgroup_id * subgroup_size + subgroup_local_id)))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, (1u ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (_GLF_IDENTITY(uvec4(workgroup_id, 1u, 0u, (1u ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u))))), (uvec4(workgroup_id, 1u, 0u, (1u ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))) | (uvec4(workgroup_id, 1u, 0u, (1u ^ (0u >> _GLF_IDENTITY(uint(5u), uint(5u)))))))) + uvec4(0u, 0u, 0u, 0u)))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), 0u | (_GLF_IDENTITY((subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size)))), ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))) | ((subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uint(subgroup_size))))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-843.750)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-843.750)), vec2(_GLF_FUZZED(-9.6), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false))), bvec3(bvec3(bvec3(false, false, false)))))), false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)) ^ 0u, min((uint(1)) ^ 0u, _GLF_IDENTITY((uint(1)) ^ 0u, max((uint(1)) ^ 0u, (uint(1)) ^ 0u))))), _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 ^ (4)))), 4)), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 3317.2006))))) / vec2(1.0, 1.0)).y)))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true))), false, false, true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true))), false, false, true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true))), false, false, true)))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true))), false, false, true)))), false)))))))), (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true))), false, false, true)))), false), bvec2(_GLF_IDENTITY(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true))), false, false, true)))), false)), bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))), true))), false, false, true)))), false))))))))) || false))), bool(bvec4(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-8.4, 3317.2006))))) / vec2(1.0, 1.0)).y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false), ! (! _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))), false || (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))), false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0), vec2(mat2x4((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, exp(0.0), 1.0)), 1.0, 1.0)))) * mat2(1.0), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 1.0, 0.0)))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, (false) && true))) ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), max(clamp(virtual_gid, virtual_gid, virtual_gid), _GLF_IDENTITY(clamp(virtual_gid, virtual_gid, virtual_gid), (clamp(virtual_gid, virtual_gid, virtual_gid)) >> (0u << _GLF_IDENTITY(uint(0u), uint(0u)))))))))))], 4, 64, _GLF_IDENTITY(0, min(0, 0)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-89.14)), float(injectionSwitch.y), bool(true))))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-89.14)), float(injectionSwitch.y), bool(true)))))))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), ! (! (! (_GLF_IDENTITY(! (false), (! (false)) || false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(false, true, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true, false)), ! (! (bool(bvec3(bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), true, false)))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (true) || false) && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (false)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))) + 1 < subgroup_size)
  {
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | _GLF_IDENTITY(0u, uint(uvec2(0u, 1u))))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, max(_GLF_IDENTITY(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ (read))))), (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), _GLF_IDENTITY((~ (read)), ((~ (read))) >> 0u) | (~ (read)))))) | (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ (read))))))), read)), read), _GLF_IDENTITY((max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, max(read, read))))), read), (max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (read)), (~ (~ (read))) - 0u)), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, (read) << 0u)))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), read)) ^ (0u ^ 0u), (false ? _GLF_FUZZED(virtual_gid) : (max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read, ~ (~ (read))))))))), (~ (~ (_GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(read, ~ (~ (read)))))))))) ^ 0u)), read), (max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(read, min(read, read)))), (~ (~ (read))) - 0u)), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), read)) ^ (0u ^ 0u))))), min(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ _GLF_IDENTITY((read), 0u | (_GLF_IDENTITY((read), 0u ^ ((read))))))))), read)), read), (max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, max(read, read))))), read), _GLF_IDENTITY((max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (read)), (~ _GLF_IDENTITY((~ (read)), _GLF_IDENTITY(uint(uint((~ (read)))), max(uint(uint((~ (read)))), uint(uint((~ (read)))))))) - 0u)), read)), (true ? (max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (read)), (~ _GLF_IDENTITY((~ (read)), _GLF_IDENTITY(uint(uint((~ (read)))), max(uint(uint((~ (read)))), uint(uint((~ (read)))))))) - 0u)), read)) : _GLF_FUZZED(next_virtual_gid))) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (_GLF_IDENTITY(read, 0u ^ (read)))))))))), read), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(read, ~ _GLF_IDENTITY((~ (read)), ((~ (read))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(read, ~ _GLF_IDENTITY((~ (read)), ((~ (read))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(read, ~ _GLF_IDENTITY((~ (read)), ((~ (read))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), read), max(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, min(read, _GLF_IDENTITY(read, min(read, read))))))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), read)) ^ (0u ^ 0u))), _GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), _GLF_IDENTITY((~ _GLF_IDENTITY((read), uint(uvec4(_GLF_IDENTITY((read), ~ (~ ((read)))), 0u, (1u & 1u), 0u)))), max((~ _GLF_IDENTITY((read), uint(uvec4(_GLF_IDENTITY((read), ~ (~ ((read)))), 0u, (1u & 1u), 0u)))), (~ _GLF_IDENTITY((read), uint(uvec4(_GLF_IDENTITY((read), ~ (~ ((read)))), 0u, (1u & 1u), 0u)))))) | (_GLF_IDENTITY(~ (read), 0u | (~ (read))))))), _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | 0u)) | (read)))), read), (max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(read, min(_GLF_IDENTITY(read, min(read, read)), read)), max(read, read))))), read), _GLF_IDENTITY((max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (read)), (~ (~ (read))) - 0u)), read)) | (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))))))))), min((max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (read)), (~ (~ (read))) - 0u)), read)) | (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))))))))), (max(_GLF_IDENTITY(read, _GLF_IDENTITY(~ (~ (read)), (~ (~ (read))) - 0u)), read)) | (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read))), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))))))))))))), read)) ^ (0u ^ 0u))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ (read))))), read)), read), _GLF_IDENTITY((max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (read))), read), (max(_GLF_IDENTITY(read, ~ (~ (read))), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), read)), ((max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (read))), read), (max(_GLF_IDENTITY(_GLF_IDENTITY(read, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? read : _GLF_FUZZED(num_workgroup))), ~ (~ (read))), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), read))) - 0u) ^ (0u ^ 0u))), uint(uint(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read), clamp(~ (read), ~ (read), ~ (read))), (~ (read)) | (~ (read))))), read)), read), _GLF_IDENTITY((max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (read))), read), (max(_GLF_IDENTITY(read, ~ (~ (read))), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (_GLF_IDENTITY(~ (read), (true ? _GLF_IDENTITY(~ (read), 0u | (~ (read))) : _GLF_FUZZED(175127u))))), ~ (read)))))))), read), clamp(_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (read))), read), 1u * (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (read))), read), ~ (~ (max(_GLF_IDENTITY(read, ~ (~ (read))), read)))))), max(_GLF_IDENTITY(read, ~ (~ (read))), read), _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read), 1u * (max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))))), read)), ((max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (read))), read), (max(_GLF_IDENTITY(read, ~ (~ (read))), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), 0u | (~ (read))), ~ (read)))))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), 0u | (~ (read)))) / 1u)))), ((read)) >> 0u))), read)))))), read))) - 0u) ^ (0u ^ 0u)))))), (_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, max(_GLF_IDENTITY(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (_GLF_IDENTITY(~ (read), (true ? _GLF_IDENTITY(~ (read), max(~ (read), ~ (read))) : _GLF_FUZZED(virtual_gid)))) | (~ (read))))), min(_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, (read) + 0u), read, _GLF_IDENTITY(read, ~ (~ (read))))), ~ (_GLF_IDENTITY(~ (read), (~ (_GLF_IDENTITY(read, (read) - 0u))) | (~ (read))))), _GLF_IDENTITY(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ (read))))), (_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ (read)))))) + (0u | 0u)))), read)), read), (max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (~ (read))), read), (max(_GLF_IDENTITY(read, ~ (~ (read))), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((read), _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 0u, 1u))))) ^ ((read))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))))))) | (~ (read))), ~ (read))), min(_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))))))) | (~ (read))), ~ (read))), _GLF_IDENTITY(_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))))))) | (~ (read))), ~ (read))), (_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 0u ^ (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), 1u * (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u), (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)) | (uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0u)))))))) | (~ (read))), ~ (read)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), read), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - ((0u >> _GLF_IDENTITY(uint(7u), uint(7u))) << _GLF_IDENTITY(uint(2u), uint(2u)))), ~ (~ (read))), _GLF_IDENTITY(read, ~ (~ (_GLF_IDENTITY(read, (read) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), ~ (_GLF_IDENTITY(~ (uint(4u)), max(~ (uint(4u)), ~ (uint(4u))))))) - 0u)))))))), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), read)) ^ (0u ^ 0u)))) >> 0u), _GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(read, max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), (~ (read)) | (~ (_GLF_IDENTITY(read, clamp(_GLF_IDENTITY(read, min(read, read)), _GLF_IDENTITY(read, (read) << 0u), _GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, (read) | _GLF_IDENTITY((read), ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) * ((read))))))))))))), read)), read), (max(_GLF_IDENTITY(read, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(read, ~ (~ (read))), 0u ^ (_GLF_IDENTITY(read, ~ (~ (read))))), read), (max(_GLF_IDENTITY(read, ~ (~ (read))), read)) | (_GLF_IDENTITY(max(_GLF_IDENTITY(read, ~ (_GLF_IDENTITY(~ (read), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), _GLF_IDENTITY(0u, ~ (~ (0u))) | (~ (read))), ~ (read)))), ((_GLF_IDENTITY(~ (read), max(_GLF_IDENTITY(~ (read), _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), uint(uvec4(~ (0u), 0u, 1u, 1u))))) | (~ (read))), ~ (read))))) / 1u))))), read), clamp(max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(read, ~ (~ (read))), read), max(_GLF_IDENTITY(_GLF_IDENTITY(read, clamp(read, read, read)), ~ (~ _GLF_IDENTITY((read), ((read)) >> 0u))), read)))))), read)) ^ (0u ^ 0u))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
  }
 else
  {
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec3(4, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) << 0), 1, 1)))))) | 0), 1)))) << 0), _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), ((0)) >> (0 >> _GLF_IDENTITY(int(3), int(3))))) ^ (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))).y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))) || false)) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0) > injectionSwitch.y))))), false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
