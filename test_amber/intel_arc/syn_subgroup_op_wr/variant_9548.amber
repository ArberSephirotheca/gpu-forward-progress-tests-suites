#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_13 {
 bvec2 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_12 {
 mat3x4 _f0;
 ivec2 _f1;
 ivec4 _f2;
 uint _f3;
 float _f4;
 uint _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_11 {
 uvec3 _f0;
 mat2x3 _f1;
 int _f2;
 mat3x4 _f3;
 vec3 _f4;
 int _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_10 {
 mat2x3 _f0;
 mat2x3 _f1;
 ivec3 _f2;
 mat2x3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_9 {
 bool _f0;
 ivec3 _f1;
 mat2x3 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 _GLF_struct_10 _f1;
 _GLF_struct_11 _f2;
 uint workgroup_id;
 _GLF_struct_12 _f3;
 _GLF_struct_13 _f4;
} ;

struct _GLF_struct_15 {
 _GLF_struct_14 _f0;
} ;

struct _GLF_struct_6 {
 mat2x4 _f0;
 ivec4 _f1;
 mat4 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_5 {
 mat4x2 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_4 {
 vec3 _f0;
 bool _f1;
 bool _f2;
 mat2x3 _f3;
 ivec4 _f4;
 mat4 _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_3 {
 vec4 _f0;
 vec2 _f1;
} ;

struct _GLF_struct_7 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 mat3x4 _f2;
 _GLF_struct_5 _f3;
 _GLF_struct_6 _f4;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 bool _f1;
 bvec2 _f2;
 mat3x2 _f3;
 uint _f4;
 bool _f5;
 mat3x4 _f6;
} ;

struct _GLF_struct_0 {
 uint _f0;
 vec2 _f1;
 uvec4 _f2;
 uvec3 _f3;
 mat3x2 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 uint workgroup_size;
} ;

struct _GLF_struct_8 {
 _GLF_struct_2 _f0;
 _GLF_struct_7 _f1;
 mat2x4 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_ballot : enable
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(_GLF_struct_2(_GLF_struct_0(1u, _GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(vec2(mat3x4(_GLF_IDENTITY(vec2(1.0), vec2(1.0, 1.0) * (_GLF_IDENTITY(vec2(1.0), (vec2(1.0)) / vec2(1.0, 1.0)))), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), mix(vec3((vec3(0.0, 0.0, 1.0))[0], _GLF_FUZZED(_GLF_IDENTITY(float(73442), mix(float(float(73442)), float(_GLF_FUZZED(-50.89)), bool(false)))), _GLF_IDENTITY((vec3(0.0, 0.0, 1.0)), min((vec3(0.0, 0.0, 1.0)), (vec3(0.0, 0.0, 1.0))))[2]), vec3(_GLF_FUZZED((-3.2)), (vec3(0.0, 0.0, 1.0))[1], _GLF_FUZZED((-6.3 - -5013.2107))), bvec3(false, true, false)))), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(1118.2284)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), bool(true)))), abs(1.0), 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), _GLF_IDENTITY(mat2(1.0) * (vec2(mat3x4(vec2(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 1.0), max(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(1118.2284)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), bool(true)))), abs(1.0), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.4) : 0.0)), 0.0, 0.0)), 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))))))), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0) * (vec2(mat3x4(vec2(1.0), 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(1118.2284)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), bool(true)))), abs(1.0), 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0))))))), (mat2(1.0) * (vec2(mat3x4(vec2(1.0), 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), sin(sqrt(0.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(1118.2284)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), bool(true))), mix(float(_GLF_FUZZED((+ 22.64))), float(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(1118.2284)), float(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), bool(true)))), bool(true)))), abs(1.0), 0.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))))))) - log(vec2(1.0, 1.0)))))))) - vec2(0.0, 0.0)), uvec4(1u), uvec3(1u), mat3x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(1.0, min(1.0, 1.0))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(4160.2488)), bool(false)), min(mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(4160.2488)), bool(false)), mix(float(_GLF_IDENTITY(0.0, min(0.0, 0.0)) + (_GLF_IDENTITY(1.0, min(1.0, 1.0)))), float(_GLF_FUZZED(4160.2488)), bool(false))))))), ivec4(1)), _GLF_struct_1(uvec4(1u), _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, true && (true))))), bvec2(true), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(9537.8547)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) / 1.0)), 1u, true, mat3x4(1.0)), gl_WorkGroupSize.x), _GLF_struct_7(_GLF_struct_3(_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), vec4(1.0))), vec2(1.0)), _GLF_struct_4(vec3(1.0), true, true, mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), ivec4(1), _GLF_IDENTITY(mat4(1.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(1.0))), mat3x4(1.0)), mat3x4(1.0), _GLF_struct_5(mat4x2(1.0), mat4(1.0)), _GLF_struct_6(mat2x4(1.0), ivec4(1), _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(3.2)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), bool(true)))), (_GLF_IDENTITY(mat4(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat4(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat4(4.2, 5443.1190, 4829.4761, 4.4, 3.9, -100.830, -769.228, 1.4, 9.8, 61.44, -689.519, -2.9, 2135.0547, -5120.2202, -4144.7933, -2.4))))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) * (mat4(1.0)), (true ? mat4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) * (mat4(1.0)) : _GLF_FUZZED(_GLF_IDENTITY(mat4(-1478.9793, -94.07, 889.644, 3832.2430, 3974.2125, 0.3, -4574.9681, _GLF_IDENTITY(-25.31, clamp(-25.31, -25.31, -25.31)), 9151.0756, 601.891, 34.89, 7.2, 71.23, 7.9, -309.242, -9.6), transpose(transpose(mat4(-1478.9793, -94.07, 889.644, 3832.2430, 3974.2125, 0.3, -4574.9681, _GLF_IDENTITY(-25.31, clamp(-25.31, -25.31, -25.31)), 9151.0756, 601.891, 34.89, 7.2, 71.23, 7.9, -309.242, -9.6)))))))), bvec3(true))), mat2x4(1.0));
 _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.z = _GLF_struct_replacement_8._f0.workgroup_size, (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.z = _GLF_struct_replacement_8._f0.workgroup_size, ~ (~ (GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.z = _GLF_struct_replacement_8._f0.workgroup_size)))) - 0u);
 _GLF_struct_15 _GLF_struct_replacement_15 = _GLF_struct_15(_GLF_struct_14(_GLF_struct_9(true, _GLF_IDENTITY(ivec3(1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(ivec3(-10008, 30797, 88040)) : _GLF_IDENTITY(ivec3(1), (ivec3(1)) - ivec3(0, 0, 0)))), mat2x3(1.0)), _GLF_struct_10(mat2x3(1.0), mat2x3(1.0), ivec3(1), mat2x3(1.0), mat2x4(1.0)), _GLF_struct_11(uvec3(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED((subgroup_size % packSnorm2x16(vec2(6.9, 1.7)))) : 1u))), mat2x3(1.0), 1, mat3x4(1.0), vec3(1.0), 1, uvec4(1u)), gl_WorkGroupID.x, _GLF_struct_12(mat3x4(1.0), ivec2(1), ivec4(1), 1u, 1.0, 1u, mat2x4(1.0)), _GLF_struct_13(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ! (! ((! (true))))))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && (_GLF_IDENTITY((! (true)), ! (! ((! (true)))))))))))), uvec4(1u))));
 GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.y = _GLF_struct_replacement_15._f0.workgroup_id;
 uint workgroup_base = GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.z * GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.y;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_id * GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, ~ (~ (_GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_id * GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x + ((subgroup_local_id + _GLF_IDENTITY(1, (1) | (1))) % GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], 0u ^ (buf[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))) >> 0u)])))), _GLF_IDENTITY(4, 1 * (4)), 64, 0);
 if(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u, 0u + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)), (true ? (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) : _GLF_FUZZED(virtual_gid))) ^ 0u))))) + 1 < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, min(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size)).x, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, max(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))) : _GLF_FUZZED(read))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u, 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u))))) + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u, 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u))))) + 1, clamp(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u, 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u))))) + 1, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u, 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u))))) + 1, _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u, 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u))))) + 1))) | (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u, 0u + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u)) ^ 0u))))) + 1)) < _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, min(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size, GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size)).x, (true ? _GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, 1u * (_GLF_IDENTITY(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, max(GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x, GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size.x)))) : _GLF_FUZZED(read))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 49:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((_GLF_IDENTITY((1 ^ 0), ~ (_GLF_IDENTITY(~ ((1 ^ 0)), (~ ((1 ^ 0))) << 0))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), 0 + (_GLF_IDENTITY(int(2), 0 | (int(2))))), _GLF_IDENTITY(int(2), ~ (~ (int(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, min(2, 2)))))))))))); _injected_loop_counter ++)
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0), (mat4(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-400.479)), vec2(_GLF_FUZZED(-1.8), (injectionSwitch)[1]), bvec2(false, true)))) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x), 1.0, 1.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))).x < injectionSwitch.y))))
            {
             switch(_GLF_SWITCH(0))
              {
               case 55:
               float _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v[15];
               case 0:
               case 65:
               case 56:
               case 61:
               case 14:
               case 40:
               case 85:
               case 93:
               case 91:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
                  {
                   do
                    {
                     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                      {
                       case 73:
                       mat3x2(89.77, 8.6, 3006.1434, 12.86, 11.57, -5.5);
                       case 71:
                       vec2(61.61, 8.4);
                       case 0:
                       case 83:
                       switch(_GLF_SWITCH((0 ^ 0)))
                        {
                         case 0:
                         case 88:
                         case 98:
                         case 5:
                         case 3:
                         case 44:
                         case 64:
                         case 78:
                         do
                          {
                           atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) | 0u), 4, 64, 4);
                          }
                         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                         break;
                         case 73:
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                          {
                           (workgroup_base - (++ GLF_merged3_0_1_13_1_1_12_2_1_14subgroup_sizeworkgroup_idworkgroup_size));
                          }
                         default:
                         1;
                        }
                       break;
                       case 36:
                       (mat2(2.1, 17.69, 100.465, 1947.9995) - mat2(-9.5, 8.8, -5.3, -2.2));
                       case 86:
                       ;
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               break;
               case 69:
               ivec2 _GLF_SWITCH_3_3v, _GLF_SWITCH_3_4v;
               case 23:
               -85789;
               default:
               1;
              }
            }
           else
            {
            }
          }
        }
       else
        {
        }
       break;
       case 99:
       mat2x3 _GLF_SWITCH_6_0v;
       case 23:
       ivec4 _GLF_SWITCH_6_1v[30], _GLF_SWITCH_6_2v[75], _GLF_SWITCH_6_3v;
       default:
       1;
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         subgroupAll(false);
        }
      }
    }
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
    }
   else
    {
     switch(_GLF_SWITCH(0))
      {
       case 61:
       if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), true, false, false)))))
        {
         switch(_GLF_SWITCH(0))
          {
           case 0:
           case 90:
           case 14:
           case 80:
           case 89:
           case 58:
           case 61:
           if(true)
            {
             switch(_GLF_SWITCH(0))
              {
               case 0:
               case 60:
               (mat3x4(-0.5, _GLF_IDENTITY(8.1, mix(float(_GLF_FUZZED(-2364.0662)), float(8.1), bool(true))), -2086.5672, 5.9, _GLF_IDENTITY(-930.693, clamp(_GLF_IDENTITY(-930.693, max(_GLF_IDENTITY(-930.693, min(-930.693, -930.693)), -930.693)), _GLF_IDENTITY(-930.693, (-930.693) / 1.0), _GLF_IDENTITY(-930.693, min(-930.693, -930.693)))), _GLF_IDENTITY(87.01, (_GLF_IDENTITY(87.01, (false ? _GLF_IDENTITY(_GLF_FUZZED(45.44), mix(float(_GLF_FUZZED(45.44)), float(_GLF_FUZZED(1.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) : 87.01))) / 1.0), 6.0, -69.54, 421.945, 1288.5928, -8.2, 950.978) , vec3(3030.3613, 166.270, -93.41));
               case 43:
               case 58:
               uvec4 _GLF_SWITCH_0_0v[54], _GLF_SWITCH_0_1v;
               {
                ivec4 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v[78];
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
                  {
                  }
                 else
                  {
                   ;
                  }
                 mat2 _GLF_SWITCH_0_4v, _GLF_SWITCH_0_5v;
                 uvec3 _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 48:
                     mat3 _GLF_SWITCH_6_0v;
                     case 0:
                     case 15:
                     case 53:
                     case 86:
                     case 68:
                     ;
                     break;
                     case 3:
                     uvec2(99226u, 140384u);
                     case 35:
                     mat3x2 _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v, _GLF_SWITCH_6_3v;
                     default:
                     1;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 _GLF_IDENTITY(_GLF_SWITCH_0_5v, mat2(_GLF_SWITCH_0_5v[0][0], _GLF_SWITCH_0_5v[0][1], _GLF_SWITCH_0_5v[1][0], _GLF_SWITCH_0_5v[1][1]));
                 vec4 _GLF_SWITCH_0_8v[90];
                }
                do
                 {
                  switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                   {
                    case 0:
                    case 12:
                    case 86:
                    case 82:
                    case 97:
                    case 45:
                    case 39:
                    case 75:
                    case 8:
                    if(_GLF_WRAPPED_IF_FALSE(false))
                     {
                     }
                    else
                     {
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        switch(_GLF_SWITCH(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 + (0))))))
                         {
                          case 81:
                          (+ mat4x2(74.21, -1.1, -689.845, -3.5, 25.40, 1156.1012, 5932.2209, -46.46));
                          case 34:
                          mat2x3(-2.7, 743.278, -3.9, 4883.0666, 5.0, -89.28);
                          case 0:
                          case 37:
                          case 75:
                          case 24:
                          case 21:
                          case 82:
                          case 36:
                          case 57:
                          case 79:
                          case 8:
                          ;
                          break;
                          case 44:
                          (mat4(7.9, _GLF_IDENTITY(-1.5, max(_GLF_IDENTITY(-1.5, clamp(_GLF_IDENTITY(-1.5, min(-1.5, -1.5)), _GLF_IDENTITY(-1.5, (-1.5) / 1.0), _GLF_IDENTITY(-1.5, (-1.5) / 1.0))), -1.5)), -4.1, -711.150, _GLF_IDENTITY(-8.4, (-8.4) / 1.0), -5.7, -9.2, -9.9, -6193.4629, _GLF_IDENTITY(_GLF_IDENTITY(-3.8, (_GLF_IDENTITY(false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(-3.8, float(_GLF_IDENTITY(vec2(-3.8, 0.0), min(vec2(-3.8, 0.0), vec2(-3.8, 0.0))))), clamp(false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(-3.8, float(_GLF_IDENTITY(vec2(-3.8, 0.0), min(vec2(-3.8, 0.0), vec2(-3.8, 0.0))))), false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(-3.8, float(_GLF_IDENTITY(vec2(-3.8, 0.0), min(vec2(-3.8, 0.0), vec2(-3.8, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 1.0, 0.0, 0.0, 0.0))), 0.0))))))), false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(-3.8, float(_GLF_IDENTITY(vec2(-3.8, 0.0), min(vec2(-3.8, 0.0), vec2(-3.8, 0.0))))))))), (_GLF_IDENTITY(-3.8, (false ? _GLF_FUZZED(1.2) : _GLF_IDENTITY(-3.8, float(_GLF_IDENTITY(vec2(-3.8, 0.0), min(vec2(_GLF_IDENTITY(-3.8, float(vec3(_GLF_IDENTITY(-3.8, float(vec4(-3.8, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 1.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0), vec2(-3.8, 0.0)))))))) / round(length(normalize(1.0)))), 20.84, 283.754, 3.5, 8.1, -8.0, -98.00) * (mat2x4(3.6, 8.6, -0.6, 49.67, -19.06, _GLF_IDENTITY(-5132.4376, min(-5132.4376, -5132.4376)), 229.310, 9.1) * mix(_GLF_IDENTITY(vec2(2.6, 107.866), min(vec2(2.6, 107.866), vec2(2.6, 107.866))), vec2(_GLF_IDENTITY(-9937.6865, min(-9937.6865, -9937.6865)), -0.4), bvec2(true, true))));
                          case 29:
                          _GLF_IDENTITY(bvec3(false, false, true)[0], _GLF_IDENTITY(bool(bvec4(bvec3(false, false, true)[0], false, true, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(bvec3(false, false, true)[0], false, true, false)), true && (bool(bvec4(bvec3(false, false, true)[0], false, true, false))))), bool(bvec2(! (_GLF_IDENTITY(bool(bvec4(bvec3(false, false, true)[0], false, true, false)), true && (bool(bvec4(bvec3(false, false, true)[0], false, true, false))))), true))))));
                          default:
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false)))))))
                           {
                           }
                          else
                           {
                            1;
                           }
                         }
                       }
                      else
                       {
                       }
                     }
                    break;
                    default:
                    1;
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))
                 {
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bool(false))), true, true)))))
                   {
                   }
                  else
                   {
                    (true ^^ (_GLF_IDENTITY(mat3(_GLF_IDENTITY(5575.9296, max(5575.9296, 5575.9296)), -8262.2595, _GLF_IDENTITY(249.729, float(vec2(249.729, 0.0))), -7.1, 435.097, 4559.0817, _GLF_IDENTITY(_GLF_IDENTITY(-7.3, mix(float(_GLF_FUZZED(-8.9)), float(-7.3), bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-7.3, mix(float(_GLF_FUZZED(-8.9)), float(-7.3), bool(true))), float(mat4x2(_GLF_IDENTITY(-7.3, mix(float(_GLF_FUZZED(-8.9)), float(-7.3), bool(true))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-7.3, mix(float(_GLF_FUZZED(-8.9)), float(-7.3), bool(true))), float(mat4x2(_GLF_IDENTITY(-7.3, mix(float(_GLF_FUZZED(-8.9)), float(-7.3), bool(true))), 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 0.0, 0.0, 1.0)))), float(_GLF_FUZZED((-2574.3401))), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))))) * 1.0), -4151.4455, 5148.6719), _GLF_IDENTITY((mat3(5575.9296, -8262.2595, _GLF_IDENTITY(249.729, float(vec2(249.729, 0.0))), -7.1, 435.097, 4559.0817, -7.3, -4151.4455, 5148.6719)) / mat3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 0.0, 1.0), mat2(mat4x3(mat2(1.0, 0.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose((mat3(5575.9296, -8262.2595, _GLF_IDENTITY(249.729, float(vec2(249.729, 0.0))), -7.1, 435.097, 4559.0817, -7.3, -4151.4455, 5148.6719)) / _GLF_IDENTITY(mat3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.8))), 0.0, 1.0), mat2(mat4x3(mat2(1.0, 0.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), (mat3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.8))), 0.0, 1.0), mat2(mat4x3(mat2(1.0, 0.0, 0.0, 1.0)))))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) == mat3(5.4, 5061.9642, -1.4, -9.3, _GLF_IDENTITY(8.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(max(6.5, 524.109)) : _GLF_IDENTITY(8.0, max(8.0, 8.0)))), -1.1, 80.41, -4.3, -2.2)));
                   }
                 }
                for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), 0 | (_GLF_IDENTITY(_injected_loop_counter, max(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0), _GLF_IDENTITY(_injected_loop_counter, int(ivec3(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | 0), (1 | 1), 1))))))), _injected_loop_counter)) < _GLF_IDENTITY(1, int(int(1)))); _injected_loop_counter ++)
                 {
                  _GLF_IDENTITY(vec2(0.5, 4.4), max(_GLF_IDENTITY(vec2(0.5, 4.4), clamp(_GLF_IDENTITY(vec2(0.5, 4.4), min(vec2(0.5, 4.4), vec2(0.5, 4.4))), vec2(0.5, 4.4), vec2(0.5, 4.4))), _GLF_IDENTITY(vec2(0.5, 4.4), _GLF_IDENTITY(_GLF_IDENTITY((vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))), (false ? _GLF_FUZZED(vec2(0.4, 92.01)) : (vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))))), clamp(_GLF_IDENTITY((vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))), ((vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1))))) / vec2(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(vec2(0.5, 4.4), clamp(vec2(0.5, 4.4), vec2(0.5, 4.4), vec2(0.5, 4.4)))) + _GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))) ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))), min((vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))), (vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))))), _GLF_IDENTITY((vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(98.12)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))), max(_GLF_IDENTITY((vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))), max((vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(_GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))), 0.0, exp(log(1.0)), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9390.2319))), 0.0)), 0.0, 0.0)), 1.0, 0.0, determinant(mat4(1.0, 0.0, length(0.0), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))), (vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(_GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)), 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))))), (vec2(0.5, 4.4)) + _GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(-5.4, 5.1)))))))))));
                 }
                for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      do
                       {
                        mat3x2(220.282, 307.067, -26.08, 1.9, -2066.5370, 8.8);
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
                           {
                            switch(_GLF_SWITCH(0))
                             {
                              case 0:
                              case 1:
                              case 69:
                              case 10:
                              case 91:
                              case 60:
                              (inversesqrt(_GLF_IDENTITY(vec4(4772.8973, -86.57, -196.564, -7.9), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec4(4742.9127, 2.5, -4597.0104, _GLF_IDENTITY(-79.82, (true ? _GLF_IDENTITY(-79.82, clamp(-79.82, -79.82, -79.82)) : _GLF_FUZZED(-465.606)))), mix(vec4(_GLF_FUZZED(-4.0), _GLF_FUZZED((-6.3 / float(85226u))), (vec4(4742.9127, 2.5, -4597.0104, _GLF_IDENTITY(-79.82, (true ? _GLF_IDENTITY(-79.82, clamp(-79.82, -79.82, -79.82)) : _GLF_FUZZED(-465.606)))))[2], (vec4(4742.9127, 2.5, -4597.0104, _GLF_IDENTITY(-79.82, (true ? _GLF_IDENTITY(-79.82, clamp(-79.82, -79.82, -79.82)) : _GLF_FUZZED(-465.606)))))[3]), vec4((vec4(4742.9127, 2.5, -4597.0104, _GLF_IDENTITY(-79.82, (true ? _GLF_IDENTITY(-79.82, clamp(-79.82, -79.82, -79.82)) : _GLF_FUZZED(-465.606)))))[0], (vec4(4742.9127, 2.5, -4597.0104, _GLF_IDENTITY(_GLF_IDENTITY(-79.82, (_GLF_IDENTITY(-79.82, clamp(-79.82, -79.82, -79.82))) / 1.0), (true ? _GLF_IDENTITY(-79.82, clamp(-79.82, -79.82, -79.82)) : _GLF_FUZZED(-465.606)))))[1], _GLF_FUZZED(94.74), _GLF_FUZZED((true ? 37.26 : -3.7))), bvec4(true, true, false, false)))) : vec4(4772.8973, -86.57, -196.564, -7.9)))) * mat2x4(1228.7737, -765.450, -42.12, -9886.2573, 1.1, 4.0, 4.9, -508.377));
                              break;
                              case 11:
                              ;
                              case 65:
                              do
                               {
                                (bvec2(false, false));
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              default:
                              if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec2(_GLF_WRAPPED_IF_FALSE(false), true))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! (_GLF_WRAPPED_IF_FALSE(false)))))))
                               {
                               }
                              else
                               {
                                1;
                               }
                             }
                           }
                          else
                           {
                           }
                         }
                        else
                         {
                         }
                        vec4 _GLF_SWITCH_0_9v[8], _GLF_SWITCH_0_10v[26];
                        bvec4 _GLF_SWITCH_0_11v, _GLF_SWITCH_0_12v;
                       }
                      while(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), ! (! (bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))));
                     }
                    else
                     {
                     }
                   }
                 }
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  do
                   {
                    _GLF_SWITCH_0_1v;
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                 }
                (_GLF_IDENTITY(_GLF_IDENTITY(ivec2(-39615, -10259) - -8239, (ivec2(-39615, -10259) - -8239) * ivec2(1, 1)), (_GLF_IDENTITY(ivec2(-39615, -10259) - -8239, (ivec2(-39615, -10259) - -8239) * ivec2(1, 1))) >> ivec2(0, 0)));
                reflect(vec2(-389.140, -72.82), _GLF_IDENTITY((injectionSwitch + -671.674), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)))) + -671.674, vec2(mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)))) + -671.674, 0.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(0.0, 0.0)), dot(vec2(1.0, 1.0), vec2(0.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, length(vec2(0.0, 0.0)), 0.0, exp(0.0)))))) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), vec2(mat2(sqrt(vec2(0.0, 0.0)), 0.0, 1.0))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-978.659), _GLF_FUZZED(-0.6)), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(-978.659), _GLF_FUZZED(-0.6)), (vec2(_GLF_FUZZED(-978.659), _GLF_FUZZED(-0.6))) * mat2(1.0)), _GLF_IDENTITY(vec2(_GLF_FUZZED(-978.659), _GLF_FUZZED(-0.6)), (vec2(_GLF_FUZZED(-978.659), _GLF_FUZZED(-0.6))) * mat2(1.0)))), vec2(_GLF_IDENTITY((((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(6.2), _GLF_FUZZED(float(68613))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], min((((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], (((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0])), _GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(4632.8212)), vec2(_GLF_FUZZED(69.84), (_GLF_IDENTITY(vec2(0.0, 0.0), _GLF_IDENTITY(mat2(1.0) * (vec2(0.0, 0.0)), clamp(mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0)), mat2(1.0) * (vec2(0.0, 0.0))))))[1]), bvec2(false, true)))))[1], ((_GLF_IDENTITY(((injectionSwitch + -671.674)), (((injectionSwitch + -671.674))) - vec2(0.0, 0.0)) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))[1]) + 0.0)), bvec2(true, true))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), injectionSwitch)))) + -671.674)) + sqrt(vec2(0.0, 0.0)), min(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)) + -671.674)) + sqrt(vec2(0.0, 0.0)), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)) + -671.674)) + sqrt(vec2(0.0, 0.0)), (true ? ((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, _GLF_IDENTITY(-24.38, mix(float(-24.38), float(_GLF_FUZZED(-5.2)), bool(false)))) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)) + -671.674)) + sqrt(vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-978.659), mix(float(_GLF_FUZZED(99.69)), float(_GLF_FUZZED(-978.659)), bool(true))), _GLF_FUZZED(-0.6)), vec2(_GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], min((((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-20.85 + 6.0)), _GLF_FUZZED(-5.0)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], (((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0])), _GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(4632.8212)), vec2(_GLF_FUZZED(69.84), (vec2(0.0, 0.0))[1]), bvec2(_GLF_IDENTITY(false, false || (false)), true)))))[1], ((((injectionSwitch + -671.674)) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))[1]) + 0.0)), bvec2(true, true)), vec2(mat4x3(mix(vec2(_GLF_FUZZED(-978.659), _GLF_FUZZED(-0.6)), vec2(_GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], min((((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], ((_GLF_IDENTITY((injectionSwitch + -671.674), ((injectionSwitch + -671.674)) - vec2(0.0, 0.0))) + sqrt(vec2(0.0, 0.0)))[0])), _GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(4632.8212)), vec2(_GLF_FUZZED(69.84), (vec2(0.0, 0.0))[1]), bvec2(false, true)))))[1], ((((injectionSwitch + -671.674)) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))[1]) + 0.0)), bvec2(true, true)), 1.0, exp(0.0), 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1803.9374)), float(1.0), bool(true))), 1.0)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(0.0, 1.0, 0.0), mix(vec3((vec3(0.0, 1.0, 0.0))[0], _GLF_FUZZED(vec4(3.0, 17.69, -6.7, 7.7).y), (vec3(0.0, 1.0, 0.0))[2]), vec3(_GLF_FUZZED(-40.51), (vec3(0.0, 1.0, 0.0))[1], _GLF_FUZZED(-7.9)), bvec3(false, true, false))))), 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), exp(0.0), determinant(mat3(0.0, 1.0, determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), sqrt(0.0), 0.0, 0.0)), 0.0)))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, _GLF_IDENTITY(4.9, (4.9) - 0.0), -24.38) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)) + -671.674)) + sqrt(vec2(0.0, 0.0)), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-978.659), min(_GLF_IDENTITY(_GLF_FUZZED(-978.659), _GLF_IDENTITY(clamp(_GLF_FUZZED(-978.659), _GLF_FUZZED(-978.659), _GLF_IDENTITY(_GLF_FUZZED(-978.659), (_GLF_FUZZED(-978.659)) - 0.0)), 1.0 * (clamp(_GLF_FUZZED(-978.659), _GLF_FUZZED(-978.659), _GLF_IDENTITY(_GLF_FUZZED(-978.659), (_GLF_FUZZED(-978.659)) - 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), 0.0)))), float(float(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), 0.0)))), min(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), 0.0)))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), float(vec2(_GLF_IDENTITY(_GLF_FUZZED(-978.659), (false ? _GLF_FUZZED(37.18) : _GLF_FUZZED(-978.659))), 0.0))))))))))))), _GLF_FUZZED(-0.6)), vec2(_GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], min((((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)) + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], (((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) + -671.674)) + sqrt(vec2(0.0, 0.0)))[0])), _GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(4632.8212)), vec2(_GLF_FUZZED(69.84), (vec2(0.0, 0.0))[1]), bvec2(false, true)))))[1], ((((injectionSwitch + -671.674)) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))[1]) + 0.0)), bvec2(true, true))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat4x2(-5.2, -1.7, -6.2, 939.158, -8.2, 7.4, 4.9, _GLF_IDENTITY(-24.38, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(-24.38, max(-24.38, -24.38)), 0.0)), mix(float(_GLF_FUZZED(-7.3)), float(float(vec2(_GLF_IDENTITY(-24.38, max(-24.38, -24.38)), 0.0))), bool(true))))) * vec4(4886.3681, -9.0, 3.2, 7.3))) : injectionSwitch)) + -671.674)) + sqrt(vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(-978.659), _GLF_FUZZED(-0.6)), vec2(_GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], min((((injectionSwitch + -671.674)) + sqrt(vec2(0.0, 0.0)))[0], (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch + -671.674, min(injectionSwitch + -671.674, injectionSwitch + -671.674)))) + sqrt(vec2(0.0, 0.0)), min(_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch + -671.674, min(injectionSwitch + -671.674, injectionSwitch + -671.674)))) + sqrt(vec2(0.0, 0.0)), (((_GLF_IDENTITY(injectionSwitch + -671.674, min(injectionSwitch + -671.674, injectionSwitch + -671.674)))) + sqrt(vec2(0.0, 0.0))) * vec2(1.0, 1.0)), ((_GLF_IDENTITY(injectionSwitch + -671.674, min(injectionSwitch + -671.674, injectionSwitch + -671.674)))) + sqrt(vec2(0.0, 0.0)))))[0])), _GLF_IDENTITY((((injectionSwitch + -671.674)) + sqrt(_GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(4632.8212)), vec2(_GLF_FUZZED(69.84), (vec2(0.0, 0.0))[1]), bvec2(false, true)))))[1], _GLF_IDENTITY(((((injectionSwitch + -671.674)) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))[1]) + 0.0, max(((((injectionSwitch + -671.674)) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))[1]) + 0.0, ((((injectionSwitch + -671.674)) + _GLF_IDENTITY(sqrt(vec2(0.0, 0.0)), (sqrt(vec2(0.0, 0.0))) - sqrt(vec2(0.0, 0.0))))[1]) + 0.0)))), bvec2(true, true)))))));
               }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(mat3x2 _GLF_SWITCH_0_13v, _GLF_SWITCH_0_14v[64]; true; 76173)
                    {
                     ((_GLF_IDENTITY(uvec4(155303u, 193006u, 93097u, 39397u), clamp(uvec4(155303u, 193006u, 93097u, 39397u), _GLF_IDENTITY(uvec4(155303u, 193006u, 93097u, _GLF_IDENTITY(39397u, ~ (~ (39397u)))), min(uvec4(155303u, 193006u, 93097u, 39397u), uvec4(155303u, 193006u, 93097u, 39397u))), _GLF_IDENTITY(uvec4(155303u, 193006u, 93097u, 39397u), (uvec4(155303u, 193006u, 93097u, 39397u)) >> uvec4(0u, 0u, 0u, 0u)))) == _GLF_SWITCH_0_1v) ? mat3(719.777, _GLF_IDENTITY(_GLF_IDENTITY(9.7, (9.7) - 0.0), max(_GLF_IDENTITY(9.7, (9.7) * exp(0.0)), _GLF_IDENTITY(9.7, float(_GLF_IDENTITY(mat4(9.7, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(14.88)), bool(false))))), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(exp(0.0), mix(float(exp(0.0)), float(_GLF_FUZZED(float(false))), bool(false))) * (0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(1.0), bool(true))), (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(1.0), bool(true)))) * _GLF_ONE(1.0, injectionSwitch.y)), 1.0, 0.0, 0.0, 0.0, 1.0), transpose(transpose(mat4(9.7, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), min(0.0, 0.0)), 4.4, -7.1, 8.0, -456.703, 21.63, 346.359) : mat3(-4261.4199, -5461.9818, 3.3, 4.7, -2448.4082, 7.1, _GLF_IDENTITY(-494.152, max(-494.152, -494.152)), 180.467, 35.99));
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       mat4(mat3(4.0, 690.057, 3088.8802, 2432.8716, -40.66, -47.79, 9850.4305, 2066.0189, 5.4));
                      }
                     int _GLF_SWITCH_0_15v[20], _GLF_SWITCH_0_16v[69];
                     if(bvec4(false, true, false, true)[1])
                      {
                       (false ? mat3(-203.615, 8.0, -5.1, -1.5, 80.98, 6765.7408, 4.6, 980.042, _GLF_IDENTITY(-2337.3075, max(-2337.3075, -2337.3075))) : mat3(1.8, -4.1, 30.91, -7.8, 17.07, -18.42, 316.674, 3017.0873, 787.576));
                       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                        {
                        }
                       else
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), float(mat2x4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-444.125) : _GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), 0.0, 0.0))))); _injected_loop_counter ++)
                          {
                           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_WRAPPED_IF_FALSE(false)))), (! (_GLF_WRAPPED_IF_FALSE(false))) || false))))
                            {
                            }
                           else
                            {
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                  {
                                  }
                                 else
                                  {
                                   25668;
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                       uint _GLF_SWITCH_0_17v[9];
                       ivec4 _GLF_SWITCH_0_18v[72], _GLF_SWITCH_0_19v;
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         ;
                        }
                       mat3x2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v;
                      }
                     else
                      {
                      }
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))
                      {
                      }
                     else
                      {
                       for(                       injectionSwitch;
 mix(false, false, true); bitfieldReverse(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, _GLF_IDENTITY((num_workgroup), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(99316u) : (num_workgroup))) | (num_workgroup)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, clamp(num_workgroup, _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u), (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u)) - 0u)) | (_GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u))), num_workgroup)), ~ (~ (num_workgroup))), 0u, 1u)))))
                        {
                         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | 1)); _injected_loop_counter ++)
                          {
                           switch(_GLF_SWITCH(_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), ((0)) * 1), (0))) | (0))))))
                            {
                             case 35:
                             uvec3 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v;
                             case 81:
                             uint _GLF_SWITCH_1_2v[89], _GLF_SWITCH_1_3v[66];
                             case 0:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               mat4x3(mat2x3(-383.429, 94.78, 44.27, -1.4, 8294.9592, 1.4));
                              }
                             case 95:
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 0:
                                 case 65:
                                 case 28:
                                 case 31:
                                 case 68:
                                 case 83:
                                 if(_GLF_WRAPPED_IF_TRUE(true))
                                  {
                                   workgroup_base;
                                  }
                                 else
                                  {
                                  }
                                 break;
                                 case 17:
                                 ;
                                 default:
                                 1;
                                }
                              }
                             else
                              {
                              }
                             for(int _injected_loop_counter = int(_GLF_IDENTITY(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), clamp(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(1.0) : _GLF_ONE(_GLF_IDENTITY(1.0, (1.0) + 0.0), injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)), ! (! _GLF_IDENTITY((_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-3.0)), (_GLF_IDENTITY(float(_GLF_FUZZED(-3.0)), (float(_GLF_FUZZED(-3.0))) + 0.0)) / 1.0), bool(false)))) / abs(1.0)), 0.0)), injectionSwitch.x))), true && ((_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))))))); _injected_loop_counter --)
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (_GLF_IDENTITY(int(4), max(int(4), _GLF_IDENTITY(int(4), (int(4)) << (0 << _GLF_IDENTITY(int(2), int(2))))))) ^ int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x))))) >> _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter ++)
                                  {
                                   _GLF_SWITCH_0_1v;
                                  }
                                }
                              }
                             case 76:
                             case 5:
                             case 42:
                             case 90:
                             (ivec3(-39579, 56877, 71698) == ivec3(-5391, _GLF_IDENTITY(-64146, (-64146) | 0), -8076));
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 uvec3(131654u, 166501u, 189343u);
                                }
                               while(_GLF_WRAPPED_LOOP(false));
                              }
                             else
                              {
                              }
                             case 34:
                             bvec3(_GLF_IDENTITY(true, ! (! (true))), true, true);
                             case 77:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               true;
                              }
                             if(_GLF_WRAPPED_IF_TRUE(true))
                              {
                               do
                                {
                                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter)))) ^ 0))) > 0); _injected_loop_counter --)
                                  {
                                   (_GLF_IDENTITY(ivec4(-82326, _GLF_IDENTITY(89415, (true ? _GLF_IDENTITY(89415, (89415) | (89415)) : _GLF_FUZZED(atomicAdd(_injected_loop_counter, _injected_loop_counter)))), -60303, -61322), ivec4(0, 0, 0, 0) | (ivec4(-82326, 89415, -60303, -61322))) + ivec4(-7308, 7975, 19083, -84261));
                                  }
                                }
                               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                              }
                             else
                              {
                              }
                             case 96:
                             case 83:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               switch(_GLF_SWITCH(0))
                                {
                                 case 0:
                                 case 79:
                                 case 91:
                                 case 34:
                                 case 38:
                                 case 92:
                                 case 69:
                                 switch(_GLF_SWITCH(0))
                                  {
                                   case 40:
                                   mat3x4(686.862, -5.8, -7.5, 29.58, -22.91, _GLF_IDENTITY(-6897.8658, mix(float(-6897.8658), float(_GLF_FUZZED((false ? 572.562 : -8131.2137))), bool(false))), -86.30, _GLF_IDENTITY(-79.26, min(-79.26, -79.26)), 1.9, 4.7, -3.7, 56.90);
                                   case 0:
                                   ivec2(-75331, 73293);
                                   break;
                                   case 28:
                                   if(_GLF_WRAPPED_IF_TRUE(true))
                                    {
                                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                                      {
                                       51715;
                                      }
                                    }
                                   else
                                    {
                                    }
                                   case 38:
                                   vec4 _GLF_SWITCH_2_0v;
                                   default:
                                   do
                                    {
                                     if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, (true) && true), true)))))
                                      {
                                       for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
                                        {
                                         1;
                                        }
                                      }
                                     else
                                      {
                                      }
                                    }
                                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                                  }
                                 break;
                                 default:
                                 1;
                                }
                              }
                             else
                              {
                              }
                             break;
                             case 53:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               ;
                              }
                             case 29:
                             mat4(_GLF_IDENTITY(_GLF_IDENTITY(mat3(-6.7, 79.62, -9067.1795, -6775.5859, -5858.7620, -46.55, -122.367, -23.35, 464.551), mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3(-6.7, 79.62, -9067.1795, -6775.5859, -5858.7620, -46.55, -122.367, -23.35, 464.551))), mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat3(-6.7, 79.62, -9067.1795, -6775.5859, -5858.7620, -46.55, -122.367, -23.35, 464.551), mat3(_GLF_ONE(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0))), injectionSwitch.y)) * (mat3(-6.7, 79.62, -9067.1795, -6775.5859, -5858.7620, -46.55, -122.367, -23.35, 464.551))))));
                             default:
                             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                              {
                               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                {
                                }
                               else
                                {
                                 1;
                                }
                              }
                             else
                              {
                              }
                            }
                          }
                        }
                      }
                     uint _GLF_SWITCH_0_22v;
                     for(int _injected_loop_counter = (0 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       do
                        {
                         switch(_GLF_SWITCH((_GLF_IDENTITY(0, (0) | 0) ^ 0)))
                          {
                           case 0:
                           case 3:
                           case 12:
                           case 4:
                           case 86:
                           case 31:
                           case 58:
                           case 63:
                           case 6:
                           case 24:
                           for(int _injected_loop_counter = _GLF_IDENTITY(0, max(0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                            {
                             faceforward(9.5, 1.1, 4099.1876);
                            }
                           break;
                           case 49:
                           _GLF_IDENTITY(ivec3(-92193, 28453, -79371), (ivec3(-92193, 28453, -79371)) << ivec3(0, 0, 0));
                           case 92:
                           ;
                           default:
                           1;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                  }
                 else
                  {
                  }
                }
               else
                {
                }
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), (injectionSwitch.x < injectionSwitch.y))))
                {
                 do
                  {
                   do
                    {
                     mat4x2(6.3, 1.6, -48.39, -6.3, 8203.8660, -4571.2729, -4.2, _GLF_IDENTITY(888.472, clamp(888.472, 888.472, _GLF_IDENTITY(888.472, float(mat3(888.472, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               case 78:
               case 71:
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 71:
                   mat4x2 _GLF_SWITCH_5_0v[23];
                   case 0:
                   case 44:
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     (mat4x3((mat3x2(-9.6, -2324.9831, 70.17, 2294.1193, 929.556, _GLF_IDENTITY(2.7, (_GLF_IDENTITY(2.7, min(2.7, 2.7))) - 0.0)) * mat3(9.5, -69.23, 3603.2539, 4.6, -4.1, -72.59, 1.8, _GLF_IDENTITY(-94.96, clamp(-94.96, -94.96, -94.96)), -6.2))) - mat4x3(-41.23));
                    }
                   else
                    {
                    }
                   break;
                   case 24:
                   vec3 _GLF_SWITCH_5_1v[79], _GLF_SWITCH_5_2v;
                   case 46:
                   mat2x3(mat4x2(-26.90, -20.03, 279.524, -5870.3821, -9527.7322, 97.58, -980.595, -99.75));
                   default:
                   1;
                  }
                }
               case 19:
               case 65:
               case 61:
               if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))), (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_IDENTITY(_GLF_SWITCH(((0 | 0) | 0)), (_GLF_SWITCH(((0 | 0) | 0))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 90:
                     ;
                     case 0:
                     case 19:
                     case 25:
                     case 15:
                     case 92:
                     case 32:
                     case 30:
                     case 23:
                     case 35:
                     case 77:
                     switch(_GLF_SWITCH((0 | 0)))
                      {
                       case 61:
                       ;
                       case 1:
                       read;
                       case 0:
                       case 67:
                       case 39:
                       case 11:
                       case 63:
                       case 30:
                       case 77:
                       case 14:
                       case 5:
                       for(int _injected_loop_counter = ((1 & ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))) & 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0)))); _injected_loop_counter --)
                        {
                         (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), max(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(176162u, clamp(176162u, 176162u, 176162u)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (~ (uvec2(_GLF_IDENTITY(176162u, clamp(176162u, 176162u, 176162u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), 176162u))))), (uvec2(1u, 1u) ^ uvec2(1u, 1u)) | (_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(_GLF_IDENTITY(176162u, min(176162u, 176162u)), ~ (~ (_GLF_IDENTITY(176162u, min(176162u, 176162u)))))), max(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))))))), uvec2(0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), max(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))))), (_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, _GLF_IDENTITY(min(176162u, 176162u), clamp(min(176162u, 176162u), min(176162u, 176162u), _GLF_IDENTITY(min(176162u, 176162u), min(min(176162u, 176162u), min(176162u, 176162u))))))), max(_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), min(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))))), uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), _GLF_IDENTITY(max(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, 0u + (176162u)), 176162u)))), clamp(_GLF_IDENTITY(max(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, 0u + (176162u)), 176162u)))), (max(uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, (176162u) | 0u), 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, 0u + (176162u)), 176162u))))) - uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), (uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u)))) - uvec2(0u, 0u)), uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, 0u + (176162u)), 176162u)))), max(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, 0u + (176162u)), 176162u)))))))), ((_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), max(uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, _GLF_IDENTITY(~ (~ (176162u)), ~ (~ (~ (~ (_GLF_IDENTITY(176162u, ~ (~ (176162u))))))))), 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))))))) | ((_GLF_IDENTITY(uvec2(198566u, _GLF_IDENTITY(176162u, min(_GLF_IDENTITY(176162u, (true ? 176162u : _GLF_FUZZED(workgroup_base))), 176162u))), max(uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))), uvec2(198566u, _GLF_IDENTITY(176162u, min(176162u, 176162u))))))))))) - uvec2(76437u, 82743u));
                        }
                       break;
                       case 82:
                       ivec3 _GLF_SWITCH_5_0v;
                       default:
                       1;
                      }
                     break;
                     case 42:
                     mat2x3 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v;
                     default:
                     1;
                    }
                  }
                 else
                  {
                  }
                }
               break;
               case 89:
               ;
               default:
               1;
              }
            }
           break;
           case 83:
           uvec3 _GLF_SWITCH_5_0v[27], _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[61];
           case 82:
           mat4x2 _GLF_SWITCH_5_3v[86];
           default:
           1;
          }
        }
       else
        {
        }
       case 0:
       case 32:
       case 76:
       atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), 4);
       case 9:
       case 26:
       subgroupAll(_GLF_IDENTITY(true, bool(bool(true))));
       break;
       case 65:
       do
        {
         do
          {
           do
            {
             for(             next_virtual_gid;
 (bvec4(false, _GLF_IDENTITY(true, (true) || false), false, true) != isinf(vec4(18.84, 4646.2165, -1724.7288, -4.2))); ivec3(-80932, _GLF_IDENTITY(-81585, (-81585) - 0), -24474))
              {
               for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), clamp(_GLF_IDENTITY(int(6), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(6), max(int(6), int(6))) : _GLF_FUZZED(_injected_loop_counter)), int(ivec4(_GLF_IDENTITY((true ? _GLF_IDENTITY(int(6), max(int(6), int(6))) : _GLF_FUZZED(_injected_loop_counter)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))))) : _GLF_FUZZED(_injected_loop_counter)), ((true ? _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))))) : _GLF_FUZZED(_injected_loop_counter))) | (_GLF_IDENTITY((true ? _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))))) : _GLF_FUZZED(_injected_loop_counter)), 1 * ((true ? _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(int(6), (int(6)) << 0))))) : _GLF_FUZZED(_injected_loop_counter)))))), (true ? _GLF_IDENTITY(int(6), max(int(6), int(6))) : _GLF_FUZZED(_injected_loop_counter)), (true ? _GLF_IDENTITY(int(6), max(int(6), int(6))) : _GLF_FUZZED(_injected_loop_counter)))), _GLF_IDENTITY(0, (0) * 1), 0, 1)))), int(6), int(6))), int(6))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(6, 0 | (6))), int(6))), (_injected_loop_counter < (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(_GLF_IDENTITY(6, (_GLF_IDENTITY(6, ~ (~ (6)))) ^ int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), 1 * ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), (1 << _GLF_IDENTITY(int(6), int(6))) >> 0)))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0)) | (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0), 0 | (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) | 0)))))) ^ 0)))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), max(int(6), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), clamp(_GLF_IDENTITY(int(6), min(int(6), int(6))), _GLF_IDENTITY(int(6), min(int(6), int(6))), _GLF_IDENTITY(_GLF_IDENTITY(int(6), min(int(6), int(6))), (_GLF_IDENTITY(int(6), min(int(6), int(6)))) >> 0)))))))) || false)); _injected_loop_counter ++)
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         acosh(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-1.9, (-1.9) * 1.0), -8.2, 3416.9653, -9303.4108), vec4(mat3x4(vec4(_GLF_IDENTITY(-1.9, (-1.9) * 1.0), -8.2, 3416.9653, -9303.4108), 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0)))));
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                }
               do
                {
                 for(mat2x4 _GLF_SWITCH_0_23v[90], _GLF_SWITCH_0_24v[97]; (read < uvec2(189093u, 175717u)[0]); min(ivec4(18453, -39004, -60903, _GLF_IDENTITY(-10566, (true ? _GLF_IDENTITY(-10566, max(-10566, -10566)) : _GLF_FUZZED(85336)))), -1174))
                  {
                   while((subgroup_size < _GLF_IDENTITY(subgroup_id, clamp(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, 0u, 0u, 0u)), max(uint(uvec4(subgroup_id, 0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u)), uint(uvec4(subgroup_id, 0u, 0u, 0u))))), subgroup_id, subgroup_id))))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       mat3x4(mat2x3(6.8, _GLF_IDENTITY(-6944.8244, (-6944.8244) - 0.0), 92.72, 45.38, 818.322, _GLF_IDENTITY(69.53, min(69.53, _GLF_IDENTITY(69.53, mix(float(_GLF_FUZZED((-7512.0975))), float(_GLF_IDENTITY(69.53, (69.53) / 1.0)), bool(true)))))));
                      }
                     for(int _injected_loop_counter = (1 ^ 1); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                      {
                       do
                        {
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                          }
                         else
                          {
                           for(int _injected_loop_counter = ((0 & -92854) | (_GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), _GLF_IDENTITY((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), min((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)), (1 << _GLF_IDENTITY(_GLF_IDENTITY(int(2), int(2)), 0 ^ (_GLF_IDENTITY(int(2), int(2))))) >> _GLF_IDENTITY(int(2), int(2)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                            {
                             vec3(-9.9, _GLF_IDENTITY(9.7, float(mat3x4(_GLF_IDENTITY(9.7, clamp(9.7, 9.7, 9.7)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(1.0), sin(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0), vec2(0.0, 0.0)), dot(vec2(determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 1.0), vec2(0.0, 0.0)))))), 97.40);
                            }
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
                      }
                     do
                      {
                       do
                        {
                         switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) << 0)))))
                          {
                           case 67:
                           (+ mat4(mat3x4(5.2, -176.772, -562.356, -0.5, -2.0, 9764.5871, -91.71, 5.6, -9.4, 6434.1941, -6280.2964, -5.0)));
                           case 16:
                           lessThanEqual(ivec4(-97807, -57990, 30573, -79764), (ivec4(27891, -47926, -35696, -20211) ^ 24819));
                           case 0:
                           case 48:
                           for(int _injected_loop_counter = (_GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (1 & 1) * (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7))), (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ ((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(7, (1 & 1) * (7))), int(7))) >> _GLF_IDENTITY(int(7), int(7)))) >> (0 << _GLF_IDENTITY(int(7), int(7))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, (1) + 0), 1 * (1)) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter ++)
                            {
                             uvec4(189077u, 168815u, 144603u, _GLF_IDENTITY(_GLF_IDENTITY(165419u, 0u | _GLF_IDENTITY((_GLF_IDENTITY(165419u, (165419u) | 0u)), min((_GLF_IDENTITY(165419u, (165419u) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(165419u, (165419u) | 0u)), ~ (~ ((_GLF_IDENTITY(165419u, (165419u) | 0u)))))))), min(_GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(165419u, (165419u) | 0u))), _GLF_IDENTITY(_GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(165419u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (165419u)), (165419u) | 0u))), 0u | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(165419u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(165419u, (165419u) | 0u)), ~ (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(165419u, (165419u) | 0u))), 0u ^ (~ (0u | (_GLF_IDENTITY(165419u, (165419u) | 0u)))))))), clamp(_GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(165419u, (165419u) | 0u))), _GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(165419u, (165419u) | 0u))), _GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(165419u, (165419u) | 0u), (_GLF_IDENTITY(165419u, (_GLF_IDENTITY(165419u, (_GLF_IDENTITY(165419u, (165419u) + 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) >> 0u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(165419u, _GLF_IDENTITY(0u | (_GLF_IDENTITY(165419u, (165419u) | 0u)), ~ (_GLF_IDENTITY(~ (0u | (_GLF_IDENTITY(165419u, (165419u) | 0u))), 0u ^ (~ (0u | (_GLF_IDENTITY(165419u, (165419u) | 0u)))))))), clamp(_GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(165419u, (165419u) | 0u))), _GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(165419u, (165419u) | 0u))), _GLF_IDENTITY(165419u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(165419u, _GLF_IDENTITY((165419u), ((165419u)) >> 0u) | 0u), (_GLF_IDENTITY(165419u, (_GLF_IDENTITY(165419u, (_GLF_IDENTITY(165419u, (165419u) + 0u)) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u)) >> 0u))))))) / 1u)))));
                            }
                           break;
                           case 77:
                           mat3(-1.7, 8.3, 2.5, 2.8, 6.7, 3.5, 9.1, -5.5, 7.7);
                           default:
                           1;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         mat2x4(-22.88, -8.2, 8.8, -8.2, 853.992, 5.3, -6505.6558, -68.76);
                        }
                       else
                        {
                        }
                      }
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         do
                          {
                           false;
                          }
                         while(_GLF_WRAPPED_LOOP(false));
                        }
                      }
                    }
                  }
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               {
                do
                 {
                  while((atomicAnd(read, subgroup_size) > atomicMax(subgroup_size, subgroup_local_id)))
                   {
                    uvec2(10033u, _GLF_IDENTITY(94661u, max(94661u, _GLF_IDENTITY(94661u, uint(uvec2(94661u, 0u))))));
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        switch(_GLF_SWITCH((0 | 0)))
                         {
                          case 21:
                          mat3(7.7, -8.6, -844.224, 905.759, 7625.8142, -913.583, -9631.0539, -97.19, 3.7);
                          case 0:
                          case 80:
                          case 54:
                          case 89:
                          case 90:
                          case 62:
                          case 98:
                          case 86:
                          case 25:
                          for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                           {
                            switch(_GLF_SWITCH(((-48722 - -53051) & 0)))
                             {
                              case 53:
                              mat3x2(90.40, -3.6, -1589.3055, -61.49, -80.13, 678.259);
                              case 0:
                              case 95:
                              case 84:
                              case 81:
                              case 4:
                              case 55:
                              case 9:
                              (_GLF_IDENTITY(676.692 * vec2(-5945.8630, -708.269), mat2(1.0) * (676.692 * vec2(-5945.8630, -708.269))));
                              break;
                              default:
                              1;
                             }
                           }
                          break;
                          case 94:
                          vec2 _GLF_SWITCH_6_0v[74], _GLF_SWITCH_6_1v;
                          case 77:
                          bvec2 _GLF_SWITCH_6_2v;
                          default:
                          1;
                         }
                       }
                     }
                    else
                     {
                     }
                    bvec3(true, _GLF_IDENTITY(false, true && (false)), true);
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
                     {
                     }
                    else
                     {
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                       {
                        uvec2(_GLF_IDENTITY(121968u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, ! (! (true))) ? 0u : _GLF_FUZZED(read))) ^ _GLF_IDENTITY((121968u), 0u | ((121968u)))), 135011u);
                       }
                     }
                    ivec3 _GLF_SWITCH_0_25v;
                    mat4x3 _GLF_SWITCH_0_26v, _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v;
                    ivec2 _GLF_SWITCH_0_29v[98];
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
                       {
                       }
                      else
                       {
                        for(int _injected_loop_counter = (_GLF_IDENTITY(0, (0) << (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6)))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (int(6)) | (int(6))))) ^ 0))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(7), int(7))), min(_GLF_IDENTITY(0 + (_GLF_IDENTITY(int(7), int(7))), (0 + (_GLF_IDENTITY(int(7), int(7)))) / 1), 0 + (_GLF_IDENTITY(int(7), int(7))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)), true)), bool(bvec3(bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x < injectionSwitch.y)), true)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (bool(bvec4(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))); _injected_loop_counter ++)
                         {
                          mat2x4(-1.9, -340.118, 4099.0688, -518.839, -6.8, -3.7, 71.81, -1.7);
                         }
                       }
                     }
                    else
                     {
                     }
                   }
                 }
                while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-62.24)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-62.24)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))) && true));
                do
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 98:
                    vec2 _GLF_SWITCH_4_0v;
                    case 0:
                    case 67:
                    case 54:
                    case 95:
                    case 1:
                    case 81:
                    case 53:
                    case 8:
                    case 9:
                    case 6:
                    while((mat2x4(-4.3, -26.27, 7.5, -8.3, -6.2, 6132.9840, 201.102, -590.735) != mat2x4(-4577.9481, -20.30, 6847.6751, -3.8, -9.1, 678.064, 7424.3280, -11.98)))
                     {
                      do
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 50:
                          do
                           {
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, true && (injectionSwitch.x < injectionSwitch.y))))))))), true, true)))))
                             {
                              uvec4(58105u, 67408u, 86617u, 56467u);
                             }
                            else
                             {
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                          case 0:
                          case 36:
                          case 64:
                          case 14:
                          case 13:
                          case 87:
                          case 72:
                          case 63:
                          case 82:
                          case 67:
                          if(_GLF_WRAPPED_IF_TRUE(true))
                           {
                            (ivec2(43555, -86026) >> (-46289 | ivec2(-45930, -17715)));
                           }
                          else
                           {
                           }
                          break;
                          case 35:
                          (ivec2(47697, 49376) | ivec2(93671, 9100));
                          case 93:
                          mat4x3(375.238, -1.5, -8.2, 395.378, 1655.4881, -4192.4621, 8463.1406, _GLF_IDENTITY(-842.190, mix(float(-842.190), float(_GLF_FUZZED(2342.5586)), bool(false))), -40.38, _GLF_IDENTITY(-7781.8758, clamp(-7781.8758, -7781.8758, -7781.8758)), -9122.7573, 7.3);
                          default:
                          1;
                         }
                       }
                      while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(323.908)), bool(false))) > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec3(_GLF_WRAPPED_LOOP(false), true, false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(false)) && true))))))))));
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        injectionSwitch;
                       }
                      else
                       {
                       }
                      ivec4 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v, _GLF_SWITCH_0_32v;
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                       }
                      else
                       {
                        if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                         {
                          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           {
                           }
                          else
                           {
                            do
                             {
                              do
                               {
                                ;
                               }
                              while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))));
                             }
                            while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                           }
                         }
                        else
                         {
                         }
                       }
                      ;
                     }
                    break;
                    case 97:
                    mat2x4(-338.984, -8.9, -1465.4582, -8537.2239, -82.79, 2.9, 4.8, -9.4);
                    case 40:
                    ivec4 _GLF_SWITCH_4_1v, _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[26];
                    default:
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
                       {
                        1;
                       }
                     }
                    else
                     {
                     }
                   }
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
               vec2 _GLF_SWITCH_0_33v[6];
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       while(_GLF_WRAPPED_LOOP(false));
       default:
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         for(int _injected_loop_counter = (((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), 0.0, 1.0, length(0.0))))))) & 99932)); _injected_loop_counter --)
          {
           1;
          }
        }
      }
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
