#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-91.33, -814.295)) : _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))) / vec2(1.0, 1.0)).x)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2]))) | uvec3(0u, 0u, 0u)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(189548u, 25219u, 145984u)) : ~ _GLF_IDENTITY((gl_NumWorkGroups), (true ? (gl_NumWorkGroups) : _GLF_FUZZED(uvec3(111604u, 101354u, 105515u)))))))))), max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(189548u, 25219u, 145984u)) : ~ (gl_NumWorkGroups))))))), _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(189548u, 25219u, 145984u)) : ~ (gl_NumWorkGroups))))), (_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (false ? _GLF_FUZZED(uvec3(189548u, 25219u, 145984u)) : ~ (gl_NumWorkGroups)))))) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u)), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))))), gl_NumWorkGroups))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), gl_NumWorkGroups))), uvec3(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) + uvec3(0u, 0u, 0u)))))), _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) ^ uvec3(0u, 0u, 0u))))))) : _GLF_FUZZED(uvec3(172037u, 77021u, 149764u)))), uvec3(1u, 1u, 1u) * (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x)) + _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), ~ (~ (_GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))))))), ~ (~ (_GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), ~ (~ (_GLF_IDENTITY(min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))), (min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))) | (min(gl_NumWorkGroups, _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u), (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u)) | (uvec4(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)), 1u))))), ~ (~ (gl_NumWorkGroups))))))))))))), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))) * uvec3(1u, 1u, 1u)), gl_NumWorkGroups))), (true ? _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)), (_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u))) - (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(8u), uvec3(8u)))))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), _GLF_IDENTITY(uvec3(uvec3(gl_NumWorkGroups)), clamp(uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups)), uvec3(uvec3(gl_NumWorkGroups))))))), min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))))), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u))))))) | uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))))) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups), (max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) ^ uvec3(0u, 0u, 0u))), max((gl_NumWorkGroups), _GLF_IDENTITY((gl_NumWorkGroups), max((gl_NumWorkGroups), (gl_NumWorkGroups))))))))), gl_NumWorkGroups)) | (max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), clamp(~ (gl_NumWorkGroups), ~ (gl_NumWorkGroups), _GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) | (~ (gl_NumWorkGroups))))))))), gl_NumWorkGroups))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), gl_NumWorkGroups)), (_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))), gl_NumWorkGroups))) >> uvec3(0u, 0u, 0u))))))), uvec3(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((_GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ _GLF_IDENTITY((gl_NumWorkGroups), min((gl_NumWorkGroups), (gl_NumWorkGroups))))))), gl_NumWorkGroups))))) : _GLF_FUZZED(uvec3(172037u, 77021u, 149764u))))))).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bvec2(! ((false)), true)))))))))) || false), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, 0u | (workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id))))) * 1u);
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)), true)), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, true && (false)))), ! (! (bool(bool(_GLF_IDENTITY(false, true && (false))))))))), true, true)), false || (bool(bvec3(_GLF_DEAD(false), true, true)))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), true)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), false))), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), ! _GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (! _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (! _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! (! _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))), ! (! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))))))) || _GLF_IDENTITY(false, (false) || false))), bool(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (! _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3((! (! _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3((! (! _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec4(bool(bool((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), false, false, false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))), ! (! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), ! (! (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))))))) || _GLF_IDENTITY(false, (false) || false))), bool(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))), true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), ! _GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec2(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) && true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)))), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)) || false, ((_GLF_IDENTITY(! (true), (! (true)) || false)) || false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false, false))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)))) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true)))), ((_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), _GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)) || false, false || (_GLF_IDENTITY((_GLF_IDENTITY(! (true), (! (true)) || false)) || false, ((_GLF_IDENTITY(! (true), (! (true)) || false)) || false) || false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), false, false, false))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec4(_GLF_IDENTITY(true, ! (! (true))), false, false, true)))) && true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))))) || false)))) || false)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))))))), ! (! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))))))), ! (! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false))), ! (! (_GLF_IDENTITY(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY((_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))), ((_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true)))))) || false) || false))), ! (! (bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))))))))))))))))))))))))), bool(_GLF_IDENTITY(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), false || (! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), false || (bool((injectionSwitch.x < injectionSwitch.y)))))))), true))))), ! _GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, _GLF_IDENTITY(false, ! (! (false))))))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))), ! (! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), (! (true)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((true), ! (! ((true)))), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))))))) || false)), bool(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), true && (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))))))), false), bvec2(bvec4(bvec2(! ((_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), (bool(bvec3(_GLF_DEAD(false), true, true))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), ! _GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), _GLF_IDENTITY((! (true)), ! (_GLF_IDENTITY(! ((! (true))), true && (! ((! (true))))))) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec3((! (! _GLF_IDENTITY((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))), ((bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))), ! (! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, false))), ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (true)) || false), (! (true)) || false)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (true), (! (true)) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true))), false, false)))))))))))), bool(bvec3(_GLF_IDENTITY((! (! (bool(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), true && (bool(bvec3(_GLF_DEAD(false), true, true)))), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_IDENTITY(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, true))))))) || false)), bool(bool(! (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, bool(bvec2(true, true))))), _GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), bool(bvec3((! (! (bool(bvec2(bool(bvec3(_GLF_DEAD(false), true, true)), _GLF_IDENTITY(true, ! (! (true)))))))), true, _GLF_IDENTITY(true, (true) && true))))) || false)))))))))), false), false, false))))))))))), false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, false))))), true && (true)), true)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < injectionSwitch.y)), ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-493.804), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(vec2(9.4, -8978.3662).s)), bvec2(true, false)))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < injectionSwitch.y)), ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-493.804), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(vec2(9.4, -8978.3662).s)), bvec2(true, false)))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))) || false), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < injectionSwitch.y)), ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-493.804), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(vec2(9.4, -8978.3662).s)), bvec2(true, false)))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))) || false), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, true, true)), bool(bvec2(bool(bvec4(true, false, true, true)), false)))))), bool(bvec3(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)))), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < injectionSwitch.y)), ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(-493.804), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(vec2(9.4, -8978.3662).s)), bvec2(true, false)))), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))) || false)))) || false)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), true)), (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, true)), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) * vec2(1.0, 1.0))), (injectionSwitch) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))).x < injectionSwitch.y)))), true && ((_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, true && (true)), true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true)))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), (_GLF_DEAD(false)) && true)))), true, true), true))))))), bool(bvec3(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true)), true, true)))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0)), vec2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(9.1)), float(1.0), bool(true))), 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), (true ? _GLF_IDENTITY(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(1.0), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), _GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0 * _GLF_IDENTITY((0.0), float(mat2((0.0), 1.0, 1.0, 1.0)))), 1.0), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0 * _GLF_IDENTITY((0.0), float(mat2((0.0), 1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0), ((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0 * _GLF_IDENTITY((0.0), float(mat2((0.0), 1.0, 1.0, 1.0)))), 1.0)) * mat3(1.0)) / vec3(1.0, 1.0, 1.0)))), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)))), mat4x2(mat4(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 0.0, abs(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-277.652)), float(1.0), bool(true)))), 0.0, tan(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0)), dot(vec3(0.0, 1.0, 0.0), vec3(1.0, 0.0, 1.0))))))) : _GLF_FUZZED(mat4x2(3.7, 708.244, -2.0, 8516.4131, -8.7, -6.8, -5208.7800, 4406.0956)))))))).x < injectionSwitch.y)))))))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) << 0u, ((subgroup_base) << 0u) + _GLF_IDENTITY(0u, (0u) | (0u)))) + subgroup_local_id, _GLF_IDENTITY(0u, (0u) | (0u)) | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (workgroup_base + subgroup_base + subgroup_local_id) | 0u))))), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-92.05)), float(injectionSwitch.y), bool(true)))))))))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) >> 0)) % subgroup_size), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec2(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u))))), 0u))))) | 0u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), 4, 64, _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) | 0))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((4), clamp((4), _GLF_IDENTITY((4), ~ (_GLF_IDENTITY(~ ((4)), clamp(~ ((4)), ~ ((4)), _GLF_IDENTITY(~ ((4)), _GLF_IDENTITY((~ ((4))), ((~ ((4)))) ^ 0) >> 0))))), (4))) ^ 0));
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) + 0u), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
