#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uvec4 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false))))), false))))))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bool(! (_GLF_IDENTITY(false, (false) && true))))))), (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))), false, false, true))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true, false), true))))))))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), 1.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z = _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z = subgroup_local_id)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(max(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), min(min(gl_NumWorkGroups, gl_NumWorkGroups), _GLF_IDENTITY(min(gl_NumWorkGroups, gl_NumWorkGroups), max(min(gl_NumWorkGroups, gl_NumWorkGroups), min(gl_NumWorkGroups, gl_NumWorkGroups)))))), (_GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))) - uvec3(0u, 0u, 0u)), gl_NumWorkGroups)))), gl_NumWorkGroups))) << uvec3(0u, 0u, 0u))) | (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) * 1u))), (0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) * 1u))), (0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))))))), (uvec3(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))))) * 1u))), (0u) * ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), uint(3u)), (_GLF_IDENTITY(uint(3u), uint(3u))) | (_GLF_IDENTITY(uint(3u), uint(3u))))) >> _GLF_IDENTITY(uint(3u), uint(3u)))))))) ^ uvec3(0u, 0u, 0u)))), uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))) * _GLF_IDENTITY(_GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec4((0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u)), 0u + (uint(uvec4((0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u))))), 0u | (_GLF_IDENTITY((0u), _GLF_IDENTITY(uint(uvec4((0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u)), 0u + (uint(uvec4((0u), ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 1u, 0u))))))))) ^ 0u))))).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), uvec3(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(32475) : 0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))[2])), (false ? _GLF_FUZZED(uvec3(157067u, 14294u, 35143u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) << 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2]))))) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec4(73549u, 141387u, 137365u, 57827u).tsp))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))))))) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))), clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) + 0u))))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), uvec3(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(32475) : 0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))[2])), (false ? _GLF_FUZZED(uvec3(157067u, 14294u, 35143u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) << 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2]))))) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec4(73549u, 141387u, 137365u, 57827u).tsp))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))))))) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))), clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) + 0u))))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), uvec3(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(32475) : 0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))[2])), (false ? _GLF_FUZZED(uvec3(157067u, 14294u, 35143u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) << 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2]))))) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec4(73549u, 141387u, 137365u, 57827u).tsp))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))))))) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))), clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) + 0u))))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))))))) * uvec3(1u, 1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), uvec3(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(32475) : 0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))[2])), (false ? _GLF_FUZZED(uvec3(157067u, 14294u, 35143u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) << 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2]))))) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec4(73549u, 141387u, 137365u, 57827u).tsp))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))))))) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))), clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) + 0u))))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize)))), (uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupSize), (false ? _GLF_FUZZED(uvec3(20684u, 34472u, 172529u)) : uvec3(gl_WorkGroupSize))))) << uvec3(0u, 0u, 0u))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), uvec3(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(32475) : 0))], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize, ~ (_GLF_IDENTITY(~ (gl_WorkGroupSize), min(~ (gl_WorkGroupSize), ~ (gl_WorkGroupSize)))))[2])), (false ? _GLF_FUZZED(uvec3(157067u, 14294u, 35143u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) << 0u))))) | _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), ((_GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))]) | (gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))])), gl_WorkGroupSize[_GLF_IDENTITY(2, (2) | (2))]))))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), (_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (true ? _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0)))) | (_GLF_IDENTITY(1, min(1, 1)))), 1))], gl_WorkGroupSize[2]))))) >> uvec3(0u, 0u, 0u)) : _GLF_FUZZED(uvec4(73549u, 141387u, 137365u, 57827u).tsp))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))) / uvec3(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u))) | (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))))))) + uvec3(0u, 0u, 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u) | ((_GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - uvec3(0u, 0u, 0u))))) / uvec3(1u, 1u, 1u)))))), clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], _GLF_IDENTITY(gl_WorkGroupSize[2], (gl_WorkGroupSize[2]) + 0u))))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))))))) / uvec3(1u, 1u, 1u)))), uvec3(0u, 0u, 0u) ^ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (false ? _GLF_FUZZED(uvec3(157067u, 14294u, 35143u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(127081u, 8261u, 147916u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupSize[2])))) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), (clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uvec3(~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))))), uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])), (false ? _GLF_FUZZED(uvec3(157067u, 14294u, 35143u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), ((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize, (false ? _GLF_FUZZED(uvec3(127081u, 8261u, 147916u)) : _GLF_IDENTITY(gl_WorkGroupSize, uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) << uvec3(0u, 0u, 0u))))))[1], gl_WorkGroupSize[2])))) | _GLF_IDENTITY(((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])), (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))) | (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2])))))), (((_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, min(1, 1))], gl_WorkGroupSize[2]))))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(uvec3(uvec3(0u, 0u, 0u))))) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))) / uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2]))))), (clamp(_GLF_IDENTITY(uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), (uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[_GLF_IDENTITY(1, 1 * (_GLF_IDENTITY(1, max(1, 1))))], gl_WorkGroupSize[2]))))) * uvec3(1u, 1u, 1u)), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))), uvec3(~ (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], gl_WorkGroupSize[1], gl_WorkGroupSize[2])))))) | uvec3(0u, 0u, 0u)))) | uvec3(0u, 0u, 0u)))))))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_WorkGroupID.x, min(gl_WorkGroupID.x, gl_WorkGroupID.x)))), _GLF_IDENTITY((uint(uint(gl_WorkGroupID.x))) / 1u, (_GLF_IDENTITY((uint(uint(gl_WorkGroupID.x))), ~ (~ (_GLF_IDENTITY((uint(uint(gl_WorkGroupID.x))), (_GLF_IDENTITY((uint(uint(gl_WorkGroupID.x))), ~ (~ ((uint(uint(gl_WorkGroupID.x))))))) / 1u)))) / 1u) | ((uint(uint(gl_WorkGroupID.x))) / 1u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) - _GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size))), 0u)))) | (_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), 0u ^ ((workgroup_id))) / 1u))), max(workgroup_id, workgroup_id));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0), (true ? mat2x3(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(-92.46, -6578.4440, 4661.7282, -79.07, -90.73, 82.09))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))).x > injectionSwitch.y), false, false, true)), true && (bool(bvec4(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))), false, false, true)))))))))))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w = workgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) || false)))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), false, true, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), ! (! ((_GLF_DEAD(false))))))), false, true, false))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, true, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true) ? _GLF_FUZZED(mix(vec2(369.292, -4.5), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, _GLF_IDENTITY(-83.74, float(_GLF_IDENTITY(mat3x2(-83.74, 0.0, 0.0, 1.0, 1.0, 1.0), (mat3x2(-83.74, 0.0, 0.0, 1.0, 1.0, 1.0)) * mat3(1.0))))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, false))) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(_GLF_IDENTITY(mix(vec2(369.292, -4.5), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, -83.74))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, false)), (_GLF_IDENTITY(mix(vec2(369.292, -4.5), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, -83.74))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, false)), vec2(1.0, 1.0) * (mix(vec2(369.292, -4.5), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, -83.74))), bool(_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (true))) || false)))), (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0), (true ? mat4x2(injectionSwitch.x, 0.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat4x2(-2.2, 8170.0354, 219.726, 5471.8254, -35.46, -7.8, -3.8, -64.23)))))) < injectionSwitch.y)))))), bvec2(true, false))))) / vec2(1.0, 1.0))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))) ? _GLF_FUZZED(mix(_GLF_IDENTITY(vec2(369.292, -4.5), _GLF_IDENTITY(vec2(mat3x2(vec2(369.292, -4.5), 0.0, 1.0, 0.0, 0.0)), max(vec2(mat3x2(vec2(369.292, -4.5), 0.0, 1.0, 0.0, 0.0)), vec2(mat3x2(vec2(369.292, -4.5), 0.0, 1.0, 0.0, 0.0))))), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, -83.74))), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))), bvec2(true, false))) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mix(vec2(369.292, -4.5), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, -83.74))), bool(_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, false))) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (false))) ? _GLF_FUZZED(mix(vec2(369.292, -4.5), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, -83.74))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, false))) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(mix(vec2(369.292, -4.5), vec2(-0.5, _GLF_IDENTITY(-83.74, mix(float(_GLF_FUZZED(5048.3442)), float(_GLF_IDENTITY(-83.74, max(-83.74, -83.74))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(true, false))) : injectionSwitch)))))).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[1])))).y))))
    barrier();
   barrier();
  }
 uint virtual_gid = GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + subgroup_id * subgroup_size + GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + subgroup_id * subgroup_size + ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))))) >> 0u)), ~ (~ (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + subgroup_id * subgroup_size + _GLF_IDENTITY(((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))))) >> 0u)), uint(_GLF_IDENTITY(uvec3(((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))))) >> 0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))))) >> 0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) + uvec3(0u, 0u, 0u))))))), max(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + subgroup_id * subgroup_size + ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))), min((~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))), (~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))))))) >> 0u)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + subgroup_id * subgroup_size + ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((subgroup_size)))))) >> 0u)), (true ? GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.w + subgroup_id * subgroup_size + ((GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.z + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)), (0u >> _GLF_IDENTITY(uint(0u), uint(0u))) ^ ((_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))))))) >> 0u)) : _GLF_FUZZED(subgroup_size)))));
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-19709) : 4)), 4, 4)), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) / _GLF_IDENTITY((1 & 1), int(_GLF_IDENTITY(ivec3((1 & 1), 0, 0), max(ivec3((1 & 1), 0, 0), ivec3((1 & 1), 0, 0))))))) | (64)), 0);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.y = read;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y)) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), false || ((! _GLF_IDENTITY((false), true && ((false)))))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).y)) && (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && ((false)))), false || ((! _GLF_IDENTITY((false), true && ((false)))))))), true))))))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 0.0, 0.0, 1.0, abs(abs(1.0)), 1.0, sqrt(0.0), 0.0, 1.0, 0.0, tan(0.0), abs(_GLF_ONE(1.0, injectionSwitch.y)), 0.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, log(abs(1.0)), 1.0, 1.0), (mat3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, log(abs(1.0)), 1.0, 1.0)) * mat3(1.0)))), (injectionSwitch) / vec2(1.0, 1.0)).y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, log(abs(1.0)), 1.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-3685.5365), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(5.0)), bvec2(true, false))), _GLF_IDENTITY(sqrt(0.0), 1.0 * (sqrt(0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0 + (_GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2.0) : 1.0)))), 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), 1.0, 0.0, log(abs(1.0)), 1.0, 1.0))), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x4(_GLF_IDENTITY(vec2(1.0, 1.0), mix(vec2((vec2(1.0, 1.0))[0], (vec2(1.0, 1.0))[1]), vec2(_GLF_FUZZED(-562.626), _GLF_FUZZED(-9.4)), bvec2(false, false))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, log(abs(1.0)), 1.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)).y))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), sqrt(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, log(abs(1.0)), 1.0, 1.0))), (injectionSwitch) / vec2(1.0, 1.0)).y), true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), false)), false)))))))), true))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), ! (! (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, true))), false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))))))))) && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0))).x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, abs(1.0), 1.0, 0.0))).x > injectionSwitch.y), true, true, true))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base, (GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base, ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base, (false ? _GLF_FUZZED(GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base) : GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base))))))).x], uint(1), 4, 64, 4);
 atomicStore(checker[virtual_gid], GLF_merged4_0_1_16_1_1_4_2_1_17_3_1_14next_virtual_gidreadsubgroup_local_idworkgroup_base.y, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (false ? _GLF_FUZZED((~ 40996)) : 64))) + (0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, (5) / 1)), int(5)))), 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
