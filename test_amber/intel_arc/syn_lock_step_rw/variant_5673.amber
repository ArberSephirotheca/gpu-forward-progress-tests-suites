#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_35 {
 bvec2 _f0;
 ivec3 _f1;
 ivec2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_34 {
 mat4x2 _f0;
 mat4x3 _f1;
 mat3x2 _f2;
 mat3 _f3;
 uvec2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_33 {
 ivec3 _f0;
 bvec3 _f1;
 mat2x3 _f2;
 ivec2 _f3;
 int _f4;
 float _f5;
} ;

struct _GLF_struct_32 {
 mat2 _f0;
 uvec4 _f1;
 bvec3 _f2;
 bool _f3;
} ;

struct _GLF_struct_36 {
 mat3x2 _f0;
 _GLF_struct_32 _f1;
 _GLF_struct_33 _f2;
 _GLF_struct_34 _f3;
 _GLF_struct_35 _f4;
 mat4 _f5;
} ;

struct _GLF_struct_37 {
 bool _f0;
 mat2 _f1;
 _GLF_struct_36 _f2;
 vec4 _f3;
 uint subgroup_local_id;
} ;

struct _GLF_struct_29 {
 mat3x4 _f0;
 mat3x4 _f1;
 mat3 _f2;
 mat2x3 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_28 {
 int _f0;
} ;

struct _GLF_struct_30 {
 _GLF_struct_28 _f0;
 uint subgroup_id;
 uvec3 _f1;
 mat2x3 _f2;
 _GLF_struct_29 _f3;
 float _f4;
} ;

struct _GLF_struct_26 {
 mat4x3 _f0;
} ;

struct _GLF_struct_25 {
 bvec2 _f0;
 ivec3 _f1;
 mat3 _f2;
 int _f3;
 mat2x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_24 {
 vec2 _f0;
 uvec3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_23 {
 bvec3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_27 {
 _GLF_struct_23 _f0;
 _GLF_struct_24 _f1;
 _GLF_struct_25 _f2;
 _GLF_struct_26 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_31 {
 mat2x3 _f0;
 _GLF_struct_27 _f1;
 bvec2 _f2;
 mat3x2 _f3;
 bvec2 _f4;
 _GLF_struct_30 _f5;
 bool _f6;
} ;

struct _GLF_struct_20 {
 mat3x4 _f0;
 mat3x4 _f1;
 mat3 _f2;
 bvec2 _f3;
 ivec4 _f4;
 mat4x3 _f5;
 int _f6;
} ;

struct _GLF_struct_21 {
 _GLF_struct_20 _f0;
 uint workgroup_size;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
} ;

struct _GLF_struct_19 {
 uint read;
 uvec4 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_16 {
 mat3x4 _f0;
} ;

struct _GLF_struct_15 {
 vec2 _f0;
 bvec4 _f1;
 vec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_14 {
 mat4x3 _f0;
 mat3x4 _f1;
 mat2x3 _f2;
 mat4 _f3;
 vec4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_17 {
 _GLF_struct_14 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 bvec4 _f3;
 uvec4 _f4;
 mat4 _f5;
 ivec3 _f6;
} ;

struct _GLF_struct_12 {
 float _f0;
} ;

struct _GLF_struct_11 {
 uvec4 _f0;
} ;

struct _GLF_struct_10 {
 bvec4 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_9 {
 mat3 _f0;
 mat2x3 _f1;
 ivec2 _f2;
 bvec3 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_13 {
 ivec4 _f0;
 _GLF_struct_9 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
} ;

struct _GLF_struct_18 {
 ivec4 _f0;
 _GLF_struct_13 _f1;
 bvec3 _f2;
 uint subgroup_base;
 _GLF_struct_17 _f3;
} ;

struct _GLF_struct_6 {
 mat3x4 _f0;
 vec4 _f1;
} ;

struct _GLF_struct_5 {
 bool _f0;
 bvec2 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_4 {
 mat2x3 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 uvec3 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_7 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 bvec3 _f2;
 mat3 _f3;
 uvec3 _f4;
 uvec2 _f5;
 _GLF_struct_6 _f6;
} ;

struct _GLF_struct_2 {
 int _f0;
 mat2 _f1;
 uvec4 _f2;
 mat3x4 _f3;
 ivec2 _f4;
 vec2 _f5;
} ;

struct _GLF_struct_1 {
 uvec4 _f0;
 mat2x4 _f1;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat2x3 _f1;
 vec2 _f2;
 mat3 _f3;
 bool _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 uint _f1;
 _GLF_struct_3 _f2;
 mat4x3 _f3;
 _GLF_struct_7 _f4;
 vec2 _f5;
 uint workgroup_id;
 bool _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid;
 _GLF_struct_31 _GLF_struct_replacement_31 = _GLF_struct_31(mat2x3(1.0), _GLF_struct_27(_GLF_struct_23(bvec3(true), bvec4(true)), _GLF_struct_24(vec2(1.0), uvec3(1u), vec4(1.0)), _GLF_struct_25(bvec2(true), ivec3(1), mat3(1.0), 1, mat2x3(1.0), bvec4(true)), _GLF_struct_26(mat4x3(1.0)), bvec3(true)), bvec2(true), mat3x2(1.0), bvec2(true), _GLF_struct_30(_GLF_struct_28(1), gl_SubgroupID, uvec3(1u), mat2x3(1.0), _GLF_struct_29(mat3x4(1.0), mat3x4(1.0), mat3(1.0), mat2x3(1.0), mat3(1.0)), 1.0), true);
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x = _GLF_struct_replacement_31._f5.subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z = subgroup_size;
 _GLF_struct_37 _GLF_struct_replacement_37 = _GLF_struct_37(true, mat2(1.0), _GLF_struct_36(mat3x2(1.0), _GLF_struct_32(mat2(1.0), uvec4(1u), bvec3(true), true), _GLF_struct_33(ivec3(1), bvec3(true), mat2x3(1.0), ivec2(1), 1, 1.0), _GLF_struct_34(mat4x2(1.0), mat4x3(1.0), mat3x2(1.0), mat3(1.0), uvec2(1u), mat2x4(1.0)), _GLF_struct_35(bvec2(true), ivec3(1), ivec2(1), uvec4(1u)), mat4(1.0)), vec4(1.0), gl_SubgroupInvocationID);
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y = _GLF_struct_replacement_37.subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_21(_GLF_struct_20(mat3x4(1.0), mat3x4(1.0), mat3(1.0), bvec2(true), ivec4(1), mat4x3(1.0), 1), gl_WorkGroupSize.x));
 _GLF_struct_8 _GLF_struct_replacement_8 = _GLF_struct_8(mat2x3(1.0), 1u, _GLF_struct_3(_GLF_struct_0(mat4x3(1.0), mat2x3(1.0), vec2(1.0), mat3(1.0), true), _GLF_struct_1(uvec4(1u), mat2x4(1.0)), _GLF_struct_2(1, mat2(1.0), uvec4(1u), mat3x4(1.0), ivec2(1), vec2(1.0)), mat2(1.0)), mat4x3(1.0), _GLF_struct_7(_GLF_struct_4(mat2x3(1.0), mat2x3(1.0), bvec4(true), uvec3(1u), bvec3(true)), _GLF_struct_5(true, bvec2(true), mat4x3(1.0)), bvec3(true), mat3(1.0), uvec3(1u), uvec2(1u), _GLF_struct_6(mat3x4(1.0), vec4(1.0))), vec2(1.0), gl_WorkGroupID.x, true);
 uint workgroup_base = _GLF_struct_replacement_22._f0.workgroup_size * _GLF_struct_replacement_8.workgroup_id;
 _GLF_struct_18 _GLF_struct_replacement_18 = _GLF_struct_18(ivec4(1), _GLF_struct_13(ivec4(1), _GLF_struct_9(mat3(1.0), mat2x3(1.0), ivec2(1), bvec3(true), uvec3(1u)), _GLF_struct_10(bvec4(true), bvec2(true)), _GLF_struct_11(uvec4(1u)), _GLF_struct_12(1.0)), bvec3(true), GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.x * GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z, _GLF_struct_17(_GLF_struct_14(mat4x3(1.0), mat3x4(1.0), mat2x3(1.0), mat4(1.0), vec4(1.0), mat3x2(1.0)), _GLF_struct_15(vec2(1.0), bvec4(true), vec2(1.0), mat4(1.0)), _GLF_struct_16(mat3x4(1.0)), bvec4(true), uvec4(1u), mat4(1.0), ivec3(1)));
 uint virtual_gid = workgroup_base + _GLF_struct_replacement_18.subgroup_base + GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y;
 GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w = virtual_gid;
 uint next_virtual_gid = workgroup_base + _GLF_struct_replacement_18.subgroup_base + ((GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.y + 1) % GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.z);
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(atomicLoad(buf[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], 4, 64, 2), uvec4(1u), mat3x4(1.0));
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 subgroupBarrier();
 atomicStore(checker[GLF_merged4_0_1_11_1_1_17_2_1_13_3_1_11subgroup_idsubgroup_local_idsubgroup_sizevirtual_gid.w], _GLF_struct_replacement_19.read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
