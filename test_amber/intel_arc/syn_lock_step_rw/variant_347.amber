#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 mat4x3 _f0;
 mat4x3 _f1;
 int _f2;
 mat4 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 uint workgroup_size;
 bvec2 _f1;
} ;

struct _GLF_struct_2 {
 _GLF_struct_1 _f0;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-332.360))), mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), (false ? _GLF_FUZZED(abs(-454.634)) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))))))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))))), false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))))), bool(bvec3(_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))))), false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sqrt(0.0), 1.0, 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), false, true)), false || (bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), false, true))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))), (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))), bool(true)))))))) || false))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-555.629), _GLF_FUZZED(69.35)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(6791.3080, -171.959)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))))))))))))))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sqrt(0.0), 1.0, 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), false, true)), false || (bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), false, true))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))), (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))), bool(true)))))))) || false))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-555.629), _GLF_FUZZED(69.35)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(6791.3080, -171.959)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))))))))))))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2(injectionSwitch.x, sqrt(0.0), 1.0, 1.0))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), _GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), false, true)), false || (bool(bvec3((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))), (! (_GLF_IDENTITY(bool(true), false || (_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))) || false)), false, true))))))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))))), (! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true))), mix(float(_GLF_FUZZED(-7.6)), float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(39.01)), float(injectionSwitch.y), bool(true)))), bool(true)))))))) || false))))))), true && (! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-555.629), _GLF_FUZZED(69.35)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(6791.3080, -171.959)))).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), true && (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))), ! (! _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true)))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))), ! (! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-0.3)), bool(false))))), mix(float(_GLF_FUZZED(39.01)), _GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_IDENTITY(float(injectionSwitch.y), (false ? _GLF_FUZZED(-8059.9898) : _GLF_IDENTITY(float(injectionSwitch.y), min(_GLF_IDENTITY(float(injectionSwitch.y), (float(injectionSwitch.y)) / 1.0), float(injectionSwitch.y)))))), float(_GLF_FUZZED(527.180)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(true))))))))))))))))))))))) && true))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec3(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), false), bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), true))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(_GLF_struct_1(_GLF_struct_0(mat4x3(1.0), mat4x3(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (true ? float(_GLF_IDENTITY(1.0, max(1.0, 1.0))) : _GLF_FUZZED(ceil(-2.5)))), float(_GLF_FUZZED(-9737.9656)), bool(false))), 1.0)), _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), float(vec3(clamp(1.0, 1.0, 1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, tan(0.0)), vec4(0.0, 1.0, exp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-8.5, 4.8, 10.08)) : vec3(0.0, 0.0, 0.0)))) / vec3(1.0, 1.0, 1.0)), mix(vec3(_GLF_FUZZED(-9.4), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-8.5, 4.8, 10.08)) : vec3(0.0, 0.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))[1], (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-8.5, 4.8, 10.08)) : vec3(0.0, 0.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))[2]), vec3(_GLF_IDENTITY((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-8.5, 4.8, 10.08)) : vec3(0.0, 0.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))[0], ((_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (false ? _GLF_FUZZED(vec3(-8.5, 4.8, 10.08)) : vec3(0.0, 0.0, 0.0)))) / vec3(1.0, 1.0, 1.0)))[0]) - 0.0), _GLF_FUZZED(-93.14), _GLF_FUZZED(-9.3)), bvec3(true, false, false)))))), 1.0)), dot(vec4(1.0, 0.0, 0.0, tan(0.0)), vec4(0.0, 1.0, exp(0.0), 1.0)))))))))), 1, mat4(1.0), vec4(1.0)), _GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) + (gl_WorkGroupSize)).x, bvec2(true)));
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u) + _GLF_IDENTITY((gl_WorkGroupID), (_GLF_IDENTITY((gl_WorkGroupID), min((_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) >> uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), (gl_WorkGroupID)))) | uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_struct_replacement_2._f0.workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_2._f0.workgroup_size, (_GLF_struct_replacement_2._f0.workgroup_size) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_struct_replacement_2._f0.workgroup_size, (_GLF_struct_replacement_2._f0.workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((_GLF_struct_replacement_2._f0.workgroup_size), _GLF_IDENTITY(((_GLF_struct_replacement_2._f0.workgroup_size)) / 1u, (((_GLF_struct_replacement_2._f0.workgroup_size)) / 1u) | (((_GLF_struct_replacement_2._f0.workgroup_size)) / 1u)))) ^ 0u) >> _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) | 0u)))))))))) * workgroup_id;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1), clamp((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, (true ? subgroup_local_id : _GLF_FUZZED(virtual_gid))), subgroup_local_id)) + 1), _GLF_IDENTITY((subgroup_local_id + 1), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) + 0u, clamp(_GLF_IDENTITY((subgroup_size) + _GLF_IDENTITY(0u, (0u) - 0u), clamp((subgroup_size) + _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), (subgroup_size) + 0u, (subgroup_size) + 0u)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_size), ((subgroup_size)) | ((subgroup_size))) + 0u, clamp(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (0u & 86508u)) ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)))), (_GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(clamp((_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u) : _GLF_FUZZED(atomicExchange(subgroup_size, num_workgroup))))), (subgroup_size), (subgroup_size)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(clamp((subgroup_size), (subgroup_size), (subgroup_size)), (clamp((subgroup_size), (subgroup_size), (subgroup_size))) / 1u) : _GLF_FUZZED(num_workgroup))))) | 0u) + 0u, (subgroup_size) + 0u, (subgroup_size) + 0u)), _GLF_IDENTITY((subgroup_size) + 0u, ((subgroup_size) + _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(166538u))))), 0u))) | 0u)))));
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(1.8, (false ? _GLF_FUZZED(length(_GLF_IDENTITY(vec4(6732.5542, -75.37, -1445.7305, -3.3), (false ? _GLF_FUZZED(vec4(-35.58, -872.219, -8.1, -412.975)) : vec4(6732.5542, -75.37, -1445.7305, -3.3))))) : 1.8)))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))) ? injectionSwitch.y : _GLF_FUZZED(_GLF_IDENTITY(1.8, (false ? _GLF_FUZZED(_GLF_IDENTITY(length(_GLF_IDENTITY(vec4(6732.5542, -75.37, -1445.7305, -3.3), (false ? _GLF_FUZZED(vec4(-35.58, -872.219, -8.1, -412.975)) : vec4(6732.5542, -75.37, -1445.7305, -3.3)))), min(length(_GLF_IDENTITY(vec4(6732.5542, -75.37, -1445.7305, -3.3), (false ? _GLF_FUZZED(vec4(-35.58, -872.219, -8.1, -412.975)) : vec4(6732.5542, -75.37, -1445.7305, -3.3)))), _GLF_IDENTITY(length(_GLF_IDENTITY(vec4(6732.5542, -75.37, -1445.7305, -3.3), (false ? _GLF_FUZZED(vec4(-35.58, -872.219, -8.1, -412.975)) : vec4(6732.5542, -75.37, -1445.7305, -3.3)))), (false ? _GLF_FUZZED(-7050.5622) : length(_GLF_IDENTITY(vec4(6732.5542, -75.37, -1445.7305, -3.3), (false ? _GLF_FUZZED(vec4(-35.58, -872.219, -8.1, -412.975)) : vec4(6732.5542, -75.37, -1445.7305, -3.3))))))))) : 1.8)))))) / _GLF_IDENTITY(1.0, min(1.0, 1.0)))) + _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 subgroupBarrier();
 atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, (4) - 0)))) | (4))))), _GLF_IDENTITY(clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), (_GLF_IDENTITY(4, _GLF_IDENTITY(max(4, 4), clamp(max(4, 4), _GLF_IDENTITY(max(4, 4), (max(4, 4)) | (_GLF_IDENTITY(max(4, 4), max(max(4, 4), max(4, 4))))), max(4, 4))))) | (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((4), ((4)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (~ (~ (4)))))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(8940)))), _GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(4, max(4, 4))), ~ (~ ((_GLF_IDENTITY(4, max(4, 4)))))), (_GLF_IDENTITY(4, max(4, 4))), (_GLF_IDENTITY(4, max(4, 4))))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (4) | (4))))), clamp(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), _GLF_IDENTITY(int(ivec4(~ (~ (4)), 1, 1, 0)), 0 + (int(ivec4(~ (~ (4)), 1, 1, 0)))))), _GLF_IDENTITY(4, ~ (~ (4))))))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))), (_GLF_IDENTITY(4, max(4, 4))) | (4))), ((_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ _GLF_IDENTITY((4), max((4), (4))), ~ (4))))), (_GLF_IDENTITY(4, max(4, 4))) | (4)))) - 0)))), (clamp((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), clamp(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ (4))))), ~ (~ (4)), ~ (~ (4))))) >> 0), ~ (~ (_GLF_IDENTITY(~ (~ (4)), max(~ (~ (4)), _GLF_IDENTITY(~ (~ (4)), 0 ^ (~ (~ (4)))))))))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(8940)))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))))), max((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), clamp(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ (4))))), ~ (~ (4)), ~ (~ (4))))) >> 0), ~ (~ (_GLF_IDENTITY(~ (~ (4)), max(~ (~ (4)), _GLF_IDENTITY(~ (~ (4)), 0 ^ (~ (~ (4)))))))))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(8940)))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (4)), (_GLF_IDENTITY(~ (~ (4)), clamp(_GLF_IDENTITY(~ (~ (4)), ~ (~ (~ (~ (4))))), ~ (~ (4)), ~ (~ (4))))) >> 0), ~ (~ (_GLF_IDENTITY(~ (~ (4)), max(~ (~ (4)), _GLF_IDENTITY(~ (~ (4)), 0 ^ (~ (~ (4)))))))))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ _GLF_IDENTITY((~ (4)), (true ? (~ (4)) : _GLF_FUZZED(8940)))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), clamp(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, 0 ^ (4))))), _GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), min(~ (4), ~ (4))))))))), (_GLF_IDENTITY(4, max(4, 4))) | (4)), (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), (_GLF_IDENTITY(4, max(4, 4))) | (4))) | (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (_GLF_IDENTITY(~ (4), clamp(~ (4), ~ (4), ~ (4))))), (_GLF_IDENTITY(4, max(4, 4))) | (4))))))) | 0)) + _GLF_IDENTITY(_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3))), 0 | _GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) + 0)) | 0), int(3)))))))), ~ (~ (_GLF_IDENTITY(((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) + 0)) | 0), int(3)))))))), 0 ^ (((0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), int(3)), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), (int(3)) + 0)) | 0), int(3)))))))))))))), (_GLF_IDENTITY((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(3, min(3, 3))), (int(3)) | 0), int(3))), 0 | ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), (int(3)) | 0), _GLF_IDENTITY(int(3), max(int(3), int(_GLF_IDENTITY(3, ~ (~ (_GLF_IDENTITY(3, int(ivec3(3, 0, 0)))))))))))))) << 0)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), ! (! (bool(bvec2(false, true))))))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
