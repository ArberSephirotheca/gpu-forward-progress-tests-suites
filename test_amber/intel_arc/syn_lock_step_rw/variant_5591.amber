#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0)))), float(_GLF_FUZZED(8948.6208)), bool(false))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(3.0)), vec2(_GLF_FUZZED(-5790.0011), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(96.31)), bool(false))), injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.7)), bool(false))), injectionSwitch.y))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(31.99))), 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, 1.0, 1.0))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x3(injectionSwitch, cos(0.0), 0.0, 1.0, 0.0))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, min(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | 0u), _GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | (gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, gl_WorkGroupSize.x)), max(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * uint(_GLF_ONE(1.0, injectionSwitch.y))), uint(uint(_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize)).x))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ _GLF_IDENTITY((gl_WorkGroupSize.x), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(num_workgroup) : (gl_WorkGroupSize.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (gl_WorkGroupSize.x)))) >> 0u)))) / (0u ^ 1u));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true), false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))) || false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false))), true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y)), true && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(true))), injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y))))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(min(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(658.202)), bool(false)))), max(min(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(658.202)), bool(false)))), min(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), mix(float(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-34.38) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)))), float(_GLF_FUZZED(658.202)), bool(false)))))))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), false))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), (injectionSwitch.x) - 0.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-91.81)), float(_GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), min((1.0), (1.0))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.7)), bool(false)))), max((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.7)), bool(false)))), _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.7)), bool(false)))), float(mat4x3((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7.7)), bool(false)))), 0.0, 0.0, 1.0, 1.0, sqrt(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))) * 1.0), (true ? 1.0 : _GLF_FUZZED(-80.07))), 1.0)), 1.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), (float(0.0)) * abs(1.0)))), 0.0, sqrt(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1940.1939) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), (float(mat3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1940.1939) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))) / 1.0))), 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-350.773)), _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-67.05)), bool(false))), (true ? _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), mix(float(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(5.8), _GLF_FUZZED(-81.47), _GLF_FUZZED(2046.2920), (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], (vec4(1.0, 1.0, 1.0, 1.0))[1], (vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED((+ -9.7))), bvec4(true, true, true, false))), vec4(1.0, 1.0, 1.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-67.05)), max(float(_GLF_FUZZED(-67.05)), float(_GLF_FUZZED(-67.05)))), bool(false))) : _GLF_FUZZED(39.96))), dot(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))), 1.0))) > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1940.1939) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), (float(mat3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1940.1939) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))) / 1.0))), 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-350.773)), _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-67.05)), bool(false))), (true ? _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), mix(float(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(5.8), _GLF_FUZZED(-81.47), _GLF_FUZZED(2046.2920), (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], (vec4(1.0, 1.0, 1.0, 1.0))[1], (vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED((+ -9.7))), bvec4(true, true, true, false))), vec4(1.0, 1.0, 1.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-67.05)), max(float(_GLF_FUZZED(-67.05)), float(_GLF_FUZZED(-67.05)))), bool(false))) : _GLF_FUZZED(39.96))), dot(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))), 1.0))) > injectionSwitch.y)), (! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, _GLF_IDENTITY(float(mat3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1940.1939) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0))))), (float(mat3((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x) - 0.0, exp(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(1940.1939) : _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-5.9)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)), dot(vec3(sqrt(1.0), 1.0, 0.0), vec3(0.0, 0.0, 1.0)))))) / 1.0))), 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-350.773)), _GLF_IDENTITY(float(1.0), (float(1.0)) - 0.0), bool(true))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), mix(float(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), float(_GLF_FUZZED(-67.05)), bool(false))), (true ? _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), mix(float(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), max(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, 1.0), mix(vec4(_GLF_FUZZED(5.8), _GLF_FUZZED(-81.47), _GLF_FUZZED(2046.2920), (vec4(1.0, 1.0, 1.0, 1.0))[3]), vec4((vec4(1.0, 1.0, 1.0, 1.0))[0], (vec4(1.0, 1.0, 1.0, 1.0))[1], (vec4(1.0, 1.0, 1.0, 1.0))[2], _GLF_FUZZED((+ -9.7))), bvec4(true, true, true, false))), vec4(1.0, 1.0, 1.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-67.05)), max(float(_GLF_FUZZED(-67.05)), float(_GLF_FUZZED(-67.05)))), bool(false))) : _GLF_FUZZED(39.96))), dot(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - 0.0), float(mat4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, sin(0.0), 1.0, 0.0, 0.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0))), 1.0))) > injectionSwitch.y))) && true)))), false || _GLF_IDENTITY((! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), 1.0, 1.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 0.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y))), ((! ((_GLF_IDENTITY(injectionSwitch.x, float(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, _GLF_IDENTITY((injectionSwitch.x) - 0.0, max((injectionSwitch.x) - 0.0, (injectionSwitch.x) - 0.0))), 1.0, 1.0, determinant(mat3(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, 1.0), vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0, 0.0, 0.0, sqrt(1.0))), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)))) > injectionSwitch.y)))) || false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), clamp(max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))), max(injectionSwitch.y, injectionSwitch.y), max(injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))), ! (! ((_GLF_IDENTITY(false, true && (false)))))) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (false)), (injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false)))))) || false))
      barrier();
    }
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) + ((1u & 1u) ^ 1u));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(max((workgroup_base), (workgroup_base)), (max((workgroup_base), (workgroup_base))) ^ 0u)) >> 0u) + subgroup_id * subgroup_size + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size + ((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)) + 1 : _GLF_FUZZED(subgroup_id), 0u + (_GLF_IDENTITY(true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id), (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id)) | (true ? subgroup_local_id + 1 : _GLF_FUZZED(subgroup_id))))), (true ? subgroup_local_id + 1 : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), min(_GLF_FUZZED(subgroup_id), _GLF_FUZZED(subgroup_id)))) | 0u)))) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))) / 1u), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))) / 1u))))))) | 0u)), 0u ^ ((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (1u & 1u) * (subgroup_local_id)) + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(181170u) : subgroup_local_id + 1))) % subgroup_size)))))) / 1u), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), min((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), 1u * ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))))) / 1u))))))) | 0u)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ _GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), _GLF_IDENTITY((subgroup_local_id + 1), 1u * ((subgroup_local_id + 1))))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u))))), (1u & 1u) * (subgroup_local_id)) + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), min(max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))) / 1u), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)) + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, (1) | (1))))) % subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u)) << (0u >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), uint(uint(uint(6u))))))) + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))) / 1u))))))) | 0u)), 0u ^ ((workgroup_base + subgroup_id * subgroup_size + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, 0u ^ (subgroup_local_id + 1))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((1u & 1u) * (subgroup_local_id), (_GLF_IDENTITY((1u & 1u) * (subgroup_local_id), uint(uvec3((1u & 1u) * (subgroup_local_id), 0u, 0u)))) / 1u)) + 1) % subgroup_size, 0u | ((subgroup_local_id + 1) % subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))))))) / 1u), 0u ^ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, max((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))))) / 1u))))))) | 0u)))) | (workgroup_base + subgroup_id * subgroup_size + ((subgroup_local_id + 1) % subgroup_size))) | 0u));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-2.0)), bool(false)))) * 1.0) > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3349.5967)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) < injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) && true)))), true))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) && true))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 0);
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bvec2(_GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec3(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), true)))), false))), _GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), false), bvec3(bvec4(bvec3(false, false, false), false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) && true))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(fract(injectionSwitch)))) : _GLF_FUZZED(tan(injectionSwitch)))).x > injectionSwitch.y)))) && true)))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-52.30)), bool(false)))), injectionSwitch.y)), (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-52.30)), 1.0 * (float(_GLF_FUZZED(-52.30)))), bool(false)))), injectionSwitch.y)))))), false, true))), (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-52.30)), bool(false)))), injectionSwitch.y)), (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-52.30)), 1.0 * (float(_GLF_FUZZED(-52.30)))), bool(false)))), injectionSwitch.y)))))), ! (! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(117.974) : 1.0)), 1.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), _GLF_ONE(1.0, injectionSwitch.y) * (float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(117.974) : 1.0)), 1.0))))), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)))), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(7.0, -5.4, -37.75, 200.754, -2458.1000, 4.3, 5.8, 8.5)) : mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))), clamp(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(7.0, -5.4, -37.75, 200.754, -2458.1000, 4.3, 5.8, 8.5)) : mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(7.0, -5.4, -37.75, 200.754, -2458.1000, 4.3, 5.8, 8.5)) : mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))), min(float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(7.0, -5.4, -37.75, 200.754, -2458.1000, 4.3, 5.8, 8.5)) : mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))), float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(7.0, -5.4, -37.75, 200.754, -2458.1000, 4.3, 5.8, 8.5)) : mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))))), float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0), (false ? _GLF_FUZZED(mat2x4(7.0, -5.4, -37.75, 200.754, -2458.1000, 4.3, 5.8, 8.5)) : mat2x4(injectionSwitch.y, length(vec2(0.0, 0.0)), 1.0, 0.0, abs(1.0), 0.0, determinant(mat2(0.0, 0.0, 1.0, 0.0)), 0.0)))))))) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), float(_GLF_FUZZED(-52.30)), bool(false)))), injectionSwitch.y)), (false ? _GLF_FUZZED(-5.4) : _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0)), mix(float(float(mat2x4(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(float(_GLF_FUZZED(-52.30)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-680.484)), float(1.0), bool(true))) * (float(_GLF_FUZZED(-52.30)))), bool(false)))), injectionSwitch.y))))))))), false, true)))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY(1, (1) | 0) * (1))))), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)), true)))), false || ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))) && true)), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) >> 0u)], read, _GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, 0), (true ? _GLF_IDENTITY(ivec2(4, 0), min(_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, max(0, 0)))))) / ivec2(_GLF_IDENTITY(1, int(ivec4(1, 0, 0, 0))), 1)), ivec2(4, _GLF_IDENTITY(0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(max((35958 - -64704), -65016)) : _GLF_IDENTITY(0, ~ (~ (0)))))))) : _GLF_FUZZED((82023 - ivec2(91704, -88679))))))), 64, _GLF_IDENTITY(4, clamp(4, 4, 4)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))), bvec2(bvec4(bvec2(false, true), false, false)))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, false)))), true)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-186.664, _GLF_IDENTITY(_GLF_IDENTITY(149.732, 1.0 * (149.732)), clamp(149.732, _GLF_IDENTITY(149.732, min(149.732, 149.732)), 149.732)), -66.08).g, _GLF_IDENTITY(max(vec3(-186.664, 149.732, _GLF_IDENTITY(-66.08, mix(float(_GLF_IDENTITY(-66.08, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-66.08, float(mat2x4(-66.08, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))), float(_GLF_IDENTITY(vec4(-66.08, determinant(mat3(0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(vec4(_GLF_IDENTITY(-66.08, (true ? _GLF_IDENTITY(-66.08, clamp(-66.08, -66.08, -66.08)) : _GLF_FUZZED(150.641))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), vec4(mat4x3(vec4(_GLF_IDENTITY(-66.08, (true ? _GLF_IDENTITY(-66.08, clamp(-66.08, -66.08, -66.08)) : _GLF_FUZZED(150.641))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), log(1.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))), cos(0.0), sqrt(1.0)), transpose(transpose(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0))))))))), clamp(-66.08, -66.08, -66.08)), _GLF_IDENTITY(-66.08, 0.0 + (-66.08)), -66.08))), float(_GLF_FUZZED(-8.3)), bool(false)))).g, vec3(-186.664, 149.732, -66.08).g), (max(vec3(-186.664, 149.732, _GLF_IDENTITY(-66.08, mix(float(_GLF_IDENTITY(-66.08, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-66.08, float(mat2x4(_GLF_IDENTITY(-66.08, mix(float(_GLF_FUZZED(-122.519)), float(-66.08), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0)), transpose(transpose(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0)))))))), float(mat4(float(_GLF_IDENTITY(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0)), transpose(transpose(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0)))))))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, abs(0.0), 0.0, 0.0, 1.0, tan(0.0), 0.0, determinant(mat4(log(1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), 1.0, _GLF_IDENTITY(dot(vec4(sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, exp(0.0))), dot(vec4(sqrt(1.0), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), vec4(0.0, 0.0, 0.0, exp(0.0)))), tan(0.0), 1.0)))), clamp(-66.08, -66.08, -66.08)), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-66.08, float(mat2x4(-66.08, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, tan(0.0) + (1.0)), 1.0)), 0.0))), float(_GLF_IDENTITY(vec4(-66.08, _GLF_IDENTITY(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), min(determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 0.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(-7.2))), 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0)), transpose(transpose(mat2x3(vec4(_GLF_IDENTITY(-66.08, (-66.08) + 0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0))))))))), clamp(-66.08, -66.08, _GLF_IDENTITY(-66.08, (_GLF_IDENTITY(-66.08, float(mat4(-66.08, tan(0.0), 1.0, sqrt(1.0), 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(1.0), 0.0, abs(1.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0)))) - 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-66.08, float(mat2x4(-66.08, _GLF_ONE(1.0, injectionSwitch.y), 0.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0))), float(_GLF_IDENTITY(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), vec4(_GLF_IDENTITY(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0)), transpose(transpose(mat2x3(vec4(-66.08, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), 0.0, 1.0), cos(0.0), sqrt(1.0))))))))), clamp(-66.08, -66.08, -66.08)))), _GLF_IDENTITY(-66.08, 0.0 + (-66.08)), _GLF_IDENTITY(-66.08, clamp(-66.08, -66.08, _GLF_IDENTITY(-66.08, float(_GLF_IDENTITY(vec2(-66.08, 1.0), mat2(1.0) * (vec2(-66.08, 1.0)))))))))), float(_GLF_FUZZED(-8.3)), bool(false)))).g, _GLF_IDENTITY(vec3(-186.664, 149.732, -66.08).g, min(vec3(-186.664, 149.732, -66.08).g, vec3(-186.664, 149.732, -66.08).g)))) / 1.0))) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true))))) || false)), (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))), bool(bvec4((! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) || false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) || false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), bool(bvec4(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) || false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), false, true, false)))) || false)) && true)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (_GLF_IDENTITY(bool(bool(((false)))), ! (_GLF_IDENTITY(! (bool(bool(((false))))), ! (! (! (bool(bool(((false))))))))))) || false))))), true, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(6369.0075))) > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), ! (! ((false)))))))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), _GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), _GLF_IDENTITY(true, true && (true)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && ((false))))), _GLF_IDENTITY(bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))))) || false)) && true)))))), bool(bvec3((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY((_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)), ! (! ((_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))))) || false)))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) || false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), false || (! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), ! (_GLF_IDENTITY(! (((false))), (! (((false)))) || false)))) && true)))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ((false)) && true)), ! (! (! (_GLF_IDENTITY((false), ((false)) && true))))))))))), true && ((false))))), bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false), true && ((false)))))), (! ((! (_GLF_IDENTITY((false), true && ((false))))))) && true))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true)))))), true, true)))), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) || false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true)))))), ((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) || false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true))))))) || false), bool(bvec3((! (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), false || (_GLF_IDENTITY(((false)), (((false))) && true)))))) && true))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && ((false)))), ! (! (! (_GLF_IDENTITY((false), true && ((false)))))))), bool(bvec4((! (_GLF_IDENTITY((false), true && _GLF_IDENTITY(((false)), _GLF_IDENTITY(bool(bool(((false)))), (bool(bool(((false))))) || false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY((false), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(! _GLF_IDENTITY((! (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), true && ((false))))), bool(bvec4((! (_GLF_IDENTITY((false), true && ((false))))), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)) && true)))))), true, true))))))))))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false, ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false)))))) || false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(vec2(-0.6, -0.4), injectionSwitch)) : injectionSwitch)), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0)), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(vec2(-0.6, -0.4), injectionSwitch)) : injectionSwitch)), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0)), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(vec2(-0.6, -0.4), injectionSwitch)) : injectionSwitch)), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0))))))))), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(vec2(-0.6, -0.4), injectionSwitch)) : injectionSwitch)), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0)), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(vec2(-0.6, -0.4), injectionSwitch)) : injectionSwitch)), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0)), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(step(vec2(-0.6, -0.4), injectionSwitch)) : injectionSwitch)), sin(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 1.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), sqrt(0.0)))))))))) * vec2(1.0, 1.0))).y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0))) > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false || (_GLF_IDENTITY(bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec4(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false, false)))), false, false, false))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
            barrier();
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))), false)), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bvec2(bvec4(bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, true)))))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), ! (! (_GLF_IDENTITY(bool(bool(true)), ! (! (bool(bool(true))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true, bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true, true), bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))) && true, true), true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_DEAD(false)), ! (! (false || (_GLF_DEAD(false))))), true, false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sqrt(1.0), 1.0, 0.0, 1.0, 0.0, 0.0))).x, _GLF_IDENTITY((injectionSwitch.x), min((injectionSwitch.x), (injectionSwitch.x))) / 1.0) > injectionSwitch.y)))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false, true), false))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), ! (! (bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false, true))))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), true && (bool(bvec4(! (! (_GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(bvec4(bool(bool((injectionSwitch.x > injectionSwitch.y))), true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) - vec2(0.0, 0.0)).y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[_GLF_IDENTITY(1, min(1, 1))]), vec2(_GLF_IDENTITY((injectionSwitch)[0], 0.0 + ((injectionSwitch)[0])), _GLF_FUZZED(-594.933)), bvec2(true, false))).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-24.11), (true ? _GLF_FUZZED(-24.11) : _GLF_FUZZED(-9871.3986))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-24.11), (true ? _GLF_FUZZED(-24.11) : _GLF_FUZZED(-9871.3986))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))[0], _GLF_FUZZED(-594.933)), bvec2(true, false))).x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(28509))), 0))))], _GLF_FUZZED(-594.933)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(7386.2216)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[1]), bvec2(true, true))).x), clamp(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(28509))), 0))))], _GLF_FUZZED(-594.933)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(7386.2216)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[1]), bvec2(true, true))).x), max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(28509))), 0))))], _GLF_FUZZED(-594.933)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(7386.2216)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[1]), bvec2(true, true))).x), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(28509))), 0))))], _GLF_FUZZED(-594.933)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(7386.2216)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[1]), bvec2(true, true))).x), (false ? _GLF_FUZZED(3.8) : max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, 1 * (_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(28509))), 0))))], _GLF_FUZZED(-594.933)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(9.6), _GLF_FUZZED(7386.2216)), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[0], (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))))[1]), bvec2(true, true))).x))))), _GLF_IDENTITY(float(mat4x3(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.8)), vec2(_GLF_FUZZED((- -3.1)), (injectionSwitch)[1]), bvec2(false, true))))[0], _GLF_FUZZED(-594.933)), bvec2(true, false))).x), 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-19.40))), 1.0, 0.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), min(vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0), vec4(0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))))), 1.0)))), min(float(mat4x3(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-24.11, clamp(-24.11, _GLF_IDENTITY(-24.11, clamp(-24.11, -24.11, -24.11)), _GLF_IDENTITY(-24.11, (-24.11) - 0.0))), (_GLF_IDENTITY(-24.11, clamp(-24.11, _GLF_IDENTITY(-24.11, clamp(-24.11, -24.11, -24.11)), _GLF_IDENTITY(-24.11, (-24.11) - 0.0)))) + 0.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)))) + vec2(0.0, 0.0))[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), vec2(1.0, 1.0) * (vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)))), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(-594.933)), _GLF_IDENTITY(vec2(mat3(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(-594.933)), sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0)), vec2(mat2x3(vec2(mat3(vec2(_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(-594.933)), sin(0.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0)))), bvec2(true, false))).x), 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))), float(mat4x3(max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)), max(vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-594.933, min(_GLF_IDENTITY(-594.933, sin(0.0) + (-594.933)), -594.933)))), vec2((injectionSwitch)[0], _GLF_FUZZED(-594.933)))), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.11), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], ((injectionSwitch)[0]) - 0.0), _GLF_FUZZED(-594.933)), bvec2(true, false))).x), 0.0, 1.0, exp(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0))))))))) - _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-9460.3180)), bool(false)))), bool(true)))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))))) && _GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(log(1.0), 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0), _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0, ((_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-3.2), min(_GLF_FUZZED(-3.2), _GLF_IDENTITY(_GLF_FUZZED(-3.2), (_GLF_FUZZED(-3.2)) + 0.0)))), bool(false)))) - 0.0) / cos(0.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(3.1)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(_GLF_IDENTITY(true, ! (! (true)))))), 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) / 1.0), min(_GLF_IDENTITY(1.0, (1.0) / 1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 0.0, 1.0, sin(0.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))))), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0)), (float(mat4x2(0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))) / 1.0)), 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.7)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0), transpose(transpose(mat2(float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0))))), min(float(_GLF_IDENTITY(mat2(float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.7)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0), transpose(transpose(mat2(float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0))))), float(_GLF_IDENTITY(mat2(float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4.7)), bool(false))), _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0), transpose(transpose(mat2(float(mat3x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-3.2)), bool(false)))) - 0.0), 0.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 0.0))))))))), 1.0)), dot(_GLF_IDENTITY(vec3(log(_GLF_IDENTITY(1.0, min(1.0, 1.0))), 0.0, 0.0), clamp(vec3(log(1.0), 0.0, 0.0), vec3(log(1.0), 0.0, 0.0), vec3(log(1.0), 0.0, 0.0))), vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-78.58) : 1.0)))))) < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0))))) + _GLF_IDENTITY((injectionSwitch.y), clamp(_GLF_IDENTITY((injectionSwitch.y), max((injectionSwitch.y), _GLF_IDENTITY((injectionSwitch.y), ((injectionSwitch.y)) / 1.0))), (injectionSwitch.y), (injectionSwitch.y)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, sin(0.0), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-3.9, -7.6, -43.03)[0]), max(_GLF_FUZZED(vec3(-3.9, -7.6, -43.03)[0]), _GLF_FUZZED(vec3(-3.9, -7.6, -43.03)[0]))) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-4.2)), bool(false))))), false)), true && (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
