#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_0 {
 uvec4 _f0;
 uint virtual_gid;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 ivec2 _f1;
 _GLF_struct_0 _f2;
 int _f3;
} ;

struct _GLF_struct_2 {
 uvec2 _f0;
 _GLF_struct_1 _f1;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))), bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_IDENTITY(true, true && (true))))), true, false, true)))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, sin(0.0))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, sin(0.0))))))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true))), true && (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(34.10, -132.601)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), true)))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))), true, true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(_GLF_IDENTITY(true, (true) && true), (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))), true, true)), bvec2(bvec3(bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), bvec2(bvec3(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))), true))), true, true)), false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true) || (false), bool(bvec3(false || (false), true, false)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))), false, false))), ! (! (_GLF_DEAD(false)))), (_GLF_DEAD(false)) && true))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false)))))), (false) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! _GLF_IDENTITY((! (bool(bvec4(false, true, false, false)))), ! (! ((! (bool(bvec4(false, true, false, false))))))))), (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true)), ! (! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))))))) || false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(58.85, 4.5)))))).y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)) && true))))) && true))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bvec3(bool(false), false, false), bvec3(bvec4(bvec3(bool(false), false, false), false)))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true)))))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, sin(0.0), 1.0, 0.0, exp(sqrt(0.0)), cos(0.0), round(length(normalize(1.0))), 0.0)), max(_GLF_IDENTITY(vec2(mat3(injectionSwitch, sin(0.0), 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(vec3(-616.792, -0.8, -1503.4753).s))), exp(sqrt(0.0)), cos(0.0), round(length(normalize(1.0))), _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), mix(vec2(_GLF_FUZZED(6.3), _GLF_FUZZED(-649.112)), vec2((vec2(mat3(injectionSwitch, sin(0.0), 1.0, 0.0, exp(sqrt(0.0)), cos(0.0), round(length(normalize(1.0))), 0.0)))[0], (vec2(mat3(injectionSwitch, sin(0.0), 1.0, 0.0, exp(sqrt(0.0)), cos(0.0), round(length(normalize(1.0))), 0.0)))[1]), bvec2(true, true))), vec2(_GLF_IDENTITY(mat3(injectionSwitch, sin(0.0), 1.0, 0.0, exp(sqrt(0.0)), cos(0.0), round(length(normalize(1.0))), 0.0), mat3(mat3(mat3(injectionSwitch, sin(0.0), 1.0, 0.0, exp(sqrt(0.0)), cos(0.0), round(length(normalize(1.0))), 0.0)))))))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && true))) && true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))), true, false, true))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(328.415)), float(_GLF_IDENTITY(injectionSwitch.y, float(vec3(injectionSwitch.y, 0.0, 0.0)))), bool(true)))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_2 _GLF_struct_replacement_2 = _GLF_struct_2(uvec2(1u), _GLF_struct_1(vec2(1.0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1))))), max(1, _GLF_IDENTITY(1, int(ivec2(1, 1)))))), _GLF_struct_0(uvec4(1u), workgroup_base + subgroup_id * subgroup_size + subgroup_local_id), _GLF_IDENTITY(1, (1) / 1)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))) && true, true && ((_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! _GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false)))))))) && true))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), false))))), false, false, false)))), ! (! (! (false))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? subgroup_size : _GLF_FUZZED(num_workgroup))), (_GLF_IDENTITY(0u, (0u) - (1u ^ 1u)) >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_size)), subgroup_size), (clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(uint(1u), uint(1u))) ^ (subgroup_size)), _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))) / (1u & 1u))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u), 0u | (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, (_GLF_IDENTITY(1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u + (_GLF_IDENTITY(1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), max(1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)))))), 1u, 1u))) * subgroup_size, clamp(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) >> 0u))), (workgroup_base + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(0u | (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, 0u | (subgroup_id * subgroup_size))), (0u | (workgroup_base + _GLF_IDENTITY(subgroup_id, max(subgroup_id, subgroup_id)) * subgroup_size)) | 0u))) | _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) - 0u))), _GLF_IDENTITY((false ? _GLF_FUZZED(176273u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))) ^ (subgroup_size)), subgroup_size)), max(workgroup_base + subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u))), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))))))) ^ (subgroup_size)), subgroup_size)), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))) ^ (subgroup_size)), subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ _GLF_IDENTITY((~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY((~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), 1u * ((~ (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))), (uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-6700.5872 / (- 9.3)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, true))).x)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec4(0u, 0u, 0u, 0u))))))), min((_GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-6700.5872 / (- 9.3)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, true))).x)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-6700.5872 / (- 9.3)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, true))).x)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec4(0u, 0u, 0u, 0u))))))), ((_GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((-6700.5872 / (- 9.3)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), (vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1])) * mat2(1.0)), bvec2(false, true))).x)))), ~ (~ (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) - 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ uvec4(0u, 0u, 0u, 0u)))))))) - 0u))))) << 0u), 0u | (workgroup_base + subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size))))) << 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) << 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), ~ (~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << 0u))))), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), ~ (~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u)), ~ (~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 1u, 1u))), subgroup_id)) * subgroup_size) << 0u))))))), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) << 0u))))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u | (6u))), min(uint(6u), uint(6u))))), 1u, 0u))) | (workgroup_base + subgroup_id * subgroup_size)) | 0u))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size))))) << 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, 1u * (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, max(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size)))), (workgroup_base + subgroup_id * subgroup_size) << 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), ~ (~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) << 0u))))), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), ~ (~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))))), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) << 0u)), ~ (~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(subgroup_id, uint(uvec4(subgroup_id, 0u, 1u, 1u))), subgroup_id)) * subgroup_size) << 0u))))))), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) | 0u)) << 0u))))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec4(0u, ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u | (6u))), min(uint(6u), uint(6u))))), 1u, 0u))) | (workgroup_base + subgroup_id * subgroup_size)) | 0u)))) - 0u) | 0u), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - (0u << _GLF_IDENTITY(uint(0u), uint(0u)))), (subgroup_id) / 1u) * _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)) : _GLF_FUZZED(197754u)))))), ((false ? _GLF_FUZZED(176273u) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))) ^ (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), max((false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) * (1u | 1u))))), subgroup_size)), max(workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), uint(uint(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))))) ^ (subgroup_size)), subgroup_size), min(clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), uint(uint(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))))) ^ (subgroup_size)), subgroup_size), clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), (_GLF_IDENTITY(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))), uint(uint(0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u)))))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))))) ^ (subgroup_size)), subgroup_size)))), workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), 1u * (_GLF_IDENTITY(uint(1u), uint(1u))))) ^ (subgroup_size)), subgroup_size)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), _GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), ~ (~ (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + log(1.0)), injectionSwitch.x))))))), (uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) | (_GLF_IDENTITY(uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-81863) : _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(0, min(0, 0)), 0, 0), ~ (~ (clamp(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) | (0)), 0)))))))], _GLF_FUZZED((-6700.5872 / (- 9.3)))), vec2(_GLF_FUZZED(-4.1), (injectionSwitch)[1]), bvec2(false, true))).x)))), ~ (~ (uint(uvec4((workgroup_base + subgroup_id * subgroup_size), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) << 0u), 0u | (workgroup_base + subgroup_id * subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, clamp(_GLF_IDENTITY(subgroup_id * subgroup_size, min(subgroup_id * subgroup_size, _GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) << 0u))), subgroup_id * subgroup_size, subgroup_id * subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_id * subgroup_size), 0u ^ (_GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), ((workgroup_base + subgroup_id * subgroup_size)) | ((workgroup_base + subgroup_id * subgroup_size))))) << 0u), clamp(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))) * subgroup_size, _GLF_IDENTITY((workgroup_base + subgroup_id * subgroup_size), 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_id * subgroup_size))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_id * subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u & 115324u))), 0u | (uint(uvec4(subgroup_id * subgroup_size, 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), (0u & 115324u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, min(workgroup_base + subgroup_id * subgroup_size, workgroup_base + subgroup_id * subgroup_size))) + 0u)) << 0u), (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) ^ 0u)) / 1u)) << 0u)) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)) + subgroup_id * subgroup_size) << 0u), _GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 0u))) * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)) << 0u)) << 0u)), min(_GLF_IDENTITY(0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u)), ~ (~ (0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))))), 0u + (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, (workgroup_base + subgroup_id * subgroup_size) << 0u))))))), _GLF_IDENTITY(0u | (_GLF_IDENTITY(workgroup_base + subgroup_id * subgroup_size, uint(uvec4(workgroup_base + subgroup_id * subgroup_size, 0u, 0u, 0u)))), (_GLF_IDENTITY(0u, uint(uvec4(0u, ((_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, clamp(_GLF_IDENTITY(6u, 0u | (_GLF_IDENTITY(6u, (6u) / 1u))), 6u, 6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))))), 1u, 0u))) | (workgroup_base + subgroup_id * subgroup_size)) | 0u))) | 0u), workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY((subgroup_id) / 1u, 0u | ((subgroup_id) / 1u))) * subgroup_size, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY((subgroup_id) / 1u, 0u | ((subgroup_id) / 1u))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY((subgroup_id) / 1u, 0u | ((subgroup_id) / 1u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY((subgroup_id) / 1u, 0u | ((subgroup_id) / 1u))) * subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, 0u | (subgroup_id)), _GLF_IDENTITY((subgroup_id) / 1u, 0u | ((subgroup_id) / 1u))) * subgroup_size) * 1u)) << 0u))))))) + 0u)) + ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2((false), false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), true && (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))))), (_GLF_IDENTITY(false, false || (false))) || _GLF_IDENTITY(false, true && (false)))) && true)))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), true && (false || (false)))), ! (! (! (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), true && (false || (false)))), ! (! (! (_GLF_IDENTITY(false || (false), true && (false || (false)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(false || _GLF_IDENTITY((false), ((false)) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (false), true && (false || (false)))), ! (! (! (_GLF_IDENTITY(false || (false), true && (false || (false))))))))))) || false)) && true)), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) || false))))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec4(bvec3((false), true, false), false)))))))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), false || ((_GLF_IDENTITY(false, false || (false)))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((_GLF_IDENTITY(false, false || (false)))))), true && ((_GLF_IDENTITY(false, false || (false)))))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false)))))) || false), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false)))))) || false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), (_GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), true && ((_GLF_IDENTITY(false, false || (false)))))) || false), false), false, true))), true, false))))))))) || false) || false)) && true))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[_GLF_struct_replacement_2._f1._f2.virtual_gid], 4, 64, _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) << 0))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true))))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false))), false)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), bool(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))))
      return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(_GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0, (0) - 0), 0), (min(0, 0)) | (_GLF_IDENTITY(min(0, 0), 0 | (min(_GLF_IDENTITY(0, (0) - 0), 0))))), ~ (_GLF_IDENTITY(~ (min(0, 0)), ~ (~ (~ (min(0, 0)))))))) + 0)) ^ 0)) ^ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(_GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0, (0) - 0), 0), (min(0, 0)) | (_GLF_IDENTITY(min(0, 0), 0 | (min(_GLF_IDENTITY(0, (0) - 0), 0))))), ~ (_GLF_IDENTITY(~ (min(0, 0)), ~ (~ (~ (min(0, 0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0, (0) - 0), 0), (min(0, 0)) | (_GLF_IDENTITY(min(0, 0), 0 | (min(_GLF_IDENTITY(0, (0) - 0), 0))))), ~ (_GLF_IDENTITY(~ (min(0, 0)), ~ (~ (~ (min(0, 0))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(0, (0) - 0), 0), (min(0, 0)) | (_GLF_IDENTITY(min(0, 0), 0 | (min(_GLF_IDENTITY(0, (0) - 0), 0))))), ~ (_GLF_IDENTITY(~ (min(_GLF_IDENTITY(0, (0) ^ (0 << _GLF_IDENTITY(int(4), int(4)))), 0)), ~ (~ (~ (min(0, 0)))))))))))))) + 0)) ^ 0)) ^ (_GLF_IDENTITY(1, clamp(1, 1, 1))))) << 0)), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, 0), ~ _GLF_IDENTITY((~ (min(0, 0))), clamp(_GLF_IDENTITY((~ (min(0, 0))), max((~ (min(0, 0))), (~ (min(0, 0))))), (~ (min(0, 0))), (~ (min(0, 0))))))) ^ 0)) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (clamp(1, 1, 1)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) * 1), _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))) ^ 0)) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (clamp(1, 1, 1)))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))) ^ 0)) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (clamp(1, 1, 1))))))) - 0)) | (_GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, 0), ~ (~ (min(0, 0))))) ^ 0)) ^ (_GLF_IDENTITY(1, _GLF_IDENTITY(clamp(1, 1, 1), (clamp(1, 1, 1)) | (clamp(1, 1, 1)))))))), (true ? _GLF_IDENTITY(1, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0), 0))), ~ _GLF_IDENTITY((~ (min(0, 0))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), max(_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) | (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), min(0 | ((~ (min(0, 0)))), 0 | ((~ (min(0, 0)))))))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) << 0)) | (0 | ((~ (min(0, 0))))))))))) ^ 0), clamp(_GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0), 0))), ~ _GLF_IDENTITY((~ (min(0, 0))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), max(_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) | (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), min(0 | ((~ (min(0, 0)))), 0 | ((~ (min(0, 0)))))))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) << 0)) | (0 | ((~ (min(0, 0))))))))))) ^ 0), _GLF_IDENTITY(_GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0), 0))), ~ _GLF_IDENTITY((~ (min(0, 0))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), max(_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) | (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), min(0 | ((~ (min(0, 0)))), 0 | ((~ (min(0, 0)))))))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) << 0)) | (0 | ((~ (min(0, 0))))))))))) ^ 0), clamp(_GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0), 0))), ~ _GLF_IDENTITY((~ (min(0, 0))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), max(_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) | (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), min(0 | ((~ (min(0, 0)))), 0 | ((~ (min(0, 0)))))))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) << 0)) | (0 | ((~ (min(0, 0))))))))))) ^ 0), _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0), 0))), ~ _GLF_IDENTITY((~ (min(0, 0))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), max(_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) | (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), min(0 | ((~ (min(0, 0)))), 0 | ((~ (min(0, 0)))))))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) << 0)) | (0 | ((~ (min(0, 0))))))))))) ^ 0), _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0), 0))), ~ _GLF_IDENTITY((~ (min(0, 0))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), max(_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) | (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), min(0 | ((~ (min(0, 0)))), 0 | ((~ (min(0, 0)))))))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) << 0)) | (0 | ((~ (min(0, 0))))))))))) ^ 0))), _GLF_IDENTITY(min(0, 0), (_GLF_IDENTITY(min(0, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) ^ 0)) ^ 0), 0))), ~ _GLF_IDENTITY((~ (min(0, 0))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), max(_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) | (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), min(0 | ((~ (min(0, 0)))), 0 | ((~ (min(0, 0)))))))), _GLF_IDENTITY(0 | ((~ (min(0, 0)))), (_GLF_IDENTITY(0 | ((~ (min(0, 0)))), (0 | ((~ (min(0, 0))))) << 0)) | (0 | ((~ (min(0, 0))))))))))) ^ 0)))) ^ _GLF_IDENTITY((_GLF_IDENTITY(1, clamp(1, 1, 1))), 0 ^ ((_GLF_IDENTITY(1, clamp(1, 1, 1)))))) : _GLF_FUZZED(int(-1.2))))))), 4, 64, 4);
 atomicStore(checker[_GLF_struct_replacement_2._f1._f2.virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((read) | (read), ((read) | (read)) | ((read) | (read)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) * 1), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) && true))))), ! (! ((_GLF_IDENTITY(! ((_GLF_DEAD(false))), true && (_GLF_IDENTITY(! ((_GLF_DEAD(false))), (! ((_GLF_DEAD(false)))) && _GLF_IDENTITY(true, (true) && true)))))))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false)))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (! _GLF_IDENTITY((! ((_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((! _GLF_IDENTITY(((_GLF_DEAD(false))), true && (((_GLF_DEAD(false)))))))))), false || (_GLF_IDENTITY((! (! (! ((_GLF_DEAD(false)))))), ((! (! (! ((_GLF_DEAD(false))))))) || false))), (! (! (! (! ((_GLF_DEAD(false))))))) && true))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))).y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_IDENTITY(_GLF_FUZZED(2.5), (_GLF_FUZZED(2.5)) / 1.0), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(-68.93))))))), injectionSwitch.y))) - 0.0))), bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(-68.93))))))), injectionSwitch.y))), ((_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(2.5), clamp(_GLF_FUZZED(2.5), _GLF_FUZZED(2.5), _GLF_IDENTITY(_GLF_FUZZED(2.5), (true ? _GLF_FUZZED(2.5) : _GLF_FUZZED(-68.93))))))), injectionSwitch.y)))) + tan(0.0)) - _GLF_IDENTITY(0.0, (0.0) * 1.0)))), false, true))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true) || (true)), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), bool(bvec4(! ((_GLF_IDENTITY(false, (false) && true))), false, false, true)))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), false, false))) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))), false, false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))), bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))), false, false, true))))))))) || (_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), (false) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), bool(bvec3(_GLF_IDENTITY((! (false)), bool(bool(_GLF_IDENTITY((! (false)), ! (! ((! (false)))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (false) && true))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (! (false)))))), (false) && true))))))))))) && true), (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))), ! (! (bool(bool(_GLF_IDENTITY(true, bool(bvec2(true, true)))))))))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), (false) && true)), _GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), (false) && true)))), false || (_GLF_IDENTITY(bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), (false) && true)))), true && (bool(bool(false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false)))))), (false) && true)))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (! (false)))))), (false) && true))))))))))) && true), ! (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) && true)))))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (false) && true))), true)), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (false) && true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (false) && true), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))), ! (! ((_GLF_IDENTITY(! (false), ! (! (! _GLF_IDENTITY((false), ((false)) || false))))))))), (false) && true))), true))) || false)) || false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), false))) && (_GLF_IDENTITY(! (false), ! (! (! (false)))))), ! (! (! (false)))))), (false) && true))))))))))) && true))))) || false))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (false) && true)))), false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), bool(bvec3(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, false)))) || false)))))))), true, false))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), (false || (_GLF_IDENTITY(false, (false) && true))) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 1.0))), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))]))), vec2(_GLF_FUZZED(-30.69), _GLF_FUZZED(67.45)), bvec2(false, false))).y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))))))))) && true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)), false || (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), true, false))))))), false || (((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))) || (_GLF_IDENTITY(false, (false) && true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), false, false)))) && true))))), _GLF_IDENTITY((false), false || ((false))) && true))))))))))) && true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), true, true))))))), false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), true, false))))))))), (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), (false || (_GLF_IDENTITY(false, (false) && true))) || false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) && true)), (false || (_GLF_IDENTITY(false, (false) && true))) || false))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))), false, false)))) && _GLF_IDENTITY(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 1.0))), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))]))), vec2(_GLF_FUZZED(-30.69), _GLF_FUZZED(67.45)), bvec2(false, false))).y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true))), false || (_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0)), vec2(mat2x3(vec2(mat4(injectionSwitch, 1.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0)), 1.0, 1.0, 1.0, tan(0.0))))).x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min(_GLF_IDENTITY((injectionSwitch)[1], float(mat3x2((injectionSwitch)[1], 1.0, 1.0, 0.0, 1.0, 1.0))), (injectionSwitch)[_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), clamp(int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(int(1), _GLF_IDENTITY((int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)), ((int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y))) | ((int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))))), int(_GLF_IDENTITY(int(1), (int(1)) * int(_GLF_ONE(1.0, injectionSwitch.y)))))))]))), vec2(_GLF_FUZZED(-30.69), _GLF_FUZZED(67.45)), bvec2(false, false))).y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))))) || (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true)))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))), ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, false, true)), false)))))), (false) && true))))))))))) && true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true)))), false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), true, true, true)), false || (bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), bool(bvec3(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), true, false))))))), false || (((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((injectionSwitch.x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y))))), (bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)), true && (bool((injectionSwitch.x < injectionSwitch.y)))))) && true)))) || (_GLF_IDENTITY(false, (false) && true)))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))), false || ((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY((false), ! (! ((false)))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))), (false) && true)))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true))))) || false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), (false) && true)) || false))))), bool(bool((_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), (! (false)) || false))))))), false, false)))) && true))))), _GLF_IDENTITY((false), false || ((false))) && true))))))))))) && true))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || false)))) && _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, (false) && true))))), true, true))))))), false))))))) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false))))), true && (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false), false)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, _GLF_IDENTITY(true, false || (true)), true))))), bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(injectionSwitch.x < injectionSwitch.y, true, true, true))))))), true, false)))))))))) || false), true, true, false)))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) && true) && ((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(403.443)), vec2(_GLF_FUZZED(9.4), (injectionSwitch)[1]), bvec2(false, true))), _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0))), sqrt(_GLF_IDENTITY(1.0, (1.0) / 1.0)), 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0))))).y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), 0.0, 0.0, sqrt(1.0), 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), sqrt(1.0), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)))), (true ? _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))), 0.0, 0.0, sqrt(1.0), 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), sqrt(1.0), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)))) : _GLF_FUZZED(injectionSwitch)))).y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, abs(vec2(1.0, 1.0)) * (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)), clamp(vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)), vec2(mat2x3(injectionSwitch, 0.0, 0.0, sqrt(1.0), 1.0)), vec2(mat2x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.9), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(39.19)), bvec2(true, false))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(sqrt(1.0), min(sqrt(1.0), sqrt(1.0))), 1.0))))).y))))))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(abs(1.0), (true ? abs(1.0) : _GLF_FUZZED(-3889.0990))), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y)))), true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(2.2, 0.6)) : injectionSwitch)), vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y)))))))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1835.1794) : injectionSwitch.x)) < injectionSwitch.y)), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))) && true)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), ! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))))), false || (false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-1727.2084)), bool(false))))))), true, false)))))))))))))), true && _GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(32.20, max(32.20, 32.20)))), bvec2(true, false))))).x < injectionSwitch.y)), true, true, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) < injectionSwitch.y)), bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(2168.3268)), bool(false))))), true, true, true)))), ! (! ((_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)))), bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true, _GLF_IDENTITY(true, false || (true))))))))))))))), ! (! (true && (! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, true))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(9.7)))))), 1.0)), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (true ? (1.0) - 0.0 : _GLF_FUZZED(9.7)))))), 1.0)), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x) - 0.0) < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0) - 0.0, (true ? _GLF_IDENTITY((1.0) - 0.0, max(_GLF_IDENTITY((1.0) - 0.0, ((1.0) - 0.0) / 1.0), (1.0) - 0.0)) : _GLF_FUZZED(33.88)))))), 1.0)), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, false, true)), _GLF_IDENTITY(false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-45.69) : 1.0)), 1.0)))), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, false, true))), (false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-45.69) : 1.0)), 1.0)))), 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y, false, true)))) && true))), false || (_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))), 1.0)), 1.0, _GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(clamp(_GLF_IDENTITY(abs(1.0), mix(float(abs(1.0)), float(_GLF_FUZZED((-6.8 + 0.9))), bool(false))), abs(1.0), abs(1.0)), (true ? clamp(abs(1.0), abs(1.0), abs(1.0)) : _GLF_FUZZED(4.1)))), 0.0, 0.0, 1.0, 1.0, 1.0))).x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < injectionSwitch.y), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true)))), bvec3(bvec4(bvec3((injectionSwitch.x < injectionSwitch.y), false, false), false))))), _GLF_IDENTITY(! (! ((injectionSwitch.x < injectionSwitch.y))), (! (! _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), (false ? _GLF_FUZZED(1835.1794) : injectionSwitch.x)) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(1835.1794), clamp(_GLF_IDENTITY(_GLF_FUZZED(1835.1794), clamp(_GLF_FUZZED(1835.1794), _GLF_FUZZED(1835.1794), _GLF_IDENTITY(_GLF_FUZZED(1835.1794), clamp(_GLF_FUZZED(1835.1794), _GLF_FUZZED(1835.1794), _GLF_FUZZED(1835.1794))))), _GLF_FUZZED(1835.1794), _GLF_IDENTITY(_GLF_FUZZED(1835.1794), clamp(_GLF_FUZZED(1835.1794), _GLF_FUZZED(1835.1794), _GLF_FUZZED(1835.1794))))) : injectionSwitch.x)) < injectionSwitch.y))))), bool(bvec2(((injectionSwitch.x < injectionSwitch.y)), true))))) && true)))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, true && (false)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false), bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), _GLF_IDENTITY(bvec2(true, false), bvec2(bvec3(bvec2(true, false), true))))))).x < injectionSwitch.y)), true, _GLF_IDENTITY(true, false || (true)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(32.80), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))))[0], _GLF_FUZZED(-3732.1575)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))))))).x, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))), mix(vec2(_GLF_FUZZED(32.80), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))))[0], _GLF_FUZZED(-3732.1575)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))))))).x) / 1.0) < injectionSwitch.y)), true, _GLF_IDENTITY(true, (true) || false), true)))), ! (! (! (_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.7), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(32.20)), bvec2(true, false))))).x < injectionSwitch.y)), true, true, true)))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) < injectionSwitch.y)), bool(bvec4((_GLF_DEAD(false)) && _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true)))))))), false || (_GLF_IDENTITY(true, (true) && true))), (injectionSwitch.x < injectionSwitch.y)), true, true, true)))), ! (! _GLF_IDENTITY(((_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, _GLF_IDENTITY(true, false || (true))))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, _GLF_IDENTITY(true, false || (true))))))), ! (! (((_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(_GLF_IDENTITY(bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false || (bool((_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), true, true, _GLF_IDENTITY(true, false || (true))))))))))))))))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
