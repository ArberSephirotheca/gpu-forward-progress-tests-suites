#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat3x2 _f0;
 int _f1;
 uvec4 _f2;
 ivec2 _f3;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 mat3 _f1;
 ivec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_5 {
 uvec3 _f0;
 bvec2 _f1;
 uvec4 _f2;
 uvec4 _f3;
 mat4x3 _f4;
 int _f5;
 vec2 _f6;
} ;

struct _GLF_struct_8 {
 _GLF_struct_5 _f0;
 ivec4 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 uvec2 _f1;
 bool _f2;
 mat3x4 _f3;
 uint virtual_gid;
 bvec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_4 {
 _GLF_struct_3 _f0;
} ;

struct _GLF_struct_2 {
 bvec3 _f0;
 mat2x3 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_0 {
 bool _f0;
 bvec4 _f1;
 float _f2;
 mat3x2 _f3;
 mat4x2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_1 {
 _GLF_struct_0 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_9 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 _GLF_struct_4 _f2;
 uvec4 _f3;
 bvec2 _f4;
 _GLF_struct_8 _f5;
 vec4 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base;
 uvec4 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.w = subgroup_size;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.y = subgroup_local_id;
  }
 else
  {
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.x = _GLF_IDENTITY(num_workgroup, 0u + (_GLF_IDENTITY(num_workgroup, (num_workgroup) | 0u)));
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) / 1u, min((workgroup_size) / 1u, (workgroup_size) / 1u))), (_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u)) << 0u) * workgroup_id;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.w = workgroup_base;
 uint subgroup_base = GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.z * GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.w;
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.x = subgroup_base;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(_GLF_struct_1(_GLF_struct_0(true, bvec4(true), 1.0, mat3x2(1.0), mat4x2(1.0), uvec4(1u)), mat3x4(1.0)), _GLF_struct_2(bvec3(true), mat2x3(1.0), mat3x4(1.0)), _GLF_struct_4(_GLF_struct_3(uvec2(1u), uvec2(1u), _GLF_IDENTITY(true, (true) || false), mat3x4(1.0), GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.w + _GLF_IDENTITY(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.x, _GLF_IDENTITY(~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.x)), (~ (~ (GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.x))) >> (0u << _GLF_IDENTITY(uint(3u), uint(3u))))) + GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.y, bvec2(true), uvec3(1u))), uvec4(1u), bvec2(true), _GLF_struct_8(_GLF_struct_5(uvec3(1u), bvec2(true), uvec4(1u), uvec4(1u), mat4x3(1.0), 1, vec2(1.0)), ivec4(1), _GLF_struct_6(ivec2(1), mat3(1.0), ivec4(1), mat2x4(1.0)), _GLF_struct_7(mat3x2(1.0), 1, uvec4(1u), ivec2(1))), vec4(1.0));
 GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.z = _GLF_struct_replacement_9._f2._f0.virtual_gid;
 atomicStore(write_val, uint(GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.z), 4, 64, 4);
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y = read_val;
 buf[GLF_merged4_0_1_13_1_1_17_2_1_11_3_1_14subgroup_basesubgroup_local_idvirtual_gidworkgroup_base.z] = uint(subgroupAllEqual(GLF_merged4_0_1_13_1_1_8_2_1_11_3_1_13num_workgroupread_valsubgroup_idsubgroup_size.y));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
