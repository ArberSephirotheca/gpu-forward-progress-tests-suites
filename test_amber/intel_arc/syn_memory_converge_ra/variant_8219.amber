#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(float(36745u))), bool(false))), bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true), bvec3(bvec3(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))))), true, true)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, ((uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(7u), uvec3(7u))) & uvec3(182819u, 82896u, 4425u)) + (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))), max(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true)))))), ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, false), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, false))))))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(mat4x2(injectionSwitch[0], 1.0, 1.0, sin(0.0), 1.0, 1.0, 1.0, 0.0))), injectionSwitch[1])).x > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), true && (! (injectionSwitch.x > injectionSwitch.y))))))))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.7)), vec2(_GLF_FUZZED((true ? 436.732 : float(-71104))), (injectionSwitch)[1]), bvec2(false, true))).y))), false)))) || false), ! (! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(2.7)), vec2(_GLF_FUZZED((true ? 436.732 : float(-71104))), (injectionSwitch)[1]), bvec2(false, true))).y))), false)))) || false)))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, sqrt(1.0) * (injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(0.5)), float(injectionSwitch.y), bool(true)))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (bool((_GLF_DEAD(false)))), false || (! (bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), _GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false)), false || (_GLF_IDENTITY(bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false)), ! (! (bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))), true && (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))), false, true)), (bool(bvec3((_GLF_DEAD(false)), false, true))) && true)))), bool(bvec3(bool(bool(_GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3((_GLF_DEAD(false)), false, true)), (bool(bvec3((_GLF_DEAD(false)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), true))) && true)))), true, false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), false))))))))))))))))), ! (! (_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), false || (bool(bool((_GLF_DEAD(false))))))))), bool(bvec4(_GLF_IDENTITY(bool(bool((_GLF_DEAD(false)))), ! (! (bool(bool((_GLF_DEAD(false))))))), true, true, true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), bool(bvec2(bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false)))))), false)))))))) && true), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false)))))))) && true)), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) && true) && true)) || false), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))), false)))))))) && true))))) && true), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))), true, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true))))), false)))))))) && true)))) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, _GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (bool(bool(! (false)))))))))), true))))), false || (bool(bvec3(_GLF_DEAD(false), false, false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-29.40)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true)))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), vec2(1.0, 1.0) * ((injectionSwitch))))), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))), _GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[1])).y)), mat2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[1])).y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[1])).y))) / mat2(1.0, 1.0, 1.0, 1.0))), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[1])).y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[1])).y))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(mat3(mat2(_GLF_IDENTITY(mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[1])).y)), (mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0))))[1])).y))) / mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(88.49, -3.4, 2.7, -596.599)))))) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))), vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, sqrt(1.0), 0.0, abs(0.0)))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))) / vec2(1.0, 1.0)))).x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(1.0), 1.0, 1.0, 1.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(1.0), 1.0, 1.0, 1.0))))), mix(float(float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(1.0), 1.0, 1.0, 1.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, cos(0.0), abs(1.0), 1.0, 1.0, 1.0)))))), float(_GLF_FUZZED(4.1)), bool(false)))))) > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (subgroup_id))), max((~ (~ (subgroup_id))), (~ (~ (subgroup_id))))), (~ _GLF_IDENTITY((~ (~ (subgroup_id))), max(_GLF_IDENTITY((~ (~ (subgroup_id))), ~ (~ (_GLF_IDENTITY((~ (~ (subgroup_id))), ((~ (~ (subgroup_id)))) | (_GLF_IDENTITY((~ (~ (subgroup_id))), 0u + ((~ (~ (subgroup_id)))))))))), (~ (~ (subgroup_id)))))) | (~ _GLF_IDENTITY((~ (~ (subgroup_id))), max(_GLF_IDENTITY((~ (~ (subgroup_id))), ((~ (~ (subgroup_id)))) >> 0u), (~ (~ (subgroup_id))))))))), min(~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (subgroup_id))), max((~ (~ (subgroup_id))), (~ (~ (subgroup_id))))), (~ _GLF_IDENTITY((~ (~ (subgroup_id))), max(_GLF_IDENTITY((~ (~ (subgroup_id))), ~ (~ (_GLF_IDENTITY((~ (~ (subgroup_id))), ((~ (~ (subgroup_id)))) | (_GLF_IDENTITY((~ (~ (subgroup_id))), 0u + ((~ (~ (subgroup_id)))))))))), (~ (~ (subgroup_id)))))) | (~ _GLF_IDENTITY((~ (~ (subgroup_id))), max(_GLF_IDENTITY((~ (~ (subgroup_id))), ((~ (~ (subgroup_id)))) >> 0u), (~ (~ (subgroup_id))))))))), ~ (_GLF_IDENTITY(~ (subgroup_id), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (subgroup_id))), max((~ (~ (subgroup_id))), (~ (~ (subgroup_id))))), (~ _GLF_IDENTITY((~ (~ (subgroup_id))), max(_GLF_IDENTITY((~ (~ (subgroup_id))), ~ (~ (_GLF_IDENTITY((~ (~ (subgroup_id))), ((~ (~ (subgroup_id)))) | (_GLF_IDENTITY((~ (~ (subgroup_id))), 0u + ((~ (~ (subgroup_id)))))))))), (~ (~ (subgroup_id)))))) | (~ _GLF_IDENTITY((~ (~ (subgroup_id))), max(_GLF_IDENTITY((~ (~ (subgroup_id))), ((~ (~ (subgroup_id)))) >> 0u), (~ (~ (subgroup_id)))))))))))) * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), true, false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), ! (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))), true, false, true)), false))))))), true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(true, bool(bool(true))) && (false))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.9))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(0.9))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) : _GLF_IDENTITY(_GLF_FUZZED(0.9), clamp(_GLF_FUZZED(0.9), _GLF_FUZZED(0.9), _GLF_FUZZED(0.9))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true, true), false)))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))), false))), false)))), true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) * 1), clamp(4, 4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY((false) || false, true && ((false) || false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), (atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2)) | (_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), min(atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2), atomicLoad(write_val, _GLF_IDENTITY(4, ~ (~ (4))), 64, 2))))), (atomicLoad(write_val, 4, 64, 2)) >> 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max(_GLF_IDENTITY((4) / 1, ((4) / 1) << 0), (4) / 1))), 64, 2), min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), uint(uvec3(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, uint(uvec4(write_val, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true))))), clamp(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true))))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true))))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true)))))))).x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), mix(float(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), float(_GLF_FUZZED(float(103147u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(_GLF_IDENTITY(29.82, (_GLF_IDENTITY(true ? 29.82 : _GLF_FUZZED(6552.3280), clamp(true ? 29.82 : _GLF_FUZZED(6552.3280), true ? 29.82 : _GLF_FUZZED(6552.3280), _GLF_IDENTITY(true ? 29.82 : _GLF_FUZZED(6552.3280), (true ? 29.82 : _GLF_FUZZED(6552.3280)) - 0.0)))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))))).x)))), (0u | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), bool(bvec2(false, true))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(write_val, uint(uvec4(write_val, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), max(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))))), _GLF_FUZZED(-0.6)), _GLF_IDENTITY(vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), (vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1])) - vec2(0.0, 0.0)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), max(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))))), _GLF_FUZZED(-0.6)), _GLF_IDENTITY(vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), (vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1])) - vec2(0.0, 0.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), true)))))))).x))))) << 0u), (0u | 0u)))))), 4, 64, 2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), atomicLoad(write_val, 4, 64, 2)))) | (atomicLoad(write_val, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-87220) : 64)), 2)), uint(uint((_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), uint(uvec3(atomicLoad(_GLF_IDENTITY(write_val, uint(uvec4(write_val, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))), 4, 64, 2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), atomicLoad(_GLF_IDENTITY(write_val, (write_val) - 0u), 4, 64, 2)))) | (atomicLoad(write_val, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-87220) : _GLF_IDENTITY(64, (64) | 0))), 2))))), (_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(write_val, _GLF_IDENTITY(4, _GLF_IDENTITY((4) / 1, max(_GLF_IDENTITY((4) / 1, ((4) / 1) << 0), (4) / 1))), 64, 2), min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), uint(uvec3(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(write_val, uint(uvec4(write_val, 1u, _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true))))), clamp(mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true))))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true))))), mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))[0]), float(_GLF_FUZZED(15.72)), bool(_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(_GLF_FUZZED(-0.6), float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), transpose(transpose(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0), mat2(1.0) * (mat3x2(_GLF_IDENTITY(_GLF_FUZZED(-0.6), max(_GLF_IDENTITY(_GLF_FUZZED(-0.6), (false ? _GLF_FUZZED(-2657.0040) : _GLF_FUZZED(-0.6))), _GLF_FUZZED(-0.6))), 1.0, sin(abs(0.0)), determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0))))))))), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-4.7))))), _GLF_IDENTITY(true, ! (! (true)))))))).x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), mix(float(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), float(_GLF_FUZZED(float(103147u))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch))), ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) * mat2(1.0))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), _GLF_IDENTITY(true, ! (! (true)))))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(_GLF_IDENTITY(29.82, (_GLF_IDENTITY(true ? 29.82 : _GLF_FUZZED(6552.3280), clamp(true ? 29.82 : _GLF_FUZZED(6552.3280), true ? 29.82 : _GLF_FUZZED(6552.3280), _GLF_IDENTITY(true ? 29.82 : _GLF_FUZZED(6552.3280), (true ? 29.82 : _GLF_FUZZED(6552.3280)) - 0.0)))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))), injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))))).x)))), (0u | 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))), bool(bvec2(false, true))) ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(write_val, uint(uvec4(write_val, 1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), max(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))))), _GLF_FUZZED(-0.6)), _GLF_IDENTITY(vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), (vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1])) - vec2(0.0, 0.0)), _GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), bvec2(bvec3(bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))))).x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], _GLF_IDENTITY(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), max(mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false)), mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))))), _GLF_FUZZED(-0.6)), _GLF_IDENTITY(vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), (vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1])) - vec2(0.0, 0.0)), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x)), (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true)))))).x))) | (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(15.72)), bool(false))), _GLF_FUZZED(-0.6)), vec2(_GLF_FUZZED(29.82), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[1]), _GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), bvec2(bvec3(bvec2(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))), true)))))))).x))))) << 0u), (0u | 0u)))))), 4, 64, 2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), atomicLoad(write_val, 4, 64, 2)))) | (atomicLoad(write_val, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-87220) : 64)), 2)), uint(uint((_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), min(_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), uint(uvec3(atomicLoad(_GLF_IDENTITY(write_val, uint(uvec4(write_val, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u)))), 4, 64, 2), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))), atomicLoad(_GLF_IDENTITY(write_val, (write_val) - 0u), 4, 64, 2)))) | (atomicLoad(write_val, 4, _GLF_IDENTITY(64, (false ? _GLF_FUZZED(-87220) : _GLF_IDENTITY(64, (64) | 0))), 2)))))) | 0u))) | (_GLF_IDENTITY(atomicLoad(write_val, 4, 64, 2), (atomicLoad(write_val, 4, 64, _GLF_IDENTITY(2, (2) - 0))) | (_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(write_val, 0u | (write_val)), 4, 64, 2), (atomicLoad(write_val, _GLF_IDENTITY(4, min(4, _GLF_IDENTITY(4, max(4, 4)))), 64, 2)) + 0u)))));
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) && true))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
