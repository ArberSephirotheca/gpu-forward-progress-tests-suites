#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5112.6460), _GLF_FUZZED(3.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(63.79))), (injectionSwitch)[1]), bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))) || false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, false)), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && true))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(21.99), _GLF_FUZZED(6.7)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8209.6951)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(81.88))), injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(81.88))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(81.88))), injectionSwitch.y)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(81.88))), injectionSwitch.y)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), max(float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(81.88))), injectionSwitch.y)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(81.88))), injectionSwitch.y)), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0)))))))), bool(true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(vec3(2.1, 8.3, 357.531).b)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.47))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_IDENTITY(_GLF_FUZZED(-1.1), mix(float(_GLF_FUZZED(6.0)), float(_GLF_FUZZED(-1.1)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(false))))), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.47))), injectionSwitch.y))), float(_GLF_FUZZED(-23.97)), bool(false)))), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, injectionSwitch.y)))), true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(36.71))), injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), 0 | (1))])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])).x), float(_GLF_FUZZED(vec2(-1259.5890, -1486.6335).g)), bool(false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), ! (! (bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))), ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))), false || (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))))))))) || false))))))), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))) : _GLF_FUZZED(vec2(-1230.7025, 0.9)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), 0.0, 1.0, 1.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))) : _GLF_FUZZED(vec2(-1230.7025, 0.9)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), 0.0, 1.0, 1.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec3(_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))) : _GLF_FUZZED(vec2(-1230.7025, 0.9)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), 0.0, 1.0, 1.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), vec2(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))) : _GLF_FUZZED(vec2(-1230.7025, 0.9)))), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]))[1]), vec2((vec2(injectionSwitch[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), 0.0, 1.0, 1.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))))) && true), false, false))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, clamp(0, 0, 0))], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), (_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[0]) / 1.0)))) + 0.0), _GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[_GLF_IDENTITY(0, (0) << 0)]) / 1.0))))), injectionSwitch[1])).x, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 + (0))))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], (injectionSwitch[0]) / 1.0))), injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_ONE(1.0, injectionSwitch.y)))), max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY((injectionSwitch[0]) / 1.0, (false ? _GLF_FUZZED(sin(-6720.2780)) : (injectionSwitch[0]) / 1.0))))), _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, ~ (~ (1))), 1))], injectionSwitch[1])))))).x) / 1.0), 1.0, 0.0, 0.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), abs(0.0), 0.0, sin(_GLF_IDENTITY(0.0, min(0.0, 0.0))), 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) * mat2(1.0))).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ! (! (false))) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))), true)))), false))))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(0.0, 0.0))).y, mix(float(_GLF_FUZZED(vec3(2.1, 8.3, _GLF_IDENTITY(357.531, (true ? _GLF_IDENTITY(357.531, max(357.531, 357.531)) : _GLF_FUZZED(-3.6)))).b)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -951.814))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? injectionSwitch.y : _GLF_FUZZED(61.47))), injectionSwitch.y)), mix(float(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.47))), clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.47))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.47))), mix(float(_GLF_FUZZED(-2.2)), float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.47)))), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(61.47))))), injectionSwitch.y))), float(_GLF_FUZZED(-23.97)), bool(false)))), bool(true))), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true && (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(36.71))), injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(52.88))), max(injectionSwitch.y, injectionSwitch.y)))))))), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x))), ivec3(ivec3(ivec3(0, int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) | (1))])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])).x), float(_GLF_FUZZED(vec2(-1259.5890, -1486.6335).g)), bool(false))), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2((_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0)))), vec2(injectionSwitch[0], injectionSwitch[1])).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec3(bvec3(false, false, true)))))), ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, exp(abs(vec2(0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))))[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(injectionSwitch[0], injectionSwitch[1]))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], injectionSwitch[1]))[0], _GLF_FUZZED((384.235 * -320.542))), bvec2(true, false)))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), mix(vec2(_GLF_FUZZED(728.243), (vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1]))[1]), vec2((vec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat4x2(vec2(injectionSwitch), 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat4x2(vec2(injectionSwitch), 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0))))), vec2(mat4x3(vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat4x2(vec2(injectionSwitch), _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 0.0, 1.0, abs(1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(mat4x2(vec2(injectionSwitch), 1.0, 1.0, 1.0, 0.0, 1.0, abs(1.0))))))))[0], injectionSwitch[1]))[0], _GLF_IDENTITY(_GLF_FUZZED((384.235 * -320.542)), min(_GLF_FUZZED((384.235 * -320.542)), _GLF_IDENTITY(_GLF_FUZZED((384.235 * -320.542)), clamp(_GLF_FUZZED((384.235 * -320.542)), _GLF_IDENTITY(_GLF_FUZZED((384.235 * -320.542)), min(_GLF_FUZZED((384.235 * -320.542)), _GLF_FUZZED((384.235 * -320.542)))), _GLF_FUZZED((384.235 * -320.542))))))), bvec2(true, false)))), 0.0, 1.0, 1.0, 0.0))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], _GLF_FUZZED(5.0)), vec2(_GLF_FUZZED(71.61), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]), bvec2(false, true))).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / _GLF_ONE(1.0, injectionSwitch.y))) / 1.0))), clamp(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))) + 0.0, mix(float((_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)))) + 0.0), float(_GLF_FUZZED(86.85)), bool(false)))), _GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(4075.2262)), bool(false))), injectionSwitch[0])), injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0), (_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) / 1.0)) / 1.0))))), injectionSwitch[1])).x, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, 0 + (0))))], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(0, (0) << 0)], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))[0], (injectionSwitch[0]) / 1.0))), injectionSwitch[1])).x, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[_GLF_IDENTITY(0, (0) / 1)], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, min(0, 0))))], _GLF_IDENTITY((injectionSwitch[0]) / 1.0, (false ? _GLF_FUZZED(sin(-6720.2780)) : (injectionSwitch[0]) / 1.0))))), injectionSwitch[1])).x) / 1.0), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, abs(0.0), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), abs(0.0), 0.0, sin(0.0), 1.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch)))[0], injectionSwitch[1]), (vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])) * mat2(1.0))).x) * 1.0) > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))))))), true)))), false)))))) || false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true)))), bvec3(bvec3(bvec3(false, false, _GLF_IDENTITY(true, ! (! (true))))))))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(determinant(mat3(-7.8, 3.3, 42.95, -3.0, 0.2, -2.0, 2.5, 788.131, -992.101))))), float(float(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(8.6)), float(injectionSwitch.y), bool(true)))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)) / 1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-73.20)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), clamp(max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), max(0.0, 0.0))))), bool(true)))), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-9433.6933, -7058.8182, -37.96, 67.92)[1]) : 1.0)), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.7)), bool(false))), 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, 1.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))) / vec2(1.0, 1.0))).y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || false))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))) || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)) / 1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-73.20)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), clamp(max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), max(0.0, 0.0))))), bool(true)))), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-9433.6933, -7058.8182, -37.96, 67.92)[1]) : 1.0)), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.7)), bool(false))), 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, 1.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))) / vec2(1.0, 1.0))).y), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || false))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (! (! (false))))))))))) || ((injectionSwitch.x > injectionSwitch.y))))) && true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)) / 1.0), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-73.20)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), clamp(max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), max(0.0, 0.0))))), bool(true)))), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-9433.6933, -7058.8182, -37.96, 67.92)[1]) : 1.0)), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.7)), bool(false))), 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, 1.0))), 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))) / vec2(1.0, 1.0))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)) / 1.0), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0), mat3x4(mat3x4(mat3x4(_GLF_IDENTITY(sin(0.0), (_GLF_IDENTITY(sin(0.0), (sin(0.0)) / 1.0)) / 1.0), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0))))), (vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, sin(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-73.20)), float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), clamp(max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0))), max(0.0, 0.0))))), bool(true)))), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(float(0.0)), min(float(float(0.0)), float(float(0.0))))), 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-72.27)), float(0.0), bool(true))), 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), min(vec2(1.0, 0.0), vec2(1.0, 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), min(float(_GLF_IDENTITY(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(vec4(-9433.6933, -7058.8182, -37.96, 67.92)[1]) : 1.0)), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))))), dot(vec2(1.0, 0.0), _GLF_IDENTITY(vec2(1.0, 0.0), (vec2(1.0, 0.0)) * mat2(1.0)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(5.7)), bool(false))), 0.0))))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x2(0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0)), (float(mat4x2(0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 1.0, 0.0))) / 1.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(1.0, (1.0) / determinant(mat4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.3)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), 0.0, 0.0, 1.0))), 0.0), vec2(1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0)))), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat2x3(mat2x4(mat2x3(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))))))))))), 1.0, 0.0, 1.0, 1.0), transpose(transpose(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), min(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0)))), dot(vec4(1.0, sin(0.0), 1.0, 1.0), vec4(0.0, 1.0, 0.0, 0.0))), 1.0, 0.0, 1.0, 1.0)))))) / vec2(1.0, 1.0))).y) || false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || false)) || false), (_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))) || false))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), _GLF_IDENTITY(true && (! (! (false))), false || (true && (! (! (false))))))))))))) || ((injectionSwitch.x > injectionSwitch.y))))) && true))))) || false)) || false)))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, 0.0, 1.0, 1.0, 0.0, determinant(mat4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0))).y), bool(bool((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(22.78)), float(0.0), bool(true))), 1.0, 1.0, 0.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(89.96)), bool(false)))) + 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0)), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 1.0, 1.0))).y)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, _GLF_IDENTITY(1.0, (1.0) - tan(0.0)), 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), min(float(1.0), float(1.0))))), 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, 0.0, 0.0, 0.0, sin(0.0), 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(_GLF_IDENTITY(mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)), mat3(1.0) * (mat2x3(injectionSwitch, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))).y)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))), true, false, true)), _GLF_IDENTITY((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(9.2) : injectionSwitch.y)))))))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2123.7334)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0))))))))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y)), true, false, true))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2123.7334)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((+ -168.260))), bool(false))))), true, false, true)))), ! (! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2123.7334)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2123.7334)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2123.7334)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(2123.7334, (2123.7334) / _GLF_ONE(1.0, injectionSwitch.y)))), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, true)))), _GLF_IDENTITY(false || (! ((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2123.7334)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y)), true, false, true))))), bool(bvec2(false || (! ((bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (vec2(mat2(injectionSwitch, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y)))).x, 1.0, 1.0, sqrt(0.0), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.4))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(2123.7334)), float(0.0), bool(true))))), 1.0)), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), max(_GLF_IDENTITY(vec3(0.0, 0.0, sin(0.0)), mix(vec3((vec3(0.0, 0.0, _GLF_IDENTITY(sin(0.0), min(sin(0.0), sin(0.0)))))[0], (vec3(0.0, 0.0, sin(0.0)))[1], (vec3(0.0, 0.0, sin(0.0)))[2]), vec3(_GLF_FUZZED(1149.2086), _GLF_FUZZED(-92.18), _GLF_FUZZED(vec3(752.497, -4137.4323, 1.4).s)), bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), vec3(0.0, 0.0, sin(0.0))))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), max(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, sin(0.0))))))))), float(vec2(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y)))) > injectionSwitch.y)), true, false, true))))), false))))))))) || false))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, bool(bool(false))) || (false)), (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(distance(vec4(4736.6522, -4664.0199, 9504.7404, 27.05), vec4(-79.14, 245.903, 963.048, 41.47))))), injectionSwitch.x)) > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true)), _GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true))) || _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true))), ! (! ((bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, true)))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y))))))))))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), ! (! (! ((injectionSwitch.x < injectionSwitch.y)))))))))), ! (! (bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), true && (bool(bvec4(_GLF_DEAD(false), true, true, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-738.628) : _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-37.92)))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, injectionSwitch.y), (min(_GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)), injectionSwitch.y)) / 1.0))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true))))) || false)))) && true), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(false || (! (true)), bool(_GLF_IDENTITY(bool(false || (! (true))), ! (_GLF_IDENTITY(! (bool(false || (! (true)))), bool(bool(! (bool(false || (! (true)))))))))))))))), true), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(! (true), (! (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, true)))) || false))) && true), ! (! (_GLF_IDENTITY(! (true), false || (! (true))))))), true))))))))))))), _GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), ! (! ((true)))))))), bool(bool(_GLF_IDENTITY((! (_GLF_IDENTITY(true, ! (! (true))))), ! _GLF_IDENTITY((! ((! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), true && ((! (true))))))))), ((! ((! (_GLF_IDENTITY(true, ! (! (true)))))))) || false))))) && true), _GLF_IDENTITY(false, false || (false))))))), true), bvec3(bvec4(bvec3(false, _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(true, true, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(bool(bvec2(! (true), false)), bool(bvec2(bool(bvec2(! (true), false)), false))))))), bool(bvec2(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), bool(bvec2(_GLF_IDENTITY((! (true)), ((! (true))) || false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), true && (! (! (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))))))))))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)))))))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0)))))))), vec2(mat3x4(vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0))), dot(vec2(0.0, 1.0), vec2(0.0, abs(1.0)))))))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 0.0, cos(0.0), cos(0.0), 1.0, 0.0)))).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(true, (true) || false), true, _GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, bool(bvec2(true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y)))))))))))))))))), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(! (true), (_GLF_IDENTITY(! (true), bool(bvec3(! (true), false, false)))) && true)), bool(bvec2(_GLF_IDENTITY((! (true)), true && ((! (true)))), true))))))))), ! (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec2((! (true)), true)), bool(bool(bool(bvec2((! (true)), true))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), bool(bvec4(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true, false, true)))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec2((! (true)), true)), bool(bool(bool(bvec2((! (true)), true))))))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), bool(bvec4(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true, false, true))))))))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true)))), true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true && (true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true && (true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))))))), (bool(bool(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true && (true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true)))))))))) || false)))))))))), (! (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true)))), _GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true && (true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))))))), bool(bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true && (true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))))))), (bool(bool(_GLF_IDENTITY(true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true))))), true && (true && (bool(_GLF_IDENTITY((! (true)), bool(bvec2((! (true)), true)))))))))) || false))))))))))) && true))))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (true))))) && true), false))))), true), false)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-71.32) : injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-71.32) : injectionSwitch.y)))), true, _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-71.32) : injectionSwitch.y)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec3(injectionSwitch.x, 0.0, exp(0.0))), max(float(vec3(injectionSwitch.x, 0.0, exp(0.0))), float(vec3(injectionSwitch.x, 0.0, exp(0.0)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(bvec4(true, true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), true)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((0u ^ 0u), (_GLF_IDENTITY((0u ^ 0u), min((0u ^ 0u), (0u ^ 0u)))) >> (106728u & 0u)) ^ (_GLF_IDENTITY(subgroup_id, (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1.2) : injectionSwitch.y)))) ? _GLF_FUZZED(num_workgroup) : subgroup_id)))), uint(uvec3(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uvec4(9631u, 84588u, 172079u, 27713u).x) : 0u)), max(0u, _GLF_IDENTITY(0u, min(0u, 0u))))) ^ (subgroup_id)), 1u, 0u))) * subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u))))))))) >> 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u))))))))) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u))))))))) >> 0u), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u)))))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ _GLF_IDENTITY(0u, (0u) >> (0u << _GLF_IDENTITY(uint(2u), uint(2u))))) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)), 1u * _GLF_IDENTITY((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u))), ((uint(uvec4(subgroup_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) << (0u & 99218u)))), (0u ^ 0u) ^ _GLF_IDENTITY((subgroup_id), 1u * ((subgroup_id)))) * subgroup_size)), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id)))) * subgroup_size)), 0u, 1u)))) ^ 0u, ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | (subgroup_id))), ((subgroup_id)) >> 0u)) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), clamp((subgroup_size), (subgroup_size), (subgroup_size))) >> 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((true ? 40418u : write_val)) : _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) * 1u)))) ^ 0u), 0u | (~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY((0u ^ 0u) ^ (subgroup_id), max((0u ^ 0u) ^ (subgroup_id), (0u ^ 0u) ^ (subgroup_id))), ((0u ^ 0u) ^ (subgroup_id)) | ((0u ^ 0u) ^ (_GLF_IDENTITY(subgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u))), (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (~ (~ (_GLF_IDENTITY(subgroup_id, (subgroup_id) / 1u)))))), subgroup_id)))))) * subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_id, (0u ^ 0u) ^ (subgroup_id)) * subgroup_size))) ^ _GLF_IDENTITY(0u, _GLF_IDENTITY((0u), ~ (~ ((0u)))) / 1u))))))))) >> 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0))), max(float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0))), float(mat3x4(injectionSwitch.y, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, log(1.0)))))), injectionSwitch.y))))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0)), mix(float(_GLF_FUZZED(-82.84)), float(float(mat2x4(injectionSwitch.y, 0.0, 0.0, 0.0, 0.0, sqrt(1.0), 0.0, 1.0))), bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(write_val, _GLF_IDENTITY(uint(virtual_gid), ~ (_GLF_IDENTITY(~ (uint(virtual_gid)), clamp(~ (uint(virtual_gid)), ~ (uint(virtual_gid)), ~ (uint(virtual_gid)))))), _GLF_IDENTITY(4, (4) - 0), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 uint read_val = atomicLoad(write_val, 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(read_val));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.44, 8.5)))).y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.44, 8.5)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-89.44, 8.5), clamp(vec2(-89.44, 8.5), vec2(-89.44, 8.5), vec2(-89.44, 8.5)))))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.44, 8.5)))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.44, 8.5)))).y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.44, 8.5)))).y, clamp(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(-89.44, 8.5), clamp(vec2(-89.44, 8.5), vec2(-89.44, 8.5), vec2(-89.44, 8.5)))))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.44, 8.5)))).y, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-89.44, 8.5)))).y)))) + 0.0) / 1.0)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
