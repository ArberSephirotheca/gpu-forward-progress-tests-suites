#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_46 {
 mat3 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 mat4x3 _f4;
 float _f5;
} ;

struct _GLF_struct_47 {
 _GLF_struct_46 _f0;
} ;

struct _GLF_struct_44 {
 mat3 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_45 {
 vec4 _f0;
 _GLF_struct_44 _f1;
 uint num_workgroup;
} ;

struct _GLF_struct_48 {
 ivec4 _f0;
 _GLF_struct_45 _f1;
 ivec2 _f2;
 _GLF_struct_47 _f3;
} ;

struct _GLF_struct_41 {
 vec3 _f0;
 mat2x3 _f1;
 vec3 _f2;
 ivec3 _f3;
 mat2x4 _f4;
 bvec2 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_40 {
 vec4 _f0;
 mat4x2 _f1;
 float _f2;
 mat2 _f3;
 vec2 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_42 {
 _GLF_struct_40 _f0;
 uvec2 _f1;
 _GLF_struct_41 _f2;
} ;

struct _GLF_struct_43 {
 uint workgroup_id;
 mat3 _f0;
 uvec3 _f1;
 vec3 _f2;
 _GLF_struct_42 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_37 {
 mat3x2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_36 {
 mat2x3 _f0;
} ;

struct _GLF_struct_35 {
 vec4 _f0;
 vec3 _f1;
 float _f2;
 int _f3;
} ;

struct _GLF_struct_38 {
 _GLF_struct_35 _f0;
 bool _f1;
 ivec2 _f2;
 _GLF_struct_36 _f3;
 _GLF_struct_37 _f4;
} ;

struct _GLF_struct_39 {
 uint subgroup_base;
 _GLF_struct_38 _f0;
} ;

struct _GLF_struct_32 {
 ivec2 _f0;
} ;

struct _GLF_struct_31 {
 uvec4 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 mat4x3 _f3;
 bool _f4;
 bvec2 _f5;
 int _f6;
} ;

struct _GLF_struct_33 {
 mat2x4 _f0;
 mat2 _f1;
 _GLF_struct_31 _f2;
 _GLF_struct_32 _f3;
} ;

struct _GLF_struct_30 {
 ivec4 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_28 {
 bvec2 _f0;
 vec3 _f1;
 mat4 _f2;
 ivec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_27 {
 vec3 _f0;
 ivec3 _f1;
} ;

struct _GLF_struct_29 {
 bool _f0;
 vec2 _f1;
 _GLF_struct_27 _f2;
 _GLF_struct_28 _f3;
} ;

struct _GLF_struct_25 {
 vec2 _f0;
 mat4x3 _f1;
} ;

struct _GLF_struct_24 {
 uvec2 _f0;
 uvec4 _f1;
 uint _f2;
 int _f3;
} ;

struct _GLF_struct_26 {
 _GLF_struct_24 _f0;
 _GLF_struct_25 _f1;
 bvec4 _f2;
} ;

struct _GLF_struct_23 {
 uint _f0;
} ;

struct _GLF_struct_34 {
 _GLF_struct_23 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_29 _f2;
 _GLF_struct_30 _f3;
 uint read_val;
 uvec4 _f4;
 _GLF_struct_33 _f5;
} ;

struct _GLF_struct_20 {
 float _f0;
 uvec2 _f1;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
 bvec2 _f1;
 int _f2;
 float _f3;
} ;

struct _GLF_struct_18 {
 int _f0;
 mat3x2 _f1;
 bool _f2;
 bvec2 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_21 {
 float _f0;
 vec2 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 _GLF_struct_19 _f4;
 mat3x4 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_22 {
 _GLF_struct_21 _f0;
 uint workgroup_base;
 ivec4 _f1;
} ;

struct _GLF_struct_14 {
 vec2 _f0;
} ;

struct _GLF_struct_13 {
 mat3x2 _f0;
 uint _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 vec4 _f1;
 _GLF_struct_14 _f2;
 uint subgroup_size;
 mat2 _f3;
 int _f4;
 ivec2 _f5;
 mat3 _f6;
} ;

struct _GLF_struct_16 {
 bvec2 _f0;
 _GLF_struct_15 _f1;
 mat3x4 _f2;
} ;

struct _GLF_struct_12 {
 mat4x3 _f0;
 uint subgroup_id;
 uint _f1;
} ;

struct _GLF_struct_9 {
 int _f0;
 mat3 _f1;
} ;

struct _GLF_struct_8 {
 uvec4 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_10 {
 uint subgroup_local_id;
 _GLF_struct_8 _f0;
 _GLF_struct_9 _f1;
} ;

struct _GLF_struct_6 {
 int _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 uvec3 _f3;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 mat4 _f1;
 vec3 _f2;
 bvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_3 {
 int _f0;
 mat2x3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_2 {
 bvec2 _f0;
 mat4x2 _f1;
 uvec4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 int _f1;
 mat4x2 _f2;
 vec2 _f3;
 bvec3 _f4;
 uvec4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 mat3x4 _f1;
 uvec4 _f2;
 mat4x2 _f3;
 mat3x2 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 ivec4 _f3;
 _GLF_struct_3 _f4;
 _GLF_struct_4 _f5;
} ;

struct _GLF_struct_11 {
 int _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_10 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-5428.7201)))) * (injectionSwitch)), 1.0, sqrt(length(vec3(0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), false || (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true), bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, false, false)))))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) || false), _GLF_IDENTITY(false, (false) && true), true)), bool(_GLF_IDENTITY(bool(bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) || false), _GLF_IDENTITY(false, (false) && true), true))), (bool(bool(bvec3(_GLF_IDENTITY(bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))) || false), _GLF_IDENTITY(false, (false) && true), true)))) && true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec2(false, _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec4(-9619.9757, -43.02, 6.2, 2694.9812).t)), vec2(_GLF_FUZZED(61.99), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), true, false, false))))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)), bvec2(bvec2(bvec2(bvec4(bvec2(_GLF_DEAD(false), false), false, true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (false)) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false))))), true)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(862.721, -7128.3181)) : injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y)))).x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))) && (false)) || false))), false || (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(862.721, -7128.3181)) : injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(862.721, -7128.3181)) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(862.721, -7128.3181)) : injectionSwitch)))), _GLF_ONE(1.0, injectionSwitch.y)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), float(vec2((injectionSwitch.y), 0.0))) - 0.0))) && (false)) || false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(mat4x3(1.0), gl_SubgroupID, 1u);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 _GLF_struct_16 _GLF_struct_replacement_16 = _GLF_struct_16(bvec2(true), _GLF_struct_15(_GLF_struct_13(mat3x2(1.0), 1u, bvec2(true)), _GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), clamp(vec4(1.0), vec4(1.0), _GLF_IDENTITY(vec4(1.0), mix(vec4(_GLF_IDENTITY((vec4(1.0))[0], (true ? (vec4(1.0))[0] : _GLF_FUZZED(5523.7755))), (vec4(1.0))[1], (vec4(1.0))[2], _GLF_FUZZED(-1.5)), vec4(_GLF_FUZZED(-5.1), _GLF_FUZZED(-1.1), _GLF_FUZZED(-0.0), (vec4(1.0))[3]), bvec4(false, false, false, true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0), mix(vec4(_GLF_FUZZED(-40.35), ((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))[1], _GLF_FUZZED(-178.082), ((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))[3]), vec4(((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))[0], _GLF_FUZZED(-6220.9470), ((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / cos(vec4(0.0, 0.0, 0.0, 0.0)))) * mat4(1.0))[2], _GLF_FUZZED(232.574)), bvec4(true, false, true, false)))), vec4(1.0))), _GLF_struct_14(vec2(1.0)), gl_SubgroupSize, mat2(1.0), 1, _GLF_IDENTITY(ivec2(1), (ivec2(1)) | (ivec2(1))), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)))), mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, max(1.0, 1.0))), float(_GLF_FUZZED(27.60)), bool(false)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8333.6086), _GLF_FUZZED(2.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))) : _GLF_FUZZED(vec2(83.07, 9.5)))).y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) | (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))))) | (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))), 1), (max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) | (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))))) | (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))), 1)) << 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), _GLF_IDENTITY(~ (1), ~ (~ (~ (1)))))), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (~ (1)) ^ 0), min(_GLF_IDENTITY(~ (1), int(ivec2(_GLF_IDENTITY(~ (1), (~ (1)) | (~ (1))), 0))), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) | _GLF_IDENTITY((min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), (int(ivec2(~ (1), 1))) | (int(ivec2(~ (1), 1))))), ~ _GLF_IDENTITY((1), max((1), (1))))))), int(ivec3((min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(int(ivec2(~ (1), 1)), (int(ivec2(~ (1), 1))) | (int(ivec2(~ (1), 1))))), ~ _GLF_IDENTITY((1), max((1), (1))))))), 1, 1)))))) | (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))), 1)), (false ? _GLF_FUZZED(-16645) : _GLF_IDENTITY(1, max(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), _GLF_IDENTITY(min(~ (1), ~ (1)), (min(~ (1), ~ (1))) | (min(~ (1), ~ (1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))) | (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))), _GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) | (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) | (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))), int(ivec2(_GLF_IDENTITY(min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))), (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))) | (min(_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))), _GLF_IDENTITY(~ (1), min(~ (1), ~ (1)))))), 0)))))))) | (_GLF_IDENTITY(~ (1), min(~ (1), ~ (1))))))), 1))))))), _GLF_struct_5(_GLF_struct_0(mat3x4(1.0), mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(4.7), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, float(mat2x4(4.7, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-43.66)), bool(false))), 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_FUZZED(4.7)) + 0.0)) / 1.0)) - 0.0)))), 1.0 * (float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(4.7, _GLF_IDENTITY(clamp(4.7, _GLF_IDENTITY(4.7, float(mat4x2(4.7, 0.0, determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 4.7), mix(float(clamp(4.7, 4.7, 4.7)), float(_GLF_FUZZED(-3789.4288)), bool(false))))), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, mix(float(_GLF_FUZZED(-643.975)), float(_GLF_IDENTITY(4.7, max(4.7, 4.7))), bool(true)))))), _GLF_FUZZED(4.7)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(4.7), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, float(mat2x4(4.7, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-43.66)), bool(false))), 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_FUZZED(4.7)) + 0.0)) / 1.0)) - 0.0)))), 1.0 * (float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(4.7, _GLF_IDENTITY(clamp(4.7, _GLF_IDENTITY(4.7, float(mat4x2(4.7, 0.0, determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 4.7), mix(float(clamp(4.7, 4.7, 4.7)), float(_GLF_FUZZED(-3789.4288)), bool(false))))), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, mix(float(_GLF_FUZZED(-643.975)), float(_GLF_IDENTITY(4.7, max(4.7, 4.7))), bool(true)))))), _GLF_FUZZED(4.7)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(4.7), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, float(mat2x4(4.7, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-43.66)), bool(false))), 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_FUZZED(4.7)) + 0.0)) / 1.0)) - 0.0)))), 1.0 * (float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(4.7, _GLF_IDENTITY(clamp(4.7, _GLF_IDENTITY(4.7, float(mat4x2(4.7, 0.0, determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 4.7), mix(float(clamp(4.7, 4.7, 4.7)), float(_GLF_FUZZED(-3789.4288)), bool(false))))), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, mix(float(_GLF_FUZZED(-643.975)), float(_GLF_IDENTITY(4.7, max(4.7, 4.7))), bool(true)))))), _GLF_FUZZED(4.7)))))), (_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(4.7), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, float(mat2x4(4.7, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), mix(float(tan(0.0)), float(_GLF_FUZZED(-43.66)), bool(false))), 1.0)))))), _GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_IDENTITY(_GLF_FUZZED(4.7), (_GLF_FUZZED(4.7)) + 0.0)) / 1.0)) - 0.0)))), 1.0 * (float(_GLF_IDENTITY(_GLF_FUZZED(4.7), min(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(4.7, _GLF_IDENTITY(clamp(4.7, _GLF_IDENTITY(4.7, float(mat4x2(4.7, 0.0, determinant(mat2(0.0, abs(0.0), 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 4.7), mix(float(clamp(4.7, 4.7, 4.7)), float(_GLF_FUZZED(-3789.4288)), bool(false))))), max(_GLF_FUZZED(4.7), _GLF_FUZZED(_GLF_IDENTITY(4.7, mix(float(_GLF_FUZZED(-643.975)), float(_GLF_IDENTITY(4.7, max(4.7, 4.7))), bool(true)))))), _GLF_FUZZED(4.7))))))) + 0.0))), bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ((! (false))) || false))))))))), uvec4(_GLF_IDENTITY(1u, (1u) - _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u, (true ? (_GLF_IDENTITY(0u, 0u | (0u))) ^ 0u : _GLF_FUZZED(153550u)))))), mat4x2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), mix(float(_GLF_FUZZED(234.367)), float(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false))), bool(true)))) - 0.0), max(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), mix(float(_GLF_FUZZED(234.367)), float(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false))), bool(true)))) - 0.0), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), (_GLF_IDENTITY(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), mix(float(_GLF_FUZZED(234.367)), float(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false))), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x) + (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(234.367), max(_GLF_FUZZED(234.367), _GLF_IDENTITY(_GLF_FUZZED(234.367), 0.0 + (_GLF_FUZZED(234.367)))))), float(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false))), bool(true)))))) - 0.0))), _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), clamp(vec2(0.0, 0.0), vec2(0.0, 0.0), vec2(0.0, 0.0)))), 1.0)), (float(mat2x3(_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false)), _GLF_IDENTITY((_GLF_IDENTITY(mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(2.1), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_FUZZED(2.1) : _GLF_FUZZED(-0.8)))), bool(false)), mix(float(_GLF_FUZZED(234.367)), float(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false))), bool(true)))), (false ? _GLF_FUZZED(vec2(-189.229, 1695.8477).g) : (_GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(2.1)), _GLF_IDENTITY(bool(false), ! (! (bool(false))))), mix(float(_GLF_FUZZED(234.367)), float(mix(float(1.0), float(_GLF_FUZZED(2.1)), bool(false))), bool(true)))))) - 0.0), _GLF_IDENTITY(dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(sqrt(1.0), 0.0, 1.0), vec3(0.0, 1.0, 0.0))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, length(_GLF_IDENTITY(vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(815.637, 6.4)) : _GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), _GLF_IDENTITY(vec2(0.0, 0.0), vec2(mat4x2(vec2(0.0, 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))))))), 1.0))) + 0.0)))), mat3x2(1.0), mat3x4(1.0)), _GLF_struct_1(vec2(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), min(_GLF_IDENTITY(_GLF_IDENTITY((1.0), float(mat4((1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))), clamp(_GLF_IDENTITY((1.0), _GLF_IDENTITY(float(mat4((1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), min(float(mat4((1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0)), float(mat4((1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))), _GLF_IDENTITY((1.0), float(mat4((1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(tan(0.0), 0.0 + (tan(0.0))), 1.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY((1.0), float(mat4((1.0), 1.0, 1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0))))), (1.0))) - 0.0)), 1, mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), (false ? _GLF_FUZZED(1518.9370) : _GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(8.6), clamp(_GLF_FUZZED(8.6), _GLF_FUZZED(8.6), _GLF_FUZZED(8.6)))), bool(false))), 1.0, _GLF_IDENTITY(1.0, float(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(_GLF_IDENTITY(-9048.0007, mix(float(-9048.0007), float(_GLF_FUZZED(5.1)), bool(false))))), float(1.0), bool(true))))), 1.0)), tan(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)))), mix(float(_GLF_IDENTITY(_GLF_FUZZED(2.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-5.8), (_GLF_IDENTITY(_GLF_FUZZED(-5.8), max(_GLF_FUZZED(-5.8), _GLF_FUZZED(-5.8)))) * 1.0)), float(_GLF_FUZZED(2.0)), bool(true)))), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(true)))))))), clamp(1.0, 1.0, 1.0))))), vec2(1.0), bvec3(true), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(1u))), bvec4(true)), _GLF_struct_2(bvec2(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), (true) && true) && (true))) && true)), mat4x2(1.0), uvec4(1u), mat3x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(-70.08)), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))) * (_GLF_IDENTITY(float(_GLF_FUZZED(-70.08)), (float(_GLF_FUZZED(-70.08))) * 1.0))), bool(false))), 1.0 * (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(trunc(589.562), (trunc(589.562)) / exp(0.0))), float(mat2x3(_GLF_IDENTITY(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(trunc(589.562), (trunc(589.562)) / exp(0.0))), max(true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(trunc(589.562), _GLF_IDENTITY((trunc(589.562)), (_GLF_IDENTITY((trunc(589.562)), min((trunc(589.562)), (trunc(589.562))))) * 1.0) / exp(0.0)), _GLF_IDENTITY((false ? _GLF_FUZZED(log(-0.7)) : _GLF_IDENTITY(_GLF_IDENTITY(trunc(589.562), _GLF_IDENTITY((_GLF_IDENTITY(trunc(589.562), max(trunc(589.562), trunc(589.562)))), (_GLF_IDENTITY((trunc(_GLF_IDENTITY(589.562, max(589.562, 589.562)))), min((trunc(589.562)), (trunc(589.562))))) * 1.0) / _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-1.1) : exp(0.0)))), (_GLF_IDENTITY(trunc(589.562), _GLF_IDENTITY((_GLF_IDENTITY(trunc(589.562), max(trunc(589.562), _GLF_IDENTITY(trunc(589.562), mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(trunc(589.562), (false ? _GLF_FUZZED(4.5) : trunc(589.562)))), bool(true)))))), (_GLF_IDENTITY((trunc(_GLF_IDENTITY(589.562, max(589.562, 589.562)))), min(_GLF_IDENTITY((trunc(589.562)), ((trunc(589.562))) - abs(0.0)), (trunc(589.562))))) * 1.0) / _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-1.1) : exp(0.0))))) - 0.0)), (false ? _GLF_FUZZED(-5.2) : (false ? _GLF_FUZZED(log(-0.7)) : _GLF_IDENTITY(_GLF_IDENTITY(trunc(589.562), _GLF_IDENTITY((_GLF_IDENTITY(trunc(589.562), max(trunc(589.562), trunc(589.562)))), (_GLF_IDENTITY((trunc(_GLF_IDENTITY(589.562, max(589.562, 589.562)))), min((trunc(589.562)), (trunc(589.562))))) * 1.0) / _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-1.1) : exp(0.0)))), (_GLF_IDENTITY(trunc(589.562), _GLF_IDENTITY((_GLF_IDENTITY(trunc(589.562), max(trunc(589.562), _GLF_IDENTITY(trunc(589.562), mix(float(_GLF_FUZZED(-4.8)), float(_GLF_IDENTITY(trunc(589.562), (false ? _GLF_FUZZED(4.5) : trunc(589.562)))), bool(true)))))), (_GLF_IDENTITY((trunc(_GLF_IDENTITY(589.562, max(589.562, 589.562)))), min(_GLF_IDENTITY((trunc(589.562)), ((trunc(589.562))) - abs(0.0)), (trunc(589.562))))) * 1.0) / _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-1.1) : exp(0.0))))) - 0.0)))))), true ? _GLF_IDENTITY(1.0, 1.0 * (1.0)) : _GLF_FUZZED(_GLF_IDENTITY(trunc(_GLF_IDENTITY(589.562, float(_GLF_IDENTITY(vec4(589.562, 0.0, 0.0, 1.0), vec4(mat3(vec4(589.562, 0.0, 0.0, 1.0), abs(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, length(0.0))))))), (trunc(589.562)) / exp(0.0))))), abs(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) + 0.0)), min(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), (true ? _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), clamp(vec4(0.0, 0.0, 0.0, 1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7610.3077)), bool(false)))), (_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7610.3077)), bool(false)))), mat4(1.0) * (vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-7610.3077)), bool(false))))))) * exp(vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0) + (vec4(0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 1.0), vec4(mat4(vec4(0.0, 0.0, 0.0, 1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(vec4(-6810.8264, -40.26, -79.54, 4.3)))), vec4(0.0, 0.0, 0.0, 1.0)))), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-14.31)), float(1.0), bool(true))), sin(0.0)))))))), ivec4(1), _GLF_struct_3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-20469) : 1)), mat2x3(1.0), uvec4(1u)), _GLF_struct_4(_GLF_IDENTITY(bvec3(true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true))), bvec3(bvec3(bvec3(bvec3(bvec3(true))))))), mat4(1.0), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0)), dot(vec2(abs(0.0), 0.0), vec2(1.0, 1.0))) + (1.0))), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))), (! (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && (true)))))) || false)))), ivec2(1))), _GLF_struct_7(_GLF_struct_6(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, _GLF_IDENTITY((1) | 0, (false ? _GLF_FUZZED(86677) : _GLF_IDENTITY((1), min((1), _GLF_IDENTITY((1), int(ivec3((1), 0, 0))))) | 0)))))) / 1), mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat3(float(mat4x2(1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-721.689) : 0.0)), 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(_GLF_IDENTITY(63.63, clamp(_GLF_IDENTITY(63.63, 0.0 + (63.63)), _GLF_IDENTITY(63.63, (63.63) / 1.0), 63.63)))), bool(false))), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(501.367))))))), float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), float(mat3(float(mat4x2(1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_IDENTITY(_GLF_FUZZED(63.63), (_GLF_FUZZED(63.63)) * cos(0.0))), bool(false))), 1.0, 1.0, 0.0, 1.0)))), 0.0, 0.0)))), mat2x4(1.0), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, uint(uvec4(1u, 1u, 0u, 1u))), 1u)), 1u)), 1u))), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY(clamp(1u, 1u, 1u), (clamp(1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(43973u))), 1u)) / 1u))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), clamp(1u, 1u, 1u)), clamp(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u | (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), max(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), ~ (~ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))))))))) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), clamp(1u, 1u, 1u))))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(1u, (1u) | (1u)))), (uint(uint(_GLF_IDENTITY(1u, (1u) | (1u))))) * 1u)), clamp(1u, 1u, 1u))))))))), _GLF_struct_10(gl_SubgroupInvocationID, _GLF_struct_8(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, 1u), max(_GLF_IDENTITY(max(1u, _GLF_IDENTITY(1u, (1u) >> 0u)), clamp(max(1u, 1u), max(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), max(1u, _GLF_IDENTITY(1u, (1u) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), max(1u, 1u))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), clamp(uvec4(1u), uvec4(1u), uvec4(1u))))), (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), clamp(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), ~ (~ (_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u)))))))), clamp(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), uvec4(1u), uvec4(_GLF_IDENTITY(1u, 1u * (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u))))))))) ^ uvec4(0u, 0u, 0u, 0u))), mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (uvec3(1u, 1u, 1u))))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), min(uvec3(1u), uvec3(1u)))) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(_GLF_IDENTITY(1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(1u, 0u | (1u)))))) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, _GLF_IDENTITY(16089u, (16089u) << 0u), 196356u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u)))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u))))))) * uvec3(1u, 1u, 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), clamp(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) * ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u))) >> _GLF_IDENTITY(uvec3(0u), _GLF_IDENTITY(uvec3(0u), (uvec3(0u)) / uvec3(1u, 1u, 1u))))) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(172420u, 16089u, 196356u))))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))) : _GLF_FUZZED((write_val + uvec3(_GLF_IDENTITY(172420u, (172420u) ^ 0u), 16089u, 196356u)))))))) * uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u ^ (1u)), 1u)), 1u, _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(write_val)))))), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, ~ (~ (1u)))), min(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (true ? (1u) : _GLF_FUZZED(write_val)))) >> (82966u & 0u)) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u)))) >> uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u)))) >> uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), (_GLF_IDENTITY(uvec3(1u, 1u, 0u), (uvec3(1u, 1u, 0u)) | (uvec3(1u, 1u, 0u)))) >> uvec3(0u, 0u, 0u))))))) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), 0u, 1u, 0u))), 1u)), ~ (~ (uint(uvec2(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(uvec4(_GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) << 0u), 0u, 1u, 0u))), 1u)))))), 1u)))))), max(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), max((1u), (1u)))) - 0u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), min(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), min(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, ~ (~ (1u))), 0u))), (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))) | (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uint(1u)), (uint(uint(1u))) | 0u))) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), _GLF_IDENTITY(min(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (min(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) << (uvec4(159489u, 21142u, 157016u, 48726u) & uvec4(0u, 0u, 0u, 0u))))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(trunc((31.34))) : 1.0)), injectionSwitch.y)), 1u), min(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))))))))), (_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) * uvec3(1u, _GLF_IDENTITY(1u, (1u) ^ 0u), 1u))) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY((uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), max((uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, max(1u, 1u))), (uvec3(1u)) << (uvec3(_GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 1u, 1u) ^ uvec3(1u, 1u, 1u)))) - uvec3(_GLF_IDENTITY(0u, (0u) + 0u), 0u, 0u))) * uvec3(1u, 1u, 1u))), ((_GLF_IDENTITY(uvec3(1u), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u) ^ uvec3(1u, 1u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))), clamp((_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))) | (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u)))))))) - uvec3(0u, 0u, 0u))) * uvec3(1u, 1u, 1u)))) * uvec3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), vec2(1.0)), _GLF_struct_9(1, mat3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 _GLF_struct_48 _GLF_struct_replacement_48 = _GLF_struct_48(ivec4(1), _GLF_struct_45(vec4(1.0), _GLF_struct_44(mat3(1.0), _GLF_IDENTITY(mat3(1.0), (true ? mat3(1.0) : _GLF_FUZZED(mat3(-2524.7096, -4.5, -2068.9249, 529.012, -416.506, 20.70, -43.90, 1.8, 74.78))))), gl_NumWorkGroups.x), ivec2(1), _GLF_struct_47(_GLF_struct_46(mat3(1.0), uvec3(1u), mat4x3(1.0), mat4x3(1.0), mat4x3(1.0), 1.0)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(0.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7.4)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)) > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(injectionSwitch.x < injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))))), false))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) || false)))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec4(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), uint(uvec4((1u), 1u, 1u, 0u)))) ^ 0u)))) << 0u), 1u, 1u) * (gl_WorkGroupSize))) | uvec3(0u, 0u, 0u))) / uvec3(1u, 1u, 1u)), 1u))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false), false)), true))))), true && (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false), false)), bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false), false)), true)))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_43 _GLF_struct_replacement_43 = _GLF_struct_43(gl_WorkGroupID.x, mat3(1.0), uvec3(1u), vec3(1.0), _GLF_struct_42(_GLF_struct_40(vec4(1.0), mat4x2(1.0), 1.0, _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), vec2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 0.0))), 1.0))) / 1.0)), uvec4(1u)), uvec2(1u), _GLF_struct_41(vec3(1.0), mat2x3(1.0), vec3(1.0), ivec3(1), mat2x4(1.0), bvec2(true), mat2(1.0))), mat3x4(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(cos(0.0), clamp(_GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(1034.4492) : _GLF_IDENTITY(cos(0.0), (false ? _GLF_FUZZED(-8.5) : cos(0.0))))), cos(0.0), cos(0.0))), 0.0, 1.0, 1.0)))) * _GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0), _GLF_IDENTITY(abs(1.0), min(abs(1.0), abs(1.0)))))))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))).x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))) * 1.0)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.0) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))))), float(mat3x2(_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))).x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))) * 1.0)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.0) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))))), (clamp(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0))).x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (0.0 + (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))) * 1.0)), _GLF_IDENTITY(injectionSwitch.x, 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-3.0) : (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))))))) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, _GLF_IDENTITY(dot(vec4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, _GLF_IDENTITY(cos(0.0), max(cos(0.0), _GLF_IDENTITY(cos(0.0), float(mat3x4(cos(0.0), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))))))), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), min(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-700.562)), bool(false))), 1.0)))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-53.15)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(_GLF_IDENTITY(0.0, 1.0 * (0.0))), 0.0, 1.0, 1.0)))))))), 0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), 0.0 + (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), ((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))))) - 0.0)))))), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 1.0)))))), min(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), max(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), (false ? _GLF_FUZZED(-517.973) : _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))))))), min(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))))))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) - length(0.0))), 0.0, 1.0, 1.0)), float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), min(_GLF_IDENTITY(0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-4.6)), float(1.0), bool(true))))))), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), min(0.0 + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), mix(float(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))))), (false ? _GLF_FUZZED(69.18) : (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))))))), float(_GLF_FUZZED(float(false))), bool(false))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(ceil(-73.60)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))))))))))), 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0))))))))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 1.0, 0.0, determinant(mat2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0)), 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, round(length(normalize(1.0))))))[0], injectionSwitch[1])).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), max(float(mat2x3(injectionSwitch.x, 0.0, cos(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-80.83)), float(0.0), bool(true)))) - 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.6)), float(1.0), bool(true))), 1.0)), float(mat2x3(injectionSwitch.x, 0.0, cos(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 0.0, 1.0, 1.0))))))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)), log(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), clamp((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).y)) + (float(mat2x3(injectionSwitch.x, 0.0, cos(0.0), 0.0, 1.0, 1.0)))), max(float(mat2x3(injectionSwitch.x, 0.0, cos(_GLF_IDENTITY(0.0, (0.0) - 0.0)), 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(5.6), clamp(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6), _GLF_IDENTITY(_GLF_FUZZED(5.6), clamp(_GLF_FUZZED(5.6), _GLF_FUZZED(5.6), _GLF_FUZZED(5.6))))), max(_GLF_IDENTITY(_GLF_FUZZED(5.6), (_GLF_FUZZED(5.6)) - 0.0), _GLF_IDENTITY(_GLF_FUZZED(5.6), mix(float(_GLF_FUZZED(5.6)), float(_GLF_FUZZED(9598.8603)), bool(false)))))), float(1.0), bool(true))), 1.0)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(((- -258.375)))), float(_GLF_IDENTITY(0.0, (0.0) - 0.0)), bool(true))), cos(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, sqrt(1.0), 0.0)))))))))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED(91.13)))))) / abs(sqrt(vec2(1.0, 1.0)))).y)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bvec4(_GLF_IDENTITY((false), ((false)) || false), false, false, false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), false, true), true)))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))) || false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ((false)) && true))), _GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false)))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), ! (! ((false))))), (! (_GLF_IDENTITY((false), ! (! ((false)))))) && true)))) && true))), _GLF_IDENTITY(! (! _GLF_IDENTITY((! (false)), ((! (false))) || false)), _GLF_IDENTITY((! (! (! (false)))), ((! (! (! (false))))) && true) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.8), _GLF_FUZZED(28.62)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        return;
      }
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))) || false), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), false, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3276.7075)), vec2(_GLF_FUZZED(6.4), (injectionSwitch)[1]), bvec2(false, true))).y, float(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED((-1.9))), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3276.7075)), vec2(_GLF_FUZZED(6.4), (injectionSwitch)[1]), bvec2(false, true))).y, float(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED((-1.9))), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! ((injectionSwitch.x < injectionSwitch.y))) || false))))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3276.7075)), vec2(_GLF_FUZZED(6.4), (injectionSwitch)[1]), bvec2(false, true))).y, float(_GLF_IDENTITY(float(injectionSwitch.y), mix(float(_GLF_FUZZED((-1.9))), float(float(injectionSwitch.y)), bool(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), (! _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (((injectionSwitch.x < injectionSwitch.y))))))))) || false)) || false)))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_21(1.0, vec2(1.0), _GLF_struct_17(bvec4(true), bvec4(true)), _GLF_struct_18(1, mat3x2(1.0), true, bvec2(true), ivec2(1)), _GLF_struct_19(uvec2(1u), bvec2(true), _GLF_IDENTITY(1, max(1, 1)), 1.0), mat3x4(1.0), _GLF_struct_20(1.0, uvec2(1u))), workgroup_size * _GLF_struct_replacement_43.workgroup_id, ivec4(1));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))) || false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))))) || false))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y) + sin(0.0))))) && true)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y) + sin(0.0))))) && true)) || false)), false, false, false))) && true))), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))))) || false))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y) + sin(0.0))))) && true)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y) + sin(0.0))))) && true)) || false)), false, false, false))) && true))), ! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), clamp(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(max(2.3, 3.4)) : injectionSwitch.y)), (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))))), ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y), min((injectionSwitch.y), (injectionSwitch.y))) + sin(0.0)), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))))) || false))) || false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + sin(0.0)))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))).y) + sin(0.0))))) && true)) || false)), bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + _GLF_IDENTITY(sin(0.0), max(sin(0.0), sin(0.0)))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(9.7, -26.78, 71.04, 379.844) * vec2(vec4(817.081, 9.8, -70.30, -74.94)))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), (injectionSwitch) + vec2(0.0, 0.0)))).y) + sin(0.0))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((mat2(9.7, -26.78, 71.04, 379.844) * vec2(vec4(817.081, 9.8, -70.30, -74.94)))) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))), (injectionSwitch) + vec2(0.0, 0.0)))).y) + sin(0.0)))))))) && true)) || false)), false, false, false))) && true)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(clamp(injectionSwitch, injectionSwitch, injectionSwitch), mix(vec2((clamp(injectionSwitch, injectionSwitch, injectionSwitch))[0], (clamp(injectionSwitch, injectionSwitch, injectionSwitch))[1]), vec2(_GLF_FUZZED(-4.1), _GLF_FUZZED(-0.4)), bvec2(false, false)))))[0], (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[1]), vec2(_GLF_FUZZED(0.4), _GLF_FUZZED((- -48.63))), bvec2(false, false))).x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, mix(float(_GLF_FUZZED(-697.606)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), bool(true))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), false || (bool(false)))), true && (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(false || (bool(false)), bool(_GLF_IDENTITY(bool(false || (bool(false))), _GLF_IDENTITY(true && (bool(false || (bool(false)))), true && (true && _GLF_IDENTITY((bool(false || (bool(false)))), bool(bvec3(_GLF_IDENTITY((bool(false || (bool(false)))), ! (! ((bool(false || (bool(false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, true)))), false || (bool(false)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) && true)), ! (! (! (_GLF_IDENTITY((false) || false, ((false) || false) && true))))))))), bool(bvec2(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || false, ((false) || false) && true)), ! (! (! (_GLF_IDENTITY((false) || false, ((false) || false) && true))))))))), true)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).y))))
  barrier();
 _GLF_struct_39 _GLF_struct_replacement_39 = _GLF_struct_39(_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * _GLF_struct_replacement_16._f1.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_12.subgroup_id * _GLF_struct_replacement_16._f1.subgroup_size, 0u | (_GLF_struct_replacement_12.subgroup_id * _GLF_struct_replacement_16._f1.subgroup_size))) - 0u), _GLF_struct_38(_GLF_struct_35(vec4(1.0), vec3(1.0), 1.0, 1), true, ivec2(1), _GLF_struct_36(mat2x3(1.0)), _GLF_struct_37(mat3x2(1.0), mat4x3(1.0))));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_39.subgroup_base, 1u * (_GLF_struct_replacement_39.subgroup_base)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_39.subgroup_base, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(_GLF_struct_replacement_48._f1.num_workgroup) : 1u)) * (_GLF_struct_replacement_39.subgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, (true ? _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, _GLF_IDENTITY(uint(uvec4(_GLF_struct_replacement_22.workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u)), (uint(uvec4(_GLF_struct_replacement_22.workgroup_base, (0u << _GLF_IDENTITY(uint(8u), uint(8u))), 0u, 1u))) << 0u))))) : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(_GLF_struct_replacement_39.subgroup_base, 1u * (_GLF_struct_replacement_39.subgroup_base))) - 0u), (_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_39.subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED(_GLF_struct_replacement_48._f1.num_workgroup) : 1u)) * (_GLF_struct_replacement_39.subgroup_base)), (_GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, (true ? _GLF_IDENTITY(_GLF_struct_replacement_22.workgroup_base, ~ (~ (_GLF_struct_replacement_22.workgroup_base))) : _GLF_FUZZED(workgroup_size))) + _GLF_IDENTITY(_GLF_struct_replacement_39.subgroup_base, 1u * (_GLF_struct_replacement_39.subgroup_base))) - 0u)) * uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-9.8)), float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) - 0.0)), bool(true))))), _GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_39.subgroup_base, 1u * (_GLF_struct_replacement_39.subgroup_base)), _GLF_struct_replacement_22.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_39.subgroup_base, 1u * (_GLF_struct_replacement_39.subgroup_base)))) + _GLF_struct_replacement_11._f3.subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.0), _GLF_FUZZED(-541.999)), bvec2(false, false))))), (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)), true))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.5)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec2((! (_GLF_IDENTITY(true, (true) || false))), true)), ! (! (bool(bvec2(_GLF_IDENTITY((! (true)), false || ((! (true)))), true))))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (_GLF_IDENTITY(true && (false), false || (true && (false)))) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(_GLF_IDENTITY(false, true && (false)))))))))))), _GLF_IDENTITY(((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true), ! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false))))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))) || false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0))).y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false))))))))) && true))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))) || false), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false))))), (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))) || false), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, tan(0.0), 0.0, exp(0.0), 0.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, abs(1.0), 1.0))).y)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), (! (true && (false))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false))))), (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, true && (false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED((197.561 - 8.4))), bool(false)))))) || false))))))))) && true))))), ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0)))))))).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0)))))))).y, _GLF_IDENTITY(false, true && (false)), true, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0)))))))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-640.309 - -2071.3678))), float(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) : _GLF_FUZZED(injectionSwitch))).y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, 0.0)))))))), (true ? _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, 0.0, round(length(normalize(exp(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-640.309 - -2071.3678))), float(_GLF_IDENTITY(0.0, (0.0) / determinant(mat4(1.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, sqrt(0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))) : _GLF_FUZZED(injectionSwitch))).y))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, sqrt(vec2(0.0, 0.0)) + (injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))), bool(bool(! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))) && true))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, true))))))) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))) || false))), (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))) || false))), true && (false || (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))) || false)))))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(write_val, uint(virtual_gid), 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, ! (! (false))))), (bool(bool(_GLF_IDENTITY(false, ! (! (false)))))) || false)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 _GLF_struct_34 _GLF_struct_replacement_34 = _GLF_struct_34(_GLF_struct_23(1u), _GLF_struct_26(_GLF_struct_24(uvec2(1u), uvec4(1u), 1u, 1), _GLF_struct_25(vec2(1.0), mat4x3(1.0)), bvec4(true)), _GLF_struct_29(true, vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-402.529)), float(1.0), bool(true)))), _GLF_struct_27(vec3(1.0), ivec3(1)), _GLF_struct_28(bvec2(true), vec3(1.0), mat4(1.0), ivec3(1), mat2x4(1.0))), _GLF_struct_30(ivec4(1), ivec4(1)), atomicLoad(write_val, _GLF_IDENTITY(4, 1 * (4)), 64, _GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY((2), 0 ^ ((2))) : _GLF_FUZZED((13187 % -29809)))), int(_GLF_IDENTITY(int((2)), (int((2))) - 0))) | _GLF_IDENTITY(_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), int(ivec4((2), 0, 1, 0))), (_GLF_IDENTITY(2, (2) - 0)), (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(0, (0) << int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (2)), _GLF_IDENTITY(int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (_GLF_IDENTITY(2, (2) | (2)))), 0 ^ _GLF_IDENTITY((2), ((2)) | (0 | 0))))), min(int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), 0 ^ (2)))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), 0 ^ (2))))))), 2, 2))))), int(ivec2(_GLF_IDENTITY((2), clamp(_GLF_IDENTITY((2), int(ivec4((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-82098) : 2))), 0 | (int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-82098) : 2)))))), (int(_GLF_IDENTITY(int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-82098) : 2))), 0 | (int(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-82098) : 2))))))) * 1))), 0, 1, 0))), (_GLF_IDENTITY(2, (2) << 0)), (_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY((2) | (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) ^ 0), 2))), ((2) | (_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) ^ 0), 2)))) >> 0)), _GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-82575) : _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-82575) : _GLF_IDENTITY(0, ~ (~ (0)))))) ^ 0))), clamp(int(ivec2(2, 0)), int(ivec2(2, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec2(0, 1)))) + 0))), int(ivec2(_GLF_IDENTITY(2, (2) - 0), 0)))))))), 0))))), _GLF_IDENTITY(uvec4(1u), min(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(0u, 0u, 0u, 0u) << _GLF_IDENTITY(uvec4(8u), uvec4(8u))) | (uvec4(1u))))), _GLF_struct_33(mat2x4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(1.0), _GLF_struct_31(uvec4(1u), uvec3(1u), mat4x3(1.0), mat4x3(1.0), true, _GLF_IDENTITY(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(_GLF_IDENTITY(bvec2(bvec2(true)), bvec2(bvec2(bvec2(bvec2(true))))))), false)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(_GLF_IDENTITY(bvec2(true), bvec2(bvec3(_GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))), false)))))), false, true))), 1), _GLF_struct_32(ivec2(1))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! (! (false))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! (! (false))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! (! (false))))))))))))), bool(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! (! (false))))))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || false), ! (! (! (false))))))))))))), false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 buf[virtual_gid] = uint(subgroupAllEqual(_GLF_IDENTITY(_GLF_struct_replacement_34.read_val, max(_GLF_struct_replacement_34.read_val, _GLF_struct_replacement_34.read_val))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
