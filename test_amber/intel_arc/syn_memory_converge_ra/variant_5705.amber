#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 uvec4 _f0;
 ivec4 _f1;
 uint read_val;
} ;

struct _GLF_struct_4 {
 uvec3 _f0;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 uvec4 _f1;
} ;

struct _GLF_struct_2 {
 uvec4 _f0;
 uvec2 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
 float _f4;
} ;

struct _GLF_struct_5 {
 _GLF_struct_2 _f0;
 float _f1;
 _GLF_struct_3 _f2;
 _GLF_struct_4 _f3;
 float _f4;
 vec3 _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_0 {
 mat4x3 _f0;
 mat2 _f1;
} ;

struct _GLF_struct_1 {
 uint num_workgroup;
 _GLF_struct_0 _f0;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_5 _f1;
 uint _f2;
 ivec2 _f3;
 mat4 _f4;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || false))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_6 _GLF_struct_replacement_6 = _GLF_struct_6(_GLF_struct_1(gl_NumWorkGroups.x, _GLF_struct_0(mat4x3(1.0), mat2(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), max(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0)), (float(mat2x4(_GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))) * 1.0))))))), _GLF_struct_5(_GLF_struct_2(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (uvec4(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.8) : _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) ^ (_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)), _GLF_IDENTITY(uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec4(uint(uint(0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u)), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))) | _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))) / 1u), _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))) | ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))))))), (true ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec4(uint(uint(0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u)), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))) | _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))) / 1u), _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))) | ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))))))), 1u * (~ (~ (_GLF_IDENTITY(uint(uvec4(uint(uint(0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), (uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), (uvec4(uint(uint(0u)), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(uint(uint(0u)), 1u, 1u, 0u))))))) | _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)), uint(uvec4(uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)), 1u, 0u, 0u)))), ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))) | ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))))))))) : _GLF_FUZZED(130109u))))))) | (uvec4(1u))))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (uvec4(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(_GLF_IDENTITY(7.8, (false ? _GLF_FUZZED(4.9) : 7.8))) : _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uvec4(2u), uvec4(2u))) ^ (_GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(0u), (uint(0u)) ^ 0u)), _GLF_IDENTITY(uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u), (_GLF_IDENTITY(uvec4(uint(uint(0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4(uint(uint(0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u)))) / uvec4(1u, 1u, 1u, 1u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))) | _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), clamp((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u))) >> 0u))), 1u, 1u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u))) >> 0u))), 1u, 1u, 0u)), min(~ (uvec4(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u))) >> 0u))), 1u, 1u, 0u)), ~ (uvec4(uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, uint(uvec2(0u, 0u))), 0u))) >> 0u))), 1u, 1u, 0u))))))))))) / 1u), _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))) | ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))))))), (true ? _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(uint(uvec4(uint(_GLF_IDENTITY(uint(0u), (_GLF_IDENTITY(uint(0u), 0u + (uint(0u)))) + 0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, 0u)), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))) | _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))) / 1u), _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), ((uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), (uvec4(uint(uint(0u)), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), clamp(uvec4(uint(uint(0u)), 1u, 1u, 0u), uvec4(uint(uint(0u)), 1u, 1u, 0u), uvec4(uint(uint(0u)), 1u, 1u, 0u)))) * uvec4(1u, 1u, 1u, 1u))))))) | ((uint(uvec4(uint(uint(_GLF_IDENTITY(0u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u))))))), 1u, 1u, 0u)))))))))), 1u * (~ (~ (_GLF_IDENTITY(uint(uvec4(uint(uint(0u)), _GLF_IDENTITY(1u, max(1u, 1u)), 1u, _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, max(0u, 0u)), 0u)))), (uint(_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), _GLF_IDENTITY((uvec4(uint(uint(0u)), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(uint(uint(0u)), 1u, 1u, 0u)))), min((uvec4(uint(uint(0u)), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(uint(uint(0u)), 1u, 1u, 0u)))), (uvec4(uint(uint(0u)), 1u, 1u, 0u)) | (_GLF_IDENTITY(uvec4(uint(uint(0u)), 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) + (uvec4(uint(uint(0u)), 1u, 1u, 0u))))))))) | _GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), min(_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (_GLF_IDENTITY((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), _GLF_IDENTITY(min((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))), (min((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))), (uint(uvec4(uint(uint(0u)), 1u, 1u, 0u))))) | 0u))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)), uint(uvec4(uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)), 1u, 0u, 0u)))), ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))) | ((uint(uvec4(uint(uint(0u)), 1u, 1u, 0u)))))))))))) : _GLF_FUZZED(130109u))))))) | (uvec4(1u)))))) * uvec4(1u, 1u, 1u, 1u)), uvec2(1u), mat4x2(1.0), mat3x4(1.0), 1.0), 1.0, _GLF_struct_3(bvec4(true), uvec4(1u)), _GLF_struct_4(uvec3(1u)), 1.0, vec3(1.0), mat2x3(1.0)), 1u, ivec2(1), mat4(1.0));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, bool(bvec4(true, false, true, false))), true, false)), ! (! (bool(bvec4(false, true, true, false)))))))), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), float(mat2(min(injectionSwitch.x, injectionSwitch.x), 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))) + tan(0.0)) > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), false)), (bool(bvec2(! (false), false))) || false)))), false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID))) | (_GLF_IDENTITY(gl_WorkGroupID, min(gl_WorkGroupID, gl_WorkGroupID)))).x;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0), (injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))) && true)))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | 0u), _GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), uint(uvec2(~ (subgroup_base), 1u))), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-7818.7104) : _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), min(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ _GLF_IDENTITY((~ (subgroup_base)), min((~ (subgroup_base)), (_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(min(workgroup_id, workgroup_size)))))))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))), _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | ((0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u, 1u, 0u)))), (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u, 1u, _GLF_IDENTITY(0u, (0u) << 0u)))))) >> 0u)))))) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))), max(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(0u, (0u) ^ 0u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (uint(_GLF_ONE(1.0, injectionSwitch.y))) - 0u) : _GLF_FUZZED(atomicMin(subgroup_size, subgroup_local_id)))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), 0u + (_GLF_IDENTITY((~ (subgroup_base)), min((~ (subgroup_base)), (~ (subgroup_base))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) >> 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), (1u & 1u) * ((subgroup_base))))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y)))), 1u))), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((1u & 1u), ~ (~ ((1u & 1u)))) * ((subgroup_base))))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), _GLF_ONE(1.0, injectionSwitch.y)))), 1u)))), (~ ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_base), (1u & 1u) * ((subgroup_base)))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) / 1u)), (1u & 1u) * ((subgroup_base)))), (~ (~ _GLF_IDENTITY((subgroup_base), (1u & 1u) * ((subgroup_base))))) * 1u)) ^ 0u)), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), 1u))))) << 0u)))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), 1u * (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), uint(uvec3(_GLF_IDENTITY(~ (subgroup_base), ~ (~ (~ (subgroup_base)))), (0u ^ 0u), 0u))), ~ (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))))) - 0u))), _GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ (workgroup_size)), (_GLF_IDENTITY((~ (workgroup_size)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ ((~ (workgroup_size))))) << 0u))) : uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), min((_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), (subgroup_base))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) * ((_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u))), min(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) ^ (uvec2(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec2(1u, 1u), max(_GLF_IDENTITY(uvec2(1u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(176017u, 101159u)) : uvec2(1u, 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(176017u, 101159u)) : uvec2(1u, 1u)))), (~ (_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(176017u, 101159u)) : uvec2(1u, 1u))))) >> uvec2(0u, 0u))) << uvec2(0u, 0u)))), uvec2(1u, 1u)))))) - uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))))))) : _GLF_FUZZED(subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), (uint(1u)) >> 0u)))))))), ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)), (max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))) >> 0u)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)), (false ? _GLF_FUZZED(-3.1) : max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), 1u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_base, 1u * (subgroup_base))), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), min(_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), (~ (_GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))) | 0u)) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x)))) - 0u)) | 0u), _GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY(~ (subgroup_base), uint(uvec2(~ (subgroup_base), 1u))), (~ (subgroup_base)) | 0u)) ^ uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(-7818.7104) : _GLF_ZERO(0.0, injectionSwitch.x))))))))), _GLF_IDENTITY(0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), min(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), (_GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) ^ 0u)) >> 0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), (false ? _GLF_FUZZED(uvec4(175747u, 193116u, 43209u, 15087u)) : _GLF_IDENTITY(uvec4(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), (_GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) ^ 0u)) >> 0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), max(uvec4(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), (_GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) ^ 0u)) >> 0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u), uvec4(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), (_GLF_IDENTITY((~ (subgroup_base)), ((~ (subgroup_base))) ^ 0u)) >> 0u)), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))), uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ _GLF_IDENTITY((~ (subgroup_base)), min((~ (subgroup_base)), (_GLF_IDENTITY(~ (subgroup_base), (true ? ~ (subgroup_base) : _GLF_FUZZED(min(workgroup_id, workgroup_size)))))))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))), _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | ((0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u, 1u, 0u))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))), _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | ((0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u, 1u, 0u))), (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))), _GLF_IDENTITY(0u, 0u ^ _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), max((0u), (0u)))) | ((0u)))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u, 1u, 0u)))) >> 0u))))), (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) ^ 0u), _GLF_IDENTITY(~ (~ (subgroup_base)), (~ (~ (subgroup_base))) | 0u)), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec4(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) : uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) ^ 0u), ~ (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), ~ (subgroup_base), ~ (subgroup_base))))), _GLF_IDENTITY(0u, 0u ^ (0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), 0u, 1u, _GLF_IDENTITY(0u, (0u) << 0u)))))) >> 0u)))))) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))), max(((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))))))), ~ (~ (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))), _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u), (_GLF_IDENTITY(0u, (0u) ^ 0u)) * 1u))), _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), (true ? _GLF_IDENTITY(uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)))) | (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y))), ((uint(_GLF_ONE(1.0, injectionSwitch.y)))) + 0u))) - 0u) : _GLF_FUZZED(atomicMin(subgroup_size, subgroup_local_id)))), _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y))), (uvec3(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u)))), (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), (uvec3(1u, 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)))) * uvec3(1u, 1u, 1u))))) - 0u))))), (uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ _GLF_IDENTITY((~ (subgroup_base)), 0u + (_GLF_IDENTITY((~ (subgroup_base)), min((~ (subgroup_base)), (~ (subgroup_base))))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) >> 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), (1u & 1u) * ((subgroup_base))))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), (0.0) * 1.0))).y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y)))), 1u))), ~ (_GLF_IDENTITY(~ ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), _GLF_IDENTITY((1u & 1u), ~ (~ ((1u & 1u)))) * ((subgroup_base))))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))), mix(float(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y)))), float(_GLF_FUZZED(-4.9)), bool(false)))) / 1.0), _GLF_ONE(1.0, injectionSwitch.y)))), 1u)))), (~ ((false ? _GLF_FUZZED(workgroup_size) : uint(uvec4(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (~ _GLF_IDENTITY((subgroup_base), (1u & 1u) * ((subgroup_base)))), (_GLF_IDENTITY(~ (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) / 1u)), (1u & 1u) * ((subgroup_base)))), (~ (~ _GLF_IDENTITY((subgroup_base), (1u & 1u) * ((subgroup_base))))) * 1u)) ^ _GLF_IDENTITY(0u, max(0u, 0u)))), 0u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y))), sqrt(0.0), tan(0.0), 0.0)), max(float(vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y))), sqrt(0.0), tan(0.0), 0.0)), float(vec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).y), _GLF_ONE(1.0, injectionSwitch.y))), sqrt(0.0), tan(0.0), 0.0))))), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))), 1u))))) << 0u)))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), 1u * (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), uint(uvec3(_GLF_IDENTITY(~ (subgroup_base), ~ (~ (~ (subgroup_base)))), (0u ^ 0u), 0u))), ~ (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))))) - 0u)), 0u | (~ (_GLF_IDENTITY(~ (subgroup_base), (_GLF_IDENTITY(~ (subgroup_base), 1u * (_GLF_IDENTITY(~ (subgroup_base), clamp(~ (subgroup_base), _GLF_IDENTITY(~ (subgroup_base), uint(uvec3(_GLF_IDENTITY(~ (subgroup_base), ~ (~ (~ (subgroup_base)))), (0u ^ 0u), 0u))), ~ (_GLF_IDENTITY(subgroup_base, 0u | (subgroup_base)))))))) - 0u))))), _GLF_IDENTITY(0u, max(0u, 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, ~ _GLF_IDENTITY((~ (workgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), (_GLF_IDENTITY(~ (workgroup_size), max(~ (workgroup_size), ~ (workgroup_size)))) - 0u)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))) ^ ((~ (workgroup_size))))) << 0u))) : uint(uvec4(_GLF_IDENTITY(subgroup_base, ~ (~ _GLF_IDENTITY((subgroup_base), min((_GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), (subgroup_base))))), 0u, uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) * ((_GLF_IDENTITY(1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(1u, 0u ^ (1u)), uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, clamp(_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) | 0u) | (1u)), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), 1u))), min(_GLF_IDENTITY(uvec2(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))), _GLF_IDENTITY(uvec2(0u, 0u), uvec2(uvec2(uvec2(0u, 0u)))) ^ (uvec2(1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 1u, 1u)))))), _GLF_IDENTITY(uvec2(1u, 1u), max(_GLF_IDENTITY(uvec2(1u, 1u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(176017u, 101159u)) : uvec2(1u, 1u)))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED(uvec2(176017u, 101159u)) : uvec2(1u, 1u)))), (~ (_GLF_IDENTITY(uvec2(1u, 1u), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), bool(bvec4(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) ? _GLF_FUZZED(uvec2(176017u, 101159u)) : uvec2(1u, 1u))))) >> _GLF_IDENTITY(uvec2(0u, 0u), (false ? _GLF_FUZZED(uvec2(85016u, 68846u)) : uvec2(0u, 0u))))) << uvec2(0u, 0u)))), uvec2(1u, 1u)))))) - uvec2(0u, 0u)), max(_GLF_IDENTITY(uvec2(1u, 1u), min(uvec2(1u, 1u), uvec2(1u, 1u))), _GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY(min(uvec2(1u, 1u), uvec2(1u, 1u)), (min(uvec2(1u, 1u), uvec2(1u, 1u))) ^ uvec2(0u, 0u))))))) : _GLF_FUZZED(subgroup_local_id))) << _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), uint(1u))) >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))), (uint(1u)) >> 0u))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) && true))), true))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, false, false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch.y) - 0.0))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / abs(_GLF_ONE(1.0, injectionSwitch.y))), (injectionSwitch.y) - 0.0)))) && true)))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), false || ((! (bool(bool(false))))))), (_GLF_IDENTITY(bool(bool(false)), ! _GLF_IDENTITY((! (bool(bool(false)))), _GLF_IDENTITY(false, true && (false)) || ((! (bool(bool(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))))))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 atomicStore(write_val, uint(_GLF_IDENTITY(virtual_gid, (virtual_gid) << (_GLF_IDENTITY(0u & uint(false), (0u & uint(false)) ^ 0u)))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(4, (0 & -14579) ^ (4)), 0, 0, 1)), int(ivec3(int(ivec4(_GLF_IDENTITY(4, (0 & -14579) ^ (4)), 0, 0, 1)), 1, 1)))), _GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), clamp(_GLF_IDENTITY(64, max(64, 64)), 64, _GLF_IDENTITY(64, 0 ^ (64)))), _GLF_IDENTITY(4, (4) | (4)));
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(uvec4(1u), ivec4(1), atomicLoad(_GLF_IDENTITY(write_val, _GLF_IDENTITY((write_val), 0u + (_GLF_IDENTITY((write_val), (false ? _GLF_FUZZED(virtual_gid) : (write_val))))) << 0u), 4, 64, 2));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), max(exp(_GLF_IDENTITY(0.0, max(0.0, 0.0))), exp(0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.x : _GLF_FUZZED(4.4))))) < injectionSwitch.y)) && (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, _GLF_IDENTITY(exp(0.0), max(exp(0.0), _GLF_IDENTITY(exp(0.0), max(exp(0.0), exp(0.0))))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))).x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1280.0127) : _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) / vec2(1.0, 1.0)).y)))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && ((_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))) || false))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, true, true))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))
  return;
 buf[virtual_gid] = _GLF_IDENTITY(uint(subgroupAllEqual(_GLF_struct_replacement_7.read_val)), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) ^ 0u) + (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_struct_replacement_7.read_val)), 0u ^ (uint(subgroupAllEqual(_GLF_struct_replacement_7.read_val))))), (true ? _GLF_IDENTITY(0u, (0u) ^ 0u) + (_GLF_IDENTITY(uint(subgroupAllEqual(_GLF_struct_replacement_7.read_val)), 0u ^ (uint(subgroupAllEqual(_GLF_struct_replacement_7.read_val))))) : _GLF_FUZZED((workgroup_size & subgroup_local_id)))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
