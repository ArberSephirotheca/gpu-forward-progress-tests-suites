#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec4 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup;
 uvec4 GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base;
 uvec4 GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size;
 uvec4 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id;
 uvec3 GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gid;
 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.xyz = GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gid;
 uvec2 GLF_merged2_0_1_8_1_1_11read_valsubgroup_id;
 GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.xy = GLF_merged2_0_1_8_1_1_11read_valsubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.z = subgroup_id;
 GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.xy.y = GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.z;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.w = num_workgroup;
 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.xyz.x = GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.w;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.w = workgroup_size;
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.z = workgroup_id;
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.w = GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.z;
 uint workgroup_base = GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.w * GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.w;
 GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.y = workgroup_base;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.xy.y * subgroup_size;
 GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.w = subgroup_base;
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.y = GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.w;
 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.xyz.y = GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.y;
 uint virtual_gid = GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.y + GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.xyz.y + subgroup_local_id;
 GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.xyz.z = virtual_gid;
 atomicStore(write_val, uint(GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.xyz.z), 4, 64, 0);
 uint read_val = atomicLoad(write_val, 4, 64, 0);
 GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.z = read_val;
 GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.x = GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.z;
 GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.x = GLF_merged4_0_1_8_1_1_14_2_1_12_3_1_14read_valworkgroup_baseworkgroup_idworkgroup_size.x;
 GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.xy.x = GLF_merged4_0_1_8_1_1_13_2_1_11_3_1_12read_valsubgroup_basesubgroup_idworkgroup_id.x;
 if(_GLF_DEAD(false))
  return;
 buf[GLF_merged2_0_3_69_3_1_13GLF_merged3_0_1_13_1_1_13_2_1_11num_workgroupsubgroup_basevirtual_gidnum_workgroup.xyz.z] = uint(subgroupAllEqual(GLF_merged3_0_2_43_2_1_8_3_1_13GLF_merged2_0_1_8_1_1_11read_valsubgroup_idread_valsubgroup_base.xy.x));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
