#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer WriteVal {
 uint write_val;
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) || false) || (_GLF_IDENTITY(false, true && (false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(-6.3)))) - 0.0)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), (bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), false, false))) && true))), ! (! (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, false)), _GLF_IDENTITY((bool(bvec3(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), true && (_GLF_IDENTITY((bool(bvec3(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), bool(bvec2(_GLF_IDENTITY((bool(bvec3(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), ((bool(bvec3(! (false), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))) && true), false))))) && true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), ((false)) && true)) || false) && true, _GLF_IDENTITY(((false) && true), false || (((false) && true))) || false))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true) || false, ! (! (((false) && true) || false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(_GLF_IDENTITY(bvec2(! (true), false), bvec2(bvec4(bvec2(! (true), false), true, true)))))))) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((_GLF_IDENTITY(false, true && (false))) && true) || false))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))))))))))), true, true, true)))), false || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((_GLF_IDENTITY(false, false || (false))) && true) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))))))))))), true, true, true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))) || false)))) && true, (_GLF_IDENTITY((false), false || ((false))) && true) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))) || false))), (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))) || false)))) && true, (_GLF_IDENTITY((false), false || ((false))) && true) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))) || false))), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false)), (bool(bvec3(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false))) || false)))) && true, (_GLF_IDENTITY((false), false || ((false))) && true) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))) || false)))))) || false))) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, (true) || false), ((false) && true) || _GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false)), true, false, true)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), bool(bvec4(_GLF_IDENTITY((false) && true, ((false) && true) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false))))) || false))))) && true)))))), (_GLF_IDENTITY((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || _GLF_IDENTITY(false, ! (! (false))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false)))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) || false), (_GLF_IDENTITY((false) && true, ((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)) && true) || false)) && true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bvec2(bvec4(bvec2((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, true)))))) || false))) || false))))) && true)))), true && ((! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((false) && true, ((false) && true) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, true, true)))) && true, ((false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))) || false))) || false))))) && true))))))) || false)), false || (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) && _GLF_IDENTITY(true, false || (true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), true)))))))))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))))))))))) && true))))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) && true)), false, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))), ! (! (bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))) && true), false, true, true))))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true), bvec2(bvec4(bvec2(false, true), true, true))))))))), (false) && true)), false, true)))))))), false || (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (false) && true)), false, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, false))))), false || (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) || false))))))), (false) && true)), false, true)), bvec3(bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, true && (false))) || false)))), (false) && true)), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bool(true)))))) && true)))))))))))), ! (! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY((false) && true, ((false) && true) || false)))), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), _GLF_IDENTITY((false) && true, ((false) && true) || false))))) || _GLF_IDENTITY(false, (false) && true))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.65) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * sqrt(vec2(1.0, 1.0))))), _GLF_IDENTITY(abs(_GLF_IDENTITY(sqrt(vec2(1.0, 1.0)), (true ? sqrt(vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(-452.011, 4.0))))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mix(vec2(_GLF_FUZZED(23.64), _GLF_IDENTITY((max(injectionSwitch, injectionSwitch))[1], (true ? (max(injectionSwitch, injectionSwitch))[1] : _GLF_FUZZED(7231.9937)))), vec2((max(injectionSwitch, injectionSwitch))[0], _GLF_FUZZED(-1.5)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), _GLF_IDENTITY(min(abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))), (min(abs(sqrt(vec2(1.0, 1.0))) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))[1]), vec2(_GLF_FUZZED(7.3), _GLF_FUZZED(79.94)), bvec2(false, false))), abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) * vec2(_GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-520.466)), bool(false)))) - determinant(mat3(determinant(mat3(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-7498.0603)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y), _GLF_ONE(1.0, injectionSwitch.y))))).y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], float(vec4(injectionSwitch[0], 0.0, sin(0.0), 1.0))), injectionSwitch[1])).y)), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0)), dot(vec2(determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0), vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(1.0, 0.0, 0.0), (vec3(1.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0))), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 0.0)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.65) : injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), max(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) - vec2(0.0, 0.0)), max(injectionSwitch, injectionSwitch)))), abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-292.830, -473.508, 182.966, 344.170))))) / mat2(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), abs(cos(0.0)), 0.0, 0.0, log(1.0)), mat3(_GLF_IDENTITY(mat4(mat3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-292.830, -473.508, 182.966, 344.170))))) / mat2(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), abs(cos(0.0)), 0.0, 0.0, log(1.0))), transpose(transpose(mat4(mat3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (_GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)), (true ? mat2(_GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(mat2(-292.830, -473.508, 182.966, 344.170))))) / mat2(1.0, 1.0, 1.0, 1.0))), 1.0, 1.0, cos(0.0), abs(cos(0.0)), 0.0, 0.0, log(1.0)))))))), (mat3(_GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), 1.0, 1.0, cos(0.0), abs(cos(0.0)), 0.0, 0.0, log(1.0))) + _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(tan(0.0), cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(6737.4191) : dot(vec4(tan(0.0), cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 0.0, 1.0, 0.0)))), mat3(mat4x3(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat4(_GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, cos(0.0), 0.0))), 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(tan(0.0), cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(tan(0.0), cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), (false ? _GLF_FUZZED(6737.4191) : dot(vec4(tan(0.0), cos(0.0), 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0)), 0.0, 0.0, 1.0, 0.0))))))))))))).y)) || ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_IDENTITY(! (! (true)), (! (! (true))) && true), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), bool(bool(! (_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(bvec4(! (! (true)), false, false, true)))))))))))))), _GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.65) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))), abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)))).y)) || ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), true && (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.65) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))), abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)))).y)) || ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), ! (! (_GLF_IDENTITY(bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.65) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))), abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)))).y)) || ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, bool(bvec2(true, true))))))), false || (bool(bool(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(87.65) : _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), mat2(1.0) * (max(injectionSwitch, injectionSwitch)))), abs(sqrt(vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 1.0, 0.0, 0.0, exp(0.0)))), injectionSwitch)))).y)) || ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, bool(bvec2(true, true)))))))))))))))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(9374.3211, clamp(9374.3211, 9374.3211, 9374.3211))), (_GLF_FUZZED(_GLF_IDENTITY(9374.3211, clamp(9374.3211, 9374.3211, 9374.3211)))) / 1.0), _GLF_IDENTITY((injectionSwitch)[1], clamp(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))[1], (injectionSwitch)[1], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), ((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))) * mat2(1.0))))[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(75.24)), bvec2(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(982.614), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED((false ? _GLF_IDENTITY(6.9, max(6.9, 6.9)) : -3185.5614))), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y, mix(float(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))).y), float(_GLF_FUZZED(-9989.2404)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))).x > injectionSwitch.y))))).y), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 1.0, 1.0, 0.0, 1.0)))), vec2(0.0, 0.0) + (_GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)), (true ? _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)) : _GLF_FUZZED(injectionSwitch))))))))) * mat2(1.0), clamp((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), (mat3x4(injectionSwitch, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)) - mat3x4(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.8))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))) * mat2(1.0), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))))) * mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(69.26)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(vec2(1.0, 0.0))), clamp(1.0, 1.0, 1.0))), bool(true)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), vec2(mat2(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))), injectionSwitch)))), mat2(1.0) * (injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(_GLF_IDENTITY(6354.7366, (6354.7366) / 1.0))), bvec2(false, false)))), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))), mix(vec2((min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))))[0], _GLF_FUZZED(6076.5425)), vec2(_GLF_FUZZED(366.640), (min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))))[1]), bvec2(false, true))))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))), vec2(0.0, 0.0) + ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(_GLF_IDENTITY(6354.7366, (6354.7366) / 1.0))), bvec2(false, false)))), _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))), mix(vec2((min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))))[0], _GLF_FUZZED(6076.5425)), vec2(_GLF_FUZZED(366.640), (min(vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false)))), vec2(_GLF_IDENTITY(vec2(injectionSwitch), mix(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), vec2(_GLF_FUZZED(-2797.7190), _GLF_FUZZED(6354.7366)), bvec2(false, false))))))[1]), bvec2(false, true))))))), clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))))), mat2(1.0) * (injectionSwitch))) + log(vec2(1.0, 1.0)))) * mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))))), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x) - 0.0))) > injectionSwitch.y) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, false)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, false)))), false))), (! (bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), bool(bvec4(bool(bvec3(false, true, true)), true, false, false)))), false)))) && true)))))), (bool(bvec3(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (true))))), ! (! (bool(bool(_GLF_IDENTITY(true, ! (! (true)))))))), false, false))) || false)))))) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false)), (bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false))) || false)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))))))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))) && true))))))), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false)), (bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) || false)))))), true, false))) || false)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), false, false), true))))))))))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))) && true), ! (! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, (false) && true) || (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && true)))))) && true))))))))))))))) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))))) && true))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(43.49, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), (_GLF_IDENTITY(vec2(43.49, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), clamp(vec2(43.49, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), vec2(43.49, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1))), vec2(43.49, _GLF_IDENTITY(5.1, clamp(5.1, 5.1, 5.1)))))) / vec2(1.0, 1.0))) : injectionSwitch)).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.49, 5.1)) : injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.49, 5.1)) : injectionSwitch)).y, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.49, _GLF_IDENTITY(5.1, 0.0 + (5.1)))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.49, _GLF_IDENTITY(5.1, 0.0 + (5.1)))) : injectionSwitch)).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.49, _GLF_IDENTITY(5.1, 0.0 + (5.1)))) : injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(43.49, _GLF_IDENTITY(5.1, 0.0 + (5.1)))) : injectionSwitch)).y : _GLF_FUZZED(3.3)))))) && true)) && true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y, (false ? _GLF_FUZZED(-1.8) : _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(write_val, uint(virtual_gid), 4, 64, 0);
 uint read_val = atomicLoad(_GLF_IDENTITY(write_val, (write_val) >> 0u), 4, 64, 0);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), 0u | (_GLF_IDENTITY(buf[virtual_gid] = uint(subgroupAllEqual(read_val)), (false ? _GLF_FUZZED(subgroup_id) : buf[virtual_gid] = uint(subgroupAllEqual(read_val)))))), (buf[virtual_gid] = uint(subgroupAllEqual(read_val))) >> 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 1
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
