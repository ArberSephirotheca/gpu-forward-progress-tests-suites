#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(true && (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (true && (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), true && (! (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false))))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), false, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), false, true), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))) && (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true, false))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(4.1))))), 0.0, 1.0, 0.0)), max(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(4.1))))), 0.0, 1.0, 0.0)), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(-9.5) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y : _GLF_FUZZED(4.1))))), 0.0, 1.0, 0.0))))), true && _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true, false))), false), true)))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0 * (float(mat3x2(_GLF_IDENTITY(injectionSwitch[0], float(mat3x4(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) + 0.0), 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, abs(1.0), 1.0, 0.0))), 0.0, 0.0, 1.0, 0.0, 0.0))))), injectionSwitch[1])).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[0], injectionSwitch[1]))[0], injectionSwitch[1])))).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(0, (0) * 1)], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(0, (0) * 1)], (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[_GLF_IDENTITY(0, (0) * 1)]) + 0.0)) / 1.0), injectionSwitch[1]), min(vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(72995) : 0)), 0, 0, 1)))], injectionSwitch[1]))[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1]))[0], injectionSwitch[1])))).x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))) || false))) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true))), true)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false)))), true))))))))))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false, true))), bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))), false, true))), true)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))), _GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) || false)) && true)))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))))), false))))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), bool(bvec3(true, true, false))))), false)))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))), true))), false)))), true))))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (_GLF_IDENTITY(gl_WorkGroupSize.x, min(gl_WorkGroupSize.x, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize))[0], (gl_WorkGroupSize[0]) << 0u), 0u + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u)), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u)), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u)), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u))))))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u)), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u))))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u)), ~ (~ ((false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(gl_WorkGroupSize[0], (gl_WorkGroupSize[0]) << 0u))))))) : _GLF_FUZZED(subgroup_size))))))))), gl_WorkGroupSize[1], gl_WorkGroupSize[2])).x))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) | (uvec3(17445u, 102375u, 55576u) & uvec3(0u, 0u, 0u))).x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED((num_workgroup + num_workgroup)) : uint(2u)))) ^ 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), ((~ (_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (_GLF_IDENTITY(uint(2u), (false ? _GLF_FUZZED((num_workgroup + num_workgroup)) : uint(2u)))) ^ 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) - (1u ^ 1u))), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, uint(uvec3(2u, 0u, 1u))), 2u, 2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, uint(uvec3(2u, 0u, 1u))), 2u, 2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min(_GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, uint(uvec3(2u, 0u, 1u))), 2u, 2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uvec4(gl_WorkGroupSize.x, 0u, (1u & ((1u << _GLF_IDENTITY(uint(2u), uint(_GLF_IDENTITY(2u, clamp(_GLF_IDENTITY(2u, uint(uvec3(2u, 0u, 1u))), 2u, 2u))))) >> _GLF_IDENTITY(uint(2u), uint(2u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) - 0u))), 1u, 0u)))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), false))))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0))).y))), true && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0))).y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(vec3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), 1.0))).y))))))) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec3((false), true, false))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > injectionSwitch.y)) && true)))))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (! (false))))) || false)), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sqrt(vec2(0.0, 0.0))).y))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) << (uvec3(1u, 1u, 1u) ^ uvec3(1u, 1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u))), clamp(_GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), uvec3(0u, 0u, 0u) | (uvec3(1u, 1u, 1u)))))), ((uvec3(1u, 1u, 1u))) ^ uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) >> 0u)))).x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, false || (false)))), bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), uint(uvec4(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u), 1u, 0u, 0u))), (workgroup_size * workgroup_id) | 0u);
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false)), (_GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(false))) || false)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u);
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), ! (! (bool(bool((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bool(bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false))))), bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))))), true))))))))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(_GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u | (0u))), max(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u | (0u))), _GLF_IDENTITY(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u | (0u))), min(uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u | (0u))), uvec2(workgroup_base, _GLF_IDENTITY(0u, 0u | (0u)))))))))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (_GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), 0u ^ (uint(uvec2(workgroup_base, 0u))))))))))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) / 1u, min(_GLF_IDENTITY((subgroup_base) / _GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(1u, 1u * (1u)))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(_GLF_IDENTITY(floatBitsToUint(injectionSwitch), (floatBitsToUint(injectionSwitch)) | uvec2(0u, 0u)).y) : subgroup_base))) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u)), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true ? subgroup_base : _GLF_FUZZED(virtual_gid), 0u | (true ? subgroup_base : _GLF_FUZZED(virtual_gid)))))) / _GLF_IDENTITY(1u, min(1u, 1u))), (((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), (1u | 1u) * (uint(uint(0u))))))))))))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(uvec4(_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u)))), (~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u))))))), (_GLF_IDENTITY((uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u))))))), (false ? _GLF_FUZZED(workgroup_size) : (uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u)))))))))) | ((uint(uvec2(workgroup_base, _GLF_IDENTITY(0u, ~ (~ (_GLF_IDENTITY(0u, (0u) / 1u))))))))), ((uint(uvec2(workgroup_base, 0u)))) | _GLF_IDENTITY(0u, (0u) >> 0u)), 1u, 1u, _GLF_IDENTITY(0u, (0u) | 0u)))))) - uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ _GLF_IDENTITY((~ (uint(uvec2(workgroup_base, 0u)))), ~ (_GLF_IDENTITY(~ ((~ (uint(uvec2(workgroup_base, 0u))))), ~ (~ (~ ((~ (uint(uvec2(workgroup_base, 0u))))))))))))))))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) / 1u, min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), _GLF_IDENTITY((subgroup_base) / 1u, min((subgroup_base) / 1u, (subgroup_base) / 1u)))), ~ (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), clamp(_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) << 0u), min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) | 0u), 1u), min(1u, 1u))), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), _GLF_IDENTITY((((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))), (_GLF_IDENTITY(((_GLF_IDENTITY((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)), ((subgroup_base) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(virtual_gid) : 1u)), 1u))) + 0u))), 0u ^ (_GLF_IDENTITY((((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))), ((((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(1u, 1u))))) - 0u)))) + (0u | (0u << _GLF_IDENTITY(uint(7u), uint(7u))))) - 0u))))) + 0u) + _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (true ? subgroup_local_id + 1 : _GLF_FUZZED((++ subgroup_base)))), (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)), subgroup_local_id + 1, _GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1))))))), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1), 0u ^ ((false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))))) - 0u), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))) - 0u) % subgroup_size), ((_GLF_IDENTITY((subgroup_local_id + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, ~ (~ ((subgroup_local_id) + 0u)))) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, uint(uvec3(subgroup_id, 0u, 1u)))) : subgroup_local_id + 1)))) - 0u), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), min((subgroup_local_id + 1), (subgroup_local_id + 1))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), min((subgroup_local_id + 1), (subgroup_local_id + _GLF_IDENTITY(1, (0 ^ 0) ^ (1)))))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u), clamp((subgroup_local_id + 1), (_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (subgroup_local_id + 1))), min((subgroup_local_id + 1), (subgroup_local_id + 1)))))) - 0u) % subgroup_size)) / 1u), max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), (_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ((uint(uvec2(workgroup_base, 0u)))) << 0u)) - 0u))))))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) / 1u, min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_base) / 1u, 0u | ((subgroup_base) / 1u))), (~ _GLF_IDENTITY(((subgroup_base) / 1u), 0u | (((subgroup_base) / 1u)))) * 1u))), (subgroup_base) / 1u)), ~ (~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) / _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, min(1u, 1u))))), (((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) | (_GLF_IDENTITY(1u, min(1u, 1u)))))))) - 0u)))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), _GLF_IDENTITY(uint(uvec3((uint(uvec2(workgroup_base, 0u))), 0u, 0u)), (false ? _GLF_FUZZED(workgroup_size) : uint(uvec3((uint(uvec2(workgroup_base, 0u))), 0u, 0u)))))), (~ (~ (uint(uvec2(workgroup_base, 0u))))) / 1u))))))), _GLF_IDENTITY(1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(uvec4(_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))))))), uint(uvec2(1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u), min(uvec4(_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u), uvec4(_GLF_IDENTITY((uint(uvec2(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 1u))), 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u)))) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) / uvec4(1u, 1u, 1u, 1u)))))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_base, 0u), (uvec2(workgroup_base, 0u)) >> uvec2(0u, 0u))), ~ (~ (uint(uvec2(workgroup_base, 0u))))))))))), 0u))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) / 1u, min(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u), (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u)) ^ 0u))), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u)))), ((_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))))) | 0u) | (_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))))), (subgroup_base) / 1u)), ~ _GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(1u, 1u * (1u)), (_GLF_IDENTITY(1u, 1u * (1u))) << 0u) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), (((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u)), (_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) >> 0u)) - 0u))), (_GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u))), (((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) << 0u)) - 0u)), (true ? (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), _GLF_IDENTITY((((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u, (true ? _GLF_IDENTITY((((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))), ~ (~ ((((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u))))))) - 0u : _GLF_FUZZED(workgroup_size))))) : _GLF_FUZZED(subgroup_base)))) | _GLF_IDENTITY((_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), (((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))))))) - 0u)), (true ? (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), (((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u)) : _GLF_FUZZED(subgroup_local_id)))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), (((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))))))) - 0u)), (true ? (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), (((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u)) : _GLF_FUZZED(subgroup_local_id)))))), (uint(uint((_GLF_IDENTITY((~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - _GLF_IDENTITY(0u, (0u >> _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(0u, (0u) | (0u))))))), (((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), max(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, min(1u, 1u)))))))) - 0u)), (true ? (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), (((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u)) : _GLF_FUZZED(subgroup_local_id))))))) / 1u)))))) + 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)))))) + 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, max((subgroup_local_id) + 0u, (subgroup_local_id) + 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, max((subgroup_local_id) + 0u, (subgroup_local_id) + 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u))), uint(uint(_GLF_IDENTITY(uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, max((subgroup_local_id) + 0u, (subgroup_local_id) + 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u))), (uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) + 0u, max((subgroup_local_id) + 0u, (subgroup_local_id) + 0u))) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u)))) >> 0u))))), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) - 0u) % subgroup_size), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(workgroup_base, 1u * (_GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), (~ (workgroup_base)) + 0u))))), _GLF_IDENTITY(0u, ~ (~ (0u))))), ~ (~ (uint(uvec2(workgroup_base, 0u))))))))))) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))), min(_GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))), min(_GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base))), (_GLF_IDENTITY((subgroup_base), 1u * ((subgroup_base)))) ^ 0u)))))) | ((subgroup_base))) / 1u, min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ (_GLF_IDENTITY((subgroup_base), (0u << _GLF_IDENTITY(uint(0u), uint(0u))) | ((subgroup_base))) / 1u)) * 1u))), (subgroup_base) / 1u)), ~ (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u))), (_GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u))), uint(uint(((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u))))))) - 0u)))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))))))), 1u * (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(uvec4(_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(uvec4(_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ((uint(uvec2(workgroup_base, 0u)))) | 0u), 1u, 1u, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))))))) | ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(4u), uint(4u)))))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))), (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))) | (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u)))))))))))), 1u * (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ _GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), uint(uvec4(_GLF_IDENTITY((uint(uvec2(workgroup_base, 0u))), ((uint(uvec2(workgroup_base, 0u)))) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 1u * (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))))) | (0u))), 1u, 1u, 0u)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))), (_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))), (true ? (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))) : _GLF_FUZZED(virtual_gid))), min(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))), (true ? (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))) : _GLF_FUZZED(virtual_gid))), _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))), (true ? (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec2(workgroup_base, 0u)), ~ (~ (uint(uvec2(workgroup_base, 0u))))))) : _GLF_FUZZED(virtual_gid)))))) >> 0u)))))))) / 1u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) / 1u, _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u), (min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u)) | (min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u)))), ~ (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), (((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))) - 0u))), (false ? _GLF_FUZZED(subgroup_base) : _GLF_IDENTITY(_GLF_IDENTITY((subgroup_base) / 1u, _GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_base), ((subgroup_base)) * 1u) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u), (_GLF_IDENTITY(min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u), (min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u)) - 0u)) | (min(_GLF_IDENTITY((subgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((subgroup_base) / 1u), (~ ((subgroup_base) / 1u)) * 1u))), (subgroup_base) / 1u)))), ~ (~ _GLF_IDENTITY(((subgroup_base) / _GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY((true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size))), (false ? _GLF_FUZZED(num_workgroup) : (true ? _GLF_IDENTITY(1u, 1u * (1u)) : _GLF_FUZZED((subgroup_base - workgroup_size)))))), _GLF_IDENTITY(min(1u, 1u), (_GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) + 0u)) - 0u))), ((_GLF_IDENTITY((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)), ((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u))) | ((subgroup_base) / _GLF_IDENTITY(1u, min(1u, 1u)))))) - 0u))))))) + 0u) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) * 1u)) | (_GLF_IDENTITY(subgroup_local_id + 1, 0u + (subgroup_local_id + 1))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + 0u) + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id + 1)))) - 0u), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))), min((subgroup_local_id + 1), (subgroup_local_id + 1)))) - 0u) % subgroup_size)));
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, ~ (~ (virtual_gid)))], 4, 64, 2);
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY((read), uint(uvec2((_GLF_IDENTITY(read, 0u ^ (_GLF_IDENTITY(read, clamp(read, read, read))))), 0u))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) / 1u), min(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, ~ (~ (read)))) / 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - 0u), (read) / _GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - 0u), (read) / 1u))))), (_GLF_IDENTITY(_GLF_IDENTITY(read, _GLF_IDENTITY((_GLF_IDENTITY(read, max(read, read))), ((_GLF_IDENTITY(read, max(read, read)))) | ((_GLF_IDENTITY(read, max(read, read))))) / 1u), min(_GLF_IDENTITY(read, (_GLF_IDENTITY(read, ~ (~ (read)))) / _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, ~ (~ (1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - 0u), (read) / _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, max(1u, 1u))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(read, (read) - 0u), (read) / 1u)))))) | 0u), (_GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) >> 0u)) / 1u)) - 0u)) - 0u), 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
