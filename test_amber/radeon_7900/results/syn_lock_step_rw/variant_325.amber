#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), true))), false))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(atan(5.5, 0.3))))))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, false))))))))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true))))), false)))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true))))), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true))))), false)))), true)))))), (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true))))))) || false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, true && ((false) && true))), bool(bool(! (_GLF_IDENTITY((false) && true, true && ((false) && true)))))))))) || false)))))) && true)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), ((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), ((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), ((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), ((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec4(_GLF_IDENTITY(false, true && (false)), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true), _GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, false), true)), true)))))), ((false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, (true) || false), false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-8757.1064) : injectionSwitch.x)) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), bool(bvec4(bool(_GLF_IDENTITY(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), false, false))), _GLF_IDENTITY(((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))), bool(bool(((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(_GLF_IDENTITY(bvec2(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), ((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), ((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false))), ((false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true))))))))))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) && ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), (false) && _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bool(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << uvec3(0u, 0u, 0u)), uvec3(gl_NumWorkGroups[0], gl_NumWorkGroups[1], gl_NumWorkGroups[2])).x, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups))))).x)), (gl_NumWorkGroups.x) - 0u) : _GLF_FUZZED(uvec2(111944u, 98901u).r)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(0u, (0u) >> 0u))), (true ? _GLF_IDENTITY(gl_WorkGroupSize, (gl_WorkGroupSize) + uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)) : _GLF_FUZZED(uvec3(14116u, 188408u, 106741u)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) || false)) || false))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec3(! (_GLF_DEAD(false)), false, false))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), bool(bvec2((! (false)), true))), ! (! (! (! (false))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false)))))))) || false)), false)))), false || ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(_GLF_IDENTITY(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))) && (_GLF_IDENTITY(false, false || (false)))))) || false)), false))))))))) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), false))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY((gl_WorkGroupID), _GLF_IDENTITY(min((gl_WorkGroupID), (gl_WorkGroupID)), (min((gl_WorkGroupID), (gl_WorkGroupID))) | (min((gl_WorkGroupID), (gl_WorkGroupID))))) + uvec3(_GLF_IDENTITY(0u, max(0u, 0u)), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), 0u)).x, uint(uvec2(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) + uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u), 0u)).x, 0u)))) + 0u)) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, (true ? subgroup_id * subgroup_size : _GLF_FUZZED((++ subgroup_local_id))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) || false), false)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true, false, true)))), true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) || false), false)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)), true && (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))), false, _GLF_IDENTITY(false, (false) || false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), _GLF_IDENTITY(true, ! (! (true))), true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) || false), false)))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))))), true && (bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))), true, false, true)))), true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) || false), false))), ! (! (_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), ! _GLF_IDENTITY((! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false)))), ((! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), false, false))))) && true)), true, false, true)))), true, true)), bool(bvec2(_GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, true))) || false), false))))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))) && true))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))), true)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))) || false)), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5695.1415)), float(injectionSwitch.y), bool(true))), 0.0, 0.0, 1.0)))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-3.9 - -847.129)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-206.377)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.8)), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, false))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, (false) && true), false))))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) + subgroup_local_id, 0u ^ (workgroup_base + subgroup_base + subgroup_local_id)), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, 0u ^ (_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))) + subgroup_local_id, 0u ^ (workgroup_base + subgroup_base + subgroup_local_id))) | 0u)) ^ 0u), (workgroup_base + subgroup_base + subgroup_local_id) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u))) + subgroup_base + subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base, uint(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (workgroup_base)) + subgroup_base))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u)) << 0u) : _GLF_FUZZED(195709u)))), (workgroup_base + subgroup_base) | (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base), (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)))) + subgroup_local_id), _GLF_IDENTITY((0u | (workgroup_base + subgroup_base + subgroup_local_id)) | (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base + subgroup_local_id), (0u ^ 0u) + (0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + subgroup_local_id)))), (_GLF_IDENTITY((0u | (workgroup_base + subgroup_base + subgroup_local_id)) | (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base + subgroup_local_id), (0u ^ 0u) + (0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + subgroup_local_id)))), max((0u | (workgroup_base + subgroup_base + subgroup_local_id)) | (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base + subgroup_local_id), (0u ^ 0u) + (0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + subgroup_local_id)))), (0u | (workgroup_base + subgroup_base + subgroup_local_id)) | (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base + subgroup_local_id), (0u ^ 0u) + (0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + subgroup_local_id))))))) | ((0u | (workgroup_base + subgroup_base + subgroup_local_id)) | (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base + subgroup_local_id), (0u ^ 0u) + (0u | (workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)) + subgroup_local_id))))))))), clamp((_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)), 0u | (workgroup_base + subgroup_base + subgroup_local_id))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)) + subgroup_local_id, 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id)), ~ (~ (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base)), subgroup_base)) + subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u) + subgroup_local_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base))) + subgroup_local_id, 0u | (workgroup_base + subgroup_base + subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), 0u, 0u, 1u)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), 0u, 0u, 1u)))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), 0u, 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), 0u, 0u, 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), 0u, 0u, 1u)))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), 0u, 0u, 1u)))))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), uint(uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_base ^ workgroup_size)))), 0u, 0u, 1u)))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u | (workgroup_base + subgroup_base + subgroup_local_id))), ~ (~ ((_GLF_IDENTITY(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (subgroup_local_id)), 0u | (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, min(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), subgroup_base)) + subgroup_local_id), uint(uint(_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), subgroup_base)) + subgroup_local_id), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), subgroup_base)) + subgroup_local_id)) | (_GLF_IDENTITY((false ? _GLF_FUZZED(subgroup_size) : workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), subgroup_base)) + subgroup_local_id), ((false ? _GLF_FUZZED(subgroup_size) : workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | 0u), subgroup_base)) + subgroup_local_id)) ^ 0u)))))))))) >> uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))) / (1u ^ 0u))), ((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (0u & 98990u)), clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec3(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_size))), 1u, 1u))), workgroup_base)))) + subgroup_base + subgroup_local_id)))) / 1u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u | (workgroup_base + subgroup_base + subgroup_local_id))), min((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, min(_GLF_IDENTITY(workgroup_base + subgroup_base, 1u * (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u)))) >> 0u)) | uint(_GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 0.0))) - 0.0)), injectionSwitch.x))) + subgroup_local_id, _GLF_IDENTITY(0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), uint(uvec2((workgroup_base), 0u)))) + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_base)))) >> 0u), _GLF_IDENTITY((workgroup_base + subgroup_base) - 0u, uint(uvec2((workgroup_base + subgroup_base) - 0u, 1u)))) + subgroup_local_id), _GLF_IDENTITY((0u | (workgroup_base + subgroup_base + subgroup_local_id)) | (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base + subgroup_local_id), 0u + (0u | (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, _GLF_IDENTITY(0u, (0u) / 1u)))) + subgroup_local_id)))), ((0u | (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u))) | (_GLF_IDENTITY(0u | (workgroup_base + subgroup_base + subgroup_local_id), 0u + (0u | (workgroup_base + subgroup_base + subgroup_local_id))))) / 1u)))), (_GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 0u | (workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))))))))))), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u)), ((uint(8u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u))))), (uint(8u)) << 0u))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(atomicMin(subgroup_id, workgroup_base)) : 3u))), uint(3u))))), (0u | (0u ^ 0u)) + (_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))))), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), ~ (~ ((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), min(_GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) : _GLF_FUZZED(atomicXor(subgroup_size, subgroup_local_id)))), 0u | (uint(7u))))), 1u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u)), ((uint(8u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u))))), (uint(8u)) << 0u))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(atomicMin(subgroup_id, workgroup_base)) : 3u))), uint(3u))))), (0u | (0u ^ 0u)) + (_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))))), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), ~ (~ ((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), min(_GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) : _GLF_FUZZED(atomicXor(subgroup_size, subgroup_local_id)))), 0u | (uint(7u))))), 1u))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u)), ((uint(8u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u))))), (uint(8u)) << 0u))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(atomicMin(subgroup_id, workgroup_base)) : 3u))), uint(3u))))), (0u | (0u ^ 0u)) + (_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))))), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), ~ (~ ((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), min(_GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) : _GLF_FUZZED(atomicXor(subgroup_size, subgroup_local_id)))), 0u | (uint(7u))))), 1u))), ((_GLF_IDENTITY(0u, (0u) >> 0u) << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), _GLF_IDENTITY((uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u)), ((uint(8u)) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), 0u ^ (_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u))))), (uint(8u)) << 0u))) * ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(3u, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) ? _GLF_FUZZED(atomicMin(subgroup_id, workgroup_base)) : 3u))), uint(3u))))), (0u | (0u ^ 0u)) + (_GLF_IDENTITY(uint(8u), (uint(8u)) | (_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u))))), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), uint(uvec4(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))), ~ (~ ((_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (true ? _GLF_IDENTITY(uint(7u), min(_GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 0u))), _GLF_IDENTITY(uint(7u), min(uint(7u), uint(7u))))) : _GLF_FUZZED(atomicXor(subgroup_size, subgroup_local_id)))), 0u | (uint(7u))))), 1u)))) >> 0u)))))) + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1) | (1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), max(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (true ? _GLF_IDENTITY(1, (1) - 0) : _GLF_FUZZED(-19949))), _GLF_IDENTITY(1, (1) - 0)))))), min(ivec4(1, 0, 0, 1), ivec4(1, 0, 0, 1)))))))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1) | (1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) - 0)))), min(ivec4(1, 0, 0, 1), ivec4(1, 0, 0, 1))))))))) >> 0u, ((subgroup_local_id + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-25035))), 1, 1))) | (1)), int(_GLF_IDENTITY(ivec4(1, 0, 0, _GLF_IDENTITY(1, 0 ^ (_GLF_IDENTITY(1, (1) - 0)))), min(ivec4(1, 0, 0, 1), ivec4(1, 0, 0, 1))))))))) >> 0u) * 1u))), _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) + 0u))) * _GLF_IDENTITY(((subgroup_local_id + 1)), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec2(((subgroup_local_id + 1)), 0u)), (true ? uint(uvec2(((subgroup_local_id + 1)), 0u)) : _GLF_FUZZED(workgroup_size)))))))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), max(workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + _GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), clamp((1), (1), (1))) ^ 0), 0, 0), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (1), (~ (1)) * 1)), (int(_GLF_IDENTITY(~ (1), (~ (1)) * 1))) / 1))))), (1) ^ 0), 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(82022)))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (1), (~ (1)) * 1)), (int(_GLF_IDENTITY(~ (1), (~ (1)) * 1))) / 1))))), (1) ^ 0), 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(82022)))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(int(_GLF_IDENTITY(~ (1), (~ (1)) * 1)), (int(_GLF_IDENTITY(~ (1), (~ (1)) * 1))) / 1))))), (1) ^ 0), 0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(82022))))) | ivec3(0, 0, 0))) >> ivec3(0, 0, 0))) + ivec3(0, 0, _GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (0) | 0)) << 0)))), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, 0), (ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, 0)) + ivec3(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, clamp(0, 0, 0)))), 0, 0))), 0)), (_GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25668) : 0))) >> (0 | 0)), 0), (ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, 0)) + ivec3(0, 0, 0))), 0)), clamp(int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25668) : 0))) >> (0 | 0)), 0), (ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, 0)) + ivec3(0, 0, 0))), 0)), int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25668) : 0))) >> (0 | 0)), 0), (ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, 0)) + ivec3(0, 0, 0))), 0)), _GLF_IDENTITY(int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25668) : 0))) >> (0 | 0)), 0), (ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, 0)) + ivec3(0, 0, 0))), 0)), (int(ivec2(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) ^ 0), (_GLF_IDENTITY(1, (1) ^ 0)) | 0)) / 1), _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-25668) : 0))) >> (0 | 0)), 0), (ivec3(_GLF_IDENTITY(1, (1) ^ 0), 0, 0)) + ivec3(0, 0, 0))), 0))) / 1)))) ^ 0)))))) % subgroup_size, min((_GLF_IDENTITY(subgroup_local_id + 1, 0u | (subgroup_local_id + 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), _GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % subgroup_size, (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)) | (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((subgroup_local_id + 1) % subgroup_size) << 0u)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, ~ (~ (subgroup_base)))) >> 0u)) ^ 0u) + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size)), ~ (~ (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) - _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))), subgroup_size, subgroup_size)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! (false), false))), bool(bvec4(! (false), true, true, true)))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (! (_GLF_IDENTITY(true && ((false)), bool(bool(_GLF_IDENTITY(true && ((false)), bool(bvec4(true && ((false)), false, false, false)))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (! (_GLF_IDENTITY(true && ((false)), bool(bool(_GLF_IDENTITY(true && ((false)), bool(bvec4(true && ((false)), false, false, false)))))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (! (_GLF_IDENTITY(true && ((false)), bool(bool(_GLF_IDENTITY(true && ((false)), bool(bvec4(true && ((false)), false, false, false)))))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), ! (! (_GLF_IDENTITY(true && ((false)), bool(bool(_GLF_IDENTITY(true && ((false)), bool(bvec4(true && ((false)), false, false, false)))))))))), true), true)))))))) || false) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec3(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), true)))))), false, true))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(tan(vec4(-6280.9849, -9.3, -5.2, -8423.8743).qp)))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bool(! (_GLF_DEAD(false)))), (bool(bool(! (_GLF_DEAD(false))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) ^ 0)) - int(_GLF_ZERO(0.0, injectionSwitch.x))), max(4, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), 4)))), 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))) / vec2(1.0, 1.0)), vec2(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), vec2(vec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))), (false ? _GLF_FUZZED(vec2(vec3(-52.79, -2.0, -198.922))) : (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))), 0.0, sin(0.0)))), mix(vec2(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), max(((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), ((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))))))[1]), vec2(_GLF_FUZZED(83.40), _GLF_FUZZED((-4.1 / -0.8))), bvec2(false, false))), 1.0, tan(0.0), cos(0.0), 1.0, 1.0, 1.0, _GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (0.0)), injectionSwitch.x), 0.0, 0.0, 1.0))) - vec2(0.0, 0.0)).y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY((bool(bvec2(false, false))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))), ! (! (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), ! (! ((bool(bvec2(false, false)))))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))))))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false)))))))))))))))), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, _GLF_IDENTITY(false, (false) || false)))), ! (! ((bool(bvec2(false, false)))))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))))))))), bool(bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false)))))))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false), false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true))))))))))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false))))))), false || (! (_GLF_IDENTITY((bool(bvec2(false, false))), ! (! ((bool(bvec2(false, false)))))))))))))))), false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(injectionSwitch[0], injectionSwitch[1]) : _GLF_FUZZED(vec2(974.520, 4.7))))).y)))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)) / 1.0) > injectionSwitch.y)))) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))) && true), true, true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), injectionSwitch.y, injectionSwitch.y))) / 1.0)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 1.0)))) - 0.0), abs(0.0), 1.0, 1.0, 1.0, tan(0.0), 0.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, cos(0.0))), 0.0))), injectionSwitch.y)))) || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)) || (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true)))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false)))))) && true)), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec3(bvec3((false), false, true)))))))) || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), ! (! (_GLF_DEAD(false)))))) && true))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(abs(0.0), 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(abs(0.0), 1.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, virtual_gid))], read, 4, _GLF_IDENTITY(64, (64) | (64)), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
