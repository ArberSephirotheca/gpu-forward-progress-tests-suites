#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 | int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))) / vec2(1.0, 1.0)))[_GLF_IDENTITY(0, int(int(0)))], (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), clamp((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))) / vec2(1.0, 1.0)))) / vec2(1.0, 1.0)))[1]), vec2(_GLF_FUZZED(-12.87), _GLF_FUZZED(5.8)), bvec2(false, false))).x))), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-279.331), _GLF_FUZZED((float(158195u) - 0.5))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))).x, max(injectionSwitch.x, injectionSwitch.x))) * 1.0)), clamp(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0))), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true)))), min(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true)))), (max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true))))) * 1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true)))), max(_GLF_IDENTITY(max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true)))), clamp(max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true)))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true)))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true)))))), max(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-5495.9679))) : _GLF_FUZZED(asinh(9.2))))), float(_GLF_FUZZED(5719.2671)), bool(false))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-32.57)), float(0.0), bool(true))))))))), 1.0, 1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0)))) : injectionSwitch)), injectionSwitch)).x), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) : _GLF_FUZZED(-107.693)))), (false ? _GLF_FUZZED(1.5) : _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x))), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), _GLF_IDENTITY(vec3(0.0, 1.0, 1.0), mix(vec3((vec3(0.0, 1.0, 1.0))[0], (vec3(0.0, 1.0, 1.0))[1], (vec3(0.0, 1.0, 1.0))[2]), vec3(_GLF_FUZZED(6869.7893), _GLF_FUZZED(2.9), _GLF_FUZZED(334.115)), bvec3(false, false, false)))))), 0.0)), float(vec3(float(mat3x2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, cos(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), (_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))) - 0.0)), 0.0)), 1.0, 0.0))))) / 1.0)) + 0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(mat3x2(1.9, 0.6, 0.8, -402.642, 35.66, 6435.3091)[2]))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY((! ((_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, false)))))) && true, _GLF_IDENTITY(true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, false || (false))))) && true, false || ((! ((_GLF_IDENTITY(false, false || (false))))) && true))), ! (! (_GLF_IDENTITY(true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, false || (false))))) && true, false || ((! ((_GLF_IDENTITY(false, false || (false))))) && true))), ! (! (true && (_GLF_IDENTITY((! ((_GLF_IDENTITY(false, false || (false))))) && true, false || ((! ((_GLF_IDENTITY(false, false || (false))))) && true))))))))))))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, (0) + int(_GLF_ZERO(0.0, injectionSwitch.x))), clamp(0, 0, 0)))), max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) - 0)) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))), _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), (0) | (_GLF_IDENTITY(0, clamp(0, 0, 0)))))))) >> _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), ~ (_GLF_IDENTITY(~ (int(8)), min(_GLF_IDENTITY(~ (int(8)), (_GLF_IDENTITY(~ (int(8)), int(int(~ (int(8)))))) + 0), _GLF_IDENTITY(~ (int(8)), int(int(~ (int(8))))))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(6), (int(6)) * 1), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       do
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), float(_GLF_FUZZED(3564.9759)), bool(false)))) * (injectionSwitch)).x < injectionSwitch.y))))))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) || false)))))
            barrier();
           barrier();
           if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 0.0, 0.0))))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch, mix(vec2(_GLF_FUZZED(float(89394)), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[1]), vec2((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)[0], _GLF_FUZZED(-754.795)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), bool(bvec3(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, true))))), true, true)))), (injectionSwitch.x > injectionSwitch.y) || false))) || false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))) || false, ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))) || false), ! (! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false)))) || false)))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))) || false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))))) || false))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y)) || (false))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
          barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)) && true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! _GLF_IDENTITY(((false)), (((false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), (false) || false)), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), ! (! (! (! ((false))))))) && true), (false) || false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) + 0u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED((1.3 + vec3(-867.002, -1.7, 1.1)).r), (_GLF_FUZZED((1.3 + vec3(-867.002, -1.7, 1.1)).r)) / 1.0), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-7917.0050)), bvec2(true, false))).x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, 1u * (gl_WorkGroupSize.x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(1.9)), vec2(_GLF_FUZZED((+ -3.9)), (injectionSwitch)[1]), bvec2(false, true))).y)) || (false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, exp(0.0), 1.0, exp(0.0), sqrt(0.0), 0.0, 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-8999.4796, 6.4)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(29.94)), float(injectionSwitch.y), bool(true)))) + 0.0))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(_GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - length(0.0)))), injectionSwitch.x), float(_GLF_IDENTITY(vec4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(_GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - length(0.0)))), injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0), max(_GLF_IDENTITY(vec4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(_GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - length(0.0)))), injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0), (true ? vec4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(_GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - length(0.0)))), injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0) : _GLF_FUZZED(vec4(61.95, 61.63, 6830.5945, -8.6)))), vec4(clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(_GLF_IDENTITY(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), max(float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))), float(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0)), dot(vec4(abs(1.0), 1.0, 0.0, 0.0), vec4(_GLF_ZERO(0.0, injectionSwitch.x), 0.0, cos(0.0), 1.0))))))))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))) - length(0.0)))), injectionSwitch.x), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 0.0), vec4(1.0, 1.0, 1.0, 1.0))), 1.0, 0.0)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true, true, false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))), (vec2(_GLF_IDENTITY(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0)))))) * vec2(1.0, 1.0)), vec2(_GLF_IDENTITY(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0), transpose(transpose(mat3x4(max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0))))))))), injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! _GLF_IDENTITY((! (_GLF_DEAD(false))), ! (! ((! (_GLF_DEAD(false)))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, true)))) && true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY((false) || false, true && ((false) || false))) || false))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y)))))))), bool(bool(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false), (_GLF_DEAD(false)) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-80.49, (-80.49) - 0.0), (true ? -80.49 : _GLF_FUZZED(6248.5270))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true)), clamp(mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))) / round(length(normalize(1.0)))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true)), (mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))) / 1.0)))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x) + 0.0, max((injectionSwitch.x) + 0.0, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x), (false ? _GLF_FUZZED(4.9) : (injectionSwitch.x))) + 0.0, ((injectionSwitch.x) + 0.0) - 0.0)))), injectionSwitch.x)), mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), mix(float(_GLF_FUZZED(-80.49)), float(_GLF_FUZZED(-4.3)), bool(false)))), _GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0))), abs(0.0), 1.0, sqrt(0.0), 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))), _GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(1.9)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))))), cos(0.0)), max(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, cos(0.0)), mix(vec4(_GLF_FUZZED(-872.320), _GLF_FUZZED(-82.41), (vec4(1.0, 0.0, 0.0, cos(0.0)))[2], (vec4(1.0, 0.0, 0.0, cos(0.0)))[3]), vec4((vec4(1.0, 0.0, 0.0, cos(0.0)))[0], (vec4(1.0, 0.0, 0.0, cos(0.0)))[1], _GLF_FUZZED(-7.0), _GLF_FUZZED(-4.5)), bvec4(_GLF_IDENTITY(true, ! (! (true))), true, false, false))), vec4(1.0, 0.0, 0.0, cos(0.0)))), vec4(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), clamp(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), (dot(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0))) - 0.0)))), _GLF_IDENTITY(abs(0.0), min(abs(0.0), abs(0.0))), 1.0, sqrt(0.0), 0.0)), (transpose(mat2x3(float(injectionSwitch.x), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(cos(0.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-328.596)))), float(_GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(5896.2276)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(_GLF_FUZZED(-8.1)), float(cos(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true)), clamp(mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-328.596)))), float(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-8.1)), float(cos(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-328.596)))), float(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-8.1)), float(cos(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-328.596)))), float(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-8.1)), float(cos(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true)), 1.0 * (mix(float(_GLF_IDENTITY(_GLF_FUZZED(3.1), (true ? _GLF_FUZZED(3.1) : _GLF_FUZZED(-328.596)))), float(_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(-8.1)), float(cos(0.0)), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(true)))))))), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(min(0.0, 0.0), (true ? _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) / 1.0) : _GLF_FUZZED(log2(-4533.6064)))))))), _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(2.9)), float(_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))), bool(true))), 1.0, sqrt(0.0), 0.0))) * mat3(1.0))))), float(vec2(float(_GLF_IDENTITY(mat2x3(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)) + (float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)))))))), 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)) + (float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)))))))), 1.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0)), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0))))), length(vec4(0.0, 0.0, 0.0, 0.0)) + (float(_GLF_IDENTITY(mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (mat3x2(0.0, 1.0, 0.0, 1.0, 0.0, cos(0.0)))))))), 1.0, 1.0, 0.0))))), abs(0.0), 1.0, sqrt(0.0), 0.0), transpose(_GLF_IDENTITY(transpose(mat2x3(float(injectionSwitch.x), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(cos(0.0), (_GLF_IDENTITY(cos(0.0), mix(float(_GLF_FUZZED(2.8)), float(cos(0.0)), bool(true)))) * 1.0)), _GLF_IDENTITY(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0), (_GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), max(vec4(0.0, 1.0, 1.0, 0.0), vec4(0.0, 1.0, 1.0, 0.0)))) * vec4(1.0, 1.0, 1.0, 1.0))), max(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), _GLF_IDENTITY(vec4(0.0, 1.0, 1.0, 0.0), min(vec4(0.0, 1.0, 1.0, 0.0), vec4(0.0, 1.0, 1.0, 0.0)))), dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)))), dot(vec4(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3751.2267) : 1.0)) : _GLF_FUZZED(-4.1))), 0.0, 0.0, cos(0.0)), vec4(0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-0.3)), bool(false))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(80.11) : 1.0)))), 1.0, 0.0))), _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(75.77, (75.77) + 0.0)) : abs(0.0))), 1.0, sqrt(0.0), 0.0)), (transpose(mat2x3(float(injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, cos(0.0)), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), _GLF_IDENTITY(cos(0.0), float(mat2x4(cos(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, sqrt(0.0), exp(0.0)))), cos(0.0))), cos(0.0))), mix(float(_GLF_IDENTITY(cos(0.0), min(_GLF_IDENTITY(cos(0.0), clamp(cos(0.0), cos(0.0), cos(0.0))), cos(0.0)))), float(_GLF_FUZZED(4.2)), bool(false)))), vec4(0.0, 1.0, 1.0, 0.0))), abs(0.0), 1.0, sqrt(0.0), 0.0))) * mat3(1.0))))), 0.0)))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(injectionSwitch.x, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))) - 0.0)), bool(true)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), float(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), (float(_GLF_FUZZED(-80.49))) + 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), min(float(_GLF_FUZZED(-80.49)), float(_GLF_FUZZED(-80.49)))))), sqrt(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0))), float(injectionSwitch.x), bool(true))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))), max(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), max(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), clamp(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), _GLF_IDENTITY(-80.49, min(-80.49, -80.49)), _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), max(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), _GLF_IDENTITY(-80.49, min(-80.49, -80.49)))))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))), true, false), false)))))))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(float(mat2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(0.0, 0.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) * exp(0.0))))).x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), 1.0))[1]), vec2(_GLF_FUZZED(9.7), _GLF_FUZZED((4829.5209 + 5.4))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-116.346)), float(injectionSwitch.x), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-306.647) : 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-0.2)), float(_GLF_IDENTITY(abs(1.0), max(_GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), abs(1.0)))), bool(true))))))))), 1.0)) * cos(vec2(0.0, 0.0)))))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(0.0), bool(true))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(-230.234), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0)))), max(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0)))))))))))), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.7))), 0.0)))))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), (_GLF_IDENTITY(_GLF_FUZZED(-80.49), clamp(_GLF_IDENTITY(_GLF_FUZZED(-80.49), clamp(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), _GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)))) + _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), (float(_GLF_FUZZED(-80.49))) - 0.0), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-80.49), min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0))))))), float(injectionSwitch.x), bool(true)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- 5458.9937))), float(0.0), bool(true)))))), (false ? _GLF_FUZZED(-82.35) : _GLF_IDENTITY(float(mat2(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), float(mat4x3(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), (float(_GLF_FUZZED(-80.49))) + 0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), min(float(_GLF_FUZZED(-80.49)), float(_GLF_FUZZED(-80.49)))))), sqrt(determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0))), 0.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), log(1.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0))), float(injectionSwitch.x), bool(true))), (_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true)), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) ? _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))) : _GLF_FUZZED(-2.9))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0)), _GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, true))))), max(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), min(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), max(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(_GLF_IDENTITY(float(80094), (float(80094)) - determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(0.0), determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0))), sqrt(0.0), 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_IDENTITY(float(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_IDENTITY(0.0, 0.0 + (0.0)))), (float(vec2(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_IDENTITY(0.0, 0.0 + (0.0))))) * 1.0)), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))), float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), sqrt(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-80.49), _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), (false ? _GLF_FUZZED(ceil(-962.817)) : _GLF_IDENTITY(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)), mix(float(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), max(_GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094)), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), (false ? _GLF_FUZZED(0.2) : _GLF_FUZZED(float(80094)))))), _GLF_IDENTITY(_GLF_FUZZED(float(80094)), clamp(_GLF_FUZZED(_GLF_IDENTITY(float(80094), mix(float(_GLF_FUZZED(-948.167)), float(_GLF_IDENTITY(float(80094), float(vec4(float(80094), 1.0, 0.0, 0.0)))), bool(true)))), _GLF_FUZZED(float(80094)), _GLF_FUZZED(float(80094))))))), float(min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), bool(true))))))))))))), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), clamp(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), _GLF_IDENTITY(-80.49, min(-80.49, -80.49)), _GLF_IDENTITY(_GLF_IDENTITY(-80.49, min(-80.49, -80.49)), max(_GLF_IDENTITY(_GLF_IDENTITY(-80.49, clamp(-80.49, -80.49, -80.49)), min(-80.49, -80.49)), _GLF_IDENTITY(-80.49, min(-80.49, -80.49)))))))), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(true), bool(bvec4(bool(true), false, false, false))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(bool(true), bool(bvec4(bool(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false, false))), true, false), false)))))))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat3x2(float(mat2(clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-80.49)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(0.0, 0.0)))))), min(_GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)), 1.0, 0.0, 0.0, sqrt(0.0), 0.0, _GLF_IDENTITY(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), (round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))) * exp(0.0))))).x, float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.6)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), 1.0), mix(vec2((vec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), 1.0))[0], (vec2(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / abs(1.0)))), 1.0))[1]), vec2(_GLF_FUZZED(9.7), _GLF_FUZZED((4829.5209 + 5.4))), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-116.346)), float(injectionSwitch.x), bool(true))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-306.647) : 1.0)), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(abs(1.0), mix(float(_GLF_FUZZED(-0.2)), float(_GLF_IDENTITY(abs(1.0), _GLF_IDENTITY(max(_GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), abs(1.0)), (true ? max(_GLF_IDENTITY(abs(1.0), clamp(abs(1.0), abs(1.0), abs(1.0))), abs(1.0)) : _GLF_FUZZED(pow(-5.4, 4.8)))))), bool(true))))))))), 1.0)) * cos(vec2(0.0, 0.0)))))), clamp(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(5.9)), float(0.0), bool(true))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)), float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(0.0, 0.0)))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-2.7)), vec2(_GLF_FUZZED(-230.234), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0)))), max(float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0))), mix(vec2((_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0))))[0], _GLF_FUZZED((7.6 + 955.114))), vec2(_GLF_FUZZED((-3.3 * 739.728)), (_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0))))[1]), bvec2(false, true)))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0)))), 1.0 * (float(_GLF_IDENTITY(vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0))))), (vec2(injectionSwitch.x, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-8.9)), bool(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))))) * cos(vec2(0.0, 0.0)))))))))))), float(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(injectionSwitch.x, 1.0), (vec2(injectionSwitch.x, 1.0)) * cos(vec2(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(9.7))), 0.0)))))))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), (_GLF_IDENTITY(_GLF_FUZZED(-80.49), clamp(_GLF_IDENTITY(_GLF_FUZZED(-80.49), clamp(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), _GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49)))) + _GLF_IDENTITY(dot(vec4(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0)), dot(vec4(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec3(-31.28, 10.43, 3750.4992)[0]) : _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(-22.85)))))), 0.0, 0.0, 0.0), vec4(0.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(injectionSwitch.x), 1.0 * (float(injectionSwitch.x))), bool(true))), max(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-80.49)), (float(_GLF_FUZZED(-80.49))) - 0.0), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-80.49), float(mat2x3(_GLF_IDENTITY(_GLF_FUZZED(-80.49), min(_GLF_FUZZED(-80.49), _GLF_FUZZED(-80.49))), 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(abs(1.0), max(abs(1.0), _GLF_IDENTITY(abs(1.0), (abs(1.0)) - 0.0))))))), float(injectionSwitch.x), bool(true)))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((- 5458.9937))), float(0.0), bool(true)))))))))) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), (float(vec2(injectionSwitch.y, 1.0))) / cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((0.6))), float(0.0), bool(true))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))))) || false)), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))), false || (_GLF_IDENTITY((! (_GLF_DEAD(false))), false || ((! (_GLF_DEAD(false))))))) || false)), false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, true)))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)))))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), max(_GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), min(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), mix(float(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), float(_GLF_FUZZED(-9.8)), bool(false))))), clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0)), mix(float(float(mat2(injectionSwitch.x, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-6333.3532)), bool(false)))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, false, false)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), sqrt(0.0), 1.0, determinant(mat3(1.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), (false ? _GLF_FUZZED(-7347.0358) : _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, bool(bvec2((! (false)) && true, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false || (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(42.22), _GLF_FUZZED(808.593)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_FUZZED(80.27) : injectionSwitch.x, mix(float(false ? _GLF_FUZZED(80.27) : injectionSwitch.x), float(_GLF_FUZZED(174.470)), bool(false))))) > injectionSwitch.y, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false || (true), bool(_GLF_IDENTITY(bvec3(false || (true), false, false), bvec3(bvec3(bvec3(false || (true), false, false)))))), bool(bvec3(_GLF_IDENTITY(false || (true), bool(_GLF_IDENTITY(bvec3(false || (true), false, false), bvec3(bvec3(bvec3(false || (true), false, false)))))), false, false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y)))), true), true, true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), max(vec2(1.0, 1.0), vec2(1.0, 1.0)))).y)))), true), true, true)), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(bvec4(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, false || (true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)) * vec2(1.0, 1.0)).y)))), true), true, true)), false, false)))))))), ! (! (bool(_GLF_IDENTITY(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true), bvec2(bvec4(bvec2(bool(bvec4(false, false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, _GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(true && (bool(bvec2(true, _GLF_IDENTITY(false, false || (false))))), (_GLF_IDENTITY(true && (bool(bvec2(true, _GLF_IDENTITY(false, false || (false))))), (true && (bool(bvec2(true, _GLF_IDENTITY(false, false || (false)))))) || false)) || false))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)))).y)) || false)))), true), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false)))))))))))))), (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), bool(bvec3(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), false, false)))), false), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))), false)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true))))), true)))))))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true)))), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true))))), bvec2(bvec3(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true))))), true))))))))) && true)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), bvec3(bvec4(bvec3(bvec2(false, false), false), true))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), ! (! (bool(bvec3(_GLF_DEAD(false), false, true)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((true ? _GLF_IDENTITY(1, (1) | _GLF_IDENTITY((1), max((1), (1)))) : _GLF_FUZZED(75865)), (true ? (true ? _GLF_IDENTITY(1, (1) | (1)) : _GLF_FUZZED(_GLF_IDENTITY(75865, 0 ^ (_GLF_IDENTITY(75865, ~ (~ (_GLF_IDENTITY(75865, max(75865, 75865))))))))) : _GLF_FUZZED(98828)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(true, ! (! (true))) ? 1 : _GLF_FUZZED(-97808)))) | 0), 1))), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(int(64), int(int(int(64)))))), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), bool(bvec4(! (_GLF_IDENTITY(false, (false) && true)), true, false, true)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x3(injectionSwitch.x, log(1.0), 1.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), (true ? vec2(0.0, 0.0) : _GLF_FUZZED(vec2(94.37, 76.09)))), vec2(0.0, 0.0))), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0)), min(_GLF_IDENTITY(float(mat4x3(injectionSwitch.x, log(1.0), 1.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(-36.17)), float(float(mat4x3(injectionSwitch.x, log(1.0), 1.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(_GLF_IDENTITY(vec2(0.0, 0.0), max(_GLF_IDENTITY(vec2(0.0, 0.0), min(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))), vec2(1.0, 1.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2(_GLF_FUZZED((false ? -99.87 : 5.2)), _GLF_FUZZED(2902.3500)), vec2((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], mix(float(_GLF_FUZZED(86.85)), float((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]), bool(true)))), bvec2(true, true)))), mix(float(_GLF_FUZZED(18.72)), float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2(_GLF_FUZZED((false ? -99.87 : 5.2)), _GLF_FUZZED(2902.3500)), vec2((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], mix(_GLF_IDENTITY(float(_GLF_FUZZED(86.85)), (float(_GLF_FUZZED(86.85))) - 0.0), float((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]), bool(true)))), bvec2(true, true)))), (false ? _GLF_FUZZED(2878.3215) : float(_GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), mix(vec2(_GLF_FUZZED((false ? -99.87 : 5.2)), _GLF_FUZZED(2902.3500)), vec2((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[0], _GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1], mix(float(_GLF_FUZZED(86.85)), float((vec2(0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))))[1]), bool(true)))), bvec2(true, true))))))), bool(true)))), 0.0))), bool(true))), float(mat4x3(injectionSwitch.x, log(1.0), 1.0, 1.0, 1.0, cos(0.0), 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 1.0, 1.0, 0.0, 0.0))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y) / cos(0.0)), _GLF_IDENTITY(false, ! (! (false))) || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) / vec2(1.0, 1.0))).y)), true)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-8.9)), float(injectionSwitch.y), bool(true)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, sqrt(0.0), exp(0.0), 0.0)), 1.0)), (true ? float(vec4(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, 0.0)), dot(vec2(1.0, 0.0), vec2(1.0, 0.0))), determinant(mat2(0.0, sqrt(0.0), exp(0.0), 0.0)), 1.0)) : _GLF_FUZZED(-5372.4460)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(132.276, 6.7)))))).x > injectionSwitch.y))) || false), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, mix(float(_GLF_FUZZED(-14.66)), float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), true)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0)))))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true), false), _GLF_IDENTITY(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true), false), false, false)), bvec2(bvec4(bvec2(bvec4(bvec2(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true), false), false, false)), true, true))))))), false, _GLF_IDENTITY(true, false || (true)), true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec2((injectionSwitch.x < injectionSwitch.y), true)))))), false, true, true)))), (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x < injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), false, true, true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(! ((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), true, true))))) && true)) && true))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec3(bvec2(false, false), false)), bvec2(bvec3(bvec2(bvec3(bvec2(false, false), false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), true), bvec2(bvec2(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), true))))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))), vec2(1.0, 0.0))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(checker[_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, uint(uvec2(virtual_gid, 0u)))) ^ 0u)], read, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, 4))) >> 0), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, (false) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
