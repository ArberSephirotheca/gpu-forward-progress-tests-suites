#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ((false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! _GLF_IDENTITY((false), ((false)) || false)))), _GLF_IDENTITY((! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bool((false)))), ! (! (_GLF_IDENTITY((false), bool(bool((false)))))))))) && true))) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), false, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false, true))) && true)), false, false)))) && true)), false || (_GLF_IDENTITY((! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))) && true))), ((! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))))))) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))) || false)), false, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, ! (! (true))), false)))))), false, true))) && true)), false, _GLF_IDENTITY(false, ! (! (false))))))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, _GLF_IDENTITY(true, (true) && true), false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(19.11)), bool(false)))), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), false, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y), false, true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false, true))) && true)), false, false)))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))), false, true, false))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(2954.9957))) > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)))))), false, true))) && true)), false, false)))) && true)))), false, true))))))), (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) || false))))), (! _GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), (true && (_GLF_IDENTITY((false), bool(bool((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))))))) && true))), (! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), true && (true && (_GLF_IDENTITY((false), bool(bool((false)))))))) || false))) && true)))) && true))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), (true && (_GLF_IDENTITY((false), bool(bool((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))))))) && true))), (! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), true && (true && (_GLF_IDENTITY((false), bool(bool((false)))))))) || false))) && true)))) && true))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), (true && (_GLF_IDENTITY((false), bool(bool((false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), ! (_GLF_IDENTITY(! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), bool(bool(bool(bool((false)))))))))) && true))), (! ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), (_GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bool((false))))), true && (true && (_GLF_IDENTITY((false), bool(bool((false)))))))) || false))) && true)))) && true)))))))))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) * 1.0)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-382.149), _GLF_FUZZED(3895.2469)), bvec2(false, false))).x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))))), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))))))), false, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), (_GLF_IDENTITY((true), bool(bvec2((true), false)))) || false) && true)), false)), (bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), false, true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))) && true), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false)))))))))))))) && true))), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))) && true), true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))) && true))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))) && true), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))), true && ((_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(bool(bool(false)), bool(bool(bool(bool(false))))))))))) && true))), true, true)))))))))))) || false))))) || false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))) | (_GLF_IDENTITY(workgroup_size, 0u + (workgroup_size)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) - 0u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), ~ (~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))))))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) - 0u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), ~ (~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)))))))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, (workgroup_id) >> 0u)) - 0u)), (0u << _GLF_IDENTITY(uint(6u), uint(6u))) ^ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), 0u | (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u)), ~ (~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) - 0u))))))))))))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) : _GLF_FUZZED(2.3)))) - 0.0), max(injectionSwitch.x, injectionSwitch.x)))), 1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0))).x)))), _GLF_IDENTITY(uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | _GLF_IDENTITY((workgroup_id), min((_GLF_IDENTITY(workgroup_id, (false ? _GLF_FUZZED(subgroup_local_id) : workgroup_id))), (workgroup_id))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))), 1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(0.0, 0.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec2(0.0, 0.0) : _GLF_FUZZED(sinh(injectionSwitch)))) + (injectionSwitch), vec2(mat4x2(vec2(0.0, 0.0) + (injectionSwitch), 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec3(1.1, 8.5, 84.93).g)), float(0.0), bool(true))), clamp(0.0, 0.0, 0.0))), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)))), 0.0, 0.0, 1.0)))).x)))))), (true ? uint(uint((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), _GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), (_GLF_IDENTITY((workgroup_id), min((workgroup_id), _GLF_IDENTITY((workgroup_id), max(_GLF_IDENTITY((workgroup_id), clamp((workgroup_id), (workgroup_id), _GLF_IDENTITY((workgroup_id), 0u | ((workgroup_id))))), (workgroup_id)))))) + 0u)) / 1u) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), injectionSwitch.x)), injectionSwitch.x)))), 1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)))))) : _GLF_FUZZED(num_workgroup))))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), 0u | ((~ (workgroup_id))))), 0u ^ (_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), 0u | _GLF_IDENTITY(((~ (workgroup_id))), ~ (~ (((~ (workgroup_id)))))))))), _GLF_IDENTITY((workgroup_id), max((workgroup_id), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_id), ((workgroup_id)) | 0u), clamp((workgroup_id), (workgroup_id), (workgroup_id))))) | _GLF_IDENTITY((workgroup_id), uint(_GLF_IDENTITY(uvec2((workgroup_id), 1u), (uvec2((workgroup_id), 1u)) << uvec2(0u, 0u)))))) - _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))), (1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u))) + 0u)), clamp(_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_id), max(~ (workgroup_id), ~ (workgroup_id))))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4(1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))), 1u, 1u, 1u))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), injectionSwitch.x)) - 0.0)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (_GLF_IDENTITY(~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) ^ 0u))), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, _GLF_IDENTITY(0u, (0u) >> 0u), 1u))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), 0u, 1u))))), (uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u)))))) ^ 0u)) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u))))), _GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u)))))) << 0u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u)))))) << 0u, 0u | (_GLF_IDENTITY((uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u)))))) << 0u, ~ (~ _GLF_IDENTITY(((uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u)))))) << 0u), (((uint(_GLF_IDENTITY(uvec3(workgroup_size, 0u, 1u), uvec3(uvec3(uvec3(workgroup_size, 0u, 1u)))))) << 0u)) | 0u))))))))))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (_GLF_IDENTITY(workgroup_id, ~ (~ _GLF_IDENTITY((workgroup_id), ((workgroup_id)) << 0u)))) / uint(_GLF_ONE(1.0, injectionSwitch.y))), (workgroup_id) | _GLF_IDENTITY((workgroup_id), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) * 1u)), ~ (~ (~ (_GLF_IDENTITY((workgroup_id), ((workgroup_id)) * 1u))))))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ldexp(tan(32.38), 1719))))))), clamp(1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ldexp(tan(32.38), 1719))))))), 1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ldexp(tan(32.38), 1719))))))), _GLF_IDENTITY(1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ldexp(tan(32.38), 1719))))))), (1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ldexp(tan(32.38), 1719)))))))) + 0u)))))))) ^ 0u, min((_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), 0u | ((~ (workgroup_id))))), (_GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))) << 0u)) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x, max(injectionSwitch.x, injectionSwitch.x))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, uint(_GLF_IDENTITY(uvec4(workgroup_size, 1u, 1u, 0u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(workgroup_size, 1u, 1u, 0u))))), 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, log(1.0), 0.0, 0.0, tan(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0), (mat4(0.0, log(1.0), 0.0, 0.0, tan(0.0), 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) * 1.0), injectionSwitch.x))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | _GLF_IDENTITY((workgroup_id), _GLF_IDENTITY(0u + ((workgroup_id)), min(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(subgroup_local_id) : 0u)) + ((workgroup_id)), 0u + ((workgroup_id))))))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), ~ (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u ^ (_GLF_IDENTITY(workgroup_id, uint(_GLF_IDENTITY(uint(workgroup_id), clamp(uint(workgroup_id), _GLF_IDENTITY(uint(workgroup_id), (_GLF_IDENTITY(uint(workgroup_id), (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(uint(workgroup_id), (uint(workgroup_id)) >> 0u)))) | (uint(workgroup_id))), uint(workgroup_id))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(ldexp(tan(32.38), 1719)), (_GLF_IDENTITY(_GLF_FUZZED(ldexp(tan(32.38), 1719)), min(_GLF_FUZZED(ldexp(_GLF_IDENTITY(tan(32.38), 1.0 * (tan(32.38))), 1719)), _GLF_FUZZED(ldexp(tan(32.38), 1719))))) + 0.0))))))))))) ^ 0u, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), 0u | ((~ (workgroup_id))))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ _GLF_IDENTITY((~ (workgroup_id)), 0u | ((~ (workgroup_id))))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) + 0u))), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0u), clamp(_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ 0u))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))))) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) >> 0u), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), max(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))), ~ (~ (workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_id)), uint(_GLF_IDENTITY(uvec2(~ (~ (workgroup_id)), 0u), (false ? _GLF_FUZZED(uvec2(190784u, 9674u)) : uvec2(~ (~ (workgroup_id)), 0u)))))), _GLF_IDENTITY((workgroup_id) | (workgroup_id), max((workgroup_id) | (workgroup_id), (workgroup_id) | (workgroup_id))))) - _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ _GLF_IDENTITY(0u, (0u) + 0u)), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) ^ 0u)) ^ 0u), 1u * (uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))), workgroup_size * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))), (workgroup_id) | (workgroup_id))) - _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), 1u * (uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(ldexp(_GLF_IDENTITY(tan(32.38), _GLF_IDENTITY(max(tan(32.38), tan(32.38)), mix(float(max(tan(32.38), tan(32.38))), float(_GLF_FUZZED(-4420.8788)), bool(false)))), 1719)))))))))))) ^ 0u)));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)), 0u ^ (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base)))))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && true)) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id), (true ? (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id)) << 0u))), 1u, 1u), _GLF_IDENTITY(uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec4((false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4((false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4((false), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), true, true)))) && true), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)) || false)))))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), 1u, 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))) ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + _GLF_IDENTITY(0u, (0u) - 0u)))), ~ (~ (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + _GLF_IDENTITY(0u, (0u) - 0u))))))), 1u)) / uvec3(1u, 1u, 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))) : subgroup_base), (_GLF_IDENTITY(true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), true && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), true && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id), (false ? _GLF_FUZZED(workgroup_base) : true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), true && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))))))), 1u, 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_id) : subgroup_base, max(false ? _GLF_FUZZED(workgroup_id) : subgroup_base, false ? _GLF_FUZZED(workgroup_id) : subgroup_base))), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), 0u | (_GLF_FUZZED(workgroup_id))) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))), 1u)) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (1u) | 0u), 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ _GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u))), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))), 1u * (uint(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup)))))))) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u)))) / 1u), ~ (1u)))) + 0u))), 1u)) / uvec3(1u, 1u, 1u)))) : _GLF_FUZZED(uvec3(uvec2(183938u, 138276u), subgroup_base)))))), (uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bvec3((! (false)), true, true)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, true && (false)))), bool(bvec3((! (false)), true, true)))) && true), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)) || false)))))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), 1u, 1u), (uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(1u, min(1u, 1u))), ((_GLF_IDENTITY(1u, min(1u, 1u)))) << 0u))), max(~ (1u), ~ (1u)))) + _GLF_IDENTITY(0u, (0u) - 0u)))), 1u)) / uvec3(1u, 1u, 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), true && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), 1u, 1u), (uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u)))), (~ (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))))) + 0u)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))), 1u * (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))))))), 1u)) / uvec3(1u, 1u, 1u)), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true))))), bool(bvec4(! (bool(_GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true))))), true, true, true)))))))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (1u) | 0u), 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u))), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u)))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u))), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u)))) / 1u)) / 1u), ~ (1u)))) + 0u))), 1u)) / uvec3(1u, 1u, 1u)))) : _GLF_FUZZED(uvec3(uvec2(183938u, 138276u), subgroup_base))))))) | (uvec3(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), true && (_GLF_IDENTITY(_GLF_IDENTITY((! _GLF_IDENTITY((false), false || ((false)))), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) || false)), bool(bvec3((! (false)), true, true)))) && true), (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! _GLF_IDENTITY((false), ((false)) && true)), bool(bvec3((! (false)), true, true)))) && true)) || false)))))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), 1u, 1u), (uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (true ? _GLF_FUZZED(workgroup_id) : _GLF_FUZZED(120735u))) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (_GLF_IDENTITY(1u, max(1u, 1u))), max(~ (_GLF_IDENTITY(1u, 0u | (1u))), ~ (1u)))) + _GLF_IDENTITY(0u, (0u) - 0u)))), 1u)) / uvec3(1u, 1u, 1u)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))), true && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((! (false)), true, true)))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), 1u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))), 1u)) / uvec3(1u, 1u, 1u), uvec3(uvec4((uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ (1u), ~ (1u)))) + 0u))), 1u)) / uvec3(1u, 1u, 1u), 0u)))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(uvec3(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY((! (false)), (_GLF_IDENTITY((! (false)), bool(bvec3((_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), false)))))), true, true)))) && true)))) ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, (1u) | 0u), 1u), (uvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(workgroup_id) : subgroup_base), (true ? (false ? _GLF_FUZZED(workgroup_id) : subgroup_base) : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), max(~ _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), (_GLF_IDENTITY((1u), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u))), (_GLF_IDENTITY((1u), (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) / 1u)), (false ? _GLF_FUZZED(_GLF_IDENTITY(num_workgroup, (num_workgroup) | (num_workgroup))) : _GLF_IDENTITY((1u), ~ (~ ((1u))))))) | ((1u)))) / 1u), ~ (1u)))) + 0u))), _GLF_IDENTITY(1u, uint(uvec2(1u, 1u))))) / uvec3(1u, 1u, 1u)))) : _GLF_FUZZED(uvec3(uvec2(183938u, 138276u), subgroup_base)))))))))))) + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, true)), ! (! (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, true))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = 0;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, clamp(1, 1, 1))))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) | 0), 4, 4)), 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, true && _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), clamp(_GLF_IDENTITY(2, ~ (~ _GLF_IDENTITY((2), max(_GLF_IDENTITY((2), clamp((2), (2), (2))), (2))))), _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (false ? _GLF_FUZZED(-98677) : _GLF_IDENTITY(2, ~ _GLF_IDENTITY(_GLF_IDENTITY((~ (2)), max((~ (2)), (~ (2)))), (_GLF_IDENTITY(_GLF_IDENTITY((~ (2)), ((~ (2))) | ((~ (2)))), min((~ (2)), (~ (2))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))))))))) == 0), false || (((subgroup_local_id % _GLF_IDENTITY(2, ~ _GLF_IDENTITY((~ (2)), int(ivec4((~ (2)), 0, 0, 1))))) == 0))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (0), int(ivec2(~ (0), 0))))), 0))), false || (((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0))), _GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0), false || (((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) % _GLF_IDENTITY(2, ~ (~ (2)))) == 0)))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0), false || (((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) % _GLF_IDENTITY(2, ~ (~ (2)))) == 0)))), ((_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0), false || (((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) % _GLF_IDENTITY(2, ~ (~ (2)))) == 0))))) || false))), ! (! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0), false || (((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) % _GLF_IDENTITY(2, ~ (~ (2)))) == 0)))), ((_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0), false || (((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) % _GLF_IDENTITY(2, ~ (~ (2)))) == 0))))) || false))))))), bool(bvec4(false || (_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0), false || (((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2)))) == 0)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))))))
  {
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, int(ivec3(64, (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), min(int(5), _GLF_IDENTITY(int(5), max(int(5), _GLF_IDENTITY(int(5), int(ivec3(int(5), 1, 0))))))))) | 1), 1))), _GLF_IDENTITY(2, max(2, 2)));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   do
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)))))
      {
       if(_GLF_DEAD(false))
        continue;
       break;
      }
     read = atomicLoad(buf[virtual_gid], 4, 64, 2);
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), bool(bvec2(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), ! (! (! (! (true)))))))))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        return;
       continue;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))) || false)), bool(bvec3(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), false, true)))) || false)), true, false))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), false, true, true))), _GLF_IDENTITY(false, ! (! (false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)))))))), false, true)))) || false)), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-20.76))) > injectionSwitch.y) && true)))), false, true, true))), false, true), false))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), _GLF_IDENTITY(! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), ! (_GLF_IDENTITY(! (! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))), ! (_GLF_IDENTITY(! (! (! (! (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))))), ! (! (! (! (! (! (bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(2488.6432)), bool(false))), injectionSwitch[1])).y), false)))))))))))))))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.y : _GLF_FUZZED(5.4))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, false))))), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(vec2(-125.854, 44.23).t)), bool(false)))) - abs(0.0)) > injectionSwitch.y)), false, false))), true)), false || (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), ! (! (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), false))))))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), injectionSwitch.x)) > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch.y : _GLF_FUZZED(5.4))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false))))), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))), true))))), _GLF_IDENTITY(false, ! (! (false))), true))))), _GLF_IDENTITY(false, (false) && true) || (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), 0.0, 0.0))), 1.0, 1.0, abs(abs(1.0)), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))))))), length(vec3(0.0, 0.0, 0.0)), 1.0))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 1.0, 1.0, 0.0, log(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, 1.0 * (0.0)), exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), exp(0.0), 0.0, 0.0))), 1.0, 1.0, abs(abs(1.0)), 1.0, _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), clamp(round(length(normalize(vec2(1.0, 1.0)))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), min(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))), _GLF_IDENTITY(round(length(normalize(vec2(1.0, 1.0)))), max(round(length(normalize(vec2(1.0, 1.0)))), round(length(normalize(vec2(1.0, 1.0)))))))))), length(vec3(0.0, 0.0, 0.0)), 1.0))).y)) || false))), false, true, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) * 1)], injectionSwitch[1])))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (0) * 1)], injectionSwitch[1])))).x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true)))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(4547.7354, -59.85)) : injectionSwitch)))), (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, true, true)))))), false, true), true))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y)), false, false)))), false, true, true))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(false, true)))))), true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true)))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(-2.9) : injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.4) : injectionSwitch.x)) > injectionSwitch.y))), false, true, true))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), transpose(transpose(mat2x3(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(916.579)), float(1.0), bool(true))), 1.0)), dot(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))), vec3(1.0, 1.0, 1.0))), round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))))))))).y))), false, true, true))), false, true), true)), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true, true)), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true, true)), true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false), bvec3(bvec3(bvec3(_GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true, true)), bool(bvec4(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, true, true)), true, true, true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))), false, true), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), true)), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 1.0))).x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true))))))), true)), false)))), true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), true, true))), false, true))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0))) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))).y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true)), false || (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))), false, true))))), true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), false))), true))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))))), (bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))) || false)), false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))).y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true))))), true)), false)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), false)), bvec3(bvec4(bvec3(bvec4(bvec3(false, false, true), false)), true)))))), (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true))))))), false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 1.0))).y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true))))), true)), false))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false)))), false || ((_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false))))))))))), false, true), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! _GLF_IDENTITY((_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false)))), false || ((_GLF_IDENTITY(! (true), false || (_GLF_IDENTITY(! (true), (! (true)) || false))))))))))), false, true), true))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 1.0, abs(0.0), length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat2(0.0, 0.0, exp(abs(0.0)), 0.0))), 0.0, 1.0))).y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true))))), true)), false))), true)))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))), false, true, true))), _GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true))), false, _GLF_IDENTITY(true, bool(bool(true)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true), true))), false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), ! (! (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))) || false)))))), false, true, true))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, false || (false)), true, true))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) + 0.0)) * 1.0) > injectionSwitch.y), _GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y)))))) || false), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))), false, true), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, bool(bool(true))), true))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, bool(bool(true))), true))), true)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, bool(bool(true))), true))), true)), (bool(bvec2(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true)))), true))), true))) && true))))), _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true))))), true)))))))))))));
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x)) + (injectionSwitch)).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) - 0.0), injectionSwitch.x), (true ? _GLF_ZERO(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0), (0.0) - 0.0), injectionSwitch.x) : _GLF_FUZZED(-1689.4739)))) + (injectionSwitch)).y)) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch))))) + log(vec2(1.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))), injectionSwitch)))).x > injectionSwitch.y) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false)))), true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false)))), true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false)))), true), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec3(bool(bvec2(false, true)), _GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), false)))), true), true)))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bool(_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), false || (! (_GLF_WRAPPED_IF_TRUE(true))))))))))
  {
   atomicStore(checker[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, ~ (~ (4))));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
