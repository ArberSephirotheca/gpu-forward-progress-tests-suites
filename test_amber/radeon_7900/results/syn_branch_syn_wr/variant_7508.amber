#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) << _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(1u, 1u, 1u) * (uvec3(0u, 0u, 0u))))) | (gl_NumWorkGroups)).x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(true, _GLF_IDENTITY(false, false || (false))), bvec2(bvec3(bvec2(true, _GLF_IDENTITY(false, false || (false))), false))), bvec2(bvec4(bvec2(true, _GLF_IDENTITY(false, false || (false))), true, true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               do
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   return;
                  }
                 else
                  {
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), ((~ (1))) / 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_injected_loop_counter > 0)))); _injected_loop_counter --)
              {
               return;
              }
            }
           if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (! (_GLF_WRAPPED_IF_FALSE(false)))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              return;
            }
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
      }
    }
   else
    {
    }
   for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(ivec2(_injected_loop_counter, 0))) != 0), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter != 0))); _injected_loop_counter --)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch), vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * ((injectionSwitch)))[0], _GLF_FUZZED(-5784.8157)), vec2(_GLF_FUZZED(17.26), (injectionSwitch)[1]), bvec2(false, true)))) * vec2(1.0, 1.0)).x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0)), mix(float(float(mat4(injectionSwitch.y, 1.0, 1.0, 1.0, 1.0, determinant(mat4(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0))), 1.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)), _GLF_IDENTITY(dot(vec3(abs(1.0), 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0)), dot(vec3(abs(1.0), 0.0, sqrt(0.0)), vec3(1.0, 0.0, 0.0))), 1.0, 0.0, 0.0))), float(_GLF_FUZZED(-31.93)), bool(false)))), float(mat2x3(injectionSwitch.y, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sqrt(0.0), 1.0)))))))))
      {
      }
     else
      {
       do
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      break;
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0, 0.0, 0.0))) / sqrt(1.0)), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, (0.0) * determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), determinant(mat2(1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5568.3535) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0)))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-3657.9893) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, sqrt(cos(0.0)))), clamp(float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0))))))), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, sqrt(cos(0.0)))), clamp(float(vec2(0.0, _GLF_IDENTITY(sqrt(cos(0.0)), clamp(sqrt(cos(0.0)), sqrt(cos(0.0)), sqrt(cos(0.0)))))), float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0))))))), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, sqrt(cos(0.0)))), clamp(float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0))))))), 0.0), (mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, sqrt(cos(0.0)))), clamp(float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0)))), _GLF_IDENTITY(float(vec2(0.0, sqrt(cos(0.0)))), (float(vec2(0.0, sqrt(cos(0.0))))) - 0.0)))), 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0))) / sqrt(1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_ONE(1.0, injectionSwitch.y)), 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(21.33)), bool(false))), mix(float(_GLF_FUZZED(69.44)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5568.3535), min(_GLF_FUZZED(-5568.3535), _GLF_FUZZED(-5568.3535))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0)))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-3657.9893) : injectionSwitch.y))))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(determinant(mat4(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-651.818) : 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / sqrt(1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) - sin(sqrt(0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0, mix(float(_GLF_IDENTITY((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0, float(mat4((_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) * 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, abs(1.0), 0.0)))), float(_GLF_FUZZED((- 9.0))), bool(false)))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0), vec4(0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 1.0), mix(vec4(_GLF_FUZZED(-3.2), (vec4(1.0, 0.0, 0.0, 1.0))[1], (vec4(1.0, 0.0, 0.0, 1.0))[2], (vec4(1.0, 0.0, 0.0, 1.0))[3]), vec4((vec4(1.0, 0.0, 0.0, 1.0))[0], _GLF_FUZZED(-2313.9722), _GLF_FUZZED(-7.3), _GLF_FUZZED(-2338.1290)), bvec4(true, false, false, false))), vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-5568.3535) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, 0.0)))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-3657.9893) : injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(determinant(_GLF_IDENTITY(mat4(_GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, sqrt(cos(0.0)))), clamp(float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(_GLF_IDENTITY(cos(0.0), (cos(0.0)) - 0.0)))), float(vec2(0.0, sqrt(cos(0.0))))))), 0.0), (_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(0.0, (0.0) / 1.0), sqrt(cos(0.0)))), clamp(float(vec2(0.0, sqrt(cos(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1610.7423)), bool(false))), (false ? _GLF_FUZZED(72.06) : _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1610.7423)), bool(false))), float(vec3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-1610.7423)), bool(false))), sin(0.0), 1.0))))))))), float(vec2(0.0, sqrt(cos(0.0)))), float(_GLF_IDENTITY(vec2(0.0, sqrt(_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-8649.5744)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))), cos(0.0))))), vec2(vec3(vec2(0.0, sqrt(_GLF_IDENTITY(cos(0.0), max(_GLF_IDENTITY(cos(0.0), mix(float(cos(0.0)), float(_GLF_FUZZED(-8649.5744)), bool(_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true))), (injectionSwitch.x > injectionSwitch.y))))), cos(0.0))))), 0.0))))))), 0.0), transpose(transpose(_GLF_IDENTITY(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, sqrt(cos(0.0))), (vec2(0.0, sqrt(cos(0.0)))) / exp(log(vec2(1.0, 1.0))))), clamp(float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0))))))), 0.0), (mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, _GLF_IDENTITY(sqrt(cos(0.0)), clamp(sqrt(cos(0.0)), sqrt(cos(0.0)), sqrt(cos(0.0)))))), clamp(float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0)))), float(vec2(0.0, sqrt(cos(0.0))))))), 0.0)) + mat4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), float(_GLF_FUZZED(2817.7416)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-744.494))), 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(23.26)), bool(false))), 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - determinant(mat2(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / sqrt(1.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x3(1.0, 0.0, 1.0, 1.0, 0.0, abs(0.0)))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(69.44)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (mix(float(_GLF_FUZZED(69.44)), float(_GLF_IDENTITY(1.0, min(1.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) / sqrt(1.0))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-183.510))))))), 1.0), _GLF_IDENTITY(vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5568.3535), min(_GLF_FUZZED(-5568.3535), _GLF_FUZZED(-5568.3535))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), (vec4(0.0, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-5568.3535), min(_GLF_FUZZED(-5568.3535), _GLF_FUZZED(-5568.3535))) : _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))) * mat4(_GLF_ONE(1.0, injectionSwitch.y)))))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-3657.9893) : _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(-4.5)), float(injectionSwitch[1]), bool(true))))) : _GLF_FUZZED(vec2(334.984, -7.8)))).y))))))))), true && ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 1.0, 1.0, determinant(_GLF_IDENTITY(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), abs(0.0), 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), abs(0.0), 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (true ? transpose(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(16.76)), float(1.0), bool(true))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0)), 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-869.241)), bool(false))), abs(1.0), exp(0.0), exp(0.0), 1.0, 0.0, 0.0, 1.0, determinant(mat2(0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), 0.0, 0.0)), 0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), abs(0.0), 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 0.0))), 1.0)), 1.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(1.6, -5.1, 4.2, 1.7, -2.7, 82.79, 44.39, 9.0, -5.3, -976.823, 251.459, -81.63, -20.77, -2.7, -271.433, 58.49)))), transpose(transpose(_GLF_IDENTITY(transpose(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-1.1))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(9615.3731)), float(0.0), bool(true))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(abs(0.0), 1.0 * (_GLF_IDENTITY(abs(0.0), clamp(abs(0.0), abs(0.0), _GLF_IDENTITY(abs(0.0), (false ? _GLF_FUZZED(5342.0996) : abs(0.0))))))), 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (true ? transpose(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, float(mat4(1.0, 0.0, determinant(mat4(1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_IDENTITY(0.0, (0.0) / abs(1.0))), abs(0.0), 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) : _GLF_FUZZED(mat4(1.6, -5.1, 4.2, 1.7, -2.7, 82.79, 44.39, 9.0, -5.3, -976.823, 251.459, -81.63, -20.77, -2.7, -271.433, 58.49)))))))))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(0.0, 1.0, 1.0, 0.0)))))), injectionSwitch.y)), (false ? _GLF_FUZZED(-3657.9893) : injectionSwitch.y))))))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)))), injectionSwitch)).y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != (0 & 39216), ! (! (_GLF_IDENTITY(_injected_loop_counter != (0 & 39216), _GLF_IDENTITY((_injected_loop_counter != (0 & 39216)), (_GLF_IDENTITY((_injected_loop_counter != (0 & 39216)), true && ((_injected_loop_counter != (0 & 39216))))) && true) && true))))); _injected_loop_counter --)
        {
         return;
        }
      }
     else
      {
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (workgroup_base) * 1u), workgroup_base, workgroup_base)), workgroup_base)) + subgroup_base + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))) ^ int(_GLF_ONE(1.0, injectionSwitch.y)))); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), max(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(ivec3(int(_GLF_ZERO(0.0, injectionSwitch.x)), 1, 0)))))); _injected_loop_counter --)
      {
       do
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), true && (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), bool(bool(bool(bvec4(_GLF_DEAD(false), true, true, false)))))))))
          return;
         if(_GLF_DEAD(false))
          continue;
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4))))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0), (ivec4(4, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0)) ^ ivec4(0, 0, 0, 0))), max(int(_GLF_IDENTITY(ivec4(4, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0), (ivec4(4, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0)) ^ ivec4(0, 0, 0, 0))), int(_GLF_IDENTITY(ivec4(4, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0), (ivec4(4, ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))), 0, 0)) ^ ivec4(0, 0, 0, 0))))))), int(4))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
      {
       return;
      }
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - 0u, 0u ^ ((workgroup_base) - 0u))) + subgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base), (min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base)) ^ 0u)) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u)))) << 0u, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) << 0u)))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) >> 0u)))) << 0u, ~ (~ ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u)) << 0u)))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1)) + 0u), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id) << 0u, uint(uvec4((subgroup_local_id) << 0u, 1u, 0u, 0u)))) + 0u), (_GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ ((subgroup_local_id) << 0u)))) - (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), max(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), 0u ^ (_GLF_IDENTITY(uint(8u), uint(8u))))))))) + 1)) * 1u) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) / 1u, ((workgroup_base) / 1u) | (_GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) * 1u))), (_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, 0u | (_GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) + 0u) ^ 0u) / 1u)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base))) << 0u)) / 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (workgroup_base) / 1u : _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), clamp(_GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u), _GLF_IDENTITY(_GLF_FUZZED(num_workgroup), (_GLF_FUZZED(num_workgroup)) - 0u), _GLF_FUZZED(num_workgroup)))))))) << 0u)) : num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), ~ (~ (subgroup_size)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), max(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))))) | 0u), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) ? _GLF_FUZZED(115722u) : _GLF_IDENTITY(0u + (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, clamp((subgroup_local_id) << 0u, (subgroup_local_id) << 0u, (subgroup_local_id) << 0u))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))), (_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup))))) / 1u), _GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))))) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), min(((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, clamp((subgroup_local_id) << 0u, (subgroup_local_id) << 0u, (subgroup_local_id) << 0u))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))), (_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup))))) / 1u), _GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))))) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, clamp((subgroup_local_id) << 0u, (subgroup_local_id) << 0u, (subgroup_local_id) << 0u))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)) / 1u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))), (_GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup))))) / 1u), _GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), 0u ^ (_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))))) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))))), (0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), clamp(~ (subgroup_size), ~ (subgroup_size), ~ (subgroup_size))), ~ (subgroup_size)))))))))) | 0u))), 0u | (_GLF_IDENTITY(0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(~ (subgroup_size), 0u ^ (~ (subgroup_size))))))))))), (true ? 0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))) << 0u))) : _GLF_FUZZED(workgroup_id)))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base))) - 0u, 0u ^ (_GLF_IDENTITY((workgroup_base), (true ? (workgroup_base) : _GLF_FUZZED(workgroup_id))) - 0u))) + subgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base, (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), _GLF_IDENTITY((workgroup_base) - 0u, ((workgroup_base) - 0u) | ((workgroup_base) - 0u))) + subgroup_base : _GLF_FUZZED(workgroup_size))), _GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << _GLF_IDENTITY(0u, (0u) >> 0u), _GLF_IDENTITY(((subgroup_local_id) << 0u), (_GLF_IDENTITY(true ? ((subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_local_id), (true ? ((subgroup_local_id) << 0u) : _GLF_FUZZED(subgroup_local_id)) + 0u))) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u + (workgroup_base)), _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ _GLF_IDENTITY(0u, ~ (~ (0u)))) / 1u)), (workgroup_base) / 1u))) << 0u)) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(0u + (((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, clamp((subgroup_local_id) << 0u, (subgroup_local_id) << 0u, _GLF_IDENTITY((subgroup_local_id) << 0u, ~ (~ ((subgroup_local_id) << _GLF_IDENTITY(0u, (0u) * ((1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), ~ (~ (uint(7u)))))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, min((workgroup_base) / 1u, _GLF_IDENTITY((workgroup_base) / 1u, ((workgroup_base) / 1u) - 0u)))) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ _GLF_IDENTITY((subgroup_size), ((subgroup_size)) ^ 0u))))))), 0u | (_GLF_IDENTITY(0u + ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1))) >> 0u) * uint(_GLF_ONE(1.0, injectionSwitch.y))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, ~ (~ ((workgroup_base) / 1u)))) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), (true ? 0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(workgroup_id)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) - 0u, 0u ^ ((workgroup_base) - 0u)), max(_GLF_IDENTITY((workgroup_base) - 0u, 0u ^ ((workgroup_base) - 0u)), _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) - _GLF_IDENTITY(0u, clamp(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u)), 0u ^ ((workgroup_base) - 0u)), min(_GLF_IDENTITY((workgroup_base) - 0u, 0u ^ ((workgroup_base) - 0u)), _GLF_IDENTITY((workgroup_base) - 0u, 0u ^ ((workgroup_base) - 0u))))))) + subgroup_base, min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) >> 0u)) / 1u)) + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))), (workgroup_base) - 0u) + subgroup_base)) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, (_GLF_IDENTITY((subgroup_local_id), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), 0u, 0u, 1u)), (false ? _GLF_FUZZED(virtual_gid) : uint(uvec4(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), (subgroup_local_id))), 0u, 0u, 1u))))) << 0u) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, clamp(_GLF_IDENTITY((workgroup_base) / 1u, clamp((workgroup_base) / 1u, (workgroup_base) / 1u, (workgroup_base) / 1u)), (workgroup_base) / 1u, (workgroup_base) / 1u)), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_base) / 1u, ~ (_GLF_IDENTITY(~ ((workgroup_base) / 1u), clamp(~ ((workgroup_base) / 1u), ~ ((workgroup_base) / 1u), ~ ((workgroup_base) / 1u))))), max(_GLF_IDENTITY((workgroup_base) / 1u, 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) / 1u)), (workgroup_base) / 1u))) << 0u)) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + _GLF_IDENTITY(1, max(1, 1))) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u)))), _GLF_IDENTITY(~ (~ (subgroup_size)), max(~ (~ (subgroup_size)), ~ (~ (subgroup_size))))))))), 0u | (_GLF_IDENTITY(0u + _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)), (workgroup_base) / 1u) : _GLF_IDENTITY(_GLF_IDENTITY(num_workgroup, (true ? num_workgroup : _GLF_FUZZED(workgroup_size))), (false ? _GLF_FUZZED(bitfieldReverse(bitfieldInsert(subgroup_size, subgroup_base, 71564, 76544))) : num_workgroup)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))))))) ^ 0u)) << 0u))))), min(_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)), (workgroup_base) / 1u) : _GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(bitfieldReverse(bitfieldInsert(subgroup_size, subgroup_base, 71564, 76544))) : num_workgroup)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u, _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u, 0u, 1u)), (uint(uvec3((_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u, 0u, 1u))) ^ 0u)))) << 0u))))), 0u + ((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)), (workgroup_base) / 1u) : _GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(bitfieldReverse(bitfieldInsert(subgroup_size, subgroup_base, 71564, _GLF_IDENTITY(76544, max(76544, _GLF_IDENTITY(76544, int(ivec2(76544, 1)))))))) : num_workgroup)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u)) << 0u)))), 1u * (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base)))) >> 0u), _GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))), workgroup_base)), (workgroup_base) / 1u) : _GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(bitfieldReverse(bitfieldInsert(subgroup_size, subgroup_base, 71564, _GLF_IDENTITY(76544, max(76544, _GLF_IDENTITY(76544, int(ivec2(76544, 1)))))))) : num_workgroup)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u)) << 0u))))))))), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 1u, 0u, 1u)), (uint(uvec4(workgroup_base, 1u, 0u, 1u))) ^ 0u)))))) >> 0u), _GLF_IDENTITY(workgroup_base, ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), _GLF_IDENTITY(~ (workgroup_base), (true ? ~ (workgroup_base) : _GLF_FUZZED((workgroup_size)))))))), workgroup_base)), (workgroup_base) / 1u) : _GLF_IDENTITY(num_workgroup, (false ? _GLF_FUZZED(bitfieldReverse(bitfieldInsert(subgroup_size, subgroup_base, 71564, 76544))) : num_workgroup)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, ~ (_GLF_IDENTITY(~ (subgroup_size), min(_GLF_IDENTITY(~ (subgroup_size), (~ (subgroup_size)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), ~ (subgroup_size))))), (_GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))) ^ 0u)) << 0u))))))), (true ? _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY(0u, ~ (~ (0u))))) + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) - 0u, 0u ^ ((_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) - 0u))) + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), min(_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ~ (_GLF_IDENTITY(~ ((workgroup_base)), (~ _GLF_IDENTITY(((workgroup_base)), (((workgroup_base))) >> 0u)) / 1u))) - 0u) + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) + 0u) << 0u, uint(uvec3(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) + 0u) << 0u, 1u, 0u))), ((subgroup_local_id) << 0u) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) / 1u)), (workgroup_base) / 1u))) << 0u)) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), 0u | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, uint(_GLF_IDENTITY(uint((subgroup_local_id) << 0u), 0u + (uint((subgroup_local_id) << 0u)))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) / 1u))))), min(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u))))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), max(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))) : _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u)))))))))))))), (true ? 0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) : _GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u))) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(workgroup_id)))))), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) + 0u) << 0u, uint(uvec3(_GLF_IDENTITY((subgroup_local_id), (_GLF_IDENTITY((subgroup_local_id), clamp((subgroup_local_id), (subgroup_local_id), (subgroup_local_id)))) + 0u) << 0u, 1u, 0u))), ((subgroup_local_id) << 0u) - (0u << _GLF_IDENTITY(uint(8u), uint(8u))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) / 1u, (_GLF_IDENTITY((workgroup_base) / 1u, max(_GLF_IDENTITY((workgroup_base) / 1u, 0u | (_GLF_IDENTITY((workgroup_base), ((workgroup_base)) ^ 0u) / 1u)), (workgroup_base) / 1u))) << 0u)) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size)))))), _GLF_IDENTITY(0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))) ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))), 0u | (_GLF_IDENTITY(0u + (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) << 0u, uint(_GLF_IDENTITY(uint((subgroup_local_id) << 0u), 0u + (uint((subgroup_local_id) << 0u)))))) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)))), ((~ (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) / 1u))))), min(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)) : _GLF_IDENTITY(subgroup_size, ~ _GLF_IDENTITY((~ (subgroup_size)), ((~ (subgroup_size))) - 0u))))), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_IDENTITY(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), max(_GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)), _GLF_FUZZED((false ? _GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u) : num_workgroup)))) : _GLF_IDENTITY(subgroup_size, ~ (~ (_GLF_IDENTITY(subgroup_size, max(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 0u, 0u)))))))))))))), (true ? 0u + (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % _GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED((false ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u), 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) / 1u))) : _GLF_IDENTITY(num_workgroup, (num_workgroup) / 1u))) : _GLF_IDENTITY(subgroup_size, ~ (~ (subgroup_size))))))) : _GLF_FUZZED(workgroup_id))))))))))));
 uint read = _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) ^ (0 >> _GLF_IDENTITY(int(3), int(_GLF_IDENTITY(3, ~ (~ (3)))))));
 do
  {
   if(_GLF_DEAD(false))
    continue;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY((2), clamp((2), (2), (2))) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | (2)), 2))))) == _GLF_IDENTITY(0, (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, min(0, 0)))), (0) | (0))))) + (_GLF_IDENTITY(1 ^ 1, ~ (~ (1 ^ 1))))))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          continue;
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             read = _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)), (true ? _GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid)) : _GLF_FUZZED(subgroup_local_id))))))) | (_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))))], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), min(64, 64)), 2), _GLF_IDENTITY((true ? _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u ^ (_GLF_IDENTITY(min(virtual_gid, virtual_gid), min(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid))))))], 4, 64, 2), uint(uint(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u ^ (_GLF_IDENTITY(min(virtual_gid, virtual_gid), min(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid))))))], 4, 64, 2)))) : _GLF_FUZZED(num_workgroup)), ((true ? _GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u ^ (_GLF_IDENTITY(min(virtual_gid, virtual_gid), min(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid))))))], 4, 64, 2), uint(uint(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(min(virtual_gid, virtual_gid), 0u ^ (_GLF_IDENTITY(min(virtual_gid, virtual_gid), min(min(virtual_gid, virtual_gid), min(virtual_gid, virtual_gid))))))], 4, 64, 2)))) : _GLF_FUZZED(num_workgroup))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))));
            }
          }
         else
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
            break;
           if(_GLF_DEAD(false))
            break;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))))))));
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), uint(_GLF_IDENTITY(uvec3(atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(2, min(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-99850) : 2)), _GLF_IDENTITY(2, ~ (~ (2))), 2)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) << 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(2, 0 + (2)), (_GLF_IDENTITY(2, 0 + (2))) << 0)))))), 0u, 1u), (true ? uvec3(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | 0u)))) / 1u), (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u))))) ^ (1u))) : _GLF_FUZZED((uvec3(187760u, 7536u, 107336u) ^ uvec3(_GLF_IDENTITY(148251u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))) >> 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(148251u, (148251u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(148251u, (148251u) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))) | (_GLF_IDENTITY(148251u, (148251u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 55137u, 155458u)))))));
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), false)), (bool(bvec4(false, true, false, false))) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(_GLF_IDENTITY(true, (true) && true))))))), true, false)))) && true)), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(_GLF_IDENTITY(true, (true) && true))))))), true, false)))) && true)), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), ! (! (bool(_GLF_IDENTITY(true, (true) && true))))))), true, false)))) && true))) && true))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (bool(_GLF_IDENTITY(true, (true) && true))) && true))) || false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))) || false), true, false, false)), (bool(bvec4(false, true, false, false))) && true), false || (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true), _GLF_IDENTITY(_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true)), false || (false || (_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((bool(bvec4(false, true, false, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY((bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY((bool(bvec4(false, true, false, false))), true && ((bool(bvec4(false, _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false)))))))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, _GLF_IDENTITY(false, (false) || false))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))), ((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false))))) && true)))), (_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))), ((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false))))) && true)))), bool(bvec2(_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))), ((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false))))) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true))) || false)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bool(true)))))), (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bool(true))))))) && true))), false, false)))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))))), true && ((_GLF_IDENTITY(! ((bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bool(true)))))), (! (_GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, bool(bool(true))))))) && true))), false, false)))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))))))), ((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), true && (_GLF_IDENTITY(! _GLF_IDENTITY(((bool(bvec4(false, true, false, false)))), (_GLF_IDENTITY(((bool(bvec4(false, true, false, false)))), bool(_GLF_IDENTITY(bool(((bool(bvec4(false, true, false, false))))), bool(bvec2(bool(((bool(bvec4(false, true, false, false))))), false)))))) && true), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false))))))) || false)), ! (! (bool(_GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))), ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))), false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false)))))), ((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), (! (_GLF_IDENTITY(false, ! (! (false))))) || false))))))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! ((bool(bvec4(false, true, false, false)))), false, false, false))))))) || false))))))))))) && true)))), false || (_GLF_IDENTITY(false || (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && true)), false || _GLF_IDENTITY((false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((bool(bvec4(false, true, false, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), _GLF_IDENTITY(true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), false || ((_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))), _GLF_IDENTITY(true && (bool(bvec4(false, true, false, false))), bool(bvec3(true && (bool(bvec4(false, true, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), false, false)))), true && (_GLF_IDENTITY(true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), true && ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, false)))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec4(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), true, false, false)))))))))) && true), false, false)))), ! (! (true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), false || ((_GLF_IDENTITY(bool(bvec4(false, true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true))), false)), true && (bool(bvec4(false, true, false, false)))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)))))))))))))), false || ((_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))), false || ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (false))))))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), false, false))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))))), ((_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))), _GLF_IDENTITY((bool(bvec4(false, true, false, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)))), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false)))), true)))), false))))))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY((bool(bvec4(false, true, false, false))) && true, ! (! ((bool(bvec4(false, true, false, false))) && true)))), false, false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), true && (bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && true), false))))), ! (! ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true, true, false))))))), false, false)))))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true)))), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), true), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false)))), true)))), false))))))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, (true) || false), false, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY((bool(bvec4(false, true, false, false))) && true, ! (! ((bool(bvec4(false, true, false, false))) && true)))), false, false, true)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (false)), true, false, false)), true && (bool(bvec4(false, true, _GLF_IDENTITY(false, (false) && true), false))))), ! (! ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true, bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true, true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true, true, false))))))), false, false)))))))))) && _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((true), true && ((true))), ! (! (! (true))))))))) && true)), ((false || _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((bool(bvec4(false, true, false, false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false)), false)))), true && _GLF_IDENTITY((_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false), true && (bool(bvec4(false, true, false, false))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec4(false, true, false, false)))), true && (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), false, false)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), ! (! (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(_GLF_IDENTITY(bvec2(! ((bool(bvec4(false, true, false, false)))), false), bvec2(bvec2(bvec2(! ((bool(bvec4(false, true, false, false)))), false))))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) || false), true && (bool(bvec4(false, true, false, _GLF_IDENTITY(false, false || (false))))))), false || ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), (! (false)) && true), true, true))))), true, false, false)))))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3((_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, false))))) && true), false, false))))))))), false || ((_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, true, false, false)))), bool(bvec4(! (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), false, true)))), _GLF_IDENTITY(false, (false) && true) || ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), false, true)))), _GLF_IDENTITY(false, (false) && true) || ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), false, true)))), _GLF_IDENTITY(false, (false) && true) || ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))), true)), bool(bvec3(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), bool(bvec3(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false)))), false, true)))), _GLF_IDENTITY(false, (false) && true) || ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))), true)), false, false)))), true, true)))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), false, false))))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (_GLF_IDENTITY(! (true), false || (! (true)))))))))), ((_GLF_IDENTITY(bool(bvec4(false, true, false, _GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))))), _GLF_IDENTITY((bool(bvec4(false, true, false, false))), ! (_GLF_IDENTITY(! ((bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)))), true && (_GLF_IDENTITY(! ((bool(bvec4(false, _GLF_IDENTITY(true, true && (true)), false, false)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))), false, false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, false, false)))), ! (! (! (! (bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, false))))))))))) && true)), ! (! ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), false, false)), (bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(true, true), false), bvec3(bvec4(bvec3(bvec2(true, true), false), false))))))), false, false))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), ! (! (bool(bvec4(false, true, false, false))))))), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), _GLF_IDENTITY(! (! (bool(bvec4(false, true, false, false)))), ! (! (! (! (bool(bvec4(false, _GLF_IDENTITY(true, false || (true)), false, false))))))))))) && true)), ! (! ((_GLF_IDENTITY(bool(bvec4(false, true, false, false)), true && (bool(bvec4(false, true, false, false))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, false)))))) && true), false, false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(bool(bvec2(! (! (! (true))), true)), ! (! (bool(bvec2(! (! (! (true))), true))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(bool(bvec2(! (! (! (true))), true)), ! (! (bool(bvec2(! (! (! (true))), true)))))))), (! (_GLF_IDENTITY(! (true), _GLF_IDENTITY(! (! (! (true))), _GLF_IDENTITY(bool(bvec2(! (! (! (true))), true)), ! (! (bool(bvec2(! (! (! (true))), true))))))))) && true)))))))) && true))) && true)))))) || false), false, _GLF_IDENTITY(true, bool(bvec3(true, _GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false))), _GLF_IDENTITY(true, true && (true)))))) && true))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (_GLF_IDENTITY(bool(bvec4(false, true, false, false)), (bool(bvec4(false, true, false, false))) && _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) || false))) && true))), _GLF_IDENTITY(true, ! (! (true))), false, true)), _GLF_IDENTITY(true, (true) && true) && (bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true, false, _GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))) || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), _GLF_IDENTITY(false, false || (false)), false)), (bool(bvec4(false, true, false, false))) && true)) && true), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), _GLF_IDENTITY(false, false || (false)), false)), (bool(bvec4(false, true, false, false))) && true)) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && (false)))), true, false, _GLF_IDENTITY(false, bool(bool(false))))), (_GLF_IDENTITY(bool(bvec4(false, _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, bool(bvec3(true, true, true))))), _GLF_IDENTITY(false, false || (false)), false)), (bool(bvec4(false, true, false, false))) && true)) && true)) && true)) && true))), _GLF_IDENTITY(true, false || (true)), false, true)))))))))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, min(_injected_loop_counter, _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)), max(_injected_loop_counter, _injected_loop_counter)))) != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             return;
            }
           else
            {
            }
          }
         else
          {
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        continue;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
        }
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || (false))) || false) || (! (_GLF_WRAPPED_IF_FALSE(false)))))))
  {
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY(_GLF_IDENTITY((read), max((read), (read))), _GLF_IDENTITY(((read)) / _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(min(_GLF_IDENTITY(((read)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4((_GLF_IDENTITY((read), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (read)))) / _GLF_IDENTITY(1u, (1u) | (1u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (1u) | 0u), max(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, (1u) | 0u))), 1u))), ((read)) / _GLF_IDENTITY(1u, (1u) | (1u))), (min(_GLF_IDENTITY(((read)) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | (1u)), (_GLF_IDENTITY(1u, (1u) | (1u))) + uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(uvec4((_GLF_IDENTITY((read), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_id) : (read)))) / _GLF_IDENTITY(1u, (1u) | (1u)), 0u, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (1u) | 0u), max(_GLF_IDENTITY(1u, (1u) | 0u), _GLF_IDENTITY(1u, (1u) | 0u))), 1u))), ((read)) / _GLF_IDENTITY(1u, (1u) | (1u)))) | 0u))) / 1u), 4, _GLF_IDENTITY(64, (64) + _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, 0))))), _GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & 70867))), _GLF_IDENTITY(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & _GLF_IDENTITY(70867, max(70867, 70867)))))), min(((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, min(4, 4))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, max(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, max(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)), clamp(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, max(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, max(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, max(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, _GLF_IDENTITY((4), 0 ^ ((4))) / 1))))) | 0))) << (0 & 70867)))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & 70867)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (_GLF_IDENTITY(0, max(0, 0)) & 70867)), min(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & 70867), (false ? _GLF_FUZZED(31133) : (_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1), (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) ^ 0)) << (0 & 70867)))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & 70867))))))), (_GLF_IDENTITY((_GLF_IDENTITY(4, (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) << 0), _GLF_IDENTITY((_GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, min(4, 4))) | 0))))), 0 ^ ((4))) / 1)) << (0 & 70867))), _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & _GLF_IDENTITY(70867, _GLF_IDENTITY(int(ivec4(70867, (0 >> _GLF_IDENTITY(int(3), int(3))), 0, 1)), (false ? _GLF_FUZZED(34108) : int(ivec4(70867, (0 >> _GLF_IDENTITY(int(3), int(3))), 0, 1))))))))), (((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & _GLF_IDENTITY(70867, _GLF_IDENTITY(int(ivec4(70867, (0 >> _GLF_IDENTITY(int(3), int(3))), 0, 1)), (false ? _GLF_FUZZED(34108) : int(ivec4(70867, (0 >> _GLF_IDENTITY(int(3), int(3))), 0, 1)))))))))) - (-86065 & 0)), min(((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY((4), 0 ^ ((4))) / 1, _GLF_IDENTITY((_GLF_IDENTITY((4), 0 ^ ((4))) / 1), ((_GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (1 ^ 1)) ^ (0 >> _GLF_IDENTITY(int(0), int(0)))))) << (0 & 70867)))), ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & 70867)))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & 70867)), min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-93961) : 0)), 0)) & 70867)), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), 0 ^ ((4))) / 1)) << (0 & 70867)))))))) >> 0) << (_GLF_IDENTITY(0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(2), (true ? int(2) : _GLF_FUZZED(38827))), int(2)), ~ (~ _GLF_IDENTITY((0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, min(_GLF_IDENTITY(_GLF_IDENTITY((2) ^ 0, ~ (~ (_GLF_IDENTITY((2) ^ 0, int(ivec4((2) ^ 0, 0, 0, 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)))), (int(int(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0))))) << 0)), (2) ^ 0)), _GLF_IDENTITY((2) ^ 0, int(int((2) ^ 0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY((2) ^ 0, min(_GLF_IDENTITY((2) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), ((_GLF_IDENTITY(0, clamp(0, 0, 0)))) / 1), (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | 0), _GLF_IDENTITY(int(ivec4(0, 0, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) >> 0) >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((int(ivec4(0, 0, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) >> 0, 0 | ((int(ivec4(0, 0, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) >> 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ _GLF_IDENTITY(0, (0) - (1 ^ 1)), (2) ^ 0)), (2) ^ 0), max(max(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)), (2) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) + 0) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)), (_GLF_IDENTITY(2, ~ (~ (2)))) ^ 0)))), _GLF_IDENTITY((2) ^ 0, int(int((2) ^ 0)))))))))))), int(ivec2((0 >> _GLF_IDENTITY(int(2), int(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((2) ^ 0, min(_GLF_IDENTITY(_GLF_IDENTITY((2) ^ 0, ~ (~ (_GLF_IDENTITY((2) ^ 0, int(ivec4((2) ^ 0, 0, 0, 0)))))), max(_GLF_IDENTITY(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)), _GLF_IDENTITY(int(int(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)))), (int(int(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0))))) << 0)), (2) ^ 0)), _GLF_IDENTITY((2) ^ 0, int(int((2) ^ 0)))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, (2) / 1), _GLF_IDENTITY((2) ^ 0, min(_GLF_IDENTITY((2) ^ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) >> 0)) | (0)), _GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), min(_GLF_IDENTITY((_GLF_IDENTITY(0, clamp(0, 0, 0))), ((_GLF_IDENTITY(0, clamp(0, 0, 0)))) / 1), (_GLF_IDENTITY(0, clamp(0, 0, 0))))) | 0), _GLF_IDENTITY(int(ivec4(0, 0, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(6), int(6))), ((1 << _GLF_IDENTITY(int(6), int(6)))) >> 0) >> _GLF_IDENTITY(int(6), int(6))))), _GLF_IDENTITY((int(ivec4(0, 0, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) >> 0, 0 | ((int(ivec4(0, 0, 1, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))))) >> 0)))), _GLF_IDENTITY(max(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ _GLF_IDENTITY(0, (0) - (1 ^ 1)), (2) ^ 0)), (2) ^ 0), max(max(_GLF_IDENTITY((2) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)), (2) ^ 0), max(_GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) + 0) ^ 0, clamp((2) ^ 0, (2) ^ 0, (2) ^ 0)), (_GLF_IDENTITY(2, ~ (~ (2)))) ^ 0)))), _GLF_IDENTITY((2) ^ 0, int(int((2) ^ 0)))))))))))), 1))))))));
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
