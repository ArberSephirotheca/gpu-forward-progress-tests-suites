#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)) > injectionSwitch.y))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), min((injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y)), (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))))).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1268.5832), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED(-7.7)), bvec2(true, false))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y)))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))), false || (false)))) || false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false))), false || (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)))))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) || false)))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, _GLF_IDENTITY(subgroup_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(uint(8u), (uint(8u)) | 0u))), uint(8u))) | (subgroup_id)), _GLF_IDENTITY(subgroup_id, min(subgroup_id, _GLF_IDENTITY(subgroup_id, uint(uvec2(subgroup_id, 1u)))))))) | (subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
    return;
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * _GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)) | (subgroup_base))), ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)) | (subgroup_base)))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)) | (subgroup_base))), ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)) | (subgroup_base)))) | ((_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u)) | (subgroup_base)))))))) + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u + (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), clamp(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_size)))))), max((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) | (1))) % subgroup_size, (subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (1u | 1u) * (subgroup_size)))))))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) << (1u ^ (0u ^ 1u)))) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) - 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) * 1u)) - 0u, ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) - 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) * 1u)) - 0u) | ((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), (_GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size))))) - 0u), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) * 1u)) - 0u)))), ~ (~ ((_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) | 0u) : _GLF_FUZZED(subgroup_local_id)))))) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)))))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size)), (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) | (subgroup_size)), max((subgroup_local_id + 1) % subgroup_size, (subgroup_local_id + 1) % subgroup_size))) - 0u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x), (true ? clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x) : _GLF_FUZZED(-1.9)))) > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false)))), (! (_GLF_IDENTITY(bool(bool(false)), bool(bvec4(bool(bool(false)), true, true, false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)))[0], _GLF_FUZZED(-3.7)), vec2(_GLF_FUZZED(39.90), (vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)))[1]), bvec2(false, true)))), bvec2(false, true))), mix(vec2(_GLF_FUZZED((5116.2838)), _GLF_FUZZED(246.099)), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), (true ? ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)) : _GLF_FUZZED((62052 + -92153))))))), ~ (_GLF_IDENTITY(1, (1) - 0))))))))]), (vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0))))), (false ? _GLF_FUZZED(ivec2(84647, -10157)[0]) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))), (_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))), (0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895))))) >> 0)) | (0 & (- 83976))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0))))))))))])) / vec2(1.0, 1.0)), bvec2(true, true))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)))[0], _GLF_FUZZED(-3.7)), vec2(_GLF_FUZZED(39.90), (vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)))[1]), bvec2(false, true)))), bvec2(false, true))), mix(vec2(_GLF_FUZZED((5116.2838)), _GLF_FUZZED(246.099)), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), (true ? ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)) : _GLF_FUZZED((62052 + -92153))))))), ~ (_GLF_IDENTITY(1, (1) - 0))))))))]), (vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0))))), (false ? _GLF_FUZZED(ivec2(84647, -10157)[0]) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))), (_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))), (0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895))))) >> 0)) | (0 & (- 83976))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0))))))))))])) / vec2(1.0, 1.0)), bvec2(true, true))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), _GLF_IDENTITY(vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)), mix(vec2((vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)))[0], _GLF_FUZZED(-3.7)), vec2(_GLF_FUZZED(39.90), (vec2(mat2x3(_GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), 0.0, 0.0, 0.0, 1.0)))[1]), bvec2(false, true)))), bvec2(false, true))), mix(vec2(_GLF_FUZZED((5116.2838)), _GLF_FUZZED(246.099)), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, 1)), (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), (true ? ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)) : _GLF_FUZZED((62052 + -92153))))))), ~ (_GLF_IDENTITY(1, (1) - 0))))))))]), (vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0))))), (false ? _GLF_FUZZED(ivec2(84647, -10157)[0]) : ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))), (_GLF_IDENTITY(0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))), (0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895))))) >> 0)) | (0 & (- 83976))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0))))))))))])) / vec2(1.0, 1.0)), bvec2(true, true))).x)) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(mat4x2(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), bvec2(false, true)), min(mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(mat4x2(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), bvec2(false, true)), mix(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), vec2(mat4x2(vec2((injectionSwitch)[0], _GLF_FUZZED(7.2)), _GLF_IDENTITY(length(vec4(0.0, 0.0, 0.0, 0.0)), clamp(length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (true ? _GLF_IDENTITY(vec2(_GLF_FUZZED(3218.9512), (injectionSwitch)[1]), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(3218.9512), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[1]))) : _GLF_FUZZED(vec2(-3357.5576, -1.3)))), bvec2(false, true))))), mix(vec2(_GLF_FUZZED((5116.2838)), _GLF_FUZZED(246.099)), _GLF_IDENTITY(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, _GLF_IDENTITY((true ? _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(false))), float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), bool(true)))), float(_GLF_FUZZED(-4815.7557)), bool(false))) : _GLF_FUZZED(-8.9)), (_GLF_IDENTITY((true ? 1.0 : _GLF_FUZZED(-8.9)), mix(float((true ? 1.0 : _GLF_FUZZED(-8.9))), _GLF_IDENTITY(float(_GLF_FUZZED(6061.4517)), (false ? _GLF_FUZZED(790.722) : float(_GLF_FUZZED(6061.4517)))), bool(false)))) + 0.0)), injectionSwitch.y))))[0], (injectionSwitch)[_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0) ^ _GLF_IDENTITY(0, (0) | (0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec3((_GLF_IDENTITY(1, (1) - 0)), 1, 1))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0) ^ _GLF_IDENTITY(0, (0) | (0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec3((_GLF_IDENTITY(1, (1) - 0)), 1, 1))))))))), min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0) ^ _GLF_IDENTITY(0, (0) | (0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec3((_GLF_IDENTITY(1, (1) - 0)), 1, 1))))))))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0) ^ _GLF_IDENTITY(0, (0) | (0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec3((_GLF_IDENTITY(1, (1) - 0)), 1, 1))))))))), max(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0) ^ _GLF_IDENTITY(0, (0) | (0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec3((_GLF_IDENTITY(1, (1) - 0)), 1, 1))))))))), _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0) ^ _GLF_IDENTITY(0, (0) | (0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec3((_GLF_IDENTITY(1, (1) - 0)), 1, 1)))))))))))))) | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - 0)), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, 1, 1))))), ~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0, ((_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0) ^ _GLF_IDENTITY(0, (0) | (0))))), ~ _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), int(ivec3((_GLF_IDENTITY(1, (1) - 0)), 1, 1)))))))))))]), (vec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y)), _GLF_IDENTITY(((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))) * mat2(1.0), min(((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))) * mat2(1.0), ((injectionSwitch) * mat2(_GLF_ONE(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-8.9))), injectionSwitch.y))) * mat2(1.0))))))[0], (injectionSwitch)[_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) / 1))), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(1, 0 | (1)), 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0)))), int(ivec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, (0) / 1))), clamp(~ (_GLF_IDENTITY(1, (1) - _GLF_IDENTITY(0, int(ivec4(0, 1, _GLF_IDENTITY(1, 0 | (1)), 1))))), ~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(12895)))))) - 0)), ~ (_GLF_IDENTITY(1, (1) - 0)))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))), 1, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))))))))])) / vec2(1.0, 1.0)), bvec2(true, true))).x > injectionSwitch.y))) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
    return;
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, max(_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid)), next_virtual_gid))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-17337))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), false || (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, min(virtual_gid, virtual_gid))], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, clamp(_GLF_IDENTITY(64, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(71511) : 0)) + (64)), 64, 64)), 2);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! (_GLF_DEAD(false))) || false)))))))), ! (! ((! (! (_GLF_DEAD(false)))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (! ((false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED((- _GLF_IDENTITY(-7.7, float(mat3x2(-7.7, 1.0, determinant(mat3(0.0, 0.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0))))), _GLF_FUZZED(-15.08)), vec2(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)))[0], ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (true))))))).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true))), (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, true)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true))))) || _GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), tan(0.0), 1.0, _GLF_IDENTITY(dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(1.0, 0.0)), dot(vec2(1.0, length(vec2(0.0, 0.0))), vec2(1.0, 0.0))), abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), (max(injectionSwitch.x, injectionSwitch.x)) - 0.0)) > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(32.32, -71.55)), mix(vec2(_GLF_FUZZED(-233.774), _GLF_FUZZED(174.975)), vec2((_GLF_FUZZED(vec2(32.32, -71.55)))[0], (_GLF_FUZZED(vec2(32.32, -71.55)))[1]), bvec2(true, true))) : injectionSwitch)))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(32.32, -71.55)), mix(vec2(_GLF_FUZZED(-233.774), _GLF_FUZZED(174.975)), vec2((_GLF_FUZZED(vec2(32.32, -71.55)))[0], (_GLF_FUZZED(vec2(32.32, -71.55)))[1]), bvec2(true, true))) : injectionSwitch)))).y, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(32.32, -71.55)), mix(vec2(_GLF_FUZZED(-233.774), _GLF_FUZZED(174.975)), vec2((_GLF_FUZZED(vec2(32.32, -71.55)))[0], (_GLF_FUZZED(vec2(32.32, -71.55)))[1]), bvec2(true, true))) : injectionSwitch)))).y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(32.32, -71.55)), mix(vec2(_GLF_FUZZED(-233.774), _GLF_FUZZED(174.975)), vec2((_GLF_FUZZED(vec2(32.32, -71.55)))[0], (_GLF_FUZZED(vec2(32.32, -71.55)))[1]), bvec2(true, true))) : injectionSwitch)))).y)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(32.32, -71.55)), mix(vec2(_GLF_FUZZED(-233.774), _GLF_FUZZED(174.975)), vec2((_GLF_FUZZED(vec2(32.32, -71.55)))[0], (_GLF_FUZZED(vec2(32.32, -71.55)))[1]), bvec2(true, true))) : injectionSwitch)))).y)), injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, exp(0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? vec3(injectionSwitch.y, 0.0, exp(0.0)) : _GLF_FUZZED(vec3(-128.400, 2.8, 9036.1218)))))) : _GLF_FUZZED(5.1)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), false || (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0) > injectionSwitch.y)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     barrier();
    }
   return;
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(read, max(read, _GLF_IDENTITY(read, (_GLF_IDENTITY(read, (read) | 0u)) + 0u))), uint(_GLF_IDENTITY(uvec3(read, 0u, 0u), (uvec3(read, 0u, 0u)) - uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))))), 4, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, min(64, 64))))), 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
