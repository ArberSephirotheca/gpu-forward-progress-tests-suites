#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(vec2(-9806.6909, 3578.3313).g)), float(_GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), float(mat4x2(max(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)), bool(true)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-821.729)), bool(false))), sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.59)), float(injectionSwitch.y), bool(true)))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, float(mat3(0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(7.4)), float(sqrt(1.0)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))))[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(21.29), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0))), 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(280.090))), 1.0)))), abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((length(vec4(-2799.1744, 6.1, -8.3, -25.03)) + asinh(25.25)))))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4)))))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, -267.856), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, 4563.8346, 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24))))), mat4(1.0) * (_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, _GLF_IDENTITY(-267.856, min(-267.856, -267.856))), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, _GLF_IDENTITY(4563.8346, max(4563.8346, _GLF_IDENTITY(4563.8346, mix(float(4563.8346), float(_GLF_FUZZED(9.3)), bool(false))))), 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24)))))))))))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), true)))).y, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(vec2(-9806.6909, 3578.3313).g)), float(_GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), float(mat4x2(max(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)), bool(true)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-821.729)), bool(false))), sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.59)), float(injectionSwitch.y), bool(true)))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, float(mat3(0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(7.4)), float(sqrt(1.0)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))))[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(21.29), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0))), 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(280.090))), 1.0)))), abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((length(vec4(-2799.1744, 6.1, -8.3, -25.03)) + asinh(25.25)))))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4)))))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, -267.856), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, 4563.8346, 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24))))), mat4(1.0) * (_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, _GLF_IDENTITY(-267.856, min(-267.856, -267.856))), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, _GLF_IDENTITY(4563.8346, max(4563.8346, _GLF_IDENTITY(4563.8346, mix(float(4563.8346), float(_GLF_FUZZED(9.3)), bool(false))))), 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24)))))))))))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), true)))).y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(vec2(-9806.6909, 3578.3313).g)), float(_GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), float(mat4x2(max(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)), bool(true)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-821.729)), bool(false))), sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.59)), float(injectionSwitch.y), bool(true)))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, float(mat3(0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(7.4)), float(sqrt(1.0)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))))[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(21.29), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0))), 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(280.090))), 1.0)))), abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((length(vec4(-2799.1744, 6.1, -8.3, -25.03)) + asinh(25.25)))))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4)))))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, -267.856), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, 4563.8346, 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24))))), mat4(1.0) * (_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, _GLF_IDENTITY(-267.856, min(-267.856, -267.856))), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, _GLF_IDENTITY(4563.8346, max(4563.8346, _GLF_IDENTITY(4563.8346, mix(float(4563.8346), float(_GLF_FUZZED(9.3)), bool(false))))), 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24)))))))))))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), true)))).y) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(vec2(-9806.6909, 3578.3313).g)), float(_GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), float(mat4x2(max(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)), bool(true)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-821.729)), bool(false))), sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.59)), float(injectionSwitch.y), bool(true)))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, float(mat3(0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(7.4)), float(sqrt(1.0)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))))[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(21.29), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0))), 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(280.090))), 1.0)))), abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((length(vec4(-2799.1744, 6.1, -8.3, -25.03)) + asinh(25.25)))))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4)))))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, -267.856), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, 4563.8346, 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24))))), mat4(1.0) * (_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, _GLF_IDENTITY(-267.856, min(-267.856, -267.856))), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, _GLF_IDENTITY(4563.8346, max(4563.8346, _GLF_IDENTITY(4563.8346, mix(float(4563.8346), float(_GLF_FUZZED(9.3)), bool(false))))), 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24)))))))))))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), true)))).y, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(vec2(-9806.6909, 3578.3313).g)), float(_GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), float(mat4x2(max(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)), bool(true)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-821.729)), bool(false))), sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.59)), float(injectionSwitch.y), bool(true)))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, float(mat3(0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(7.4)), float(sqrt(1.0)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))))[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(21.29), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0))), 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(280.090))), 1.0)))), abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((length(vec4(-2799.1744, 6.1, -8.3, -25.03)) + asinh(25.25)))))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4)))))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, -267.856), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, 4563.8346, 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24))))), mat4(1.0) * (_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, _GLF_IDENTITY(-267.856, min(-267.856, -267.856))), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, _GLF_IDENTITY(4563.8346, max(4563.8346, _GLF_IDENTITY(4563.8346, mix(float(4563.8346), float(_GLF_FUZZED(9.3)), bool(false))))), 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24)))))))))))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), true)))).y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), mix(float(_GLF_FUZZED(vec2(-9806.6909, 3578.3313).g)), float(_GLF_IDENTITY(max(0.0, 0.0), (_GLF_IDENTITY(max(0.0, 0.0), float(mat4x2(max(0.0, 0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0)))) + 0.0)), bool(true)))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-821.729)), bool(false))), sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.0) : 1.0)), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(42.59)), float(injectionSwitch.y), bool(true)))))), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, float(mat3x4(0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)))))), _GLF_IDENTITY(0.0, float(mat3(0.0, abs(0.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0, tan(0.0), 0.0, 0.0))))), 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))), mix(vec2((vec2(_GLF_IDENTITY(mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + 0.0), injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(sqrt(1.0), mix(float(_GLF_FUZZED(7.4)), float(sqrt(1.0)), bool(true))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))))))[0], _GLF_FUZZED(7.9)), vec2(_GLF_FUZZED(21.29), (vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, _GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, abs(1.0), 0.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))), vec3(0.0, 1.0, 0.0))), tan(0.0), 0.0, 1.0, 0.0, 1.0, abs(0.0), 0.0))), 1.0, 1.0), (true ? mat4(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, sqrt(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)) + (1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(280.090))), 1.0)))), abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED((length(vec4(-2799.1744, 6.1, -8.3, -25.03)) + asinh(25.25)))))) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4))))), _GLF_IDENTITY(1.0, abs(1.0) * (_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.4)))))))))), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 0.0, 1.0, 1.0) : _GLF_IDENTITY(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6))), transpose(_GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, -267.856), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, 4563.8346, 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24))))), mat4(1.0) * (_GLF_IDENTITY(transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))), (true ? transpose(_GLF_FUZZED(mat4(mat2(56.57, 555.737, -4.9, -8.6)))) : _GLF_FUZZED(matrixCompMult(mat4(-7.5, -56.38, -4868.6955, -900.168, -18.92, 6769.1168, 5.6, 0.5, -1495.3421, -4.3, -8.4, -885.444, -777.823, -8003.7260, -561.402, _GLF_IDENTITY(-267.856, min(-267.856, -267.856))), mat4(-0.7, -3.3, -539.720, 41.12, -930.815, 789.295, 1.6, _GLF_IDENTITY(4563.8346, max(4563.8346, _GLF_IDENTITY(4563.8346, mix(float(4563.8346), float(_GLF_FUZZED(9.3)), bool(false))))), 8.8, 6.4, 96.79, 34.03, -202.429, -5146.4799, 50.89, 69.24)))))))))))))[1]), bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))), true)))).y))))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       barrier();
      }
     else
      {
      }
    }
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(_injected_loop_counter)))) * 1)); _injected_loop_counter --)
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 barrier();
                }
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((1 & 1) << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), max(int(0), int(0)))))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   do
                    {
                     barrier();
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        barrier();
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         barrier();
                        }
                       else
                        {
                        }
                      }
                    }
                  }
                 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, false)), (bool(bvec4(_GLF_DEAD(false), true, true, false))) || false)))
                  {
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                }
              }
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
      }
    }
   else
    {
    }
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     barrier();
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   do
    {
     do
      {
       barrier();
      }
     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z = subgroup_size;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(-33053) : _injected_loop_counter ++)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))))
      barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 do
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))), true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(false))
          barrier();
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       else
        {
        }
      }
     else
      {
      }
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ _GLF_IDENTITY((GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z), ((GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z)) | 0u))), clamp(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z))), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z))), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z))))), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z)))) * 1u), _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z))), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z))), (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z, ~ (~ (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z)))) << 0u)));
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   else
    {
     GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.y = subgroup_base;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), true && (bool(false)))))))))
      barrier();
    }
  }
 uint virtual_gid = workgroup_base + GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.y + subgroup_local_id;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           barrier();
          }
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, false)))))))
          {
           for(int _injected_loop_counter = (1 & _GLF_IDENTITY(1, 0 + (1))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.6) : 0.0)), injectionSwitch.x))))); _injected_loop_counter --)
            {
             do
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) || false))) && (false))));
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).x > injectionSwitch.y))));
          }
        }
      }
     else
      {
      }
    }
   else
    {
     do
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) && true)));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.y, (GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.y) >> 0u) + (_GLF_IDENTITY((subgroup_local_id + 1), min(_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u) + 1), (_GLF_IDENTITY(true ? (subgroup_local_id + 1) : _GLF_FUZZED(num_workgroup), (true ? (subgroup_local_id + 1) : _GLF_FUZZED(num_workgroup)) << 0u))), (subgroup_local_id + 1))), (subgroup_local_id + 1))) % GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.z);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.x = _GLF_IDENTITY(read, 0u | (read));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), (int(5)) | (int(5)))) - 0))) >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(2), int(2)))); _injected_loop_counter --)
    {
     barrier();
    }
  }
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, false || (false))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))))
            barrier();
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_TRUE(true)), bool(bvec2(! (_GLF_WRAPPED_IF_TRUE(true)), true)))))) && true))
              {
               subgroupAll(false);
              }
             else
              {
              }
            }
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y))));
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.x = atomicLoad(buf[virtual_gid], 4, 64, 2);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(reflect(-4.5, -17.48))))))))
                    {
                    }
                   else
                    {
                     barrier();
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 barrier();
                }
              }
            }
           barrier();
          }
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   else
    {
    }
   subgroupAll(false);
   do
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.x = atomicLoad(buf[virtual_gid], 4, 64, 2);
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     do
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 do
  {
   subgroupBarrier();
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec4(_GLF_IDENTITY(5, clamp(5, 5, 5)), 1, 0, 0)))), _GLF_IDENTITY(int(5), min(int(5), int(5))))), 0 | (_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec4(_GLF_IDENTITY(5, clamp(5, 5, 5)), 1, 0, 0)))), _GLF_IDENTITY(int(5), min(int(5), int(5))))), (((1 << _GLF_IDENTITY(int(_GLF_IDENTITY(5, max(5, _GLF_IDENTITY(5, 0 | (5))))), int(5))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(5, int(ivec4(_GLF_IDENTITY(5, clamp(5, 5, 5)), 1, 0, 0)))), _GLF_IDENTITY(int(5), min(int(5), int(5)))))) << (0 | 0))))); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(ivec2(_GLF_IDENTITY(56211, (_GLF_IDENTITY(56211, (56211) << 0)) | (56211)), 69248).x))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       do
        {
         if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 barrier();
                }
              }
             else
              {
              }
            }
           barrier();
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch)))).y))));
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   atomicStore(checker[virtual_gid], _GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.x, (_GLF_IDENTITY(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.x, uint(uint(GLF_merged3_0_1_4_1_1_13_2_1_13readsubgroup_basesubgroup_size.x)))) - 0u), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(vec2(8796.4522, -3826.6452).x), _GLF_FUZZED(7.0)), vec2((_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))[0], (_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), vec2(mat3x2(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch))), 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), min(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           barrier();
          }
         else
          {
          }
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
