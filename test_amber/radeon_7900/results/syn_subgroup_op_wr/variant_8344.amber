#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec3 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), ! (! (! (! (_GLF_DEAD(false)))))))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w = _GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u)) * 1u);
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-2168.6554))), injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-7.7))), _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true, ! (! (true))) ? injectionSwitch.y : _GLF_FUZZED(-2168.6554))), _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(184.714), _GLF_FUZZED(-7.7)), bvec2(false, false))).y)))), bool(bvec4(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-2168.6554), sqrt(abs(0.0)) + (_GLF_IDENTITY(_GLF_FUZZED(-2168.6554), (_GLF_FUZZED(-2168.6554)) + 0.0))))), injectionSwitch.y)))), ! (! (! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554), (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554)) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat4x2(124.914, 4.1, -2.7, 46.58, -767.374, -8128.6484, -4.2, 1453.3069)) : mat4x2(_GLF_IDENTITY(true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554), (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554)) - 0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, exp(0.0), 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0))))))), injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554))), injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554))), injectionSwitch.y)))))), true && (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554))), injectionSwitch.y)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(6.6, -4.5)) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))).y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y : _GLF_FUZZED(-2168.6554))), injectionSwitch.y))))))))))), _GLF_IDENTITY(false, bool(bvec4(false, true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 1.0, 1.0, cos(0.0), log(1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, min(0.0, 0.0))))) * 1.0), 0.0, 1.0)))), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, false)))))), true))), (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(-4.6) : _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(8166.4078)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1])).y)), _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554)), mix(float(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554)), float(mat2(_GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554)), float(vec3((true ? injectionSwitch.y : _GLF_FUZZED(-2168.6554)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))))), 0.0, 0.0, 0.0)))), float(_GLF_FUZZED(3.6)), bool(false)))), injectionSwitch.y))))) || false))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) + uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, clamp(gl_NumWorkGroups, gl_NumWorkGroups, gl_NumWorkGroups))))) | _GLF_IDENTITY((gl_NumWorkGroups), max(_GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) / uvec3(1u, 1u, 1u)), (gl_NumWorkGroups)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.y = num_workgroup;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.y = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.y;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (true ? _GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), ~ (~ (_GLF_IDENTITY(max(gl_WorkGroupSize, gl_WorkGroupSize), (true ? max(gl_WorkGroupSize, gl_WorkGroupSize) : _GLF_IDENTITY(_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid), ~ (~ (_GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid))))))))) : _GLF_FUZZED(GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid))))) >> _GLF_IDENTITY((uvec3(113126u, 136285u, 195827u) & uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), 0u)), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(113126u, (_GLF_IDENTITY(113126u, min(113126u, 113126u))) - (0u & 92659u)), 136285u, 195827u) & uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), 0u)), ((uvec3(113126u, 136285u, 195827u) & uvec3(0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, 0u)))), 0u)), 0u))) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) ^ (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(0u), uvec3(0u)))))) | uvec3(0u, 0u, 0u))), clamp(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY(uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u))) ^ (gl_WorkGroupSize))), uvec3(uvec4((~ (uvec3(0u, 0u, 0u) ^ (gl_WorkGroupSize))), 1u))))), _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, gl_WorkGroupSize)))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), true)))))), false)))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), true, false))), true, true, true))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w)))) * subgroup_size, 0u | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w * subgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w * subgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w * subgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w, (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.w) / 1u) * subgroup_size))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(true, (true) && true) && (bool(bool(_GLF_DEAD(false))))), bool(bvec4(bool(bool(_GLF_DEAD(false))), false, false, true))))))), true, true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) && true)) || false)) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(vec4(377.005, 724.459, -57.56, 2.6).q)), float(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x), bool(true))) > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), mix(float(_GLF_FUZZED(-9.4)), float(min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), min(max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))), bool(true)))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(23.05, 1.5)))).y)))))) && true)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z = subgroup_base;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))
      barrier();
     barrier();
    }
   barrier();
  }
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z = virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.z + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), 1u))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))))), subgroup_local_id))) << 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))), true, false, false))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u)) + 0u) + 1), 0u + ((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(_GLF_IDENTITY(subgroup_local_id, 1u * (subgroup_local_id)), 1u))), (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))), min(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))), _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 1u))))), subgroup_local_id))) << 0u), (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false))))), bool(bvec4(! (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bool(false || (false)))))), true, false, false))))) ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u)) + 0u) + 1))), uint(uvec4((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(subgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))))) | 0u)) + 0u) + 1), 1u, 0u, 0u))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), max(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size)))) - 0u, 0u | ((_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) * 1)) % subgroup_size)))) - 0u))), (_GLF_IDENTITY((subgroup_local_id + 1), 0u ^ ((subgroup_local_id + 1))) % subgroup_size))), ((subgroup_local_id + 1) % subgroup_size))), 0u)))))), min(((_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) + _GLF_IDENTITY(1, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-94095))) ^ (1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, clamp(1, 1, 1))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x = next_virtual_gid;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), false)), (bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), false || (! (injectionSwitch.x > injectionSwitch.y)))))) && true)), false))) || false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x = GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint read = 0;
 atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x, max(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x, clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x))), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x)), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_11next_virtual_gidnum_workgroupsubgroup_basesubgroup_id.x))], uint(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 + ((4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), 0 + ((4)))), (~ (_GLF_IDENTITY((4), 0 + ((4))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY((4), 0 + ((4))))), 0 ^ ((~ (_GLF_IDENTITY((4), 0 + ((4)))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 + ((4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), 0 + ((4)))), (~ (_GLF_IDENTITY((4), 0 + ((4))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY((4), 0 + ((4))))), 0 ^ ((~ (_GLF_IDENTITY((4), 0 + ((4)))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY((4), 0 + ((4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), 0 + ((4)))), (~ (_GLF_IDENTITY((4), 0 + ((4))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY((4), 0 + ((4))))), 0 ^ ((~ (_GLF_IDENTITY((4), 0 + ((4)))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((4), 0 + ((4))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((4), 0 + ((4)))), (~ (_GLF_IDENTITY((4), 0 + ((4))))) | _GLF_IDENTITY((~ (_GLF_IDENTITY((4), 0 + ((4))))), 0 ^ ((~ (_GLF_IDENTITY((4), 0 + ((4)))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))), 1, 0)))), 1 * (_GLF_IDENTITY(4, min(4, 4)))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) / 1u)) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! (bool(bvec3(false, true, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || false) && (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), true, true))))), true, false)), ! (! (bool(_GLF_IDENTITY(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true)), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true))))))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec3(false, false, false)))))), true))))))), true))))))))))), bool(bvec3(_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), ! (! ((bool(bvec3(false, true, false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! _GLF_IDENTITY(((bool(bvec3(false, true, false)))), (((bool(bvec3(false, true, false))))) && true)))))), ((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), true)))), ! (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! (_GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false)))))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), true, false))), ! (! ((bool(bvec3(false, true, false))))))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! _GLF_IDENTITY(_GLF_IDENTITY(((bool(bvec3(false, true, false)))), ! (! (_GLF_IDENTITY(((bool(bvec3(false, true, false)))), ! (! (_GLF_IDENTITY(((bool(bvec3(false, true, false)))), (((bool(bvec3(false, true, false))))) && true))))))), (((bool(bvec3(false, true, false))))) && true)))))), ((_GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), false, true)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, false)), ! (! (bool(bvec3(false, true, false)))))), bool(bvec3(! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(false, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))), false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false)))))), (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false))))))) || false)), (! (_GLF_IDENTITY(! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false)))))), (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec3(false, true, false))), (_GLF_IDENTITY((bool(bvec3(false, true, false))), ! (! ((bool(bvec3(false, true, false))))))) || false), ! (! ((bool(bvec3(false, true, false))))))) || false))) || false))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(false, true)))) || false), true, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), true && (! ((false) && true)))))), true, false))), ! (! ((_GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) && true)))))))), ! (! ((_GLF_IDENTITY(bool(bvec3(false, true, false)), _GLF_IDENTITY(! (! _GLF_IDENTITY((bool(bvec3(false, true, false))), ! (_GLF_IDENTITY(! ((bool(bvec3(false, true, false)))), ! (! (! ((bool(bvec3(false, true, false)))))))))), (! (! _GLF_IDENTITY((bool(bvec3(false, true, _GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)))))))), ! (! ((_GLF_IDENTITY(bool(bvec3(false, true, false)), true && (bool(bvec3(false, true, false)))))))))) || false))))))))), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))))), true))))) && _GLF_IDENTITY(true, true && (true))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   _GLF_IDENTITY(read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z], (buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z]) << _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (int(int(4))) | (int(int(4))))))), _GLF_IDENTITY((4), 0 ^ ((4))) | (4))), clamp((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), min((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, (4) | (4))))), 0, 0, 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1))), ((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1)))) << 0) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) / _GLF_IDENTITY((0 | 1), ((0 | 1)) | (_GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) << 0)), ~ (~ (_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), clamp(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4)), ((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4))) << 0))))), ((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4)))))) + _GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), ~ (~ _GLF_IDENTITY(((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))), (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))))) | (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))))))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(186765u))), float(1.0), bool(true))), injectionSwitch.y))))))))))), ((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), clamp((_GLF_IDENTITY(4, 0 ^ (4))) | (4), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), 0 | ((_GLF_IDENTITY(4, 0 ^ (4))) | (4))), (_GLF_IDENTITY(4, 0 ^ (4))) | (4))))), 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | (4)))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-52350)))) ^ 1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0), 1 * (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0)))))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))) ^ 1)))) ^ (_GLF_IDENTITY(4, (4) | (4)))))))), (-74223 & 0) | (_GLF_IDENTITY(4, _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (int(int(4))) | (int(int(4))))))), _GLF_IDENTITY((4), 0 ^ ((4))) | (4))), clamp((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), min((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, (4) | (4))))), 0, 0, 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1))), ((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1)))) << 0) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) / _GLF_IDENTITY((0 | 1), ((0 | 1)) | (_GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) << 0)), ~ (~ (_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), clamp(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4)), ((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4))) << 0))))), ((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4)))))) + _GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), ~ (~ _GLF_IDENTITY(((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))), (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))))) | (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))))))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(186765u))), float(1.0), bool(true))), injectionSwitch.y))))))))))), ((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), clamp((_GLF_IDENTITY(4, 0 ^ (4))) | (4), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), 0 | ((_GLF_IDENTITY(4, 0 ^ (4))) | (4))), (_GLF_IDENTITY(4, 0 ^ (4))) | (4))))), 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | (4)))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-52350)))) ^ 1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0), 1 * (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0)))))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))) ^ 1)))) ^ (_GLF_IDENTITY(4, (4) | (4)))))))))), 4, 4)), _GLF_IDENTITY(64, (64) | (64)), 2), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (read = atomicLoad(_GLF_IDENTITY(buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z], (buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z]) << _GLF_IDENTITY(0u, 0u + (0u))), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (int(int(4))) | (int(int(4))))))), _GLF_IDENTITY((4), 0 ^ ((4))) | (4))), clamp((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), min((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, (4) | (4))))), 0, 0, 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1))), ((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1)))) << 0) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) / _GLF_IDENTITY((0 | 1), ((0 | 1)) | (_GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) << 0)), ~ (~ (_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), clamp(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4)), ((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4))) << 0))))), ((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4)))))) + _GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), ~ (~ _GLF_IDENTITY(((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))), (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))))) | (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))))))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(186765u))), float(1.0), bool(true))), injectionSwitch.y))))))))))), ((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), clamp((_GLF_IDENTITY(4, 0 ^ (4))) | (4), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), 0 | ((_GLF_IDENTITY(4, 0 ^ (4))) | (4))), (_GLF_IDENTITY(4, 0 ^ (4))) | (4))))), 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | (4)))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-52350)))) ^ 1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0), 1 * (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0)))))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))) ^ 1)))) ^ (_GLF_IDENTITY(4, (4) | (4)))))))), (-74223 & 0) | (_GLF_IDENTITY(4, _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, 0 + (_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (int(int(4))) | (int(int(4))))))), _GLF_IDENTITY((4), 0 ^ ((4))) | (4))), clamp((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), _GLF_IDENTITY((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(4, (4) | (4))), min((_GLF_IDENTITY(4, (4) | (4))), (_GLF_IDENTITY(4, (4) | (4))))), 0, 0, 1))), clamp(_GLF_IDENTITY((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1))), ((_GLF_IDENTITY(1 ^ 1, clamp(_GLF_IDENTITY(1 ^ 1, max(1 ^ 1, 1 ^ 1)), 1 ^ 1, 1 ^ 1)))) << 0) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ((4) | (4)) / _GLF_IDENTITY((0 | 1), ((0 | 1)) | (_GLF_IDENTITY((0 | 1), min((0 | 1), (0 | 1)))))))), _GLF_IDENTITY(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_IDENTITY(4, (4) | (4))) << 0)), ~ (~ (_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), clamp(_GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, _GLF_IDENTITY((4) | (4), ~ (~ _GLF_IDENTITY((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4)), ((_GLF_IDENTITY((4), ~ (~ ((4)))) | (4))) << 0))))), ((1 ^ 1) ^ (_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), min(_GLF_IDENTITY(4, (4) | (4)), _GLF_IDENTITY(4, (4) | (4)))))) + _GLF_IDENTITY(0, (0) | 0)), _GLF_IDENTITY((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))), ~ (~ _GLF_IDENTITY(((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))), (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4))))) | (((1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (4)))))))), (1 ^ 1) ^ (_GLF_IDENTITY(4, (4) | (_GLF_IDENTITY(4, (4) / int(_GLF_ONE(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(186765u))), float(1.0), bool(true))), injectionSwitch.y))))))))))), ((1 ^ 1) ^ _GLF_IDENTITY((_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), clamp((_GLF_IDENTITY(4, 0 ^ (4))) | (4), _GLF_IDENTITY((_GLF_IDENTITY(4, 0 ^ (4))) | (4), 0 | ((_GLF_IDENTITY(4, 0 ^ (4))) | (4))), (_GLF_IDENTITY(4, 0 ^ (4))) | (4))))), 0 | ((_GLF_IDENTITY(4, (_GLF_IDENTITY(4, 0 ^ (4))) | (4)))))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))))) >> (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(8), int(8)))) : _GLF_FUZZED(-52350)))) ^ 1, ~ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), min(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0), 1 * (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), max(min(1, 1), min(1, 1)))), 1)), (int(ivec2(_GLF_IDENTITY(1, min(1, 1)), 1))) ^ 0)))))) >> (0 >> _GLF_IDENTITY(int(8), int(8))))) ^ 1)))) ^ (_GLF_IDENTITY(4, (4) | (4)))))))))), 4, 4)), _GLF_IDENTITY(64, (64) | (64)), 2)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))), false || (bool(_GLF_IDENTITY(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), true))))))))))))
    barrier();
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(buf[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z], 4, 64, 2);
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (bool(bvec4(false, false, false, true))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(4.8), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-9.8)), bvec2(true, false))), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(341.383)), vec2(_GLF_FUZZED(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))) * (injectionSwitch))[_GLF_IDENTITY(1, ~ (~ (1)))], ((mat2(1.0) * (injectionSwitch))[1]) - 0.0)), bvec2(false, true)))).x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), bvec2(bvec2(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, round(length(normalize(1.0))), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(7.6), (vec2(mat2x3(injectionSwitch, 0.0, round(length(normalize(1.0))), 0.0, 0.0)))[1]), vec2((vec2(mat2x3(injectionSwitch, 0.0, round(length(normalize(1.0))), 0.0, 0.0)))[0], _GLF_FUZZED(469.066)), bvec2(true, false)))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x3(injectionSwitch, 0.0, round(length(normalize(1.0))), 0.0, 0.0)), mix(vec2(_GLF_FUZZED(7.6), (vec2(mat2x3(injectionSwitch, 0.0, round(length(normalize(1.0))), 0.0, 0.0)))[1]), vec2((vec2(mat2x3(injectionSwitch, 0.0, round(length(normalize(1.0))), 0.0, 0.0)))[0], _GLF_FUZZED(469.066)), bvec2(true, false)))).x > injectionSwitch.y)) || _GLF_IDENTITY(false, bool(bool(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[GLF_merged3_0_1_16_1_1_13_2_1_11next_virtual_gidnum_workgroupvirtual_gid.z], read, 4, _GLF_IDENTITY(64, (64) | 0), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(56.77, 938.033)))).y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))), false, false, true)))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true), true)))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), bool(bvec2(true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true), true)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
