#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 for(int _injected_loop_counter = _GLF_IDENTITY(0, 0 ^ (0)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       return;
      }
    }
   else
    {
    }
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
    {
     do
      {
       switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(0), int(0)))))
        {
         case 29:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           acos(22.89);
          }
         else
          {
          }
         case 96:
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           for(uvec2 _GLF_SWITCH_3_0v[72], _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v; false; mix(vec2(-23.76, -4.4), injectionSwitch, vec2(93.26, 588.877)))
            {
             min(vec4(0.3, -52.56, -661.668, -556.952), vec4(371.741, -0.9, 9.3, 99.59));
             while((read < 115584u))
              {
               float _GLF_SWITCH_3_3v;
               vec4 _GLF_SWITCH_3_4v[8];
               bvec2 _GLF_SWITCH_3_5v, _GLF_SWITCH_3_6v;
               while((injectionSwitch == injectionSwitch))
                {
                 false;
                }
              }
             uvec3(195737u, 38934u, 102446u);
             for(uvec2 _GLF_SWITCH_3_7v[18]; all(bvec3(false, false, true).ttpp); usubBorrow(_GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v, _GLF_SWITCH_3_1v))
              {
               while((mat4x2(-4.7, 4124.4111, -20.01, 7564.0722, 0.9, -5634.5559, 96.81, 5256.0034) != mat4x2(mat2(-9.5, -688.826, -8.9, 65.07))))
                {
                 mat2(-3.1, -2.6, 495.938, 737.053);
                 ;
                 uint _GLF_SWITCH_3_8v, _GLF_SWITCH_3_9v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 ivec2(52472, 11312);
                 bvec4(true, false, true, false);
                 do
                  {
                   uvec3(104612u, 103897u, 190343u);
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 trunc(-3.7);
                 vec4 _GLF_SWITCH_3_10v[14], _GLF_SWITCH_3_11v[12], _GLF_SWITCH_3_12v[16];
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 74:
                   (-6.1 - mat2x4(28.02, 1465.4625, -4258.1592, -8025.5828, 53.48, -7.2, 5.9, -0.1));
                   case 54:
                   mat3x4(mat4x3(6.7, 1533.7573, 598.950, 1.7, -44.57, 0.9, 9.7, -6.3, 57.94, -939.517, -92.12, 1646.7123));
                   case 0:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     return;
                    }
                   for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ 0)); _injected_loop_counter --)
                    {
                     mat3x4(1.5, -9.4, -215.184, 4.2, 5.1, 60.19, 55.98, -6.7, 7.6, 1.3, -48.95, 34.04);
                     if(_GLF_DEAD(false))
                      break;
                    }
                   if(_GLF_DEAD(false))
                    return;
                   break;
                   default:
                   1;
                  }
                }
               ;
               mat3 _GLF_SWITCH_3_13v, _GLF_SWITCH_3_14v;
               {
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    return;
                   }
                 }
                mat4(3.6, -8.3, -1139.4108, 9.6, -4.0, -8158.7038, 0.8, 7163.3550, -60.00, -2911.2954, 855.042, -9968.1021, -2.5, 6138.2634, -1.5, -6.5);
                if(_GLF_DEAD(false))
                 continue;
                ;
                mat4x2 _GLF_SWITCH_3_15v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                bvec4 _GLF_SWITCH_3_16v, _GLF_SWITCH_3_17v;
                mat3x4 _GLF_SWITCH_3_18v[76], _GLF_SWITCH_3_19v, _GLF_SWITCH_3_20v;
                (_GLF_SWITCH_3_19v * _GLF_SWITCH_3_14v);
                -36648;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  do
                   {
                    return;
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 }
                vec3(18.98, 7.0, -7.0);
               }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               ;
               for(int _injected_loop_counter = (1 ^ (0 >> _GLF_IDENTITY(int(8), int(8)))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 while(true)
                  {
                   mat3x4(mat4x2(-2.8, -177.434, -81.26, -0.8, -306.532, 7.4, 3.5, 174.454));
                   if(_GLF_DEAD(false))
                    continue;
                   (_GLF_SWITCH_3_14v / 1040.0001);
                   float _GLF_SWITCH_3_21v[88], _GLF_SWITCH_3_22v;
                   (_GLF_SWITCH_3_22v - mat3(-39.12, -1197.7099, 8.5, 36.91, 9752.5534, 4.0, -4.3, -8162.3957, 9.2));
                   ivec4(22375, 21824, -18817, 59520);
                   (mat4x3(3.0, -7161.0470, -10.19, -3347.4782, 557.150, 8.3, 1127.8593, -4619.4786, -76.92, 6164.3567, -9.1, 7489.4517) - mat4x3(945.098, 7806.9020, 5.0, -5.4, -9.0, 3.5, 7.7, -9.0, 2.9, 585.255, -5.1, -2.7));
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               uvec2 _GLF_SWITCH_3_23v, _GLF_SWITCH_3_24v, _GLF_SWITCH_3_25v[12];
              }
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = (((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1))) & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                return;
               ;
              }
             if(_GLF_DEAD(false))
              continue;
             mat2x4 _GLF_SWITCH_3_26v[38], _GLF_SWITCH_3_27v, _GLF_SWITCH_3_28v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && (true))))
                {
                 return;
                }
               else
                {
                }
              }
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               for(               degrees(smoothstep(sign(349.245), pow(-49.15, 3.7), vec4(-4047.1023, 8837.9387, 479.691, -1.9)));
 (vec3(0.3, -845.198, -9.4) == vec3(21.58, -7895.9758, 0.1)); mat3x4(8.4, 4.7, -1.7, -7.9, -28.88, 5.9, 536.976, 33.23, -1509.9164, 91.02, -991.248, -8.4))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 while((ivec2(-11728, 46142) == (ivec2(-18367, 44258) | -4800)))
                  {
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   mat3x4(-4837.4036, 4.0, 1079.8144, -1.0, -1012.3769, -2.7, -70.88, -1123.3960, -671.800, -20.56, 1.3, -0.0);
                  }
                 uvec4(55403u, 92023u, 142637u, 43023u);
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   continue;
                  }
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      return;
                     return;
                    }
                  }
                 vec3 _GLF_SWITCH_3_29v, _GLF_SWITCH_3_30v, _GLF_SWITCH_3_31v[98];
                 uint _GLF_SWITCH_3_32v, _GLF_SWITCH_3_33v[1];
                }
              }
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         case 0:
         case 44:
         case 98:
         case 43:
         case 23:
         case 75:
         case 9:
         case 66:
         case 20:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) && true)))
          {
          }
         else
          {
           return;
          }
         break;
         case 97:
         {
         }
         case 86:
         while(all(bvec4(true, false, false, false)))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             break;
            }
           mat4 _GLF_SWITCH_3_34v;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           if(((_GLF_SWITCH_3_34v + -6111.9227) == (_GLF_SWITCH_3_34v ++)))
            {
             for(mat4 _GLF_SWITCH_3_35v[56], _GLF_SWITCH_3_36v; (mat3x4(-74.85, 5.1, 935.422, 64.76, 9601.1288, -7714.7215, -5028.6842, 128.284, -5228.2115, 4.7, 3.8, 6967.6368) != mat3x4(6.5, -31.09, -799.545, 0.0, 2.2, -8920.4467, 0.6, 9.9, 4.5, -5.3, 5.4, 9.1)); mat4x2(4.6, 994.902, 4211.0957, -53.21, 53.41, 71.21, 9.9, 5956.4231))
              {
               mat4(7410.6596, 8138.2980, -9.4, 1.0, -951.692, -617.658, 7129.6736, -468.103, 52.12, 9052.2343, -426.678, -68.64, 2756.9809, 82.44, -247.674, -56.99);
               mat4x2 _GLF_SWITCH_3_37v, _GLF_SWITCH_3_38v[57], _GLF_SWITCH_3_39v[18];
               (+ transpose(_GLF_SWITCH_3_37v));
               (- -6.1);
               mat3x4 _GLF_SWITCH_3_40v, _GLF_SWITCH_3_41v[26];
               bvec4 _GLF_SWITCH_3_42v, _GLF_SWITCH_3_43v[45], _GLF_SWITCH_3_44v;
               vec4(-957.232, 9.5, -2.7, -85.02);
               max(uvec2(146538u, 82711u), uvec2(44315u, 168049u));
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               ivec2(-40350, -25311);
              }
             else
              {
              }
             ivec2(33543, -39114);
             for(bvec3 _GLF_SWITCH_3_45v; true; (false ? mat3x4(484.996, -53.71, -503.871, -47.51, 0.2, 5.3, 5.1, -5.0, 8296.6256, 79.55, 5707.7519, 359.977) : mat3x4(-772.884, 3.6, 735.888, -5.3, -6.5, -0.6, -83.30, -42.24, -43.44, -11.33, -15.47, 553.581)))
              {
               ivec4 _GLF_SWITCH_3_46v, _GLF_SWITCH_3_47v, _GLF_SWITCH_3_48v;
               mat2x3(mat4x2(19.02, 6.8, 900.830, 244.119, -9840.2725, 8.6, -48.23, 144.161));
              }
            }
           else
            {
             bool _GLF_SWITCH_3_49v[99], _GLF_SWITCH_3_50v[66], _GLF_SWITCH_3_51v;
             while(_GLF_SWITCH_3_51v)
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))))) >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                }
               ivec4(97510, -69536, 4798, 67427);
               (mat2(-2541.0745, -71.73, -5.5, -891.690) * mat3x2(-72.74, -9.6, 9274.4937, -66.96, -7.7, 11.19));
              }
             if(_GLF_DEAD(false))
              continue;
             -3543;
             for(             mat3x2(mat4x3(-8096.6472, 29.10, 3.0, -9.5, 8136.3310, 633.853, -30.15, -1.9, 893.934, 4.3, 22.23, -110.415));
 false; (mat2x3(66.29, 3.3, 357.809, -69.18, 4943.7898, -8.2)))
              {
               if(_GLF_DEAD(false))
                break;
               uvec4(80342u, 119293u, 193993u, 162061u);
               if(_GLF_DEAD(false))
                continue;
               ;
               (mat2(8.1, -1.5, -26.43, 7.8) * (-1.7 / mat2(-88.62, 4.9, -493.432, -382.971)));
               mat3x4 _GLF_SWITCH_3_52v[10], _GLF_SWITCH_3_53v;
               if(_GLF_DEAD(false))
                return;
               int _GLF_SWITCH_3_54v[31], _GLF_SWITCH_3_55v;
               ivec2 _GLF_SWITCH_3_56v, _GLF_SWITCH_3_57v, _GLF_SWITCH_3_58v;
               mat2(9.0, 2589.9809, 427.056, -176.255);
               mat4x2(220.753, -822.024, -8.1, 47.90, 4989.5151, 1079.3376, -16.79, -7.1);
               uvec3 _GLF_SWITCH_3_59v;
              }
             injectionSwitch;
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   return;
                  }
                }
              }
             while(_GLF_SWITCH_3_51v);
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             for(uvec4 _GLF_SWITCH_3_60v, _GLF_SWITCH_3_61v; (-6774.8692 != -1717.5742); (- mat2(-84.75, -1821.0627, -2.2, 5.4)))
              {
               ivec2 _GLF_SWITCH_3_62v, _GLF_SWITCH_3_63v;
               if(_GLF_DEAD(false))
                break;
               -1.0;
               vec2 _GLF_SWITCH_3_64v[98], _GLF_SWITCH_3_65v;
               do
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 bvec3(true, true, true);
                }
               while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (false) || false)));
               mat4 _GLF_SWITCH_3_66v, _GLF_SWITCH_3_67v, _GLF_SWITCH_3_68v;
               uvec2 _GLF_SWITCH_3_69v;
               if(_GLF_DEAD(false))
                continue;
               bvec4 _GLF_SWITCH_3_70v, _GLF_SWITCH_3_71v, _GLF_SWITCH_3_72v;
               false;
              }
            }
           if(false)
            {
             bvec4 _GLF_SWITCH_3_73v, _GLF_SWITCH_3_74v[96];
             mat3x4(539.038, 62.88, 2878.4387, -15.31, 5606.2436, 0.1, -31.02, 6.6, -477.073, 83.04, 3.1, -99.18);
             if(_GLF_DEAD(false))
              break;
             bool _GLF_SWITCH_3_75v, _GLF_SWITCH_3_76v, _GLF_SWITCH_3_77v;
             if(((4.2 + mat4(mat4x2(-2.7, -77.96, -9.6, 0.5, -1.8, 4.4, 2.4, 7.2))) == (mat3x4(-3.7, -351.293, 914.608, -2.6, -87.94, 4217.8216, 4.8, -7496.7949, -43.20, 2213.3773, -0.4, 673.638) * mat4x3(-9.0, 61.47, -9232.9176, -4.6, -24.21, 42.41, 4.6, 816.859, 9.8, -5080.5125, -9.1, 1472.4390))))
              {
               if(_GLF_DEAD(false))
                continue;
               bvec3 _GLF_SWITCH_3_78v, _GLF_SWITCH_3_79v[22], _GLF_SWITCH_3_80v[7];
               (mat3x4(961.530, 65.32, -8.0, -8.3, 1005.1028, 0.1, -4.5, -3088.4234, -2553.9038, -0.8, -3996.2666, -237.843) / mat3x4(-10.73, -4.9, -5.9, -9003.7726, 9.0, -7215.4515, 40.29, 1099.6581, -0.4, -4.9, -25.86, -95.45));
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             {
              ivec2 _GLF_SWITCH_3_81v[81];
             }
             float _GLF_SWITCH_3_82v, _GLF_SWITCH_3_83v, _GLF_SWITCH_3_84v[88];
            }
           else
            {
             for(mat3 _GLF_SWITCH_3_85v, _GLF_SWITCH_3_86v[95], _GLF_SWITCH_3_87v; (true); bvec3(false, false, false))
              {
               mat3 _GLF_SWITCH_3_88v[35], _GLF_SWITCH_3_89v;
               uint _GLF_SWITCH_3_90v, _GLF_SWITCH_3_91v, _GLF_SWITCH_3_92v[15];
               bvec3(false, false, true);
               mat3x2 _GLF_SWITCH_3_93v[97];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               mat3x2 _GLF_SWITCH_3_94v[57], _GLF_SWITCH_3_95v, _GLF_SWITCH_3_96v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ (0 << _GLF_IDENTITY(int(8), int(8))))); _injected_loop_counter --)
                  {
                   return;
                  }
                }
               mat3 _GLF_SWITCH_3_97v, _GLF_SWITCH_3_98v[99], _GLF_SWITCH_3_99v;
              }
             greaterThanEqual(injectionSwitch, vec2(6.6, 6.7));
             while(false)
              {
              }
             mat2x3 _GLF_SWITCH_3_100v, _GLF_SWITCH_3_101v;
             int _GLF_SWITCH_3_102v, _GLF_SWITCH_3_103v, _GLF_SWITCH_3_104v;
             (smoothstep(vec3(-3.7, 3.0, 34.67), vec3(479.312, -2.8, 9.3), vec3(2223.1009, 5878.4634, 36.05)) + 7465.8365);
             for(             mat2(-908.951, 703.570, -431.277, -0.7);
 false; injectionSwitch)
              {
               (vec3(-683.661, 54.47, 965.524) + dot((vec3(-643.581, -4.7, 27.55) - vec3(-13.92, -362.366, -996.257)), vec3(-532.794, -3.0, -7043.3862)));
               mat4x3 _GLF_SWITCH_3_105v[45], _GLF_SWITCH_3_106v[13];
               ;
               -7.7;
               ivec3(-20360, 16670, -10344)[0];
               if(_GLF_DEAD(false))
                return;
               mat3 _GLF_SWITCH_3_107v[17];
               ivec3(44526, 66757, 82349);
               ivec2(-33142, 40031);
              }
             uvec2 _GLF_SWITCH_3_108v[24], _GLF_SWITCH_3_109v[74], _GLF_SWITCH_3_110v;
             if(_GLF_DEAD(false))
              continue;
             ;
             if(_GLF_DEAD(false))
              return;
            }
           uvec4 _GLF_SWITCH_3_111v[14], _GLF_SWITCH_3_112v[25];
           mat2x3 _GLF_SWITCH_3_113v, _GLF_SWITCH_3_114v[38];
          }
         default:
         1;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter --)
    {
     switch(_GLF_SWITCH(0))
      {
       case 26:
       for(       mat4x2(1.9, 9365.4886, 2.1, -4.7, -34.11, -7.7, -0.4, 3690.4965);
 false; 734.021)
        {
         while(false)
          {
           (vec3(-0.1, 78.35, 8.5) / 617.059);
           mat3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
           17990;
           mat4x2 _GLF_SWITCH_5_2v[1];
           ;
          }
        }
       case 25:
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         while((bvec4(true, false, true, true) != bvec4(true, false, true, true)))
          {
           bvec3 _GLF_SWITCH_5_3v, _GLF_SWITCH_5_4v;
           if(_GLF_DEAD(false))
            continue;
           bool _GLF_SWITCH_5_5v;
           {
            uvec3(153460u, 55491u, 54868u);
            mat4x3(mat2x3(1.1, -1316.7150, 5226.6600, -3.6, -486.407, 6.9));
            mat2x3(-1723.9720, 3.3, 9.3, -8.8, 3.0, 0.8);
            int _GLF_SWITCH_5_6v, _GLF_SWITCH_5_7v, _GLF_SWITCH_5_8v;
            length(vec2(92.81, -6818.5998));
            (lessThanEqual(uvec4(176838u, 46026u, 148438u, 184716u), uvec4(32011u, 83906u, 108842u, 80188u)));
           }
           ;
           mat2 _GLF_SWITCH_5_9v[35], _GLF_SWITCH_5_10v[3], _GLF_SWITCH_5_11v;
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             false;
            }
          }
        }
       case 0:
       case 49:
       case 10:
       case 35:
       case 85:
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
       break;
       default:
       1;
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   do
    {
     switch(_GLF_SWITCH(0))
      {
       case 0:
       case 10:
       case 37:
       if(_GLF_DEAD(false))
        return;
       case 61:
       switch(_GLF_SWITCH(0))
        {
         case 3:
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           uvec3(162360u, 55959u, 84377u);
          }
         else
          {
          }
         case 0:
         case 42:
         case 16:
         case 92:
         case 6:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             return;
            }
          }
         subgroupAll(false);
         case 50:
         if(_GLF_DEAD(false))
          break;
         case 34:
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           read = atomicLoad(buf[virtual_gid], 4, 64, 2);
          }
         else
          {
          }
         break;
         case 84:
         while(true)
          {
           ivec2 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                 continue;
                }
               break;
              }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               continue;
              }
             if(false)
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 do
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     case 18:
                     do
                      {
                      }
                     while(((-0.6 - mat3(-188.035, 77.62, -8.8, 6156.4900, 6.5, -665.685, 9.0, -4.6, -391.864)) == mat3(mat4x2(-1.2, -96.55, 2262.2502, 783.314, 5.6, -69.77, -6.3, 512.778))));
                     break;
                     default:
                     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                      {
                       1;
                      }
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               mat4x2(exp2(9.5));
               vec2 _GLF_SWITCH_0_2v, _GLF_SWITCH_0_3v;
              }
             else
              {
               if((bvec2(true, true) != bvec2(false, false)))
                {
                 if(_GLF_DEAD(false))
                  {
                   switch(_GLF_SWITCH(((-49357 | -52263) & 0)))
                    {
                     case 0:
                     case 13:
                     if(_GLF_DEAD(false))
                      break;
                     case 85:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     case 77:
                     case 65:
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           return;
                          }
                         else
                          {
                          }
                        }
                      }
                     case 96:
                     if(_GLF_DEAD(false))
                      return;
                     case 47:
                     if(_GLF_DEAD(false))
                      break;
                     return;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     break;
                     if(_GLF_DEAD(false))
                      return;
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                 mat3x2 _GLF_SWITCH_0_4v;
                 uvec3 _GLF_SWITCH_0_5v;
                 bvec4 _GLF_SWITCH_0_6v;
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 _GLF_SWITCH_0_4v;
                 mat4x3 _GLF_SWITCH_0_7v, _GLF_SWITCH_0_8v;
                 bvec3(false);
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 ivec4(-88595, -20222, -32153, 96635);
                 vec3 _GLF_SWITCH_0_9v[62], _GLF_SWITCH_0_10v[83], _GLF_SWITCH_0_11v;
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      break;
                     do
                      {
                       -1.1;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                  }
                 bvec3(true, false, true);
                 ;
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                  {
                   bvec3(true, false, false);
                  }
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                        break;
                       continue;
                      }
                     return;
                    }
                  }
                 if(_GLF_DEAD(false))
                  return;
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   mat2x3(5.1, -6.3, 4.9, 8.1, -8.1, -7302.8966);
                  }
                }
               mat2x3(1945.2977, 9.6, 132.053, -0.9, -1656.0919, 7750.5691);
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
              }
            }
           else
            {
            }
           if(true)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                {
                 switch(_GLF_SWITCH(0))
                  {
                   case 95:
                   mat3x4 _GLF_SWITCH_1_0v[90], _GLF_SWITCH_1_1v;
                   if(_GLF_DEAD(false))
                    return;
                   case 60:
                   (mat2x3(mat4x2(4.1, -516.981, -8.5, 476.074, 5305.4862, 5735.6165, 5.9, -902.637)) / vec4(-4.9, 5724.4013, 8.0, -2495.4832)[0]);
                   case 0:
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    return;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    break;
                   case 79:
                   case 48:
                   case 72:
                   case 76:
                   case 58:
                   case 99:
                   case 9:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       break;
                      }
                     if(_GLF_DEAD(false))
                      break;
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   ;
                   break;
                   case 38:
                   uvec2(199337u, 198814u);
                   case 46:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   float _GLF_SWITCH_1_2v, _GLF_SWITCH_1_3v, _GLF_SWITCH_1_4v[15];
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   default:
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) >> 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 ^ (0 >> _GLF_IDENTITY(int(1), int(1))))); _injected_loop_counter --)
                    {
                     switch(_GLF_SWITCH(0))
                      {
                       case 79:
                       mat2x3(-3.0, -3.6, -8.1, -402.004, 0.1, -0.1);
                       case 0:
                       case 63:
                       case 37:
                       case 68:
                       switch(_GLF_SWITCH(0))
                        {
                         case 10:
                         mat4x2 _GLF_SWITCH_3_0v;
                         case 91:
                         mat2 _GLF_SWITCH_3_1v[77], _GLF_SWITCH_3_2v, _GLF_SWITCH_3_3v;
                         case 0:
                         case 79:
                         case 66:
                         case 93:
                         case 13:
                         case 84:
                         case 60:
                         case 62:
                         if(_GLF_WRAPPED_IF_TRUE(true))
                          {
                           switch(_GLF_SWITCH(0))
                            {
                             case 0:
                             case 69:
                             case 45:
                             case 75:
                             if(_GLF_DEAD(false))
                              break;
                             case 55:
                             case 87:
                             case 83:
                             case 9:
                             case 85:
                             case 37:
                             if(_GLF_WRAPPED_IF_FALSE(false))
                              {
                              }
                             else
                              {
                               if(_GLF_DEAD(false))
                                {
                                 if(_GLF_DEAD(false))
                                  break;
                                 return;
                                }
                              }
                             break;
                             case 92:
                             ;
                             default:
                             1;
                            }
                          }
                         else
                          {
                          }
                         case 48:
                         1;
                         break;
                         case 64:
                         mat3x2(-89.74, -141.632, -2281.6629, -838.374, 4648.5867, 8.9);
                         case 6:
                         uvec2 _GLF_SWITCH_3_4v[56], _GLF_SWITCH_3_5v[5];
                         default:
                         1;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                        }
                       break;
                       case 23:
                       bvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v[6];
                       default:
                       do
                        {
                         1;
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    return;
                   break;
                  }
                }
              }
             else
              {
              }
            }
           else
            {
             vec4 _GLF_SWITCH_0_12v;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               mat2x3(6334.7253, 8.3, 371.159, -7953.9345, -1.5, 606.714);
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(false))
                continue;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (int(8)))))); _injected_loop_counter --)
                {
                 ;
                }
              }
             bvec4 _GLF_SWITCH_0_13v;
             vec2 _GLF_SWITCH_0_14v[83];
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               while((mat4(1.5, -8.6, -81.24, -66.33, -7.6, -9.1, 201.250, -8988.2831, 8012.8487, 2.1, -8667.1763, 28.95, -1.0, 1533.1971, 47.09, 5.5) == mat4(-1.5, 3070.6005, -235.458, -1.1, -1.1, -2.1, 71.54, 902.620, -0.6, 22.71, 7.9, -3.7, 8.0, 98.40, 1.9, -81.65)))
                {
                 ivec2 _GLF_SWITCH_0_15v, _GLF_SWITCH_0_16v[71];
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 ivec3 _GLF_SWITCH_0_17v, _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = (1 ^ (0 ^ 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                    {
                     mat3(2330.7562, 650.115, -314.074, -105.280, -2.2, 9.6, 497.409, 1.6, -1.7);
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   (true ? uvec3(112506u, 151203u, 10347u) : uvec3(53685u, 51794u, 42072u));
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     return;
                    }
                  }
                 ivec2 _GLF_SWITCH_0_20v, _GLF_SWITCH_0_21v[40];
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 0:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     mat3(874.619, -1.8, 126.626, 1365.8432, 2.1, -21.80, 249.071, -657.336, -5.1);
                     if(_GLF_DEAD(false))
                      break;
                     break;
                     case 79:
                     if(_GLF_DEAD(false))
                      break;
                     mat3x4 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v, _GLF_SWITCH_2_2v[57];
                     case 9:
                     if(_GLF_DEAD(false))
                      continue;
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                      {
                       _GLF_SWITCH_0_13v;
                      }
                     if(_GLF_DEAD(false))
                      break;
                     default:
                     1;
                    }
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
              }
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             return;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((((0 ^ 1) << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))) ^ 0)); _injected_loop_counter ++)
            {
             do
              {
               if(true)
                {
                }
               else
                {
                 for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (int(1))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   findMSB(subgroup_size);
                  }
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     while(isinf(7.7))
                      {
                       ivec2(38449, 42350);
                       mat4x2(-78.50, 6.7, 8.5, -2770.9688, -6.7, 41.33, 6.2, 164.366);
                       do
                        {
                         for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
                          {
                           if(_GLF_DEAD(false))
                            {
                             if(_GLF_DEAD(false))
                              break;
                             continue;
                            }
                           tanh(88.30);
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
                       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                        {
                         if(_GLF_DEAD(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                           continue;
                          }
                         mat4(5865.7022, 196.756, -104.960, 7.2, -3.7, -57.82, 5.2, -6392.9854, -879.003, 8437.8736, -9.7, -3.9, -9.5, 478.718, -2.5, 3293.7457);
                        }
                       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         mat2x3(7126.2444, -2.9, 7.5, -7.4, 486.015, -537.339);
                        }
                       else
                        {
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       ;
                       bool _GLF_SWITCH_0_22v, _GLF_SWITCH_0_23v;
                       ;
                      }
                     do
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   mat3x4 _GLF_SWITCH_0_24v, _GLF_SWITCH_0_25v[41], _GLF_SWITCH_0_26v;
                   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 | 1)); _injected_loop_counter ++)
                    {
                     ivec4(13291, -4873, -3365, 25568);
                    }
                   5685.3029;
                  }
                 else
                  {
                  }
                 if(_GLF_DEAD(false))
                  continue;
                 int(-6.0);
                 do
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                    continue;
                   switch(_GLF_SWITCH(0))
                    {
                     case 89:
                     if(_GLF_DEAD(false))
                      break;
                     mat3(-2.0, 17.09, -6521.3103, 9.9, 504.414, 3.4, -2.2, -769.092, -9.3);
                     case 44:
                     bvec2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     case 0:
                     case 47:
                     case 50:
                     case 56:
                     case 77:
                     case 38:
                     case 43:
                     case 36:
                     if(_GLF_DEAD(false))
                      continue;
                     ;
                     break;
                     if(_GLF_DEAD(false))
                      continue;
                     case 48:
                     _injected_loop_counter;
                     case 14:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         (uvec4(186027u, 177503u, 96654u, 114059u) >> uvec4(159850u, 79745u, 191260u, 51586u));
                        }
                       else
                        {
                        }
                      }
                     default:
                     1;
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   return;
                  }
                }
              }
             while(_GLF_WRAPPED_LOOP(false));
             if(_GLF_DEAD(false))
              break;
            }
           ivec2 _GLF_SWITCH_0_27v[72];
           if((next_virtual_gid > bitfieldReverse(next_virtual_gid)))
            {
             bvec4 _GLF_SWITCH_0_28v;
             if(_GLF_DEAD(false))
              return;
             {
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(false))
                 return;
                break;
               }
              mat2x4 _GLF_SWITCH_0_29v, _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[52];
              uint _GLF_SWITCH_0_32v[86];
              equal(_GLF_SWITCH_0_1v, _GLF_SWITCH_0_0v).s;
              (ivec4(-81956, 54575, -93854, 25539) % 43720);
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               {
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  return;
                 }
                else
                 {
                 }
               }
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
               }
              else
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                 }
                else
                 {
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    mat4x2(mat2x3(624.318, 60.52, 9.3, 4335.7226, -5.3, 2686.4776));
                   }
                 }
               }
              if(_GLF_DEAD(false))
               break;
             }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               float _GLF_SWITCH_0_33v;
               float _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v;
               mat2(-2.2, 550.762, -5.3, -7.2);
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  return;
                 _GLF_SWITCH_0_28v;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  {
                   for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     return;
                    }
                  }
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                  break;
                 continue;
                }
               ivec3 _GLF_SWITCH_0_36v[71], _GLF_SWITCH_0_37v;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(                 mat4x3(4.6, -298.879, 860.813, -15.01, -0.6, 897.942, 9120.1390, -1731.2912, -131.665, 5.4, -839.121, 8326.0852);
 (workgroup_id > virtual_gid); mat4(-5.5, 274.069, -2.4, 347.562, 43.06, 252.369, -815.806, -98.74, -99.17, 164.043, 1.1, 9581.9113, 7.9, 1.2, -0.4, 8.2))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   ivec2 _GLF_SWITCH_0_38v;
                   do
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     switch(_GLF_SWITCH((0 ^ 0)))
                      {
                       case 12:
                       (_GLF_SWITCH_0_1v != (_GLF_SWITCH_0_0v - 34437));
                       case 0:
                       case 33:
                       case 42:
                       case 83:
                       case 13:
                       case 2:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        break;
                       case 20:
                       case 44:
                       case 96:
                       (vec3(903.893, 194.225, -49.32) , ivec4(-19242, -87715, -60040, -59128));
                       break;
                       if(_GLF_DEAD(false))
                        return;
                       case 73:
                       mat2x4(-1.3, -9.2, 3.9, -212.292, -80.22, 66.50, -9755.2058, 748.413);
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                      }
                     else
                      {
                       return;
                      }
                    }
                   ivec3 _GLF_SWITCH_0_39v, _GLF_SWITCH_0_40v;
                   (mat4(mat3x2(1.6, -7071.4074, -1.9, 4089.7425, 284.747, 6.5)));
                   ;
                   uvec4(166805u, 117281u, 13u, 106545u).x;
                   mat3 _GLF_SWITCH_0_41v[23], _GLF_SWITCH_0_42v[16];
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       return;
                      }
                     else
                      {
                      }
                    }
                   if(_GLF_DEAD(false))
                    continue;
                  }
                }
               else
                {
                }
              }
             vec3 _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v[52];
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
               switch(_GLF_SWITCH(0))
                {
                 case 0:
                 case 93:
                 case 64:
                 case 75:
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                 break;
                 case 55:
                 bvec3(true, false, true);
                 default:
                 1;
                 if(_GLF_DEAD(false))
                  return;
                }
              }
             else
              {
               switch(_GLF_SWITCH((0 & int(6484.8846))))
                {
                 case 0:
                 case 31:
                 case 87:
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                   else
                    {
                    }
                   false;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 break;
                 default:
                 1;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 return;
                }
               else
                {
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             mat2x3 _GLF_SWITCH_0_45v, _GLF_SWITCH_0_46v, _GLF_SWITCH_0_47v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             {
             }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  return;
                 break;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                break;
               continue;
              }
             bvec4 _GLF_SWITCH_0_48v[37], _GLF_SWITCH_0_49v, _GLF_SWITCH_0_50v[61];
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
            }
           {
            {
             if(_GLF_DEAD(false))
              continue;
             mat3 _GLF_SWITCH_0_51v, _GLF_SWITCH_0_52v[10], _GLF_SWITCH_0_53v;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             mat4x3 _GLF_SWITCH_0_54v, _GLF_SWITCH_0_55v;
             vec3 _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v, _GLF_SWITCH_0_58v;
             mat3 _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v;
             if(_GLF_DEAD(false))
              continue;
             bvec2(false, true);
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             mat3x4 _GLF_SWITCH_0_61v[45], _GLF_SWITCH_0_62v;
            }
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
               break;
              continue;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 return;
               }
              else
               {
               }
             }
            vec4 _GLF_SWITCH_0_63v[44];
            -68177;
           }
           for(mat4x3 _GLF_SWITCH_0_64v; (injectionSwitch != vec2(59.82, -8.7)); (mat2x3(9119.7326, -2789.8372, -1930.4287, -763.396, 4944.2065, -7212.1981) - 86.47))
            {
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            continue;
          }
         case 25:
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           do
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           switch(_GLF_SWITCH(0))
            {
             case 0:
             case 51:
             case 61:
             case 65:
             case 84:
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               if((true ^^ false))
                {
                 do
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 44:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       switch(_GLF_SWITCH((54578 & (0 >> _GLF_IDENTITY(int(2), int(2))))))
                        {
                         case 77:
                         uvec3 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                         case 0:
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          {
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             return;
                            }
                           else
                            {
                            }
                           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                            break;
                          }
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          continue;
                         break;
                         case 2:
                         ((mat3x4(-65.43, 236.823, -5.6, -27.99, 40.63, 7063.3162, 17.66, 16.47, -8.4, 5884.4286, -5.2, -350.637) * mat4x3(-8.4, 800.685, -9.9, 982.761, 4.4, -2.7, -5221.3212, 58.40, 7.4, 2.3, 0.1, 45.99)) - 3310.4191);
                         case 16:
                         ivec4 _GLF_SWITCH_5_2v;
                         default:
                         1;
                         if(_GLF_DEAD(false))
                          continue;
                        }
                      }
                     bvec4(false, false, false, true);
                     case 0:
                     case 26:
                     case 82:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     if(false)
                      {
                       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))), false || (bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))))
                        continue;
                       ;
                      }
                     case 41:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      continue;
                     case 96:
                     case 35:
                     case 52:
                     if(_GLF_DEAD(false))
                      break;
                     for(                     matrixCompMult(transpose(mat4(-6960.6509, -2.1, -1.8, -4.3, 809.643, -4243.8985, 7691.8032, -55.88, -1855.4151, 561.128, -53.28, -8311.8022, -88.70, -216.333, 1256.9091, -5.7)), mat4(-18.14, -4943.4101, 1519.7057, -521.602, -59.33, -676.862, -9811.2078, 46.18, 2.5, 690.150, -0.1, -0.8, -9.9, -317.476, 78.75, 315.237));
 (false != false); ivec3(-14151, -76382, 94737))
                      {
                       for(mat4 _GLF_SWITCH_0_65v; true; (mat3x4(11.50, -24.20, -6317.7740, -372.584, 0.5, -5.0, 2.7, -2.1, -78.81, -2.3, 0.5, -4.2) * mat4x3(8365.8391, 0.0, 9.4, -735.458, -474.135, -6.9, -353.686, -3.3, 77.47, 7.9, 3.8, 5223.7737)))
                        {
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                          {
                           if(_GLF_DEAD(false))
                            return;
                           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                            {
                             ;
                             if(_GLF_DEAD(false))
                              continue;
                            }
                           else
                            {
                             if(_GLF_DEAD(false))
                              continue;
                            }
                          }
                         else
                          {
                          }
                         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (false ? _GLF_FUZZED(-90016) : int(4))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                          {
                           bvec3(true, false, false);
                          }
                         if(_GLF_DEAD(false))
                          break;
                         mat3x2(-679.582, -2.2, 36.57, 1336.4119, 3640.2180, 39.62);
                         (83.58 - mat4(1.2, 2421.9237, -9531.5557, -3.0, -873.410, -1.3, 62.19, -2423.4731, 5.7, -4.2, -130.087, 7203.2671, 7780.1056, 2.4, 6.7, -827.576));
                         if(_GLF_DEAD(false))
                          {
                           do
                            {
                             return;
                            }
                           while(_GLF_WRAPPED_LOOP(false));
                          }
                         mat4x3(-38.32, -1.2, 780.154, -4.0, 2.7, 66.72, -69.32, 5.6, 547.080, -7577.5529, 412.923, -4.7);
                         if(_GLF_DEAD(false))
                          continue;
                         (+ mat3(-56.61, 2492.1269, -61.59, 475.172, -0.1, 490.447, 293.573, 5489.0161, -852.431));
                         ivec4 _GLF_SWITCH_0_66v[62];
                         vec3(-54.39, 56.57, 29.29);
                        }
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       ;
                      }
                     case 78:
                     bvec2(false, false);
                     if(_GLF_DEAD(false))
                      {
                       for(int _injected_loop_counter = (-68336 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                        {
                         return;
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          return;
                        }
                      }
                     break;
                     case 70:
                     do
                      {
                       uvec4(49490u, 30861u, 4996u, 40255u);
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     case 20:
                     do
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                         if(_GLF_DEAD(false))
                          break;
                         if(_GLF_WRAPPED_IF_FALSE(false))
                          {
                           if(_GLF_DEAD(false))
                            continue;
                          }
                         else
                          {
                           if(_GLF_WRAPPED_IF_FALSE(false))
                            {
                            }
                           else
                            {
                             return;
                            }
                          }
                        }
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                     ivec4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                     default:
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       1;
                      }
                     else
                      {
                      }
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))
                  {
                   switch(_GLF_SWITCH(0))
                    {
                     case 79:
                     uvec4 _GLF_SWITCH_5_0v, _GLF_SWITCH_5_1v;
                     case 37:
                     if(_GLF_DEAD(false))
                      return;
                     greaterThanEqual(injectionSwitch, vec2(-2101.5315, -5170.8637));
                     case 0:
                     case 66:
                     case 3:
                     case 40:
                     case 91:
                     case 85:
                     case 2:
                     case 90:
                     case 24:
                     if(_GLF_WRAPPED_IF_FALSE(false))
                      {
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        return;
                       return;
                      }
                     break;
                     default:
                     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                      return;
                     1;
                    }
                  }
                }
              }
             else
              {
              }
             break;
             case 64:
             vec3 _GLF_SWITCH_3_0v, _GLF_SWITCH_3_1v, _GLF_SWITCH_3_2v;
             default:
             1;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         default:
         1;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
        return;
       break;
       if(_GLF_DEAD(false))
        return;
       default:
       for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          break;
         1;
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   switch(_GLF_SWITCH((0 & 63617)))
    {
     case 27:
     for(     mat4x3(-8.8, -636.606, 3.1, 6.4, -4.3, -6760.7294, -114.114, -73.29, 2.8, -4.3, 97.54, 295.302);
 bool(-72512); (((ivec3(-9919, -18284, 26486) == ivec3(-13464, 34936, -10856)) ? mat2x4(-67.07, -647.490, 147.386, 3.4, -3.1, 29.32, -486.250, -7672.0490) : mat2x4(mat3x2(61.53, -9.5, 339.504, 3.9, 2.7, -445.600))) , bvec4(false, false, true, true)))
      {
       {
        for(mat3x2 _GLF_SWITCH_4_0v, _GLF_SWITCH_4_1v; (ivec2(57550, 35550) == (92147 & ivec2(-80958, 35814))); (_GLF_SWITCH_4_1v + (vec3(5.1, -358.126, -8.7) , mat3x2(-6.9, 1075.1744, 0.8, 6.1, 8.1, -9.3))))
         {
          ;
          mat4x3 _GLF_SWITCH_4_2v[78];
          mat4x3 _GLF_SWITCH_4_3v, _GLF_SWITCH_4_4v;
          ;
          false;
          ;
          if(_GLF_DEAD(false))
           continue;
         }
        if((true ^^ true))
         {
          do
           {
            switch(_GLF_SWITCH(0))
             {
              case 0:
              case 20:
              ivec2(38924, 39613);
              break;
              case 70:
              mat2 _GLF_SWITCH_5_0v;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              default:
              1;
             }
            if(_GLF_DEAD(false))
             return;
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            (mat3x4(-9.7, -5.8, 7.5, -79.76, 384.425, -66.44, -7068.9972, -6.8, 8868.7795, 632.094, 4190.2462, -6.7) + 2.6);
           }
          else
           {
           }
          if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
           {
            if(_GLF_DEAD(false))
             return;
           }
          else
           {
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          bool _GLF_SWITCH_4_5v, _GLF_SWITCH_4_6v, _GLF_SWITCH_4_7v[2];
          mat2x3(1842.7631, 585.642, -2.1, -963.157, -7.6, 3.5);
          equal(ivec2(25629, 82330), ivec2(98319, -18301));
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           continue;
          mat4x2(mat3(-5688.4013, -54.83, -93.91, 89.10, 566.105, -3.3, 9.9, -717.233, -5.0));
          ;
          uvec3(142754u, 83150u, 127994u);
          mat3x4 _GLF_SWITCH_4_8v[74];
         }
        else
         {
          do
           {
            mat4x3(vec3(-1.8, -8.3, 8713.6358), vec3(-1374.0343, 6138.6692, -9.2), vec3(881.094, 1.8, -0.9), acosh(vec3(-912.043, 51.34, 20.26)));
           }
          while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, false || (false))));
          if(_GLF_DEAD(false))
           return;
          (ivec3(-16606, 1418, -7876) % 27007);
          (-8.2 == sinh(5.6));
          ivec4 _GLF_SWITCH_4_9v;
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
           break;
         }
        ivec2(-55363, -28843);
       }
      }
     case 0:
     case 10:
     if(_GLF_DEAD(false))
      return;
     case 34:
     if(_GLF_DEAD(false))
      return;
     case 73:
     case 38:
     case 79:
     case 42:
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       subgroupAll(false);
      }
     else
      {
      }
     case 60:
     if(_GLF_DEAD(false))
      return;
     case 35:
     case 90:
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     break;
     case 91:
     {
      do
       {
        while(((mat3x2(-9.6, 9.5, 4.3, 7720.0440, 6876.5637, 568.939) - 55.18) != (mat3x2(508.817, -2018.5715, 1318.2140, 406.097, 2.9, 6.8) / mat3x2(-3.8, 1.4, -6854.2170, 6681.1314, 1.9, 5900.9644))))
         {
          bvec2(true, true);
          if(_GLF_DEAD(false))
           continue;
         }
       }
      while(_GLF_WRAPPED_LOOP(false));
      do
       {
       }
      while(bool(-71.29));
      if(_GLF_WRAPPED_IF_TRUE(true))
       {
        for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
         {
          if(_GLF_DEAD(false))
           continue;
          if(_GLF_DEAD(false))
           return;
         }
       }
      else
       {
       }
      mat3x2(-33.55, -50.84, -7.6, 0.6, 7.6, 3.6);
      if(_GLF_DEAD(false))
       return;
      int _GLF_SWITCH_4_10v;
      {
      }
      if(_GLF_WRAPPED_IF_TRUE(true))
       {
        if(_GLF_DEAD(false))
         {
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           return;
          if(_GLF_DEAD(false))
           return;
          return;
         }
       }
      else
       {
       }
      if(false)
       {
        ;
       }
      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
       {
        if(_GLF_DEAD(false))
         {
          do
           {
            return;
           }
          while(_GLF_WRAPPED_LOOP(false));
          if(_GLF_DEAD(false))
           break;
         }
       }
     }
     default:
     1;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), true && (bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true)))))
      continue;
     switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
      {
       case 56:
       mat2x4(-745.854, -841.617, -910.628, 8124.8272, -254.545, 519.042, -354.515, -290.899);
       if(_GLF_DEAD(false))
        continue;
       case 0:
       return;
       break;
       case 3:
       if(_GLF_DEAD(false))
        continue;
       (- mat2x3(-626.013, -33.49, 8165.2900, -19.95, -7414.1542, -6.9));
       if(_GLF_DEAD(false))
        continue;
       case 37:
       ;
       default:
       1;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
        continue;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) | (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_DEAD(false))
    break;
   subgroupBarrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    break;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
