#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(float(-74228))), float(_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), bool(true))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0))), vec3(1.0, 0.0, 0.0)))) > injectionSwitch.y) && _GLF_IDENTITY(true, false || (true)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y) && true)), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), vec2(1.0, 1.0) * (mat2(1.0) * (injectionSwitch)))))).x > injectionSwitch.y) && true))))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), _GLF_FUZZED(-10.57)), vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : -745.684)), (_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : -745.684))) / 1.0)), float(mat2x3((_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : -745.684))), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 1.0)))), (injectionSwitch)[1]), bvec2(false, true))).y, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), _GLF_FUZZED(-10.57)), vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(true ? -6.7 : -745.684, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) * (true ? _GLF_IDENTITY(-6.7, max(-6.7, -6.7)) : -745.684))), float(mat2x3((_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : -745.684))), 0.0, 1.0, 0.0, 1.0, 1.0)))), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), 0.0, 1.0, 1.0))))), float(mat4(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), 0.0, 1.0, 1.0), transpose(transpose(mat2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), 0.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))), _GLF_FUZZED(-10.57)), vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : -745.684))), float(mat2x3((_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : -745.684))), 0.0, 1.0, 0.0, 1.0, 1.0)))), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], (true ? (injectionSwitch)[0] : _GLF_FUZZED(-0.4))), _GLF_FUZZED(-10.57)), vec2(_GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : _GLF_IDENTITY(-745.684, clamp(_GLF_IDENTITY(-745.684, (_GLF_IDENTITY(-745.684, mix(float(-745.684), float(_GLF_FUZZED(-9.1)), bool(false)))) - 0.0), -745.684, -745.684))))), float(mat2x3((_GLF_IDENTITY(true ? -6.7 : -745.684, 1.0 * (true ? -6.7 : -745.684))), 0.0, 1.0, 0.0, 1.0, 1.0)))), (injectionSwitch)[1]), bvec2(false, true))).y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false)), (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, false))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) && true) ? injectionSwitch.x : _GLF_FUZZED(sin(-67.64))), float(vec4((true ? injectionSwitch.x : _GLF_FUZZED(sin(-67.64))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 1.0, 0.0))))))))))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(false), true)), bool(bvec3(bool(bvec2(bool(false), true)), false, true))), false || (bool(bvec2(bool(false), true)))))), bool(bvec2(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(76.97))), injectionSwitch.y))))))))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), true && (! (true)))))), true)), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))) * (injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))), false)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), false)), true, true, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), (bool(bvec4(false, true, false, true))) && true))) && true)))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y)) && (false))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(_GLF_IDENTITY(-97.37, min(-97.37, -97.37)), 2090.1396) + vec2(210.142, 22.32))))).x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-14.20), _GLF_FUZZED(-59.02)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false)))))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, _GLF_IDENTITY((true ? gl_WorkGroupSize : _GLF_FUZZED((_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, (true) || false)), (! (_GLF_IDENTITY(true, (true) || false))) && true))) ? uvec3(uvec2(_GLF_IDENTITY(88044u, min(88044u, 88044u)), 57222u), subgroup_size) : _GLF_IDENTITY(uvec3(193872u, _GLF_IDENTITY(_GLF_IDENTITY(101115u, (101115u) / 1u), clamp(101115u, 101115u, 101115u)), 122309u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), min(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), _GLF_IDENTITY(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), clamp(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u))))), 1u), _GLF_IDENTITY((uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, _GLF_IDENTITY(101115u, (101115u) >> 0u))), 122309u), 1u)) | (uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), 1u)), ((uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, _GLF_IDENTITY(101115u, (101115u) >> 0u))), 122309u), 1u)) | (uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), 1u))) | ((uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, _GLF_IDENTITY(101115u, (101115u) >> 0u))), 122309u), 1u)) | (uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), 1u)))))), (false ? _GLF_FUZZED(uvec3(109184u, 177442u, 126963u)) : uvec3(_GLF_IDENTITY(uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(_GLF_IDENTITY(101115u, (true ? 101115u : _GLF_FUZZED(subgroup_id))), 101115u, 101115u)), 122309u), _GLF_IDENTITY(1u, (1u) - 0u)), (_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(193872u, min(193872u, 193872u)), _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), _GLF_IDENTITY(122309u, (122309u) / 1u)), 1u), (uvec4(uvec3(_GLF_IDENTITY(193872u, min(193872u, 193872u)), _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), _GLF_IDENTITY(122309u, (122309u) / 1u)), 1u)) | (_GLF_IDENTITY(uvec4(uvec3(_GLF_IDENTITY(193872u, min(193872u, 193872u)), _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), _GLF_IDENTITY(122309u, (122309u) / 1u)), 1u), (uvec4(uvec3(_GLF_IDENTITY(193872u, min(193872u, 193872u)), _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), _GLF_IDENTITY(122309u, (122309u) / 1u)), 1u)) >> uvec4(0u, 0u, 0u, 0u))))) | (uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), 1u)))))))))), uvec3(1u, 1u, 1u) * ((true ? gl_WorkGroupSize : _GLF_FUZZED((true ? uvec3(uvec2(_GLF_IDENTITY(88044u, min(88044u, 88044u)), 57222u), subgroup_size) : _GLF_IDENTITY(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), 1u), (uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, _GLF_IDENTITY(101115u, _GLF_IDENTITY((101115u) >> 0u, ((101115u) >> 0u) << 0u)))), 122309u), 1u)) | (uvec4(uvec3(_GLF_IDENTITY(193872u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(193872u, 1u * (193872u)), 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(_GLF_IDENTITY(193872u, 1u * (193872u)), 0u))), (true ? uvec2(uvec2(uvec2(_GLF_IDENTITY(193872u, 1u * (193872u)), 0u))) : _GLF_FUZZED(uvec2(49189u, 103680u)))))), (false ? _GLF_FUZZED(subgroup_size) : uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(193872u, 1u * (193872u)), 0u), _GLF_IDENTITY(uvec2(uvec2(uvec2(_GLF_IDENTITY(193872u, 1u * (193872u)), 0u))), (true ? uvec2(uvec2(uvec2(_GLF_IDENTITY(193872u, 1u * (193872u)), 0u))) : _GLF_FUZZED(uvec2(49189u, 103680u))))))))), _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), 1u)))), (false ? _GLF_FUZZED(uvec3(109184u, 177442u, 126963u)) : uvec3(_GLF_IDENTITY(uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), _GLF_IDENTITY(1u, (1u) - 0u)), (uvec4(uvec3(193872u, _GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 122309u), 1u)) | (uvec4(uvec3(193872u, _GLF_IDENTITY(_GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)), 0u ^ (_GLF_IDENTITY(101115u, clamp(101115u, 101115u, 101115u)))), 122309u), 1u))))))))))))).x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, false)), true && (bool(bvec3(_GLF_DEAD(false), true, false)))))))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), clamp(~ (0u), ~ (0u), ~ (0u))))), 0u, 0u) + (gl_WorkGroupID)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (gl_WorkGroupID)), min((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u))) + (gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, 1u * (0u))), uvec3(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u) ^ (uvec3(0u, 0u, 0u))) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), max(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), max(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)))), (true ? _GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ (_GLF_IDENTITY((gl_WorkGroupID), max((gl_WorkGroupID), (gl_WorkGroupID)))))), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, _GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), max(_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), (true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) ^ uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))), _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u))) - uvec3(0u, 0u, 0u)), true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)))) : _GLF_FUZZED(uvec3(83006u, 84086u, 23018u))))) / uvec3(1u, 1u, 1u)), true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], _GLF_IDENTITY(gl_WorkGroupID[1], clamp(gl_WorkGroupID[1], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[1], clamp(gl_WorkGroupID[1], gl_WorkGroupID[1], gl_WorkGroupID[1])))), gl_WorkGroupID[2]))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), (true ? (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(_GLF_IDENTITY(0u, 0u | (0u)), 0u, 0u) + (gl_WorkGroupID)) : _GLF_FUZZED(uvec3(134197u, 35640u, 148400u))))))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), min((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), max((uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)))))) | (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)))), (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (gl_WorkGroupID)), min((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), max(_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))) / (uvec3(0u, 0u, 0u) ^ uvec3(1u, 1u, 1u))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), max(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u) << 0u, ((0u) << 0u) | ((0u) << 0u))), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) >> uvec3(0u, 0u, 0u)))))) : _GLF_FUZZED(uvec3(163973u, 128918u, _GLF_IDENTITY(29288u, (29288u) * 1u))), true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec3(uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), (uvec3(uvec3(0u, 0u, 0u) + (gl_WorkGroupID))) << uvec3(0u, 0u, 0u)))))))) : _GLF_IDENTITY(_GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), uvec3(0u, 0u, 0u) | (_GLF_FUZZED(uvec3(163973u, 128918u, 29288u)))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false)), bool(bvec3(bool(bvec3(true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))), false)), true, true))), false)))) ? _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))))) << 0u), 0u, 0u) + _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(198341u, 180335u, 117793u))))), ((_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(true, ! (! (true))) ? gl_WorkGroupID : _GLF_FUZZED(uvec3(198341u, 180335u, 117793u)))))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY((uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), clamp((uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u))))) | (_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) * uvec3(1u, 1u, 1u)), uvec3(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (gl_WorkGroupID)), min((_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) / ((1u << _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), ~ (~ (uint(2u)))))) >> _GLF_IDENTITY(uint(2u), uint(2u))))))) + (gl_WorkGroupID)), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(0u, 0u, 0u))) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), max(_GLF_IDENTITY(_GLF_IDENTITY(true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / (0u | 1u)))), 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)), (true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + _GLF_IDENTITY((gl_WorkGroupID), max(_GLF_IDENTITY((gl_WorkGroupID), uvec3(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u), (uvec4(_GLF_IDENTITY((gl_WorkGroupID), ~ (~ ((gl_WorkGroupID)))), 0u)) ^ uvec4(0u, 0u, 0u, 0u)))), (gl_WorkGroupID))), (uvec3(0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), (~ (0u)) / (0u | 1u)))), 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u))) | (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u)))), max(true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), max(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(163973u, uint(uvec3(163973u, 1u, 0u))), 128918u, 29288u)), true ? ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), _GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), ~ (~ ((_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), (_GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u)))), true ? _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), clamp(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))), (uvec3(0u, 0u, 0u) | uvec3(0u, 0u, 0u)) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), clamp(~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))), ~ (~ (~ (_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(0u, (0u) << 0u), 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))))))))))) : _GLF_FUZZED(uvec3(163973u, 128918u, 29288u))))))), ((true ? ~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), clamp(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)))), (uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), clamp(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u), uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u))))) | 0u)))), 0u))) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, uvec3(0u, 0u, 0u) + (gl_WorkGroupID)), gl_WorkGroupID))) | (gl_WorkGroupID)))))) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))), min(_GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), max(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))), 0u))) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(atomicLoad(subgroup_local_id, 8497, -61262, 35799))))) >> 0u), 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))) | (uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_WorkGroupID, max(gl_WorkGroupID, gl_WorkGroupID)))))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(0u, 0u, _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u))) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), (_GLF_IDENTITY(uvec3(0u, 0u, 0u) + (gl_WorkGroupID), (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID)))) | (uvec3(0u, 0u, 0u) + (gl_WorkGroupID))))))) : _GLF_FUZZED(uvec3(_GLF_IDENTITY(163973u, max(163973u, _GLF_IDENTITY(163973u, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY((163973u), (_GLF_IDENTITY((163973u), 0u | ((163973u)))) | ((163973u))), ((163973u)) << 0u))))), _GLF_IDENTITY(128918u, max(128918u, 128918u)), 29288u)))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u)), 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))), ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))) | ((~ (_GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) / 1u), clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))))), clamp((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ (~ (_GLF_IDENTITY(0u, _GLF_IDENTITY(clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))), (clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))) | (clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, min(0u, 0u)))), ~ (~ (_GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) >> 0u))))))))))))) - _GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(118415u))) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(118415u))) << 0u)), min(~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(118415u))) << 0u)), ~ (_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (true ? (0u) : _GLF_FUZZED(118415u))) << 0u)))))))) | (_GLF_IDENTITY(0u, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), ((0u)) * 1u), 0u ^ (~ _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), ((0u)) * 1u)))), _GLF_IDENTITY(((~ _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), ((0u)) * 1u))), (((~ _GLF_IDENTITY(_GLF_IDENTITY((0u), ~ (~ ((0u)))), ((0u)) * 1u)))) | 0u) | 0u))))))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(120.840, float(mat2(_GLF_IDENTITY(120.840, (_GLF_IDENTITY(120.840, max(120.840, 120.840))) / 1.0), 1.0, 1.0, 1.0))), 6282.5872)))), injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(120.840, 6282.5872)))), injectionSwitch)).y)))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(120.840, float(mat2(120.840, 1.0, 1.0, 1.0))), 6282.5872)))), injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(120.840, 6282.5872)))), injectionSwitch)).y)))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, abs(0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(120.840, float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(120.840, clamp(120.840, 120.840, 120.840)), 1.0, 1.0, 1.0), (mat2(_GLF_IDENTITY(120.840, clamp(120.840, 120.840, 120.840)), 1.0, 1.0, 1.0)) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))), 6282.5872)))), injectionSwitch)).y, _GLF_IDENTITY(1.0, (1.0) / 1.0) * (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(120.840, 6282.5872)))), injectionSwitch)).y))))))))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false)))), false || (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, (workgroup_size) - uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0) : _GLF_FUZZED(8.2)))) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.0) : _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec4(-3.6, 58.94, -8359.6306, -4095.9029).q)), float(0.0), bool(true))))))) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY((subgroup_id), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((subgroup_id), ((subgroup_id)) | ((subgroup_id))) : _GLF_FUZZED((uvec3(52035u, 180609u, 121783u)[2] % subgroup_id)))) | 0u) * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(injectionSwitch.x > injectionSwitch.y), (bool(injectionSwitch.x > injectionSwitch.y)) && true)))))), false))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(117.190) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-198.433)))), false)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, ((0u >> _GLF_IDENTITY(uint(5u), uint(5u))) << _GLF_IDENTITY(uint(5u), uint(5u))) + (_GLF_IDENTITY(subgroup_base, 0u + (subgroup_base)))), subgroup_base)), min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) + 0u), min(subgroup_base, subgroup_base)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))), (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) ^ 0))))) % subgroup_size);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && _GLF_IDENTITY(true, true && (true))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ((_GLF_DEAD(false)) && true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(false)) && true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), bool(bvec3(bool(bvec3(_GLF_IDENTITY((_GLF_DEAD(false)) && true, ! (! ((_GLF_DEAD(false)) && true))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y)))), false, false)))), ((_GLF_DEAD(false)) && true) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec2(! (injectionSwitch.x > injectionSwitch.y), true))))))), false)), _GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)), ! (! (bool(bvec2(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), true)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint read = 0;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (false ? _GLF_FUZZED(-20485) : 0))], _GLF_IDENTITY(injectionSwitch[1], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.5))), log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), log(1.0)))))), injectionSwitch)).x, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.5))), log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), log(1.0)))))), injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.5))), log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), log(1.0)))))), injectionSwitch)).x, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.5))), log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), log(1.0)))))), injectionSwitch)).x : _GLF_FUZZED(-6.2))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.5))), log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), log(1.0)))))), injectionSwitch)).x, (true ? _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec4(injectionSwitch, 0.0, log(1.0))), min(vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(0.5))), log(1.0))), vec2(vec4(injectionSwitch, _GLF_IDENTITY(0.0, min(0.0, 0.0)), log(1.0)))))), injectionSwitch)).x : _GLF_FUZZED(-640.783))))) > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.7) : injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(6.7, max(_GLF_IDENTITY(6.7, (6.7) + 0.0), _GLF_IDENTITY(6.7, clamp(6.7, _GLF_IDENTITY(6.7, _GLF_IDENTITY(float(mat3x4(6.7, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(37.00)), float(float(mat3x4(6.7, 0.0, 1.0, 0.0, 0.0, 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0))), bool(true)))), 6.7))))) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(6.7) : injectionSwitch.y))))))))
  return;
 if(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(subgroup_local_id % 2, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) % 2, (subgroup_local_id % 2) >> 0u)) | 0u), subgroup_local_id % 2))) == 0, ((_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec2(subgroup_local_id, 0u))) % 2, (subgroup_local_id % 2) >> 0u)) | 0u), subgroup_local_id % 2))) == 0) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED((5.5 + -60.00))), float(injectionSwitch.y), bool(true)))) - 0.0)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-616.369)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-647.756, -90.25)))))).y))))
      barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, 0u + (0u)) ^ (virtual_gid))], 4, 64, _GLF_IDENTITY(2, _GLF_IDENTITY((2), max(_GLF_IDENTITY(_GLF_IDENTITY((2), int(ivec3(_GLF_IDENTITY((_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-52976) : 2))), (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-52976) : 2)))) | (~ (_GLF_IDENTITY(2, (false ? _GLF_FUZZED(-52976) : 2)))))))), ((2)) >> (1 ^ 1)), 1, (0 >> _GLF_IDENTITY(int(4), int(4)))))), ((_GLF_IDENTITY(2, (_GLF_IDENTITY(2, clamp(2, 2, 2))) ^ 0))) / 1), _GLF_IDENTITY((2), min((2), _GLF_IDENTITY((2), ((2)) | ((2))))))) << (_GLF_IDENTITY(0, 0 + (_GLF_IDENTITY(0, _GLF_IDENTITY((0), clamp((0), _GLF_IDENTITY((0), ((0)) ^ 0), (0))) / 1))) << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec4(int(7), _GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(_GLF_IDENTITY(0, 0 ^ (0)), (0) * _GLF_IDENTITY(1, 0 | (1))))), 1, 0))), _GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7)))))));
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (mat2(1.0))) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, abs(1.0), round(length(normalize(vec2(1.0, 1.0)))))), max(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, abs(1.0), round(length(normalize(vec2(1.0, 1.0)))))), vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 1.0, 1.0, abs(1.0), round(length(normalize(vec2(1.0, 1.0)))))))))), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))).x, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-40.09 + -4.4))), float(injectionSwitch.x), bool(true)))), float(_GLF_FUZZED(vec2(-30.21, 6.4).y)), bool(false))) > injectionSwitch.y)) ? _GLF_FUZZED(9.8) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - 0.0))))).x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true))))) && true))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)) && true, _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)) && true, true, true)), (bool(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) && true))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))) || false)) && true, true, true))) && true)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true))))) || false)) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && true) && true)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, bool(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((false)))) && true)))))))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ! (! ((false)))) && true)))))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, false)))))) && true), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true)))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), ! (! (bool(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))), (bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))), ! (! (bool(bool(bvec2(_GLF_IDENTITY(false, (false) || false), false)))))))) && true)))))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (_GLF_IDENTITY(false, (false) || false)))))), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && _GLF_IDENTITY(true, ! (! (true))))))))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), true && (bool(bvec4(true, true, true, false)))), true, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, ((false) && true) && true)), ! (! (((false) && true))))) && true)))), bool(bool((_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, ((false) && true) && true)), ! (! (((false) && true))))) && true))))))) || false))) || false))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)) && true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)) && true)))))))))), (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)) && true))))))))))) || false))) || false)) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))) && true)))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || false)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true) && true, ! (! ((_GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true)))) && true)))))))))) || false), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))))) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))), ((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, false)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(true, true, true, false)), true && (bool(bvec4(true, true, true, false)))), true, false, true)))), _GLF_IDENTITY((_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, ((false) && true) && true)), ! (! (((false) && true))))) && true)))), bool(bool((_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY((_GLF_IDENTITY((false) && true, ((false) && true) && true)), ! (! (((false) && true))))) && true))))))) || false))) || false))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)) && true))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)) && true)))))))))), (! ((_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), _GLF_IDENTITY(true, (true) || false) && (! (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY(_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))) && true)) && true))))))))))) || false))) || false)) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, true && ((false) && true)))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) && true))) && true)))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || false)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)))))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(((false) && true) && true, ! (! ((_GLF_IDENTITY((false) && true, bool(bvec4(_GLF_IDENTITY((false) && true, true && (_GLF_IDENTITY((false) && true, ! (! ((false) && true))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), true)))) && true)))))))))) || false), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))))) || false)) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))))))) && true) && true)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && ((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))))))) || false))) || false)) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && ((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))))))) || false))) || false)) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && ((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))))))) || false))) || false)) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))) || false))) || false)) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true))))))))))))))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4((! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, true)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)))))))))))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), ! (! (bool(bvec3(! (false), true, true)))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && true)))), ! (! (bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) || false)), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && ((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))))))) || false))) || false)) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && ((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))))))) || false))) || false)) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))) || false)), ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))) || false))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), ! (! (((false) && true))))))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), ! _GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && (_GLF_IDENTITY((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)), true && ((! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((false) && true), ! (! (((false) && true))))) && true)))))))) || false))) || false)) && true))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))))))) || false))) || false)) || false) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, (false) && true)))), ! (! (! (! (! (_GLF_IDENTITY(false, (false) && true)))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))))))), true && (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true)))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) && true))), false || (! (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true))))))))))))))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false))))), ! _GLF_IDENTITY((! (! (_GLF_IDENTITY(false, (false) && true)))), bool(bvec4((! (! (_GLF_IDENTITY(false, (false) && true)))), false, true, true)))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)))))))))))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), ! (! (bool(bvec3(! (false), true, true)))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)))))) && true))))))), bool(bvec2(bool(bool((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true))))))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true)))))))))) || false), true)), (bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) && true)), ! (! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))) && true, ! (! ((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))))) && true)))))))))) || false), true))) || false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, ! (! ((false) && true)))) || false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) && true, (_GLF_IDENTITY((false) && true, ! (! _GLF_IDENTITY(((false) && true), (_GLF_IDENTITY(((_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(((false) && true), bool(bvec3(_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))), true, true))))))) && true)))) || false))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))), (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))), true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))))))), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec2((false), false))), ! (! (_GLF_IDENTITY((false), bool(bvec2((false), false))))))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))), bool(bool(_GLF_IDENTITY(true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false))))))), true && (true && (! (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), false)))))))))))))))))) && true)))) || false)) && true, false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), false || (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), bool(bvec4(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))), false, false, false)))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), false || (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), (_GLF_IDENTITY((! (_GLF_IDENTITY(false, (false) && true))), bool(bvec2((! (_GLF_IDENTITY(false, (false) && true))), false)))) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false))))))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))), ! (! (! (_GLF_IDENTITY(false, (false) && true))))))), (_GLF_IDENTITY(false, ! (! (false)))) || false)) && true, ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && true, ((false) && true) && true), ((false) && true) && _GLF_IDENTITY(true, ! (! (true)))))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), false || (! (_GLF_IDENTITY(false, (false) && true))))))))), (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true)))))), ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, true))))))) && true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)) && true) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)))))) && true)))), true)))) && true))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))) * mat2(1.0)).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(float(injectionSwitch.x), _GLF_IDENTITY((float(injectionSwitch.x)) - 0.0, min((float(injectionSwitch.x)) - 0.0, (float(injectionSwitch.x)) - 0.0)))), float(vec4(float(_GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) - 0.0)), 1.0, 1.0, 1.0)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false)))
        barrier();
       barrier();
      }
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + vec2(0.0, 0.0))).x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true))))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (false)))))
            return;
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) && true), (_GLF_IDENTITY(false, (false) && true)) || false)))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, (false ? _GLF_FUZZED((mat2x3(18.19, -4673.1382, 7.2, -2864.9242, 267.980, -9777.5743) , -2.0)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).x)))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], mix(float(_GLF_FUZZED(-842.057)), float(injectionSwitch[0]), bool(true))), injectionSwitch[1]))) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) / vec2(1.0, 1.0))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) / vec2(1.0, 1.0))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) / vec2(1.0, 1.0))))).x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) / vec2(1.0, 1.0))))).x > injectionSwitch.y)), true)), (bool(bvec2(! ((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * vec2(1.0, 1.0), ((injectionSwitch) * vec2(1.0, 1.0)) / vec2(1.0, 1.0))))).x > injectionSwitch.y)), true))) || false))))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       barrier();
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   _GLF_IDENTITY(read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec2(4, 1))), _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED(89475)))) * ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), (int(2)) - 0)))), 2), (read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, int(ivec2(4, 1))), 64, 2)) << _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))))))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.5)), float(injectionSwitch.x), bool(true))))) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-424.394) : injectionSwitch.y)))), false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, (4) << 0), 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), (false ? _GLF_FUZZED(vec2(52.57, -1.0)) : _GLF_IDENTITY(normalize(vec2(1.0, 1.0)), mix(vec2(_GLF_FUZZED(-59.09), _GLF_FUZZED(-728.134)), vec2((normalize(vec2(1.0, 1.0)))[0], (normalize(vec2(1.0, 1.0)))[1]), bvec2(true, true))))))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))).y))), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false), false))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))).y))), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false), false)))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))).y))), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false), false))))))))))), bool(bvec4(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))).y))), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false), false)))))))), true && (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), float(mat3x4(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, 1.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x))), mat2(1.0) * (vec2(mat2x4(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat2((injectionSwitch)[0], 1.0, 0.0, 0.0))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(83.31), _GLF_FUZZED(-43.28)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x)))))).y))), false), bvec2(bvec3(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), false), false))))))))))), true, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
