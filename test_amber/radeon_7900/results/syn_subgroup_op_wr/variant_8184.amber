#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-7.4)), bool(false))) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (_GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), (bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || false)) && true))), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), bool(bool(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), false, false, false)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-5.0, -146.777, -119.190, -3.2).q)), bool(false))), (false ? _GLF_FUZZED(-1.5) : _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-5.0, -146.777, -119.190, -3.2).q)), bool(false))))) > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), (false ? _GLF_FUZZED(-73.71) : _GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))))), float(_GLF_FUZZED((5.4 * 115.416))), bool(false)))), (injectionSwitch)[1]))), min(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), (false ? _GLF_FUZZED(-73.71) : _GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))))), float(_GLF_FUZZED((5.4 * 115.416))), bool(false)))), (injectionSwitch)[1]))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), (false ? _GLF_FUZZED(-73.71) : _GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))))), float(_GLF_FUZZED((5.4 * 115.416))), bool(false)))), (injectionSwitch)[1]))), mix(vec2(_GLF_FUZZED(-1.2), _GLF_FUZZED((-0.2))), vec2((_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), (false ? _GLF_FUZZED(-73.71) : _GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))))), float(_GLF_FUZZED((5.4 * 115.416))), bool(false)))), (injectionSwitch)[1]))))[0], (_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(_GLF_IDENTITY(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))), (injectionSwitch)[1]))), vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0))), (false ? _GLF_FUZZED(-73.71) : _GLF_IDENTITY(-12.66, max(-12.66, _GLF_IDENTITY(-12.66, (-12.66) * 1.0)))))), float(_GLF_FUZZED((5.4 * 115.416))), bool(false)))), (injectionSwitch)[1]))))[1]), bvec2(true, true))))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), clamp(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), (_GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), min(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))) - vec2(0.0, 0.0)), vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.3))), sin(0.0), 1.0)) * mat2(1.0))), _GLF_IDENTITY(float(vec3(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.3))), sin(0.0), 1.0)) * mat2(1.0))), 1.0, cos(0.0))), 1.0 * (float(vec3(float(_GLF_IDENTITY(mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, 0.0, sin(0.0), 1.0), (mat2x4(0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6.3))), sin(0.0), 1.0)) * mat2(1.0))), 1.0, cos(0.0))))))), 0.0, 0.0, 1.0, 0.0))).x, mix(float(_GLF_FUZZED(-4343.1030)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)), min(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)), max(_GLF_IDENTITY(vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0)), (vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))) / vec2(1.0, 1.0)), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))))))).x, (false ? _GLF_FUZZED(2.3) : _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(853.290), _GLF_FUZZED(-552.344)), vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[0], (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))), mix(vec2(_GLF_FUZZED(853.290), _GLF_FUZZED(-552.344)), vec2((vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), min(injectionSwitch, injectionSwitch))))[0], (vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))))))[1]), bvec2(true, true))), 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))))))), round(length(normalize(vec3(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-63.39, -4669.8977)) : 1.0)), 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))).x))), bool(true))) < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + abs(vec2(0.0, 0.0))).y)), false))).y) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * vec2(1.0, 1.0))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) * vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-5.0, -146.777, -119.190, -3.2).q)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0))).x < injectionSwitch.y)), false))).y) && true)), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), false, true))))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 1.0, 0.0, abs(1.0), 1.0, 1.0, 0.0, 0.0, 0.0, log(1.0)))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), false, true))))), true, true, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * round(length(normalize(round(length(normalize(vec2(1.0, 1.0))))))))), float(_GLF_FUZZED(vec4(-5.0, -146.777, -119.190, -3.2).q)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))), min(_GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, 0.0))))).x < injectionSwitch.y)), false))).y) && true)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y), bool(bool(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-12.66), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).y))))))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(vec4(-5.0, -146.777, -119.190, -3.2).q)), bool(false))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), min(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), _GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), (_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_IDENTITY(_GLF_FUZZED(-12.66), clamp(_GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66))), _GLF_FUZZED(-12.66), _GLF_FUZZED(-12.66)))) * 1.0))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(7.9)), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) / 1), (_GLF_IDENTITY(1, (1) / 1)) | 0), 1, 1))])), vec2(mat3(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), max(_GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), clamp(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))))), _GLF_IDENTITY(vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))), mat2(1.0) * (vec2(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))))))))))), round(length(normalize(vec3(1.0, 1.0, 1.0)))), round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), _GLF_IDENTITY(mat3(1.0) * (vec3(1.0, 1.0, 1.0)), min(mat3(1.0) * (vec3(1.0, 1.0, 1.0)), mat3(1.0) * (vec3(1.0, 1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(5.3) : 1.0)))))))))), 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec2(0.0, 1.0), max(vec2(0.0, 1.0), vec2(0.0, 1.0))))), 0.0, 1.0, 0.0))).x < injectionSwitch.y)), false))).y) && true))))), false, true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, uint(uint(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) * (_GLF_IDENTITY(1u, (1u) >> 0u) | 1u)))));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, ~ (~ (subgroup_id * subgroup_size))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u), max((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u), max((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u), max((_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u), (_GLF_IDENTITY(subgroup_id * subgroup_size, (_GLF_IDENTITY(subgroup_id * subgroup_size, max(subgroup_id * subgroup_size, subgroup_id * subgroup_size))) | 0u)) - _GLF_IDENTITY(0u, (0u) / 1u))))))) | 0u))) | (subgroup_id * subgroup_size));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, min(1, 1)))), (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, min(1, 1))))) | (subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, min(1, 1))))))) % subgroup_size), min(((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, min(1, 1))))) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, min(1, 1))))) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, min(1, 1))))) % subgroup_size), 1u * (((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1, min(1, 1))))) % subgroup_size)))) >> 0u)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = 0;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-0.6, -1.2).g)), vec2(_GLF_FUZZED(-178.423), _GLF_IDENTITY((injectionSwitch)[1], 1.0 * ((injectionSwitch)[1]))), bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), false || (! (false)))), false || (! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), (! (false)) || false)))))))))), true))).x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) && true, true && ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), false, true, true)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(bool(_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))), true && (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), (! (_GLF_IDENTITY(! (false), (! (false)) || false))) || false))))))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), true && (bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))))), float(_GLF_FUZZED(456.948)), bool(false))))), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acosh(injectionSwitch)) : injectionSwitch)).y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y)), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) - vec2(0.0, 0.0)).y) - length(vec4(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 0.0, 0.0, sqrt(1.0), 1.0, 1.0))), injectionSwitch.y))))), float(_GLF_FUZZED(456.948)), bool(false)))))))))
  barrier();
 if((subgroup_local_id % _GLF_IDENTITY(2, (2) - 0)) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, false || (false)));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.4), _GLF_FUZZED(-1.3)), vec2(_GLF_IDENTITY((injectionSwitch)[0], float(mat3x4((injectionSwitch)[0], round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0)), 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, tan(0.0), 0.0, 1.0)), 1.0, sqrt(determinant(mat2(1.0, 0.0, 1.0, 1.0))), abs(abs(1.0)), 0.0, 1.0))), (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), bvec2(false, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), false, true)))))))).y), true && ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), bvec2(false, true))).y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), bvec2(false, true))).y, ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))), injectionSwitch, injectionSwitch)), mix(vec2((injectionSwitch)[0], _GLF_FUZZED(6.1)), vec2(_GLF_FUZZED(3.9), (injectionSwitch)[1]), bvec2(false, true))).y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), mix(float((injectionSwitch.x)), float(_GLF_FUZZED((- -9.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * 1.0) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, 0 | (4)), 64, 2);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), ((! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || false)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec4((_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), true && (! (false)))) && true))), bool(bvec2(false, false))))), false || (bool(bvec4((_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, _GLF_IDENTITY(false, bool(bvec2(false, false))))))))) || false)), false || (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY((! (_GLF_DEAD(false))) || false, (_GLF_IDENTITY((! (_GLF_DEAD(false))) || false, ((! (_GLF_DEAD(false))) || false) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, true), true))))))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, true && (false))), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), false || (true && (false)))))), (! (_GLF_IDENTITY(true && (false), false || (_GLF_IDENTITY(true && (false), false || (true && (false))))))) || false))))))))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), true && (true && (false))))), _GLF_IDENTITY(! (! (bool(_GLF_IDENTITY(false, true && (false))))), bool(bvec3(! (! (bool(_GLF_IDENTITY(false, true && (false))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))), false || (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), bool(bvec2(_GLF_IDENTITY(false, true && (false)), false)))))))))))), ! (! (bool(_GLF_IDENTITY(false, true && (false))))))))), true, true)))), true))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_DEAD(false), true, true))))))), true))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(buf[virtual_gid], buf[virtual_gid])), (buf[virtual_gid]) << 0u), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, (64) ^ 0), (64) | (64)), (_GLF_IDENTITY(_GLF_IDENTITY(64, (64) | (64)), (_GLF_IDENTITY(64, (64) | (64))) >> 0)) >> 0), 2);
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(max(1.3, 9.3)))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec3(bvec3(false, true, false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(true, (true) && true), false))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))), 1.0, sqrt(_GLF_ZERO(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-658.024) : 0.0)), injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, _GLF_IDENTITY(cos(0.0), 1.0 * (cos(0.0))), 0.0, _GLF_IDENTITY(1.0, exp(0.0) * (1.0)), 1.0), mat4(1.0) * (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))), 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, (0.0) + 0.0), 0.0, 0.0, 1.0, 0.0, 0.0, sqrt(abs(0.0)), cos(0.0), 0.0, 0.0, 0.0, tan(_GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))))))), 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, cos(0.0), 0.0, 1.0, 1.0), (mat4(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(1.0, 1.0) * ((injectionSwitch) * mat2(1.0)))), 1.0, sqrt(_GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, cos(0.0), 1.0, cos(0.0), 0.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, ~ (~ (64))), _GLF_IDENTITY(_GLF_IDENTITY(4, 0 | (4)), (_GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(4, max(4, 4)), 0 | (_GLF_IDENTITY(4, max(4, 4))))))) * 1));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
