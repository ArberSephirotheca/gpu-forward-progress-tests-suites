#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_7 {
 mat2x3 _f0;
} ;

struct _GLF_struct_6 {
 vec3 _f0;
 uvec3 _f1;
 uint _f2;
} ;

struct _GLF_struct_5 {
 ivec2 _f0;
 float _f1;
 mat4 _f2;
 float _f3;
 uvec4 _f4;
 bvec2 _f5;
} ;

struct _GLF_struct_4 {
 bvec2 _f0;
 mat4x2 _f1;
 mat4x3 _f2;
 uvec2 _f3;
 vec4 _f4;
 ivec4 _f5;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_2 {
 int _f0;
 vec2 _f1;
} ;

struct _GLF_struct_1 {
 vec2 _f0;
 uvec3 _f1;
 mat3x4 _f2;
 uint _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_0 {
 ivec4 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 ivec4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_9 {
 mat3x2 _f0;
 bvec4 _f1;
 vec4 _f2;
 uvec4 _f3;
 mat3x4 _f4;
 uint next_virtual_gid;
 _GLF_struct_3 _f5;
 _GLF_struct_8 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z = subgroup_id;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))), true && (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))), true))), ((bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) || false))), true)))) || false) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)))))) || false), true, false)), true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec3(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), bool(bool(! (! (false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))))))))))))))))))))) || false))))) || false), true, false)))))) && true)))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, cos(tan(0.0)), 1.0, 0.0, abs(1.0), 0.0, 1.0)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), false, false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(9.2))))))))), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))), bvec2(bvec2(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))) || false)))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.y = num_workgroup;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))) && true), bool(bool(! (_GLF_DEAD(false)))))))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true), false)), false))))), false || (bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true), _GLF_IDENTITY(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true), false)), bvec2(bvec3(bvec2(bvec3(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)), true), false)), false)))))))) || false)), bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(false)) && true)) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))))), true))), bool(bool(_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, false))))))))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), true))))))), bool(bool(! (_GLF_DEAD(false)))))))))))), false, true, false))))), ((! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))))), true)), bool(bvec4(bool(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false))))), true)), true, false, true)))), bool(bool(! (_GLF_DEAD(false)))))))))))), bool(bvec4(! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || false)), bool(bool(! (_GLF_DEAD(false)))))))))))), false, true, false)))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-2041.3706) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-79.86)), float(injectionSwitch.y), bool(true)))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w = workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mix(vec2(_GLF_FUZZED((-9294.8759 / 636.958)), _GLF_FUZZED((9.3))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-9294.8759 / 636.958)), _GLF_FUZZED((9.3))), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], mix(float((injectionSwitch)[1]), float(_GLF_FUZZED(float(false))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(true, true))).x, injectionSwitch.x))) - 0.0), max(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x)), _GLF_IDENTITY((injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(84.00))), float(mat2x4(_GLF_IDENTITY((injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) * 1.0))) : _GLF_FUZZED(84.00))), min((injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(84.00), (true ? _GLF_IDENTITY(_GLF_FUZZED(84.00), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(84.00), 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(_GLF_FUZZED(84.00), 0.0, 1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-945.910)), bool(false)))) : _GLF_FUZZED(4.6))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(84.00))))), 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, 0.0)))) > injectionSwitch.y)), false || ((! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(84.00))), float(mat2x4(_GLF_IDENTITY((injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(84.00))), min((injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_IDENTITY(_GLF_FUZZED(84.00), (true ? _GLF_IDENTITY(_GLF_FUZZED(84.00), _GLF_IDENTITY(float(mat2x3(_GLF_FUZZED(84.00), 0.0, 1.0, 1.0, 0.0, 1.0)), mix(float(float(mat2x3(_GLF_FUZZED(84.00), 0.0, 1.0, 1.0, 0.0, 1.0))), float(_GLF_FUZZED(-945.910)), bool(false)))) : _GLF_FUZZED(4.6))))), (injectionSwitch.x) - _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(84.00))))), 0.0, 0.0, 1.0, 0.0, tan(0.0), 1.0, 0.0)))) > injectionSwitch.y))))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), ((injectionSwitch.x)) - _GLF_IDENTITY(log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)))), mix(float(log(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), float(_GLF_FUZZED(-3.7)), bool(false)))) - 0.0) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-90.87), _GLF_FUZZED(693.924)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), bvec2(true, true))).y, (false ? _GLF_FUZZED(_GLF_IDENTITY(-1.4, _GLF_IDENTITY(max(_GLF_IDENTITY(-1.4, max(-1.4, -1.4)), -1.4), mix(float(_GLF_FUZZED(-2.6)), float(_GLF_IDENTITY(max(_GLF_IDENTITY(-1.4, max(-1.4, -1.4)), -1.4), min(max(_GLF_IDENTITY(-1.4, max(-1.4, -1.4)), -1.4), max(_GLF_IDENTITY(-1.4, max(-1.4, -1.4)), -1.4)))), bool(true))))) : injectionSwitch.y))))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true)))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), false, true))))))))) || false)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = workgroup_size * GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.w;
 uint subgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.z * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), max(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u), workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) || false) && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(924.646), _GLF_FUZZED(5.2)), bvec2(false, false))).x > injectionSwitch.y)))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  return;
 _GLF_struct_9 _GLF_struct_replacement_9 = _GLF_struct_9(mat3x2(1.0), bvec4(true), vec4(1.0), uvec4(1u), mat3x4(1.0), workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, uint(uvec3(subgroup_size, 1u, 0u)))), _GLF_struct_3(_GLF_struct_0(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) | (1))), bvec4(true)), ivec4(1), _GLF_struct_1(vec2(1.0), uvec3(_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), 0u ^ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(1u, clamp(1u, 1u, _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))))) * (1u)))))))), mat3x4(1.0), _GLF_IDENTITY(1u, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_id) : 1u)), mat4x3(1.0)), _GLF_struct_2(1, vec2(1.0))), _GLF_struct_8(_GLF_struct_4(bvec2(_GLF_IDENTITY(true, true && (true))), mat4x2(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-208.469, -4652.3903)) : 1.0))), mat4x3(1.0), uvec2(_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(subgroup_id))), 1u))), vec4(1.0), ivec4(1)), _GLF_struct_5(ivec2(1), 1.0, mat4(1.0), 1.0, uvec4(1u), bvec2(true)), _GLF_struct_6(vec3(1.0), uvec3(1u), 1u), _GLF_struct_7(mat2x3(1.0))));
 if(_GLF_DEAD(false))
  return;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x = _GLF_struct_replacement_9.next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 uint read = 0;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidnum_workgroupsubgroup_idworkgroup_id.x], uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), min(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))), _GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, max(1, 1)))), 1))) - 0))))), (_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, _GLF_IDENTITY(1, (1) | (1))), (min(1, _GLF_IDENTITY(1, (1) | (1)))) / 1))) | (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))))))), 4, 64, 4);
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, max(0, 0)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec3(4, 1, ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, int(ivec3(4, 1, ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0)), (_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, int(ivec3(4, 1, ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0)), clamp(int(ivec2(_GLF_IDENTITY(4, int(ivec3(4, 1, ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0)), int(ivec2(_GLF_IDENTITY(4, int(ivec3(4, 1, ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0)), int(ivec2(_GLF_IDENTITY(4, int(ivec3(4, 1, ((_GLF_IDENTITY(1, (1) | (1)) << _GLF_IDENTITY(int(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) | (4))), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))), 0))))) * 1)), min(_GLF_IDENTITY(4, int(ivec3(4, 1, ((1 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 0))) >> _GLF_IDENTITY(int(4), int(4)))))), _GLF_IDENTITY(4, int(ivec3(4, 1, (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)), (0 | 0) | ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4)))))))))), 64, 2), (_GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1)), int(int(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (4) ^ 0))), 1)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (4)))), 64, 2), uint(uvec4(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((1u ^ 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((1u ^ 1u)), 1u * (((1u ^ 1u)))), (true ? ~ ((1u ^ 1u)) : _GLF_FUZZED(subgroup_size))))), 0u, 0u))), (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1)), int(int(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (4) ^ 0))), 1)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (4)))), 64, 2), uint(uvec4(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((1u ^ 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((1u ^ 1u)), 1u * (((1u ^ 1u)))), (true ? ~ ((1u ^ 1u)) : _GLF_FUZZED(subgroup_size))))), 0u, 0u)))) | (_GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, int(int(4))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(4, (4) ^ 0), 1)), int(int(int(ivec2(_GLF_IDENTITY(4, _GLF_IDENTITY((4) ^ 0, min((4) ^ 0, (4) ^ 0))), 1)))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) | (4)))), 64, 2), uint(uvec4(atomicLoad(buf[virtual_gid], 4, 64, 2), _GLF_IDENTITY((1u ^ 1u), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY(((1u ^ 1u)), 1u * (((1u ^ 1u)))), (true ? ~ ((1u ^ 1u)) : _GLF_FUZZED(subgroup_size))))), 0u, 0u)))))) ^ 0u);
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], max(buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], clamp(buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) / 1u)], buf[virtual_gid], buf[virtual_gid])))), 4, _GLF_IDENTITY(64, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | 0), 1, _GLF_IDENTITY(0, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), ((~ (0))) << _GLF_IDENTITY(0, max(0, 0)))))), 1, 0), _GLF_IDENTITY(min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) | (0))))))), 1, 0)) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), max(~ (~ (0)), _GLF_IDENTITY(~ (~ (0)), 0 + (~ (~ (0))))))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(ivec4(0, 0, 0, 1)))) | (0))))))), 1, 0)), (false ? _GLF_FUZZED(bitfieldExtract(ivec3(41203, 74443, -15232), findLSB(-34730), 29916)) : _GLF_IDENTITY(min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) | (0)), _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, int(int(0))), 0, 0))))))))), 1, 0), _GLF_IDENTITY((ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)), (true ? (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)) : _GLF_FUZZED(ivec3(44008, -48479, -41480)))) >> ivec3(0, 0, 0))), ivec3(1, _GLF_IDENTITY(1, min(1, 1)), 1) * (_GLF_IDENTITY((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, _GLF_IDENTITY(0, max(0, 0)))) >> ivec3(0, 0, 0))), clamp((_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ _GLF_IDENTITY((0), max(_GLF_IDENTITY((0), (0 & 57397) + ((0))), (0))))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)) >> ivec3(0, 0, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)) >> ivec3(0, _GLF_IDENTITY(0, int(ivec4(_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-77333))), 1, 0, 0))), 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)) >> ivec3(0, 0, 0))))))) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)), _GLF_IDENTITY((min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(79730), (_GLF_FUZZED(79730)) ^ 0) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0)))))) / 1), 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findMSB(80573)) : 0)))) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))), ((min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(1, (1) - 0), 0), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), min(_GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), (_GLF_IDENTITY(0, ~ (~ (0)))) | (_GLF_IDENTITY(0, ~ (~ (0)))))))))))) / 1), _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findMSB(80573)) : 0)))) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)))) | ((min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), int(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)))) / 1), 1, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(findMSB(80573)) : 0)))) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))))) | ivec3(0, 0, 0)))))), (int(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(79730, (79730) - 0)) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (false ? _GLF_FUZZED(ivec3(-52679, 55809, 23742)) : ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(79730, (79730) - 0)) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(79730) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0))), (_GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0)))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (_GLF_IDENTITY(false, true && (false)))), ! (! (_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(79730) : _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (0))), ~ (~ (0)))) / ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), 0 ^ (int(3))))) >> _GLF_IDENTITY(int(3), int(3)))))), 1, 0)) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(_GLF_IDENTITY(79730, (79730) - _GLF_IDENTITY(_GLF_IDENTITY(0, (0) >> 0), int(int(_GLF_IDENTITY(0, (0) >> 0)))))) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, _GLF_IDENTITY(0, min(_GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0) << 0, ~ (~ ((0) << 0))), (false ? _GLF_FUZZED(-5425) : _GLF_IDENTITY((0) << 0, ~ (~ ((0) << 0)))))), _GLF_IDENTITY(0, int(ivec2(0, 0)))))))), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))))) | (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, _GLF_IDENTITY(~ (~ (0)), (true ? ~ (~ (0)) : _GLF_FUZZED((int(false)))))))), 1, _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))) << 0))), ~ (~ (_GLF_IDENTITY(max(0, 0), clamp(max(0, 0), max(0, 0), _GLF_IDENTITY(max(0, 0), (_GLF_IDENTITY(max(0, 0), max(max(0, 0), max(0, 0)))) << 0)))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(79730), max(_GLF_IDENTITY(_GLF_FUZZED(79730), (true ? _GLF_FUZZED(79730) : _GLF_FUZZED(-73962))), _GLF_IDENTITY(_GLF_FUZZED(79730), 0 + (_GLF_FUZZED(79730))))) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_IDENTITY(_GLF_FUZZED(79730), max(_GLF_IDENTITY(_GLF_FUZZED(79730), (true ? _GLF_FUZZED(79730) : _GLF_FUZZED(-73962))), _GLF_IDENTITY(_GLF_FUZZED(79730), 0 + (_GLF_FUZZED(79730))))) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)) | (ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)))) ^ ivec3(0, 0, 0)), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0)))), 0 | (int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), min(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), (_GLF_IDENTITY(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), min(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0)))))))) | (_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))))), 1, 0)) | (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0), ivec3(ivec4(ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ _GLF_IDENTITY((~ (0)), (false ? _GLF_FUZZED(floatBitsToInt(649.372)) : (~ (0))))))), 1, 0), 1))))), ivec3(_GLF_IDENTITY(0, (false ? _GLF_FUZZED(79730) : _GLF_IDENTITY(0, ~ (~ (0))))), 1, 0))))))))), (1 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (ivec4(_GLF_IDENTITY(64, (64) | 0), 1, 0, (1 ^ (0 << _GLF_IDENTITY(int(7), int(7)))))) >> ivec4(0, 0, 0, 0)), (_GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | 0), 1, 0, (1 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (ivec4(_GLF_IDENTITY(64, (64) | 0), 1, 0, (1 ^ (0 << _GLF_IDENTITY(int(7), int(7)))))) >> ivec4(_GLF_IDENTITY(0, (0) >> 0), _GLF_IDENTITY(0, _GLF_IDENTITY(0, max(0, 0)) ^ (_GLF_IDENTITY(0, int(int(0))))), 0, 0)), (_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, (64) | 0), 1, 0, (1 ^ (0 << _GLF_IDENTITY(int(7), int(7))))), (ivec4(_GLF_IDENTITY(64, (64) | 0), 1, 0, (1 ^ (0 << _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(61281)))))))) >> ivec4(_GLF_IDENTITY(0, (0) * 1), 0, 0, 0))) - ivec4(0, 0, 0, 0))) - (ivec4(0, 0, 0, 0) << _GLF_IDENTITY(ivec4(_GLF_IDENTITY(4, _GLF_IDENTITY(int(int(4)), (int(int(4))) | (int(int(4)))))), ivec4(4)))))), 2);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)), injectionSwitch))) - vec2(0.0, 0.0)))))).x > injectionSwitch.y))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0)))))).y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch))[1])).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(-78340)))))])).x > injectionSwitch.y) || false)))), (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))))))), bool(bool(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bvec2(bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec3(bool(bvec2(false, false)), _GLF_IDENTITY(false, true && (false)), false)))) || false)))))))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(checker[virtual_gid], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
