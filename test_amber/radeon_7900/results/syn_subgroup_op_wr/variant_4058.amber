#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 uint _f0;
 vec2 _f1;
 uint _f2;
} ;

struct _GLF_struct_18 {
 bvec2 _f0;
 uvec3 _f1;
 bool _f2;
 bvec2 _f3;
 mat4x3 _f4;
 uint _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_17 {
 mat3x4 _f0;
 ivec3 _f1;
 float _f2;
 uvec2 _f3;
 vec2 _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_16 {
 uint _f0;
 bool _f1;
 mat3x4 _f2;
 mat4x3 _f3;
 ivec2 _f4;
 uvec3 _f5;
} ;

struct _GLF_struct_15 {
 ivec4 _f0;
 bool _f1;
 float _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_20 {
 mat4x2 _f0;
 _GLF_struct_15 _f1;
 _GLF_struct_16 _f2;
 mat3x4 _f3;
 _GLF_struct_17 _f4;
 _GLF_struct_18 _f5;
 _GLF_struct_19 _f6;
} ;

struct _GLF_struct_13 {
 mat2x3 _f0;
 ivec4 _f1;
} ;

struct _GLF_struct_12 {
 vec3 _f0;
 mat2 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_14 {
 _GLF_struct_12 _f0;
 _GLF_struct_13 _f1;
} ;

struct _GLF_struct_21 {
 uint next_virtual_gid;
 _GLF_struct_14 _f0;
 _GLF_struct_20 _f1;
} ;

struct _GLF_struct_9 {
 bvec2 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 mat3x4 _f3;
} ;

struct _GLF_struct_10 {
 bvec2 _f0;
 vec2 _f1;
 bvec2 _f2;
 _GLF_struct_9 _f3;
 uint workgroup_base;
} ;

struct _GLF_struct_7 {
 uvec2 _f0;
 ivec4 _f1;
 mat3x2 _f2;
 int _f3;
 mat4x3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_6 {
 mat4x3 _f0;
 mat3x4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_5 {
 uvec2 _f0;
 ivec4 _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_8 {
 bvec2 _f0;
 mat3 _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 uint _f4;
 _GLF_struct_7 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_3 {
 mat2x3 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_2 {
 mat3x2 _f0;
 bvec3 _f1;
 vec4 _f2;
 mat2 _f3;
} ;

struct _GLF_struct_1 {
 bool _f0;
 bvec3 _f1;
 uvec3 _f2;
 uvec2 _f3;
 vec4 _f4;
} ;

struct _GLF_struct_4 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 bvec4 _f2;
 _GLF_struct_3 _f3;
} ;

struct _GLF_struct_11 {
 _GLF_struct_4 _f0;
 _GLF_struct_8 _f1;
 _GLF_struct_10 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_0 {
 mat3x2 _f0;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bvec4((false), true, true, false)))))), (! (false)) && true)))), true && (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bvec4((false), true, true, false)))))), (! (false)) && true)))))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 _GLF_struct_0 _GLF_struct_replacement_0 = _GLF_struct_0(mat3x2(1.0), gl_WorkGroupID.x);
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), 0 + (int(6)))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(_GLF_struct_4(_GLF_struct_1(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! (! (true)))))), bvec3(true), _GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(uvec3(uvec3(1u))), (uvec3(uvec3(uvec3(1u)))) >> uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (uvec3(uvec3(uvec3(1u)))))), uvec2(1u), vec4(1.0)), _GLF_struct_2(mat3x2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), false))), vec4(1.0), mat2(1.0)), bvec4(true), _GLF_struct_3(mat2x3(1.0), bvec4(true))), _GLF_struct_8(bvec2(true), mat3(1.0), _GLF_struct_5(uvec2(1u), ivec4(1), mat4x2(1.0)), _GLF_struct_6(mat4x3(1.0), mat3x4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4x2(1.0)), 1u, _GLF_struct_7(uvec2(1u), ivec4(1), mat3x2(1.0), 1, mat4x3(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(84.12)))), uvec4(1u)), mat4(1.0)), _GLF_struct_10(bvec2(true), vec2(1.0), bvec2(true), _GLF_struct_9(bvec2(true), mat3x2(1.0), mat4x2(1.0), mat3x4(1.0)), _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), workgroup_size))))) * _GLF_IDENTITY(_GLF_struct_replacement_0.workgroup_id, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_0.workgroup_id), uint(uvec3(uint(_GLF_struct_replacement_0.workgroup_id), 1u, 1u)))))), _GLF_IDENTITY(uvec4(1u), (uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) ^ 0u))), (0u) | (0u))) >> _GLF_IDENTITY(uvec4(2u), uvec4(_GLF_IDENTITY(2u, ~ (~ (2u)))))) ^ (uvec4(1u))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     barrier();
    }
   else
    {
    }
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 & 38898); _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, false || (false)))), ! (! (! (! (_GLF_IDENTITY(false, false || (false))))))))))), bool(bvec2(_GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false || ((_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bool(bool(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false, bool(bvec2(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false, true)))))), false)))), false)))) || false)), _GLF_IDENTITY(bool(bool((_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), false, true, true))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false)))) || false)))), false || (bool(bool((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.3)), bool(false))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0), vec2(vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) * vec2(1.0, 1.0))))), injectionSwitch), vec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec4(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))), (vec4(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) * mat4(1.0)), (vec4(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))) - vec4(0.0, 0.0, 0.0, 0.0)), mix(vec4((vec4(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2((injectionSwitch) * mat2(1.0), round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ONE(1.0, injectionSwitch.y), exp(0.0), 1.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))), injectionSwitch), 0.0, 1.0))[0], _GLF_FUZZED(735.522), _GLF_FUZZED(8.7), _GLF_FUZZED(0.8)), vec4(_GLF_FUZZED(-14.19), (vec4(min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 1.0, 0.0), (false ? _GLF_FUZZED(mat2(3.7, 76.21, 41.23, 90.50)) : mat2(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), 1.0, 0.0)))))), injectionSwitch), 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(965.958)))))[1], (vec4(min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch), 0.0, 1.0))[2], (vec4(min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))), injectionSwitch), 0.0, 1.0))[3]), bvec4(false, true, true, true)))))).y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, bool(bvec4((injectionSwitch.x > injectionSwitch.y) || false, true, false, _GLF_IDENTITY(false, (false) || false)))))))), (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0)))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true)))) || false), false)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0)))) / vec2(1.0, 1.0)).y, 0.0, 0.0, 0.0)))))), true && ((_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)))))))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2((_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), true)))) || false), false)))))) || false))))))))))
      barrier();
    }
  }
 else
  {
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base + subgroup_base, 0u ^ (_GLF_struct_replacement_11._f2.workgroup_base + subgroup_base)), _GLF_struct_replacement_11._f2.workgroup_base + subgroup_base, _GLF_struct_replacement_11._f2.workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_IDENTITY(_GLF_struct_replacement_11._f2.workgroup_base, (true ? _GLF_struct_replacement_11._f2.workgroup_base : _GLF_FUZZED(virtual_gid))) + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % subgroup_size), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)))), 0u, 0u))) + 1) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1)), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size, uint(uvec4((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size, 1u, 0u, 0u))))))) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x)))), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u)))) * 1u) + 1) % subgroup_size)) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x))))) << uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), uvec3(uvec4(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size))))) | 0u), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))), (uvec4(subgroup_local_id, 1u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))) << uvec4(0u, 0u, 0u, 0u)))), 0u, 0u))) + 1) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x)))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1, (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) | (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1)), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) << _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)))) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size, 0u | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size, uint(uvec4((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size, 1u, 0u, 0u))))))) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x)))), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))), (_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u)))) * 1u) + 1) % subgroup_size)) | 0u), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 0u, 0u))) + 1) % subgroup_size)) | 0u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0)))) * (injectionSwitch)).x))))) << uvec3(0u, 0u, 0u))) + uvec3(0u, 0u, 0u)))) - uvec3(0u, 0u, 0u)), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))))), _GLF_struct_14(_GLF_struct_12(vec3(1.0), mat2(1.0), _GLF_IDENTITY(uvec4(1u), ~ (_GLF_IDENTITY(~ (uvec4(1u)), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))) >> uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))) >> uvec4(0u, 0u, 0u, 0u))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), (_GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u))))) >> uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, 0u, 0u))) * uvec4(1u, 1u, 1u, 1u))))), _GLF_struct_13(mat2x3(1.0), ivec4(1))), _GLF_struct_20(mat4x2(1.0), _GLF_struct_15(ivec4(1), true, 1.0, mat4x2(1.0)), _GLF_struct_16(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec4(1u, 0u, (0u & 64264u), uint(_GLF_ONE(1.0, injectionSwitch.y))), uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uint(0u)), uint(uvec4(uint(uint(0u)), 0u, 1u, 1u))))) | (uvec4(1u, 0u, (0u & _GLF_IDENTITY(64264u, _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(64264u, _GLF_IDENTITY((_GLF_IDENTITY(64264u, max(64264u, 64264u))), ~ (~ ((_GLF_IDENTITY(64264u, max(64264u, 64264u)))))) | _GLF_IDENTITY((_GLF_IDENTITY(64264u, (64264u) * (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (_GLF_IDENTITY(6u, (6u) >> 0u)) >> (0u << _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_id) : uint(5u))))))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), clamp((_GLF_IDENTITY(64264u, (64264u) * (_GLF_IDENTITY(_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u, 0u)), uint(uvec4(uint(uvec3(_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))), 1u, 0u)), 0u, 1u, 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(64264u, (64264u) * (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (_GLF_IDENTITY(6u, 1u * (6u))))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) << _GLF_IDENTITY(uint(6u), uint(6u))), ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) << _GLF_IDENTITY(uint(6u), uint(6u)))) | ((uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) << _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))))))), ((_GLF_IDENTITY(64264u, (64264u) * (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))) ^ 0u), (_GLF_IDENTITY(64264u, (64264u) * (_GLF_IDENTITY((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), clamp(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u)), min((uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)), (uint(_GLF_ONE(1.0, injectionSwitch.y)) << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))))), 1u, uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), clamp(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))))), 1u)), (true ? uint(uvec4(_GLF_IDENTITY(64264u, (_GLF_IDENTITY(64264u, max(64264u, 64264u))) | (64264u)), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), _GLF_IDENTITY(1u, 0u | (1u)))) : _GLF_FUZZED(subgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-3.1) : _GLF_ONE(1.0, injectionSwitch.y)))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ONE(1.0, injectionSwitch.y)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (false ? _GLF_FUZZED(-3.1) : _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))))), (false ? _GLF_FUZZED(num_workgroup) : uint(_GLF_ONE(1.0, injectionSwitch.y))))) ^ 0u)))))), true, mat3x4(1.0), mat4x3(1.0), ivec2(1), uvec3(1u)), mat3x4(1.0), _GLF_struct_17(mat3x4(1.0), _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))) | ivec3(_GLF_IDENTITY(_GLF_IDENTITY(0, (0) << (0 & -81937)), min(0, 0)), _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, (0) << 0), 0)), _GLF_IDENTITY(0, _GLF_IDENTITY(max(0, 0), (max(0, 0)) / 1))))), min((_GLF_IDENTITY(ivec3(1), (_GLF_IDENTITY(ivec3(1), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(4870, 73582, 55234), ivec3(1, 1, 1) * (_GLF_IDENTITY(ivec3(4870, 73582, 55234), (_GLF_IDENTITY(ivec3(4870, 73582, 55234), (false ? _GLF_FUZZED(ivec3(19587, -11169, 42237)) : ivec3(4870, 73582, 55234)))) >> ivec3(0, 0, 0))))) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, _GLF_IDENTITY(73582, _GLF_IDENTITY(int(ivec2(73582, 0)), ~ (~ (int(ivec2(73582, 0)))))), 55234)) : _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0), max(_GLF_IDENTITY((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0), ((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0)) * ivec3(1, 1, 1)), _GLF_IDENTITY((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0), ~ (~ ((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0))))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, _GLF_IDENTITY(73582, _GLF_IDENTITY(int(ivec2(73582, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, int(_GLF_IDENTITY(ivec2(0, 1), clamp(ivec2(0, 1), ivec2(0, 1), ivec2(0, 1)))))) << 0))), ~ (~ (int(ivec2(73582, 0)))))), 55234)) : _GLF_IDENTITY(ivec3(1), ivec3(ivec4(_GLF_IDENTITY(ivec3(1), (ivec3(1)) | (_GLF_IDENTITY(ivec3(1), min(ivec3(1), ivec3(1))))), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))), (ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(4870, 73582, 55234), (ivec3(4870, 73582, 55234)) / ivec3(1, 1, 1))) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, _GLF_IDENTITY(73582, _GLF_IDENTITY(int(ivec2(73582, 0)), ~ (~ (int(ivec2(73582, 0)))))), 55234)) : _GLF_IDENTITY(ivec3(1), _GLF_IDENTITY(ivec3(ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y)))), min(_GLF_IDENTITY(ivec3(ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? ivec3(ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(ivec3(11920, -94419, -37410)))), ivec3(ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))))), (ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0))) ^ ivec3(0, 0, 0))), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, _GLF_IDENTITY(73582, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(73582, (_GLF_IDENTITY(73582, (73582) / 1)) | 0), 0)), ~ (~ (int(ivec2(73582, 0)))))), 55234)) : _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))), (ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(_GLF_IDENTITY(ivec3(4870, 73582, 55234), ivec3(0, 0, 0) | (ivec3(4870, 73582, 55234)))) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | _GLF_IDENTITY(((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))), (((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))) * ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0)), (_GLF_IDENTITY(ivec3(ivec3(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, _GLF_IDENTITY(73582, _GLF_IDENTITY(int(ivec2(73582, 0)), ~ (~ (int(ivec2(73582, 0)))))), 55234)) : _GLF_IDENTITY(ivec3(1), ivec3(ivec4(ivec3(1), int(_GLF_ONE(1.0, injectionSwitch.y)))))))))), _GLF_IDENTITY((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0), (_GLF_IDENTITY((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0), ivec3(0, 0, 0) + ((ivec3(ivec3(_GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)), ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))) | ((false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1))))) ^ (ivec3(0, 0, 0) >> _GLF_IDENTITY(ivec3(6), ivec3(6))))))) ^ ivec3(0, 0, 0)))) | ivec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) ^ ivec3(0, 0, 0))))))))))) | ivec3(0, 0, 0))), (_GLF_IDENTITY(ivec3(_GLF_IDENTITY(1, 0 | (1))), (_GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(4870, 73582, 55234)) : ivec3(1)))) | ivec3(0, 0, 0))))) << ivec3(0, 0, 0)), 1.0, uvec2(1u), vec2(1.0), ivec2(1)), _GLF_struct_18(bvec2(true), uvec3(1u), true, bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))), mat4x3(1.0), 1u, bvec3(true)), _GLF_struct_19(1u, _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec2(-162.185, 4439.6623).y, (vec2(-162.185, 4439.6623).y) + determinant(mat4(0.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, tan(0.0), 0.0, 0.0, sin(0.0))))), (vec2(1.0))[1]), vec2((vec2(1.0))[0], _GLF_FUZZED(-166.342)), bvec2(true, false))), 1u)));
 if(_GLF_DEAD(false))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
  }
 uint read = 0;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       barrier();
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) || false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_21.next_virtual_gid, (_GLF_struct_replacement_21.next_virtual_gid) ^ 0u)], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) * 1u), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) + 0u), (_GLF_IDENTITY(uint(1), clamp(uint(1), uint(1), uint(1)))) * 1u)), (0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))), 0u ^ (uint(_GLF_IDENTITY(uint(1), ~ (~ (uint(1))))))))), (uint(1)) + 0u), (uint(1)) * 1u))) / 1u))) ^ 0u), 4, 64, 4);
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), true && (_GLF_WRAPPED_IF_TRUE(true))))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(int(int(6))), int(_GLF_IDENTITY(ivec2(int(int(int(6))), 0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? ivec2(int(int(int(6))), 0) : _GLF_FUZZED(ivec2(54022, 74478)))))))))); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0))).y))))))
          {
          }
         else
          {
           if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_FUZZED(-7573)))), max(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_FUZZED(-7573)))), max((subgroup_local_id % _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_FUZZED(-7573)))), (subgroup_local_id % _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, min(2, 2)) : _GLF_FUZZED(-7573)))))), (subgroup_local_id % _GLF_IDENTITY(2, (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, (2) | (2)), min(2, 2)) : _GLF_FUZZED(-7573)))))) == 0)
            {
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(normalize(-6.5)), (false ? _GLF_FUZZED(trunc(5127.9898)) : _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(normalize(-6.5)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(normalize(-6.5))) / 1.0)))), clamp((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(normalize(-6.5))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(normalize(-6.5))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(normalize(-6.5)))))), _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(2133.3476) : 0.0)) : _GLF_FUZZED(distance(trunc(-74.39), -33.84)))), 0.0, 1.0, 1.0, 0.0))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))))))
              {
              }
             else
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, 0 | (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) >> 0))))
                {
                 subgroupAll(false);
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | 0u))), 4, 64, 2);
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
                {
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
              }
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(0), int(0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) >> 0))) >> _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter ++)
              {
               do
                {
                 do
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))) > injectionSwitch.y))))
                      {
                       do
                        {
                         if(_GLF_DEAD(false))
                          barrier();
                         if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
                          {
                           barrier();
                           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
                            {
                             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                              barrier();
                            }
                          }
                         else
                          {
                           if(_GLF_DEAD(false))
                            barrier();
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                    }
                   else
                    {
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                 do
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 subgroupAll(false);
                 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) && true))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    barrier();
                   barrier();
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) ^ 0)); _injected_loop_counter --)
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), 1 * (int(0)))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), 1 * (int(0))))) - 0), (_GLF_IDENTITY(_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), 1 * (int(0)))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), 1 * (int(0))))) - 0), (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), 1 * (int(0)))), ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(0, 1)), (int(ivec2(0, 1))) + 0))), _GLF_IDENTITY(_GLF_IDENTITY(int(0), 0 ^ (int(0))), 1 * (int(0))))) - 0)) | 0)) / 1))); _injected_loop_counter ++)
                    {
                     do
                      {
                       read = atomicLoad(buf[virtual_gid], 4, 64, 2);
                       if(_GLF_DEAD(false))
                        barrier();
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                    }
                  }
                }
               else
                {
                }
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) : _GLF_FUZZED(5.9))) > injectionSwitch.y))))
            barrier();
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))));
            }
           else
            {
            }
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
          }
         do
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         do
          {
           subgroupBarrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ! (! ((true)))))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 for(int _injected_loop_counter = (0 | 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   barrier();
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               else
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     barrier();
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                      barrier();
                    }
                   else
                    {
                    }
                  }
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                  {
                   for(int _injected_loop_counter = (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7)), _GLF_IDENTITY(int(ivec4((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)), (0 << _GLF_IDENTITY(int(5), int(5))) ^ (int(ivec4((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), clamp(int(7), int(7), int(7))), int(7)), 0, int(_GLF_ONE(1.0, injectionSwitch.y)), 1)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) << 0)); _injected_loop_counter --)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                      {
                       barrier();
                      }
                     else
                      {
                      }
                    }
                  }
                }
              }
            }
           else
            {
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             for(int _injected_loop_counter = _GLF_IDENTITY((0 ^ 1), clamp((0 ^ 1), (0 ^ 1), _GLF_IDENTITY((0 ^ 1), min((0 ^ 1), (_GLF_IDENTITY(0 ^ 1, (0 ^ 1) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(0, (0) / 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), bool(true))))) && (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0) * (injectionSwitch)).y)), true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1321.8287) : injectionSwitch.y)))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1321.8287) : injectionSwitch.y)))), (false ? _GLF_FUZZED(9044.4846) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1321.8287) : injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1321.8287) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-1321.8287) : injectionSwitch.y)))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))), true, false)), true, false))))), bool(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, true))), true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), true, false))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x, float(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0)))) - 0.0) < injectionSwitch.y)), true), bvec3(bvec3(bvec3(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), bool(bvec3(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), true, false)), true, false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                    {
                     barrier();
                    }
                   else
                    {
                     if(_GLF_DEAD(false))
                      barrier();
                    }
                  }
                }
              }
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   else
    {
    }
  }
 else
  {
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
