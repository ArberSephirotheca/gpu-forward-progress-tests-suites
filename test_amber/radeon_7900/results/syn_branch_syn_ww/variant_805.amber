#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), false, true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED(152.868)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0), (_GLF_IDENTITY(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0), transpose(transpose(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(vec2(mat4(vec2(_GLF_IDENTITY(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0), (_GLF_IDENTITY(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0), transpose(transpose(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), vec2(0.0, 0.0) + (vec2(mat4(vec2(_GLF_IDENTITY(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0), (_GLF_IDENTITY(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0), transpose(transpose(mat4(vec2((injectionSwitch)[0], (injectionSwitch)[1]), 1.0, sqrt(0.0), 0.0, 1.0, sqrt(0.0), 1.0, length(0.0), length(sqrt(vec2(0.0, 0.0))), 0.0, sqrt(1.0), 0.0, 1.0, cos(0.0), 0.0))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))), bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x < injectionSwitch.y)), true))).x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(0.0))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), true)))))))), (injectionSwitch.x > injectionSwitch.y)), false)), false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false)))), _GLF_IDENTITY(false, bool(bvec2(false, false))), false))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))))))), false)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4.1)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, _GLF_IDENTITY((false ? _GLF_FUZZED(-8.2) : -402.041), float(mat4((false ? _GLF_FUZZED(-8.2) : -402.041), 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), determinant(mat4(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(1.0, 1.0, 1.0, 0.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, sin(0.0), 1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 0.0)))))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).y, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))) : injectionSwitch)).y))) * 1.0), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))) : injectionSwitch)).y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))) : injectionSwitch)).y, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041))), max(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041))), vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))))) : injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))) : injectionSwitch, (false ? _GLF_FUZZED(vec2(-1649.7847, _GLF_IDENTITY(-402.041, (false ? _GLF_FUZZED(-8.2) : -402.041)))) : injectionSwitch) * vec2(1.0, 1.0)))).y))) * 1.0), _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec2(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false))))))), false, false))), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))), false))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(350.956), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(350.956), 0.0, 0.0), (vec3(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(350.956), 0.0, 0.0)) * mat3(1.0))), mix(float(_GLF_IDENTITY(float(_GLF_IDENTITY(vec3(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(350.956), 0.0, 0.0), (vec3(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(350.956), 0.0, 0.0)) * mat3(1.0))), float(float(float(_GLF_IDENTITY(vec3(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(350.956), 0.0, 0.0), (vec3(true ? _GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0))) : _GLF_FUZZED(350.956), 0.0, 0.0)) * mat3(1.0))))))), float(_GLF_FUZZED(-269.396)), bool(false)))))) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 0.0, sqrt(0.0), 1.0)))), float(_GLF_FUZZED(8.5)), bool(false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(63.28), (injectionSwitch)[1]), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(12.70)), bool(false))), _GLF_FUZZED(float(79271u))), max(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(12.70)), bool(false))), _GLF_FUZZED(float(79271u))), _GLF_IDENTITY(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(12.70)), bool(false))), _GLF_FUZZED(float(79271u))), (vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(12.70)), bool(false))), _GLF_FUZZED(float(79271u)))) * vec2(1.0, 1.0)))), bvec2(true, false))).y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1])).x > injectionSwitch.y) && true)))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) * 1u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(_GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, bool(bool(false)))), true, false))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, bool(bool(false)))), bool(bvec3(false || (_GLF_IDENTITY(false, bool(bool(false)))), true, false))), true)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)), true && (bool(bvec2((injectionSwitch.x > injectionSwitch.y), false))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, false, false)))) || false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((false), true), bvec2(bvec4(_GLF_IDENTITY(bvec2((false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2((false), true)), bvec2(bvec2(bvec2(bvec2((false), true))))))), false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec2(_GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) && true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true, true))))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(! (! (injectionSwitch.x > injectionSwitch.y)), ! (! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u)), ((_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u))) << 0u))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, (workgroup_id) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (workgroup_id) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, false), bvec3(bvec4(bvec3(_GLF_DEAD(false), true, false), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-5366.6732) : 0.0)), 0.0, 0.0)))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0 + (dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, determinant(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 1.0), (mat2x3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0 + (dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, determinant(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), max(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0 + (dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, determinant(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 1.0), (mat2x3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0 + (dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, determinant(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0 + (dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, determinant(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 1.0), (mat2x3(_GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), 0.0 + (dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))))), 1.0, 1.0, determinant(mat2(0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0)), 0.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))))), 1.0)), (vec2(mat3x2(injectionSwitch, _GLF_ONE(1.0, injectionSwitch.y), _GLF_IDENTITY(dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0)), dot(vec4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0), vec4(0.0, 1.0, tan(0.0), 0.0))), _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, _GLF_IDENTITY(0.0, float(mat4(0.0, sqrt(0.0), 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), (false ? _GLF_FUZZED(-623.776) : dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 1.0, determinant(mat4(sin(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sin(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))))))), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0)))), dot(vec2(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0)), dot(vec3(1.0, 0.0, 1.0), vec3(0.0, 1.0, 0.0))), 1.0), vec2(1.0, length(vec3(0.0, 0.0, 0.0))))), 1.0))) - vec2(0.0, 0.0))).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(vec4(-9.1, -21.45, 82.22, 2592.1177).y) : injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, cos(0.0) * (injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool((injectionSwitch.x > injectionSwitch.y)), (bool((injectionSwitch.x > injectionSwitch.y))) && true)))))))))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, clamp(workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u), _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, _GLF_IDENTITY((workgroup_base + subgroup_base + subgroup_local_id) | 0u, _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) >> 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), workgroup_base + subgroup_base)))) + subgroup_local_id), (true ? (workgroup_base + subgroup_base + subgroup_local_id) : _GLF_FUZZED(subgroup_base))) | _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, (0u) << (0u >> _GLF_IDENTITY(uint(4u), uint(4u)))), 0u))), (((workgroup_base + subgroup_base + subgroup_local_id) | 0u)) / (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(7u), uint(7u))), uint(uvec2((1u << _GLF_IDENTITY(uint(7u), uint(7u))), 0u))) >> _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (uint(7u)) ^ 0u)))) - 0u)), workgroup_base + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, (true ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base))))) - 0u) + ((subgroup_local_id + 1) % subgroup_size), (workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | 0u)))), (((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, 1u * (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))) | 0u))))) >> 0u)) | (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 1u * (workgroup_base))) | (workgroup_base)) + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), clamp((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size))))))) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))), max((false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), clamp((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size))))))) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), ~ (~ (_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), clamp((((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size))))))) | (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)))))))) * 1u)) | (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))) * (1))))), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) - 0u), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + _GLF_IDENTITY(1, 0 ^ (1))) | 0u), 0u, 0u, 1u)))) % subgroup_size)), (_GLF_IDENTITY((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), min((_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))), (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size), (((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u) + 1) % subgroup_size)) * _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))) | ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(0u, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(_GLF_IDENTITY(0u, (0u << _GLF_IDENTITY(uint(3u), uint(3u))) | (0u)), _GLF_IDENTITY(0u, max(0u, 0u)))), uint(uvec2(0u, 1u)))) + 0u)) + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 1u)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), clamp(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), _GLF_IDENTITY(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u), (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 1u)))) + 0u)) * 1u)))))) + 1)) << 0u) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))))) >> 0u))));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-477.794) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(true ? injectionSwitch.x : _GLF_FUZZED(2074.2553), float(mat2x3(true ? injectionSwitch.x : _GLF_FUZZED(2074.2553), 1.0, 1.0, 1.0, 0.0, determinant(mat3(1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))), injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(bvec4(bool(false), false, _GLF_IDENTITY(true, ! (! (true))), true)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(injectionSwitch.x, cos(0.0), 0.0, 1.0, 1.0, 0.0))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), ~ (~ (uint(1)))), 4, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED((25035 - -16846))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, clamp(64, 64, 64)), ~ (~ (64))), (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(-34247))), max(_GLF_IDENTITY(64, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), min((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, 0 + (64))), ((_GLF_IDENTITY(64, 0 + (64)))) ^ 0), int(ivec2((64), 0))))), _GLF_IDENTITY((64), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(39112) : (64)))))), 0 | ((~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((64), min((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, 0 + (64))), ((_GLF_IDENTITY(64, 0 + (64)))) ^ 0), int(ivec2(_GLF_IDENTITY((64), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y)))) ? _GLF_IDENTITY((64), int(ivec2((64), 1))) : _GLF_FUZZED(74351))), 0))))), _GLF_IDENTITY((64), (_GLF_IDENTITY(false, true && (false)) ? _GLF_IDENTITY(_GLF_FUZZED(39112), int(ivec3(_GLF_IDENTITY(_GLF_FUZZED(39112), (true ? _GLF_FUZZED(39112) : _GLF_FUZZED(-64546))), 0, 1))) : (64))))))))), _GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(-40197)))))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED((25035 - -16846)))))), max(~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED((25035 - -16846)))))), _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED((25035 - -16846)))))), (~ (~ (_GLF_IDENTITY(64, (true ? 64 : _GLF_FUZZED((25035 - -16846))))))) - 0)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, ~ (~ (64))), (true ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(-34247))), max(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((64), clamp((64), _GLF_IDENTITY((_GLF_IDENTITY(64, (64) | 0)), min((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, 0 + (64))), ((_GLF_IDENTITY(64, 0 + (64)))) ^ 0), int(ivec2((64), 0))))), _GLF_IDENTITY((64), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(39112) : (64))))))), _GLF_IDENTITY(64, ~ (~ (64))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(64, _GLF_IDENTITY(~ (~ (64)), (~ (~ (64))) | (~ (~ (64))))), (_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), true && (bool(bool(true))))))) ? _GLF_IDENTITY(64, ~ (~ (64))) : _GLF_FUZZED(-34247))), max(_GLF_IDENTITY(64, ~ (~ _GLF_IDENTITY((_GLF_IDENTITY(64, 1 * (64))), clamp((64), _GLF_IDENTITY((64), min((64), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(64, 0 + (64))), ((_GLF_IDENTITY(_GLF_IDENTITY(64, 0 + (_GLF_IDENTITY(64, (64) - 0))), clamp(_GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(64, 0 + (64)), _GLF_IDENTITY(64, 0 + (64)))))) ^ 0), int(_GLF_IDENTITY(ivec2((64), 0), (ivec2((64), 0)) ^ ivec2(0, 0)))))), _GLF_IDENTITY((64), (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && ((false)))) ? _GLF_FUZZED(39112) : (64))))))), _GLF_IDENTITY(64, ~ (~ (64)))))) * 1)) / _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) >> 0), 1, 1)))) / 1), 4);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bool(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED((vec3(4.1, 7.6, -69.63) * mat2x3(-2638.9495, -6806.3684, -822.200, -0.8, 3779.4811, 4239.6774))) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && true)))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec2(bool(bvec4(false, true, false, true)), false))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) >> 0u), ~ (~ _GLF_IDENTITY(((subgroup_local_id % 2)), _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), ((_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(uint(uint(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2))))), (uint(uint(_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2)))))) * ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), clamp(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u, 0u ^ ((((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u))), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u)))))) ^ (0u | 0u)), 0u, _GLF_IDENTITY(1u, min(1u, 1u))), (uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u)) | _GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))) | 0u), (((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec4(subgroup_local_id % 2, 0u, 1u, 1u)), (uint(uvec4(subgroup_local_id % 2, 0u, 1u, 1u))) / 1u))))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) * (0u ^ 1u)))), (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))) | 0u), (((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec4(subgroup_local_id % 2, 0u, 1u, 1u)), (uint(uvec4(subgroup_local_id % 2, 0u, 1u, 1u))) / 1u))))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) | 0u)) | 0u)) * (0u ^ 1u)))), ((uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), clamp(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), _GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))) ^ 0u)))))) | 0u), (((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(uint(uvec4(subgroup_local_id % 2, 0u, 1u, 1u)), (uint(uvec4(subgroup_local_id % 2, 0u, 1u, 1u))) / 1u))))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) * (0u ^ 1u))))) << uvec3(0u, _GLF_IDENTITY(0u, (0u) - 0u), 0u))) ^ uvec3(0u, 0u, 0u))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), uint(uvec2(_GLF_IDENTITY(((subgroup_local_id % 2)), min(_GLF_IDENTITY(((subgroup_local_id % 2)), min((_GLF_IDENTITY((subgroup_local_id % 2), max((subgroup_local_id % 2), (subgroup_local_id % 2)))), ((subgroup_local_id % 2)))), ((subgroup_local_id % 2)))), 1u)))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - (0u & 170522u)), max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_local_id % 2 : _GLF_FUZZED(workgroup_base))))), subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), clamp(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u)))))) ^ (0u | 0u)), 0u, 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), 0 | (~ (2))))))), (((subgroup_local_id % 2))) - 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))), clamp((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))), 0u + ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))))) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))), ((_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))) / 1u)))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))) - 0u))), 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))) / 1u)))))) | 0u), (((subgroup_local_id % 2))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) * (0u ^ 1u))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id % 2)), max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), clamp(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (subgroup_local_id)) % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, clamp(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)), subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))) % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u)))))) ^ (0u | 0u)), 0u, 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)) % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ _GLF_IDENTITY((subgroup_local_id % 2), ((subgroup_local_id % 2)) >> 0u)))))))))) | 0u), (((subgroup_local_id % 2))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) * (0u ^ 1u))))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - _GLF_IDENTITY(0u, (0u) | (0u))), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), (_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u)) | 0u))), clamp(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) | (((subgroup_local_id % 2)))), (((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) - (0u | 0u)), subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u)))))) ^ (0u | 0u)), 0u, 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % _GLF_IDENTITY(2, (false ? _GLF_FUZZED(14005) : 2))))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))) | 0u), (((subgroup_local_id % 2))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ~ (~ ((1u)))) | 0u)) * (0u ^ 1u)))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), ((_GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), (subgroup_local_id % 2), (subgroup_local_id % 2))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) * 1u)))))), (((_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) * 1u))))))) / 1u), _GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2)), subgroup_local_id % 2))))) - 0u, 1u * (_GLF_IDENTITY((((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2)), subgroup_local_id % 2))))) - 0u, max((((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2)), subgroup_local_id % 2))))) - 0u, (((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, 0u + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) % 2)), subgroup_local_id % 2))))) - 0u))))), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - _GLF_IDENTITY(0u, ~ (~ (0u)))), clamp(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, ~ (~ (2))))), (int(int(_GLF_IDENTITY(2, ~ (~ (2)))))) | 0))))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), clamp(((subgroup_local_id % 2)), ((subgroup_local_id % 2)), ((subgroup_local_id % 2)))), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) % 2, subgroup_local_id % 2))))) - 0u)))))) ^ (0u | 0u)), 0u, 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_id) : subgroup_local_id % 2)), min(subgroup_local_id % 2, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))), 0u ^ (~ (_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) / _GLF_IDENTITY(1u, uint(uvec2(1u, ((1u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), max(uint(0u), uint(0u))))) >> _GLF_IDENTITY(uint(0u), uint(0u))))))))) ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))) | 0u), (((subgroup_local_id % 2))) - 0u), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | 0u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) * (0u ^ 1u)))))))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), 1u * ((subgroup_local_id % 2)))), ((_GLF_IDENTITY((subgroup_local_id % 2), 1u * ((subgroup_local_id % 2))))) >> 0u), (((_GLF_IDENTITY(subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) * 1))), max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) | (_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) >> 0u))), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u))), max(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) | (_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) >> 0u))), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u))), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) | (_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) >> 0u))), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u)))))))) ^ (0u | 0u)), _GLF_IDENTITY(0u, ~ (~ (0u))), 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) >> 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), uint(uvec2(((subgroup_local_id % 2)), 0u)))))) - 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))) | 0u), (((subgroup_local_id % 2))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) * (0u ^ 1u))))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - _GLF_IDENTITY(0u, (false ? _GLF_FUZZED(virtual_gid) : 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), min(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uint(uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - 0u), (0u >> _GLF_IDENTITY(uint(1u), uint(1u))), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u))) ^ (0u << _GLF_IDENTITY(uint(6u), uint(6u)))) % 2))))) - 0u), clamp(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) * 1u)))))) - 0u), _GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % 2, subgroup_local_id % 2))))) - 0u), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), uint(uvec3((subgroup_local_id % 2), 0u, 1u)))), (((_GLF_IDENTITY(subgroup_local_id % 2, max(subgroup_local_id % _GLF_IDENTITY(2, max(2, 2)), subgroup_local_id % 2))))) - 0u)))))) ^ (0u | 0u)), 0u, 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u)) | (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))))))))), (((_GLF_IDENTITY(subgroup_local_id % 2, 0u ^ (_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2)))))))))) | 0u), (((subgroup_local_id % 2))) - 0u), 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | 0u)) * (0u ^ 1u)))))))), ~ (~ (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), (true ? _GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), (~ (subgroup_local_id)) / ((((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))))) : _GLF_FUZZED(subgroup_id)))) + 0u), subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) : _GLF_FUZZED(next_virtual_gid))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id))) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), clamp(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), min(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)))))))), (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) : _GLF_FUZZED(next_virtual_gid)))) * 1u)) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)), (true ? _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), subgroup_local_id)) : _GLF_FUZZED(next_virtual_gid))))) % 2))) - 0u), 0u, 1u), (uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), clamp(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) % 2)), ((subgroup_local_id % 2))))) ^ uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-8069.0570)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))))) - 0u, (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) % 2)), (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) % 2))) | (((_GLF_IDENTITY(subgroup_local_id, ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u)))) % 2)))), (_GLF_IDENTITY(((subgroup_local_id % 2)), clamp(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u)), (max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) << 0u)) % 2)), ((subgroup_local_id % 2))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, min((_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), clamp(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) % 2)), ((subgroup_local_id % 2))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u, (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, 0u + (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id))) | (subgroup_local_id)))) % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), clamp(((subgroup_local_id % 2)), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u))) % 2)), ((subgroup_local_id % 2))))) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))) - 0u))) ^ 0u)), 0u, 1u)) | _GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) - 0.0)))) + (_GLF_IDENTITY(((subgroup_local_id % 2)), max(((subgroup_local_id % 2)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2)))), _GLF_IDENTITY(0u, (0u) >> 0u) ^ (((subgroup_local_id % 2))))))))) - 0u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base)))))) ^ 0u)) << (0u | 0u))) | 0u))), ((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u))) | ((uvec3(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))))), (((subgroup_local_id % 2))) - 0u), 0u, 1u)))), max(_GLF_IDENTITY(_GLF_IDENTITY((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) - 0.0)))) + (_GLF_IDENTITY(((subgroup_local_id % 2)), max(((subgroup_local_id % 2)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2)))), _GLF_IDENTITY(0u, (0u) >> 0u) ^ (((subgroup_local_id % 2))))))))) - 0u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base)))))) ^ 0u)) << (0u | 0u))) | 0u))), ((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u))) | ((uvec3(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))))), (((subgroup_local_id % 2))) - 0u), 0u, 1u)))), ~ (~ (_GLF_IDENTITY((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) - 0.0)))) + (_GLF_IDENTITY(((subgroup_local_id % 2)), max(((subgroup_local_id % 2)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2)))), _GLF_IDENTITY(0u, (0u) >> 0u) ^ (((subgroup_local_id % 2))))))))) - 0u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base)))))) ^ 0u)) << (0u | 0u))) | 0u))), ((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u))) | ((uvec3(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))))), (((subgroup_local_id % 2))) - 0u), 0u, 1u))))))), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (_GLF_IDENTITY(((subgroup_local_id % 2)), uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))))) - 0.0)))) + (_GLF_IDENTITY(((subgroup_local_id % 2)), max(((subgroup_local_id % 2)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_local_id % 2), min((subgroup_local_id % 2), (subgroup_local_id % 2)))), _GLF_IDENTITY(0u, (0u) >> 0u) ^ (((subgroup_local_id % 2))))))))) - 0u), 0u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, 0u | (1u)) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base)))))) ^ 0u)) << (0u | 0u))) | 0u))), ((uvec3(_GLF_IDENTITY(((subgroup_local_id % 2)), (((subgroup_local_id % 2))) - 0u), 0u, 1u))) | ((uvec3(_GLF_IDENTITY(((subgroup_local_id % _GLF_IDENTITY(2, ~ (~ (2))))), (((subgroup_local_id % 2))) - 0u), 0u, 1u)))))))))))))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))), ((false)) && true)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))), true, _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), _GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), _GLF_IDENTITY(true, bool(bvec4(true, false, false, true))))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) ^ 0), 4, 4)), _GLF_IDENTITY(64, 1 * _GLF_IDENTITY((64), clamp((64), (64), (64)))), 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.85)), float(1.0), bool(true))) : _GLF_FUZZED(-715.005))))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.85)), float(1.0), bool(true))) : _GLF_FUZZED(-715.005))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.85)), float(1.0), bool(true))) : _GLF_FUZZED(-715.005))))))).x, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.85)), float(1.0), bool(true))) : _GLF_FUZZED(-715.005))))), vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.85)), float(1.0), bool(true))) : _GLF_FUZZED(-715.005)))))), (true ? vec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(40.85)), float(1.0), bool(true))) : _GLF_FUZZED(-715.005)))))) : _GLF_FUZZED(vec2(28.16, -0.0)))))).x) - 0.0) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 1.0, 1.0, 1.0, 0.0, 1.0))) > injectionSwitch.y) && true)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), int(int(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) ^ 0)) | 0)))), 2, 2)), ~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)))))), (false ? _GLF_FUZZED(5951u) : _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))), 2, 2)), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)))), (_GLF_IDENTITY((~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)))), max((~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)))), _GLF_IDENTITY((~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)))), max((~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)))), (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2))))))))) - 0))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))), 2, 2)), ~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))), 2, 2)), ~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), int(int(_GLF_IDENTITY(2, ~ (~ (2)))))), 2, 2)), ~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, 2))))))) << 0)))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), max(_GLF_IDENTITY(2, ~ (~ (2))), _GLF_IDENTITY(_GLF_IDENTITY(2, ~ (~ (2))), (_GLF_IDENTITY(2, ~ (~ (2)))) / 1)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), int(int(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (~ (2)) / int(_GLF_ONE(1.0, injectionSwitch.y)))))))), 2, 2)), ~ (~ (_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, ~ (~ (2))), 2, _GLF_IDENTITY(2, (2) | (2))))))))) << 0u)) >> 0u))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(64, 0, 1, 1), ivec4(0, 0, 0, 0) + (ivec4(64, 0, 1, 1)))), clamp(int(_GLF_IDENTITY(ivec4(64, 0, 1, 1), ivec4(0, 0, 0, 0) + (ivec4(64, 0, 1, 1)))), int(_GLF_IDENTITY(ivec4(64, 0, 1, 1), ivec4(0, 0, 0, 0) + (ivec4(64, 0, 1, 1)))), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(64, 0 + (64)), 0, 1, 1), ivec4(0, 0, 0, 0) + (ivec4(64, 0, 1, 1))))))), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) >> (1 ^ ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7))))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, false, false)))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), true)), bvec3(bvec3(bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), true))))))))) || false), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x)) < injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), true)))))) || false), (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), true)))))) || false), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), bool(bvec4((injectionSwitch.x < injectionSwitch.y), true, true, true)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec4(injectionSwitch.x, 0.0, 0.0, sqrt(1.0)), max(vec4(injectionSwitch.x, 0.0, 0.0, sqrt(1.0)), vec4(injectionSwitch.x, 0.0, 0.0, sqrt(1.0)))))) < injectionSwitch.y), bool(bvec3((injectionSwitch.x < injectionSwitch.y), true, false)))), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bool(true))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, bool(bool(true))), false, false), true)))))) || false), (injectionSwitch.x < injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false || (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))), ! (! (! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), true))))))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y)), false, false))))))) || false)), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))))) || false))))))), true && (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), abs(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), clamp(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), abs(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), abs(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), abs(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))), (true ? float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0)))), 1.0, determinant(mat4(0.0, 0.0, abs(0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, abs(1.0), 0.0)), abs(0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0)), dot(vec4(1.0, 1.0, 0.0, sqrt(1.0)), vec4(0.0, 0.0, abs(1.0), 0.0))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, _GLF_ONE(1.0, injectionSwitch.y))) : _GLF_FUZZED(582.670)))))) > injectionSwitch.y)))) || false)), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(bvec2(false, true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), false || (_GLF_IDENTITY(false, false || (false))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false, true)))), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), (true && (_GLF_DEAD(false))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false))), true && (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
