#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(-0.4)), vec2(_GLF_FUZZED(float(146071u)), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))).y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 do
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (_GLF_IDENTITY(true, ! (! (true)))))))), (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true) && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))) / 1.0), injectionSwitch.y)))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, ! (! (true)))) && true) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (! (false)))))
        {
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (false)))), (bool(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_IDENTITY(true, false || (true))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true)))))))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               barrier();
              }
             else
              {
              }
            }
           do
            {
             if(_GLF_DEAD(false))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           barrier();
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
          }
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
    barrier();
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false)))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       do
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
  }
 else
  {
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), (! (! (! (false)))) || false))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))) && true), bool(bvec3(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! _GLF_IDENTITY((! (injectionSwitch.x < injectionSwitch.y)), bool(bool((! (injectionSwitch.x < injectionSwitch.y)))))), true, false, false)))) && true), bool(bvec3(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y))), true, false, false)))) && true), true, false)))))) && true), _GLF_IDENTITY(true, (true) && true), false)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (true))), (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), (_GLF_IDENTITY(0, 1 * (0))) | (0))], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((vec3(-7241.4987, -461.657, 7.3) , -290.827)))), min(_GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((vec3(-7241.4987, -461.657, 7.3) , -290.827)))), _GLF_IDENTITY(injectionSwitch[1], (true ? injectionSwitch[1] : _GLF_FUZZED((vec3(-7241.4987, -461.657, 7.3) , -290.827)))))))).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)])).x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false, false, false)), (bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false, false, false))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(23.97), _GLF_FUZZED((+ -5.0))), bvec2(false, false))) : _GLF_FUZZED(asin(injectionSwitch)))), injectionSwitch, injectionSwitch)).y))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true), (_GLF_IDENTITY((false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true), _GLF_IDENTITY(((false) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true)), (((false) && _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, true && (true)), (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true))) || false) || false)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) + sqrt(vec2(0.0, 0.0))).y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), max(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(injectionSwitch[0], injectionSwitch[1])))).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(78.03))), injectionSwitch[1])).x < injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(78.03))), injectionSwitch[1])).x < injectionSwitch.y))), true, true), bvec3(bvec4(bvec3((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(78.03))), injectionSwitch[1])).x < injectionSwitch.y))), true, true), true)))), ! (! (bool(_GLF_IDENTITY(bvec3((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(78.03))), injectionSwitch[1])).x < injectionSwitch.y))), true, true), bvec3(bvec4(bvec3((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch[0] : _GLF_FUZZED(78.03))), injectionSwitch[1])).x < injectionSwitch.y))), true, true), true)))))))), false, false, false)), _GLF_IDENTITY((bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-4.3) : _GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1]))[1])).x < injectionSwitch.y))), false, false, false))), ! (! ((bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false, false, false)))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true))), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))) && true))), true), false, false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0), injectionSwitch.y)))), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x < injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[_GLF_IDENTITY(1, max(1, 1))])).x < injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), true, true, true))), false, false, false)), (bool(bvec4((_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) - vec2(0.0, 0.0))) / sqrt(vec2(1.0, 1.0))).x < injectionSwitch.y))), false, false, false))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-6.9) : injectionSwitch.y))) / 1.0)))) && true))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mat3(1.0) * (vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat3(1.0) * (vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) / 1.0))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false, false, false))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))) && true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mat3(1.0) * (vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat3(1.0) * (vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) / 1.0))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false, false, false))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))) && true))))), false || ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), true && (_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)) || false))))) && true)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y)), true, true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (injectionSwitch.x < injectionSwitch.y)))))))) || false))))), _GLF_IDENTITY(bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), (vec2(injectionSwitch[0], injectionSwitch[1])) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))).x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, _GLF_IDENTITY(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), clamp(determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), mat3(1.0) * (vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))))), (float(_GLF_IDENTITY(vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))), mat3(1.0) * (vec3(injectionSwitch.y, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0))))))) / 1.0))))), _GLF_IDENTITY(false, bool(bvec2(false, true))), false, _GLF_IDENTITY(false, ! (! (false))))), (bool(bvec4((_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))), false, false, false))) || false))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), false || (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))) && true)))))))))))) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-42.47)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), false || (! (! (_GLF_IDENTITY(false, (false) || false)))))) && true)), (injectionSwitch.x > injectionSwitch.y))))), bool(_GLF_IDENTITY(bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))
    {
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - int(_GLF_ZERO(0.0, injectionSwitch.x))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) << (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (0 << _GLF_IDENTITY(int(7), int(7))) | (0 << _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY(int(3), (0 & 30919) | _GLF_IDENTITY(_GLF_IDENTITY((int(3)), clamp((int(3)), _GLF_IDENTITY((int(3)), min((int(3)), (int(3)))), (int(3)))), int(ivec3((int(3)), 0, 0)))))), (_injected_loop_counter < ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(1, 1))) - int(_GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), injectionSwitch.x))) << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(3, _GLF_IDENTITY((3) << _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))))), ~ (~ (_GLF_IDENTITY((3) << _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))))), ~ (~ (_GLF_IDENTITY((3) << _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))))), ((3) << _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7)))))))))) | ((3) << _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max(_GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), max((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))), _GLF_IDENTITY((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))), 0 | ((_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(0 << _GLF_IDENTITY(int(7), int(7)), 0 | (0 << _GLF_IDENTITY(int(7), int(7))))) | (0 << _GLF_IDENTITY(int(7), int(7))))))))))))))))))), _GLF_IDENTITY(int(3), (0 & 30919) | _GLF_IDENTITY((int(3)), int(ivec3((int(3)), 0, 0))))))) || false), ! (! (_GLF_IDENTITY(_injected_loop_counter < _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec3(11621, 65725, 8577)[0]))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, min(3, 3)))) / 1), int(3))))), 0 ^ (int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3)))))))))), max((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec3(11621, 65725, 8577)[0]))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, min(3, 3)))) / 1), int(3))))), 0 ^ (int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3)))))))))), (_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec3(11621, 65725, 8577)[0]))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(_GLF_IDENTITY(3, min(3, 3)))) / 1), int(3))))), 0 ^ (int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3)))))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(_GLF_IDENTITY(3, int(ivec3(3, 0, 0))))))), (false ? _GLF_FUZZED((_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) >> 0) >> (++ _injected_loop_counter))) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3)))))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec3(11621, 65725, 8577)[0]))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3))))), 0 ^ (int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(_GLF_IDENTITY(3, ~ (~ (3))))))), (false ? _GLF_FUZZED((_injected_loop_counter >> (++ _injected_loop_counter))) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3))))))) | 0)), 0 ^ ((_GLF_IDENTITY((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec3(11621, 65725, 8577)[0]))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3))))), 0 ^ (int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3)))), (false ? _GLF_FUZZED((_injected_loop_counter >> (++ _injected_loop_counter))) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY((0 & 30919), int(ivec4((0 & 30919), (0 << _GLF_IDENTITY(int(3), int(3))), 1, 1))) | (int(3)))))), ((_GLF_IDENTITY(1, (true ? 1 : _GLF_FUZZED(ivec3(11621, 65725, 8577)[0]))) << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3))))), 0 ^ (int(int(_GLF_IDENTITY(int(3), clamp(int(3), _GLF_IDENTITY(int(3), (int(3)) / 1), int(3)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3)))), (false ? _GLF_FUZZED((_injected_loop_counter >> (++ _injected_loop_counter))) : _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3))))))) | 0)))), ! (! (_injected_loop_counter < _GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(int(3), int(3))), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3))))), (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), ~ (~ (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(3), int(3)), max(1 << _GLF_IDENTITY(int(3), int(3)), 1 << _GLF_IDENTITY(int(3), int(3)))))))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3)))), 0 ^ ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (0 & 30919) | (int(3))))))), ~ (~ ((_GLF_IDENTITY((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3)))))), ((1 << _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), ~ (~ (int(3))))))) - 0) >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(_GLF_IDENTITY(3, (3) / 1)), (0 & 30919) | (_GLF_IDENTITY(int(3), 0 | (int(3))))))))))))))))))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (! (_GLF_WRAPPED_IF_FALSE(false))) && true))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             barrier();
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
              {
               if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                }
               else
                {
                 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                  {
                   barrier();
                  }
                }
              }
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((_GLF_IDENTITY(! ((false) && true), ! (! (! _GLF_IDENTITY(((false) && true), false || (_GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))), false))))))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(! ((false) && true), ! (! (! _GLF_IDENTITY(((false) && true), false || (_GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))), false))))))))), ! (! ((_GLF_IDENTITY(! ((false) && true), ! (! (! _GLF_IDENTITY(((false) && true), false || (_GLF_IDENTITY(((false) && true), bool(bvec2(_GLF_IDENTITY(((false) && true), ! (! (((false) && true)))), false)))))))))))))))))))))
            barrier();
           do
            {
             if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true)))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           do
            {
             barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_DEAD(false)), true && (false || _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec2((_GLF_DEAD(false)), true), bvec2(bvec3(bvec2((_GLF_DEAD(false)), true), false))))))))))))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             do
              {
               do
                {
                 barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
               do
                {
                 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                  barrier();
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))));
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
              barrier();
            }
           else
            {
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), bool(bvec2(! (! (! (false))), false))))))))
                barrier();
              }
             else
              {
              }
            }
          }
        }
       else
        {
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (! (false)))))))
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (((0 >> _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(0), int(int(int(0)))), int(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec3(0, 1, 0)), (int(ivec3(0, 1, 0))) | (int(ivec3(0, 1, 0)))))))) << _GLF_IDENTITY(int(0), int(0)))); _injected_loop_counter --)
            {
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               barrier();
              }
            }
          }
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), false || (bool(false)))))) || false)))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           barrier();
          }
         else
          {
          }
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bool((false))), true && (bool(bool((false)))))))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
          }
         else
          {
           barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
        }
       else
        {
        }
      }
     barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
          }
         else
          {
           do
            {
             barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                {
                 barrier();
                }
               else
                {
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), bool(bvec2(! (_GLF_IDENTITY(false, ! (! (false)))), true)))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         do
          {
           barrier();
          }
         while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))) || false));
        }
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(float(mat4(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0)), (false ? _GLF_FUZZED(4943.1008) : float(mat4(injectionSwitch[1], 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 1.0, 0.0, 1.0, 1.0, 0.0))))))).x > injectionSwitch.y)), false))), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-2.9, -16.23)) : injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
        {
         barrier();
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
        }
       else
        {
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             barrier();
            }
           else
            {
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))), _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY((false ? _GLF_FUZZED(84927) : 0), max((false ? _GLF_FUZZED(84927) : 0), (false ? _GLF_FUZZED(84927) : 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), false))))), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), false, false), false))))), false, true), true)))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), true && ((_GLF_DEAD(false)))) || false))))))))
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y))))))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
          }
         barrier();
        }
      }
     else
      {
       barrier();
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(3.7, 7361.9571)))).x < injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false) || _GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
      }
     else
      {
      }
     barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         do
          {
           if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
            barrier();
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0))).x > injectionSwitch.y))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
        }
       else
        {
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     else
      {
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (int(_GLF_ONE(1.0, injectionSwitch.y)) & (1 ^ 0))); _injected_loop_counter ++)
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(6.4)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0)), clamp(float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0)), float(mat2x3(injectionSwitch.x, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 1.0, 0.0, 1.0))))) > injectionSwitch.y))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, false || (true))))))
    {
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))) && true)))
      {
       do
        {
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | uvec3(0u, 0u, 0u)).x;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
  }
 while(_GLF_WRAPPED_LOOP(false));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = (1 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
            }
           else
            {
             barrier();
            }
          }
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
         else
          {
          }
         barrier();
        }
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_base = workgroup_size * workgroup_id;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(_GLF_IDENTITY(36848, _GLF_IDENTITY((36848) / 1, (_GLF_IDENTITY((36848) / 1, ((36848) / 1) / 1)) | ((36848) / 1))))))), (_GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), (true ? _GLF_IDENTITY(int(6), ~ (~ (int(6)))) : _GLF_FUZZED(36848))))) ^ _GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, 0 ^ (0)))))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), bool(bvec3(bool(bvec3(! (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)), false, false)))))))
          {
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false)), false || (bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false)))))))))
              barrier();
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             barrier();
            }
           else
            {
            }
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))))), (false) && true)))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, min(workgroup_base, workgroup_base)), (workgroup_base) >> 0u) + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) | (subgroup_base), ((subgroup_base) | (subgroup_base)) >> 0u)) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 do
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
      {
       if(_GLF_DEAD(false))
        barrier();
      }
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), min(((subgroup_local_id + 1) % subgroup_size), ((subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, min(1, 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false))))))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     for(int _injected_loop_counter = (0 | 1); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
      }
    }
   else
    {
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(8), int(8))); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, _GLF_IDENTITY(0, (0) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))) ^ (1))); _injected_loop_counter ++)
            {
             barrier();
            }
          }
        }
      }
     do
      {
       do
        {
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     for(int _injected_loop_counter = _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(31.53) : injectionSwitch.y)))) || false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false)) || false), ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))) ? _GLF_FUZZED(52976) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1))))))))) | (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))))))))), clamp(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(31.53) : injectionSwitch.y)))) || false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false)) || false), ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))) ? _GLF_FUZZED(52976) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1))))))))) | (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))))))))), int(int(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(31.53) : injectionSwitch.y)))) || false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false)) || false), ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))) ? _GLF_FUZZED(52976) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1))))))))) | (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1))))))))))))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(31.53) : injectionSwitch.y)))) || false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false)) || false), ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))) ? _GLF_FUZZED(52976) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1))))))))) | (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))))))))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(31.53) : injectionSwitch.y)))) || false)))) && true)), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (((injectionSwitch.x > injectionSwitch.y)) && true) || false)) || false), ! (! (((injectionSwitch.x > injectionSwitch.y)) && true))))) ? _GLF_FUZZED(52976) : _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), ((1)) / 1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), 0 + (_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)))))))), (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1))))))))) | (int(_GLF_IDENTITY(ivec2((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), min(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), max(int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))), int(_GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), (false ? _GLF_FUZZED(ivec2(-12391, -72396)) : _GLF_IDENTITY(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), min(ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5)))), ivec2(1, (0 >> _GLF_IDENTITY(int(5), int(5))))))))))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1), ~ (_GLF_IDENTITY(~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1)), ~ (~ (~ (ivec2((_GLF_IDENTITY(1, (1) * int(_GLF_ONE(1.0, injectionSwitch.y)))) | (1), 1))))))))))))))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((false ? _GLF_FUZZED(34852) : _injected_loop_counter), ((false ? _GLF_FUZZED(34852) : _injected_loop_counter)) ^ 0)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0)))), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) ^ 0), (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0)))))) - 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) << _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (_GLF_IDENTITY(false ? _GLF_FUZZED(34852) : _injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter) ^ 0))))) != 0), ! (! (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(_GLF_IDENTITY(34852, _GLF_IDENTITY((34852), ((34852)) << 0) | (34852))) : _injected_loop_counter)), (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), (_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter))) | 0)) >> 0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _GLF_IDENTITY(_injected_loop_counter, max(_injected_loop_counter, _injected_loop_counter)))), (_GLF_IDENTITY(_injected_loop_counter, _GLF_IDENTITY((false ? _GLF_FUZZED(34852) : _injected_loop_counter), 1 * ((false ? _GLF_FUZZED(34852) : _injected_loop_counter))))) << 0), _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)), _GLF_IDENTITY(_injected_loop_counter, (false ? _GLF_FUZZED(34852) : _injected_loop_counter)))) != 0)))); _GLF_IDENTITY(_injected_loop_counter --, 1 * (_injected_loop_counter --)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
              barrier();
             for(int _injected_loop_counter = (1 | (1 | 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), (int(_GLF_ZERO(0.0, injectionSwitch.x))) | (int(_GLF_ZERO(0.0, injectionSwitch.x))))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
             do
              {
               if(_GLF_DEAD(false))
                barrier();
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           barrier();
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), false || (bool(bvec4(_GLF_DEAD(false), false, false, false))))))
              barrier();
            }
           else
            {
            }
          }
        }
       else
        {
        }
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(0, (true ? _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), (clamp(0, 0, 0)) ^ 0)) : _GLF_FUZZED(_injected_loop_counter)))); _injected_loop_counter --)
        {
         atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (~ (next_virtual_gid)))], uint(_GLF_IDENTITY(2, 0 | (2))), 4, 64, 4);
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             for(int _injected_loop_counter = (31362 & 0); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < 1, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (! (_GLF_IDENTITY(_injected_loop_counter < 1, false || (_injected_loop_counter < 1)))))))); _injected_loop_counter ++)
              {
               barrier();
              }
            }
           barrier();
          }
         barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-89.28), (true ? _GLF_FUZZED(-89.28) : _GLF_FUZZED(determinant(mat3(-0.3, -3103.6406, -1.4, -3531.3148, -75.23, -7.9, -0.3, -49.80, -6.6))))))) < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-61.14)), max(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-61.14)), clamp((true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-61.14)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-61.14)), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-61.14)))), (true ? _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec4(injectionSwitch.y, 1.0, 1.0, 0.0))))) : _GLF_FUZZED(-61.14))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), (min(injectionSwitch.x, injectionSwitch.x)) * 1.0))) - 0.0, max((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0))) : _GLF_FUZZED(-89.28))) < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), max(vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0)), vec2(mat3x2(injectionSwitch, 0.0, 1.0, 1.0, 0.0))))).y, (true ? injectionSwitch.y : _GLF_IDENTITY(_GLF_FUZZED(-61.14), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-61.14), mix(float(_GLF_FUZZED(-308.604)), float(_GLF_FUZZED(-61.14)), bool(true)))), float(_GLF_FUZZED(-2196.6698)), bool(false))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))) - 0.0), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0)) / abs(1.0)) : _GLF_FUZZED(-89.28))) < _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-61.14))), _GLF_IDENTITY(false, false || (false))), true, false)))))))))
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(int(7), int(7))) | (_GLF_IDENTITY(int(7), int(7))))) / 1)) ^ 0)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0))))), false, false)), false || (bool(bvec3(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)), ! (! (_GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | _GLF_IDENTITY(0, clamp(0, 0, 0))))))), false, false))))); _GLF_IDENTITY(_injected_loop_counter ++, ~ (_GLF_IDENTITY(~ (_injected_loop_counter ++), ~ (~ (~ (_injected_loop_counter ++)))))))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     else
      {
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), bool(_GLF_IDENTITY(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) && true)), (bool(_GLF_IDENTITY(true, (true) && true))) && true)))), bvec2(bvec2(bvec2(_GLF_WRAPPED_LOOP(_injected_loop_counter > 0), true)))))); _injected_loop_counter --)
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 & 1)); _injected_loop_counter ++)
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 barrier();
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  barrier();
                }
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))), true && (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))))))))
                barrier();
              }
            }
           barrier();
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), 0 ^ (int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  barrier();
                }
               if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), false || (_GLF_WRAPPED_IF_TRUE(true))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      barrier();
                     barrier();
                    }
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               else
                {
                }
               if(_GLF_DEAD(false))
                barrier();
               barrier();
               if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))), true && (bool(_GLF_IDENTITY(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec4(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))))) && true)))
                  barrier();
                 do
                  {
                   barrier();
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                barrier();
              }
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(4), int(4)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) && true)))
            {
             barrier();
            }
           else
            {
            }
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        {
         do
          {
           barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
      }
    }
   do
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       do
        {
         do
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
            barrier();
          }
         while(_GLF_WRAPPED_LOOP(false));
         for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, 0 | (5))))) >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, clamp(5, _GLF_IDENTITY(5, int(int(5))), 5))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            {
             do
              {
               barrier();
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
              barrier();
            }
          }
         barrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   do
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false)))))))
      {
       for(int _injected_loop_counter = (6726 & 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _GLF_IDENTITY(_injected_loop_counter ++, (false ? _GLF_FUZZED(_injected_loop_counter) : _injected_loop_counter ++)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = _GLF_IDENTITY(1, min(1, 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ (1 ^ 0))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
