#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, cos(0.0)))).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), false, true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))), ! (! (bool(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))))))))))), (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))), true && (! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))), bool(bvec4((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false)))))), false, true, true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.5)), float(injectionSwitch.y), bool(true))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), (bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))) && true))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), max(uvec4(gl_NumWorkGroups, 0u), uvec4(gl_NumWorkGroups, 0u)))), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), max(uvec4(gl_NumWorkGroups, 0u), uvec4(gl_NumWorkGroups, 0u)))), uvec3(uvec4(uvec3(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 0u), max(uvec4(gl_NumWorkGroups, 0u), uvec4(gl_NumWorkGroups, 0u)))), 0u)))) ^ uvec3(0u, 0u, 0u))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) ^ 0u)) : _GLF_FUZZED(150355u))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) ^ 0u)) : _GLF_FUZZED(150355u))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) ^ 0u)) : _GLF_FUZZED(150355u))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), clamp(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))), 1u * ((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))))) ^ 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), 0u | (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) ^ 0u)) : _GLF_FUZZED(150355u))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (_GLF_IDENTITY(workgroup_id, (workgroup_id) | (workgroup_id))))) | (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))))))))) / uint(_GLF_ONE(1.0, injectionSwitch.y)));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(242.961, 97.01)) : injectionSwitch)), injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, true))))), (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(_GLF_IDENTITY(86.64, mix(float(_GLF_FUZZED(9.8)), float(86.64), bool(true))), 4.0)))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[0], ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[0]) / 1.0), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(1.0, 1.0) * (vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch)))[1]), vec2(_GLF_FUZZED(-7.3), _GLF_FUZZED(-9.9)), bvec2(false, false))).x > injectionSwitch.y))), _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))) || false, true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))) || false, ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).x > injectionSwitch.y)))) || false) && true)))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (1u ^ 1u)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (_GLF_IDENTITY(1u, (1u) + 0u) ^ 1u)), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (1u ^ 1u)))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))), (subgroup_size) ^ (1u ^ 1u)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (1u ^ 1u)), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (1u ^ 1u)))), (_GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (1u ^ 1u)), min(subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ (1u ^ 1u)), subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) ^ _GLF_IDENTITY((1u ^ 1u), ((1u ^ 1u)) | ((1u ^ 1u))))))) | 0u)) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) | 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false)))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + subgroup_local_id, 1u * (_GLF_IDENTITY(workgroup_base, min(_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)), workgroup_base)) + subgroup_base + subgroup_local_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0)), (vec2(mat4x3(injectionSwitch, 0.0, cos(0.0), 0.0, 1.0, 1.0, exp(0.0), 0.0, 1.0, 0.0, 0.0))) * mat2(1.0))).x > injectionSwitch.y)), false, false, true)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, true)))) || false))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false)), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false)), bool(_GLF_IDENTITY(bool(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false))), (bool(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false)))) || false))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false)))))))), bool(bool(bool(bool(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec2(true, false))))))))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), true && (bool(bvec4(false, false, false, false))))), true)))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(2007.1221), (_GLF_FUZZED(2007.1221)) + abs(0.0)) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(-8981.0951, -7972.4651), _GLF_IDENTITY(vec2(2.8, -20.58), max(vec2(2.8, -20.58), vec2(2.8, -20.58))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x, 0.0 + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(mod(vec2(-8981.0951, -7972.4651), _GLF_IDENTITY(vec2(2.8, -20.58), max(vec2(2.8, -20.58), vec2(2.8, -20.58))))) : _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))).x)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(_GLF_IDENTITY(-3.1, min(_GLF_IDENTITY(-3.1, float(mat4(-3.1, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0))))), 0.0, 0.0, 0.0, abs(0.0), 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)), (float(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))) / 1.0), 0.0 + (float(mat4x2(1.0, 0.0, 0.0, 1.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0))))), _GLF_IDENTITY(1.0, (1.0) + 0.0), 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-332.196) : _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), mix(float(dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), float(_GLF_FUZZED(-2069.7463)), bool(false))))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))), -3.1)))), float(injectionSwitch.x), bool(true)), 0.0 + (_GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.1)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(-812.720, 738.029)))).x), _GLF_IDENTITY(bool(true), bool(bvec2(_GLF_IDENTITY(bool(true), false || (bool(true))), true)))), float(vec3(mix(float(_GLF_FUZZED(-3.1)), _GLF_IDENTITY(float(injectionSwitch.x), min(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), (float(injectionSwitch.x)) / round(length(normalize(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) && true), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true)))))), false))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true)))))), false)))), ! (! (_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), false))))))))) && true), true, false, true)))))), false))))))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) && true), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true)))))), false))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true)))))), false)))), ! (! (_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), false))))))))) && true), true, false, true)))))), false))))))))))), bool(bvec4(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, bool(bvec2(true, false)))), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec3(true, true, true)))) && true), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true)))))), false))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && true), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (true) && true), true, false, true)))))), false)))), ! (! (_GLF_IDENTITY(bool(true), ! _GLF_IDENTITY((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY((true) && true, ! (! ((true) && true)))), true, false, true)))))), bool(bvec2((! (bool(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(true, true && (true)), true, false), false))))))))) && true), true, false, true)))))), false))))))))))), true, false, true))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(900.237)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-619.835) : 0.0))), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0), max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), float(_GLF_IDENTITY(mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), abs(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, 0.0, 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1.2)))) + (mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))))))))), 0.0, 0.0)), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), 1.0 * (_GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), max((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (float(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(467.366)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0)))), 0.0, 0.0))))))) : _GLF_FUZZED((- 8.3)))) * 1.0)))), clamp(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(900.237)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-619.835) : 0.0))), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0), max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), float(_GLF_IDENTITY(mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), abs(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, 0.0, 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1.2)))) + (mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))))))))), 0.0, 0.0)), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), 1.0 * (_GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), max((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (float(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(467.366)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0)))), 0.0, 0.0))))))) : _GLF_FUZZED((- 8.3)))) * 1.0)))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(900.237)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-619.835) : 0.0))), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0), max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), float(_GLF_IDENTITY(mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), abs(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, 0.0, 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1.2)))) + (mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))))))))), 0.0, 0.0)), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), 1.0 * (_GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), max((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (float(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(467.366)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0)))), 0.0, 0.0))))))) : _GLF_FUZZED((- 8.3)))) * 1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(900.237)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-619.835) : 0.0))), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0), max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), float(_GLF_IDENTITY(mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), abs(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, 0.0, 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1.2)))) + (mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))))))))), 0.0, 0.0)), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), 1.0 * (_GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), max((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (float(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(467.366)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0)))), 0.0, 0.0))))))) : _GLF_FUZZED((- 8.3)))) * 1.0)))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(900.237)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-619.835) : 0.0))), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0), max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), float(_GLF_IDENTITY(mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), abs(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, 0.0, 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1.2)))) + (mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))))))))), 0.0, 0.0)), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), 1.0 * (_GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), max((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (float(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(467.366)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0)))), 0.0, 0.0))))))) : _GLF_FUZZED((- 8.3)))) * 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))), mix(float(_GLF_FUZZED(900.237)), float(_GLF_IDENTITY(0.0, float(mat2x4(0.0, round(length(_GLF_IDENTITY(normalize(1.0), min(normalize(1.0), _GLF_IDENTITY(normalize(1.0), (true ? normalize(1.0) : _GLF_FUZZED(-6.4))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true)))) - 0.0), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-619.835) : 0.0))), float(_GLF_FUZZED(6.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), clamp(_GLF_IDENTITY(max(0.0, 0.0), (max(0.0, 0.0)) * 1.0), max(0.0, 0.0), _GLF_IDENTITY(max(0.0, 0.0), float(_GLF_IDENTITY(mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 0.0, length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), abs(vec3(1.0, 1.0, 1.0)) * (vec3(0.0, 0.0, 0.0))))), mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (0.0) - 0.0) : _GLF_FUZZED(-1.2)))) + (mat4x3(max(0.0, 0.0), 1.0, 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, length(vec2(0.0, 0.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, length(vec3(0.0, 0.0, 0.0)))))))))), 0.0, 0.0)), _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (true ? _GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), 1.0 * (_GLF_IDENTITY((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), max((float(vec3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0))), (float(vec3(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(467.366)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))), 0.0)))), 0.0, 0.0))))))) : _GLF_FUZZED((- 8.3)))) * 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))))), 0.0)))))))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) | (workgroup_base + subgroup_base)), _GLF_IDENTITY((workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) - 0u, _GLF_IDENTITY(uint(uvec3((workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) - 0u, 0u, 0u)), max(_GLF_IDENTITY(uint(uvec3((workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) - 0u, 0u, 0u)), uint(uvec4(uint(uvec3((workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) - 0u, 0u, 0u)), 0u, 1u, 1u))), _GLF_IDENTITY(uint(uvec3((workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) - 0u, 0u, 0u)), (uint(uvec3((workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))))) - 0u, 0u, 0u))) ^ 0u))))) + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(0u + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (subgroup_local_id + 1))) | (0u + (0u + (subgroup_local_id + 1))))), (_GLF_IDENTITY(0u + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / 1u), subgroup_local_id + 1)))))), (0u + (0u + (subgroup_local_id + 1))) | (0u + (0u + (subgroup_local_id + 1)))))) ^ 0u))) % subgroup_size), ((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u), (uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u)) * uvec4(1u, 1u, 1u, 1u)))) + 1))) | (0u + (0u + (subgroup_local_id + 1))))), (_GLF_IDENTITY(0u + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (subgroup_local_id + 1))) | (0u + (0u + (subgroup_local_id + 1)))))) ^ 0u))), max(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u), (uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u)) * uvec4(1u, 1u, 1u, 1u)))) + 1))) | (0u + (0u + (subgroup_local_id + 1))))), (_GLF_IDENTITY(0u + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (subgroup_local_id + 1))) | (0u + (0u + (subgroup_local_id + 1)))))) ^ 0u))), ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u), (uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u)) * uvec4(1u, 1u, 1u, 1u)))) + 1))) | (0u + (0u + (subgroup_local_id + 1))))), (_GLF_IDENTITY(0u + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (subgroup_local_id + 1))) | (0u + (0u + (subgroup_local_id + 1)))))) ^ 0u)))) | 0u), (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)) + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u), (uvec4(subgroup_local_id, 1u, (0u ^ 1u), 0u)) * uvec4(1u, 1u, 1u, 1u)))) + 1))) | (0u + (0u + (subgroup_local_id + 1))))), (_GLF_IDENTITY(0u + (subgroup_local_id + 1), _GLF_IDENTITY(0u + (_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 0u)), min(uint(uvec2(0u, 0u)), uint(uvec2(0u, 0u))))) + (subgroup_local_id + 1)), (0u + (0u + (subgroup_local_id + 1))) | (0u + (0u + (subgroup_local_id + 1)))))) ^ 0u))))) % subgroup_size)) << 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint read = _GLF_IDENTITY(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, _GLF_IDENTITY((4), ((4)) | ((4))) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2), min(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)))) - 0u, ((atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)) - 0u) | 0u), ((atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u), 0u | (virtual_gid)), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u))))) | uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u)), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u)))))), (false ? _GLF_FUZZED(uvec3(167116u, 110810u, 177026u)) : ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))))), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), max(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), clamp(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), max(uint(uvec3(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u)), uint(uvec3(_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 0u, 0u))), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))))) | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), _GLF_IDENTITY((uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u), ((uvec3(_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, (0u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))))), ~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)) | uvec3(0u, 0u, 0u))))))))))))))))) | (uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), ~ (~ (uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), min(uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u), uvec3(_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid)), 1u, 1u)))))) | uvec3(0u, 0u, 0u)))))) | 0u))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)) - 0u) | ((atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2)) - 0u))), (_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))], _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), (_GLF_IDENTITY(4, (4) | 0)) + 0), (_GLF_IDENTITY(4, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8.8)), float(injectionSwitch.x), bool(true)))))))), 64, 2), _GLF_IDENTITY(uint(uint(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, 0u))) | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0, ((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0) | (_GLF_IDENTITY((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0, min((_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0))))), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), _GLF_IDENTITY(max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), (false ? _GLF_FUZZED(20266) : _GLF_IDENTITY(max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), int(ivec4(max(int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1)), (ivec3(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, 0 | (4))))) >> 0), 0, (1 | 1))) / ivec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1, 1, 0)))))) | (0 >> _GLF_IDENTITY(int(3), int(3)))))), (4) >> 0) : _GLF_FUZZED(-57760)))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(64, (64) | 0), 2))), uint(uvec3(uint(uint(_GLF_IDENTITY(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760), 0 | (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(72375)))) : _GLF_FUZZED(-57760), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)), (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)), 0 | (~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760))))) >> 0))))), true ? _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) >> 0)) : _GLF_IDENTITY(_GLF_FUZZED(-57760), (_GLF_FUZZED(-57760)) / 1), true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2), max(atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760), 0 | (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(72375)))) : _GLF_FUZZED(-57760), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)), (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)), 0 | (~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760))))) >> 0))))), true ? _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) >> 0)) : _GLF_IDENTITY(_GLF_FUZZED(-57760), (_GLF_FUZZED(-57760)) / 1), true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2), atomicLoad(buf[_GLF_IDENTITY(virtual_gid, 0u | (virtual_gid))], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760), clamp(_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760), 0 | (_GLF_IDENTITY(true ? _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(72375)))) : _GLF_FUZZED(-57760), ~ (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)), (_GLF_IDENTITY(~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)), 0 | (~ (true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760))))) >> 0))))), true ? _GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (0) >> 0)) : _GLF_IDENTITY(_GLF_FUZZED(-57760), (_GLF_FUZZED(-57760)) / 1), true ? _GLF_IDENTITY(4, (4) >> 0) : _GLF_FUZZED(-57760)))))) >> int(_GLF_ZERO(0.0, injectionSwitch.x))), 64, 2))))), _GLF_IDENTITY(1u, (1u) / 1u), 0u))))) - 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % 2), clamp((subgroup_local_id % 2), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), min(_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), min(uint(6u), uint(6u))), uint(6u))), (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), max(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) << 0u), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))) % 2), _GLF_IDENTITY(0u, uint(uint(0u))) | ((subgroup_local_id % 2))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) - 0)), 0u ^ ((subgroup_local_id % 2))))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, false || (false))))), ! (! (false)))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), _GLF_IDENTITY(((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))), ! (! (((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))))))) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || (_GLF_IDENTITY((false) || false, ! (! ((false) || false))))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)) && true, false || ((_GLF_IDENTITY(false, (false) || false)) && true)))))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(bvec3(_GLF_IDENTITY((false), ! (! ((false)))), false, true))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && ((false))) || false)) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))) || false) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (! (true && (_GLF_IDENTITY(false, (false) || false)))))), true && (! (_GLF_IDENTITY(true && (_GLF_IDENTITY(false, (false) || false)), ! (! (true && (_GLF_IDENTITY(false, (false) || false)))))))))))))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), true, false, false))))))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y)))))))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, false, true)), bool(bvec4(bool(bvec4(false, true, false, true)), false, false, true)))), false, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true))), (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)))), false, false)))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, false)), true))))))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false), ! (! (! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false))))), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))) || false) && true))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))) || false) && true))), true, false), bvec3(bvec4(bvec3(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))) || false) && true))), true, false), false)))))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))) || false, ! (! (_GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))) || false))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED((-3389.5481 - -7.5)), _GLF_FUZZED((-217.581 - 5.1))), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).x > injectionSwitch.y)))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), false || ((_GLF_IDENTITY(false, (false) || false))))) || false) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))))))))))), true && (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), log(1.0), 0.0, 0.0)), (float(vec4(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))) / 1.0), log(1.0), 0.0, 0.0))) + 0.0)) > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y))))), true))), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))) || false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))) || false, false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((false), ! (! ((false)))) || false, false), bvec2(bvec2(bvec2(_GLF_IDENTITY((false), ! (! ((false)))) || false, false))))))))))), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), false || (! (false))))))), false, true)))) && true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! _GLF_IDENTITY((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, (false) || false)) && true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(false, true && (false)), true))), (_GLF_IDENTITY(false, (false) || false)) && true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, bool(bvec2(true, false)))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false || ((_GLF_IDENTITY(false, (false) || false))))) || false) && true)))), (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false)))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))))))))) && true), (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (_GLF_IDENTITY(false, (false) || false)) && true), ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true))), ((! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, false, false))))))) || false)), ! (! ((_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) || false))))) && true)))) || false)), (injectionSwitch.x > injectionSwitch.y))))), false, true, false))), false)))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0))))))))))))), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)), true && (bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), injectionSwitch)))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), ! (! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)))))))), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && _GLF_IDENTITY(true, (true) || false)))) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
            }
           barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), true)))))))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(false, true, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1775.6126), _GLF_FUZZED(-9703.5812)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))) && true))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(vec3(-736.018, -1418.3901, -32.72).r), _GLF_FUZZED(-2.5)), vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(asin(injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(vec3(-736.018, -1418.3901, -32.72), _GLF_IDENTITY(mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(-736.018, -1418.3901, -32.72)), (mat3(_GLF_ONE(1.0, injectionSwitch.y)) * (vec3(-736.018, -1418.3901, -32.72))) * mat3(1.0))).r), _GLF_FUZZED(-2.5)), vec2(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch)))[0], _GLF_IDENTITY((injectionSwitch)[1], float(mat3x4((injectionSwitch)[1], 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-88.18) : 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)))), bvec2(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y))))) : _GLF_FUZZED(asin(injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))).y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, 0 ^ (64)), _GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-91463))));
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), 0 ^ ((4)))) << int(_GLF_ZERO(0.0, injectionSwitch.x))) | 0)) | (4)), 64, _GLF_IDENTITY(4, 0 ^ (4)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec3(bvec2(false, true), true), bvec3(bvec4(bvec3(bvec2(false, true), true), true))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-2984.7931, (-2984.7931) - 0.0)), max(_GLF_IDENTITY(_GLF_FUZZED(-2984.7931), 0.0 + (_GLF_FUZZED(-2984.7931))), _GLF_FUZZED(-2984.7931))), _GLF_FUZZED((_GLF_IDENTITY(+ 845.680, min(_GLF_IDENTITY(+ 845.680, max(+ 845.680, + 845.680)), + 845.680))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, false || (true)) ? _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(781.450)), vec2(_GLF_FUZZED(-0.2), (injectionSwitch)[1]), bvec2(false, true))) : _GLF_FUZZED(vec2(1378.5366, -4.2)))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-10.15)), float(_GLF_IDENTITY(mat3x4((true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1431.3350)), bool(false))), _GLF_FUZZED((74.71 * 6290.2317))), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))).y, mix(float(_GLF_FUZZED(-8210.3912)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1431.3350)), bool(false))), _GLF_FUZZED((74.71 * 6290.2317))), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))).y, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1431.3350)), bool(false))), _GLF_FUZZED((74.71 * 6290.2317))), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))).y, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_IDENTITY((injectionSwitch)[0], mix(float((injectionSwitch)[0]), float(_GLF_FUZZED(-1431.3350)), bool(false))), _GLF_FUZZED((74.71 * 6290.2317))), vec2(_GLF_FUZZED(7.5), (injectionSwitch)[1]), bvec2(false, true))).y))), bool(true))), min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-10.15)), length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0), transpose(transpose(mat3x4((true ? _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-10.15)), length(vec3(0.0, 0.0, 0.0)), 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, exp(0.0), 0.0, 0.0, 0.0, 1.0, 0.0))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) * 1.0), 0.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))), mix(vec2(_GLF_FUZZED(78.56), _GLF_IDENTITY(_GLF_FUZZED(-405.919), max(_GLF_FUZZED(-405.919), _GLF_FUZZED(-405.919)))), vec2((_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.6)), float(0.0), bool(true)))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))))[0], (_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch)))))), vec2(mat4x3(max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))), mix(vec2(_GLF_FUZZED(78.56), _GLF_IDENTITY(_GLF_FUZZED(-405.919), max(_GLF_FUZZED(-405.919), _GLF_FUZZED(-405.919)))), vec2((_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4.6)), float(0.0), bool(true)))) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, ! (! (true)))), ! (! (! (_GLF_IDENTITY(true, ! (! (true))))))))) ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))))[0], (_GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch))))))[1]), bvec2(true, true))), _GLF_IDENTITY(vec2(injectionSwitch.y, 0.0), _GLF_IDENTITY((true ? vec2(injectionSwitch.y, 0.0) : _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), vec2(mat3(_GLF_FUZZED(injectionSwitch), 0.0, tan(0.0), sin(0.0), 0.0, 1.0, 0.0, 1.0)))), min((true ? vec2(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), 0.0) : _GLF_FUZZED(injectionSwitch)), (true ? vec2(injectionSwitch.y, 0.0) : _GLF_FUZZED(injectionSwitch)))))), 0.0, 0.0, 0.0, 0.0, 1.0, log(1.0), 0.0, sqrt(0.0), cos(0.0), _GLF_ONE(1.0, injectionSwitch.y)))))))) / 1.0))), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), _GLF_IDENTITY(bool(bvec3(! (! (_GLF_DEAD(false))), true, true)), ! (! (bool(bvec3(! (! (_GLF_DEAD(false))), true, true))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), false, true, true)), true && (bool(bvec4(bool(bvec2(_GLF_DEAD(false), false)), false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, _GLF_IDENTITY(4, (4) ^ 0));
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec3(_GLF_IDENTITY(true, false || (true)), false, true))), (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5222.2783) : _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, 1.0, 0.0, 1.0, 0.0, 0.0)))))))) && (_GLF_DEAD(false))), false || (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) || false)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) || false)), false, false), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec4((false), false, true, false))) || false)), false, false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))) || false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
