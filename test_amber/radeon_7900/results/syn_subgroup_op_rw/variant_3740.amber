#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, (_GLF_IDENTITY((false) && true, true && ((_GLF_IDENTITY(false, bool(bool(false)))) && true))) && true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), (_GLF_IDENTITY(false, (false) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, (false) || false), true, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w = subgroup_local_id;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, clamp(_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, 0u | (gl_NumWorkGroups.x))) - 0u), gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, 1u * (gl_NumWorkGroups.x))));
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.y = num_workgroup;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), true && (! (! (_GLF_IDENTITY(false, true && (false)))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))));
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.z = subgroup_base;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), uint(uvec2((_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y))))) | 0u)), _GLF_IDENTITY(uint(uvec4(max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & 1u))), (_GLF_IDENTITY(uint(uvec4(max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u), (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) * 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_FUZZED(5.5)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)))), mix(float(_GLF_FUZZED(-5133.7670)), float(mix(float(_GLF_FUZZED(5.5)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), bool(true)))))), (1u & 1u))), _GLF_IDENTITY(0u + (uint(uvec4(max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & 1u)))), (0u + (uint(uvec4(max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (1u & _GLF_IDENTITY(1u, min(1u, _GLF_IDENTITY(1u, (1u) - 0u)))))))) ^ 0u))) - 0u))) + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.z + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, uint(_GLF_IDENTITY(uvec4(workgroup_base, 1u, 0u, 0u), ~ (~ (uvec4(workgroup_base, 1u, 0u, 0u)))))), _GLF_IDENTITY((workgroup_base) >> 0u, min((workgroup_base) >> 0u, (workgroup_base) >> 0u))))) + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.z + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base), ((workgroup_base)) | ((workgroup_base))) >> 0u))) + _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id)).z, (0u << _GLF_IDENTITY(uint(7u), uint(7u))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id, max(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id)).z)) + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w), max(~ (_GLF_IDENTITY(workgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) - 0u)) | (_GLF_IDENTITY(0u, (0u) << 0u) >> _GLF_IDENTITY(uint(7u), uint(7u)))), _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.z + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id[0], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id[1], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id[2], GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id[3])).w), ~ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u))) + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.z + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w)))))));
 uint next_virtual_gid = workgroup_base + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.z + ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.x = next_virtual_gid;
 uint read = atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec2(4, 0)), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1)))) ^ ivec2(0, 0))), (~ (~ (ivec2(4, 0)))) << ivec2(0, 0)))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) && true)))), (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), 0), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))), clamp(_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(_GLF_IDENTITY(4, 1 * (4)), 0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))), (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0))))))))) / ivec2(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), (~ (~ (~ (ivec2(4, 0))))) >> ivec2(0, 0)), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))), ivec2(0, 0) | (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))))))), ~ (~ (ivec2(4, 0))))))), int(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec2(_GLF_IDENTITY(4, ~ (~ (4))), 0)), (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1))), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ _GLF_IDENTITY((ivec2(4, 0)), ((ivec2(4, 0))) / ivec2(1, 1)), 1, 1)))) << ivec2(0, 0))), _GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1))), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1)))) << ivec2(0, 0))))), (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1))), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1)))) << ivec2(0, 0))))), (~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1))), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1)))) << ivec2(0, 0)))))) ^ ivec2(0, 0))) ^ ivec2(0, 0)))))) ^ ivec2(0, 0))), (~ (~ (ivec2(4, 0)))) << ivec2(0, 0)))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), 0), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ~ (~ (~ (~ (~ (ivec2(4, 0)))))))) | (~ (~ (~ (ivec2(4, 0)))))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0))))))), int(_GLF_IDENTITY(ivec2(4, 0), ~ (_GLF_IDENTITY(~ (ivec2(4, 0)), (_GLF_IDENTITY(~ (ivec2(4, 0)), clamp(~ (ivec2(4, 0)), ~ (ivec2(4, 0)), ~ (ivec2(4, 0))))) * (ivec2(1, 1) | ivec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((ivec2(4, 0)), min(_GLF_IDENTITY((ivec2(4, 0)), ((ivec2(4, 0))) + ivec2(0, 0)), _GLF_IDENTITY((ivec2(4, 0)), min(_GLF_IDENTITY((ivec2(4, 0)), ~ (~ ((ivec2(4, 0))))), (ivec2(4, 0)))))), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1)))) ^ ivec2(0, 0))), (~ (~ (ivec2(4, 0)))) << ivec2(0, 0)))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(4, min(4, 4)), 4)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), 0), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (ivec2(4, 0))), (false ? _GLF_FUZZED(ivec2(56210, 39116)) : _GLF_IDENTITY(~ (~ (ivec2(4, 0))), (~ (~ (ivec2(4, 0)))) | (~ (~ (ivec2(4, 0)))))))), ((_GLF_IDENTITY(~ (~ (ivec2(4, 0))), (false ? _GLF_FUZZED(ivec2(56210, 39116)) : _GLF_IDENTITY(~ (~ (ivec2(4, 0))), (~ (~ (ivec2(4, 0)))) | (~ (~ (ivec2(4, 0))))))))) - (ivec2(0, 0) << _GLF_IDENTITY(ivec2(4), ivec2(4)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0))))), (_GLF_IDENTITY(~ (~ (ivec2(4, 0))), max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (ivec2(4, 0))), (false ? _GLF_FUZZED(ivec2(56210, 39116)) : _GLF_IDENTITY(~ (~ (ivec2(4, 0))), (~ (~ (ivec2(4, 0)))) | (~ (~ (ivec2(4, 0)))))))), ((_GLF_IDENTITY(~ (~ (ivec2(4, 0))), (false ? _GLF_FUZZED(ivec2(56210, 39116)) : _GLF_IDENTITY(~ (~ (ivec2(4, 0))), (~ (~ (ivec2(4, 0)))) | (~ (~ (ivec2(4, 0))))))))) - (ivec2(0, 0) << _GLF_IDENTITY(ivec2(4), ivec2(4)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))))) ^ ivec2(0, 0)))), int(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (_GLF_IDENTITY(ivec2(4, 0), (ivec2(4, 0)) | ivec2(0, 0)))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec2(4, 0)), _GLF_IDENTITY((_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ _GLF_IDENTITY((ivec2(4, 0)), clamp((ivec2(4, 0)), (ivec2(4, 0)), (ivec2(4, 0)))), 1, _GLF_IDENTITY(1, 0 + (1)))))), ~ (~ ((_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ _GLF_IDENTITY((ivec2(4, 0)), clamp((ivec2(4, 0)), (ivec2(4, 0)), (ivec2(4, 0)))), 1, 1))))))) ^ ivec2(0, 0))), (~ (~ (ivec2(4, 0)))) << ivec2(0, 0)))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), 0), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(1, 1) * (~ (~ (~ _GLF_IDENTITY((ivec2(4, 0)), (_GLF_IDENTITY((ivec2(4, 0)), ((ivec2(4, 0))) | ((ivec2(4, 0))))) | ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ivec2(0, 0) + (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (ivec2(4, 0))), max(~ (~ (ivec2(4, 0))), ~ (~ (ivec2(4, 0)))))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0))))))), int(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(0, (0) >> 0)), ~ (~ (ivec2(4, 0)))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec2(4, 0)), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ _GLF_IDENTITY((ivec2(4, 0)), ((ivec2(4, 0))) << ivec2(0, 0)), 1, 1)))) ^ ivec2(0, 0))), (~ (~ (ivec2(4, 0)))) << ivec2(0, 0)))), max(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), _GLF_IDENTITY(ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0))))))), (ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ _GLF_IDENTITY((ivec2(4, 0)), (_GLF_IDENTITY((ivec2(4, 0)), max((ivec2(4, 0)), (ivec2(4, 0))))) >> ivec2(0, 0)))), ((_GLF_IDENTITY(~ (~ (ivec2(4, 0))), (~ (~ (ivec2(4, 0)))) >> (ivec2(0, 0) >> _GLF_IDENTITY(ivec2(3), ivec2(3)))))) | ((~ (~ (ivec2(4, 0)))))))) - _GLF_IDENTITY(ivec2(0, 0), min(ivec2(0, 0), ivec2(0, 0))))))), ~ (~ (ivec2(4, 0)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec2(4, 0)), (~ (ivec2(4, 0))) + (ivec2(0, 0) | ivec2(0, 0)))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (_GLF_IDENTITY(ivec2(4, 0), min(ivec2(4, 0), ivec2(4, 0))))))) | ((~ (~ (ivec2(4, _GLF_IDENTITY(0, (0) << 0))))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | _GLF_IDENTITY(((~ (~ (ivec2(4, 0))))), (((~ (~ (ivec2(4, 0)))))) | (((~ (~ (ivec2(4, 0)))))))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(0, 0))))))), clamp(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))), (false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY(_GLF_IDENTITY((~ (~ _GLF_IDENTITY((ivec2(4, 0)), ivec2(ivec3((ivec2(4, 0)), 1))))), ((~ (~ _GLF_IDENTITY((ivec2(4, 0)), ivec2(ivec3((ivec2(4, 0)), 1)))))) ^ ivec2(0, 0)), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | (_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ivec2(ivec2((~ (~ (ivec2(4, 0))))))))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(0, 0))))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(~ (~ _GLF_IDENTITY((ivec2(4, 0)), (_GLF_IDENTITY((ivec2(4, 0)), ivec2(ivec2((ivec2(4, 0)))))) - ivec2(0, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))), (false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(ivec2(4, 0), min(_GLF_IDENTITY(ivec2(4, 0), ivec2(0, 0) | (ivec2(4, 0))), ivec2(4, 0)))))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ _GLF_IDENTITY((~ (ivec2(4, 0))), (false ? _GLF_FUZZED(ivec2(49886, 64181)) : (~ (ivec2(4, 0))))))) | ((~ (~ (ivec2(4, 0))))))))), min((_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(ivec2(4, 0), min(_GLF_IDENTITY(ivec2(4, 0), ivec2(0, 0) | (ivec2(4, 0))), ivec2(4, 0)))))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ _GLF_IDENTITY((~ (ivec2(4, 0))), (false ? _GLF_FUZZED(ivec2(49886, 64181)) : (~ (ivec2(4, 0))))))) | ((~ (~ (ivec2(4, 0))))))))), (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(ivec2(4, 0), min(_GLF_IDENTITY(ivec2(4, 0), ivec2(0, 0) | (ivec2(4, 0))), ivec2(4, 0)))))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ _GLF_IDENTITY((~ (ivec2(4, 0))), (false ? _GLF_FUZZED(ivec2(49886, 64181)) : (~ (ivec2(4, 0))))))) | ((~ (~ (ivec2(4, 0)))))))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(0, 0)))))))) | 0), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | (4)), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))), (false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ _GLF_IDENTITY((ivec2(4, 0)), ivec2(ivec4((ivec2(4, 0)), 0, 1))))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ _GLF_IDENTITY((ivec2(4, 0)), ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY((ivec2(4, 0)), max((ivec2(4, 0)), (ivec2(4, 0)))))))), (max(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(ivec2(4, 0), (_GLF_IDENTITY(ivec2(4, 0), (ivec2(0, 0) << _GLF_IDENTITY(ivec2(7), ivec2(7))) ^ (ivec2(4, 0)))) >> ivec2(0, 0)))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (_GLF_IDENTITY(~ (ivec2(4, 0)), min(~ (ivec2(4, 0)), _GLF_IDENTITY(~ (ivec2(4, 0)), (~ (ivec2(4, 0))) ^ ivec2(0, 0)))))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(0, 0))))))), (int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, _GLF_IDENTITY(clamp(0, 0, 0), min(clamp(0, 0, 0), clamp(0, 0, 0))))), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ _GLF_IDENTITY((~ (ivec2(4, 0))), ~ (~ ((~ (ivec2(4, 0))))))), _GLF_IDENTITY((false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), ~ (~ (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), ivec2(ivec2((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))))) | ((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))) | ((~ (~ (ivec2(4, 0))))))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((ivec2(4, 0)), ~ (~ ((ivec2(4, 0)))))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0))))))) - ivec2(0, 0))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) / 1))))), 0))), (_GLF_IDENTITY((false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), ~ (~ (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), ivec2(ivec2((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))))) | ((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))) | ((~ (~ (ivec2(4, 0))))))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((ivec2(4, 0)), ~ (~ ((ivec2(4, 0)))))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0))))))) - ivec2(0, 0))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) / 1))))), 0))), min((false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), ~ (~ (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), ivec2(ivec2((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))))) | ((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))) | ((~ (~ (ivec2(4, 0))))))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((ivec2(4, 0)), ~ (~ ((ivec2(4, 0)))))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0))))))) - ivec2(0, 0))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) / 1))))), 0))), (false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), ~ (~ (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), _GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), (_GLF_IDENTITY((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))), ivec2(ivec2((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))))) | ((_GLF_IDENTITY((~ (~ (ivec2(4, 0)))), (true ? _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), max((~ (~ (ivec2(4, 0)))), (~ (~ (ivec2(4, 0)))))) : _GLF_FUZZED(ivec2(-99611, 6873))))))) | ((~ (~ (ivec2(4, 0))))))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ _GLF_IDENTITY((ivec2(4, 0)), ~ (~ ((ivec2(4, 0)))))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))), (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0))))))) - ivec2(0, 0))) ^ ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(_GLF_IDENTITY(0, (0) | (_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) / 1))))), 0)))))) + ivec2(0, 0))))))) >> 0), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), 0 ^ ((4))))) : _GLF_IDENTITY(_GLF_FUZZED(41981), int(ivec4(_GLF_FUZZED(41981), 0, (0 >> _GLF_IDENTITY(int(7), int(7))), 1))))), _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) >> ivec2(0, 0)), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))), (false ? _GLF_FUZZED(ivec2(-63108, -95169)) : _GLF_IDENTITY(max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0)))), (max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (~ (ivec2(4, 0))))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0))))) >> ivec2(0, 0))))))))), int(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, _GLF_IDENTITY(0, min(0, 0))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ _GLF_IDENTITY((ivec2(4, 0)), max((ivec2(4, 0)), _GLF_IDENTITY((ivec2(4, 0)), ~ (_GLF_IDENTITY(~ ((ivec2(4, 0))), ivec2(0, 0) ^ (~ ((ivec2(4, 0))))))))), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), _GLF_IDENTITY(1, max(1, 1)), 1)))) ^ ivec2(0, 0))), (~ (~ (ivec2(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(bitCount(subgroup_id)))), 0)))) << ivec2(0, 0)))), max(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981)))) | 0), (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), (_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981)))) | 0)) >> 0), 0), _GLF_IDENTITY(~ (~ (ivec2(4, 0))), max(_GLF_IDENTITY(~ (~ (ivec2(_GLF_IDENTITY(4, 1 * (_GLF_IDENTITY(4, 0 | (4)))), 0))), ~ (_GLF_IDENTITY(~ (~ (~ (_GLF_IDENTITY(ivec2(4, 0), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(4, 0), ivec2(0, 0) ^ (ivec2(4, 0)))))))), ivec2(_GLF_IDENTITY(0, min(0, 0)), _GLF_IDENTITY(0, (0) / 1)) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), ((~ (_GLF_IDENTITY(~ (ivec2(4, 0)), (~ (ivec2(4, 0))) | (~ (ivec2(4, 0))))))) | _GLF_IDENTITY(((~ (~ (ivec2(4, 0))))), min(((~ (~ (ivec2(4, 0))))), ((~ (~ (ivec2(4, 0)))))))))))), ~ (~ (ivec2(4, 0))))))), int(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0))))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(4, 0), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec2(4, 0)), (_GLF_IDENTITY(~ (ivec2(4, 0)), ivec2(ivec4(~ (ivec2(4, 0)), 1, 1)))) ^ ivec2(0, _GLF_IDENTITY(0, min(0, 0))))), (~ (~ (ivec2(4, 0)))) << ivec2(0, 0)))), max(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), clamp(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0))) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, ~ (~ (4))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0))), (ivec2(_GLF_IDENTITY(4, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(4, _GLF_IDENTITY(~ (~ (4)), clamp(_GLF_IDENTITY(~ (~ (4)), (false ? _GLF_FUZZED(77316) : ~ (~ (4)))), ~ (~ (4)), ~ (~ (4))))) : _GLF_FUZZED(41981))), _GLF_IDENTITY(0, clamp(0, 0, 0)))) >> ivec2(0, 0)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (ivec2(4, 0)), min(~ (ivec2(4, 0)), ~ (ivec2(4, 0))))), max(_GLF_IDENTITY(~ (~ (ivec2(4, 0))), ~ (_GLF_IDENTITY(~ (~ (~ (ivec2(4, 0)))), ivec2(0, 0) + (~ _GLF_IDENTITY((~ (~ (ivec2(4, 0)))), _GLF_IDENTITY(((~ (~ (ivec2(4, 0))))), (true ? _GLF_IDENTITY(((~ (~ (ivec2(4, 0))))), (((~ (~ (ivec2(4, 0)))))) ^ ivec2(0, 0)) : _GLF_FUZZED(ivec2(21676, -13132)))) | ((~ (~ (ivec2(4, 0)))))))))), ~ (~ (ivec2(4, 0))))))), int(_GLF_IDENTITY(ivec2(4, 0), ~ (~ (ivec2(4, 0)))))))))), _GLF_IDENTITY(4, max(4, _GLF_IDENTITY(4, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((-72083)) : _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(-53174) : (4)))))))), ((_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED((-72083)) : _GLF_IDENTITY(4, ~ (~ _GLF_IDENTITY((4), clamp((4), (4), _GLF_IDENTITY((4), (false ? _GLF_FUZZED(-53174) : (4))))))))) >> 0)))))), 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2, clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2, GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2))) * 1u)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.w % 2)))))) == 0)
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
    barrier();
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.x], _GLF_IDENTITY(uint(1), clamp(uint(1), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), 0u | (uint(1)))) - 0u), uint(1))), _GLF_IDENTITY(4, ~ (~ (_GLF_IDENTITY(4, max(4, 4))))), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_17next_virtual_gidnum_workgroupsubgroup_basesubgroup_local_id.x], uint(1), 4, _GLF_IDENTITY(64, (64) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-8371))), _GLF_IDENTITY(int(ivec3(4, 1, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), int(ivec3(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), 0, 1))))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-8371))), _GLF_IDENTITY(int(ivec3(4, 1, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), int(ivec3(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), 0, 1))))))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-8371))), _GLF_IDENTITY(int(ivec3(4, 1, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), int(ivec3(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), 0, 1)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-8371))), _GLF_IDENTITY(int(ivec3(4, 1, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), int(ivec3(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), 0, 1))))))), (_GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-8371))), _GLF_IDENTITY(int(ivec3(4, 1, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), int(ivec3(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), 0, 1)))))))) << 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-8371))), _GLF_IDENTITY(int(ivec3(4, 1, 0)), int(int(_GLF_IDENTITY(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), int(ivec3(_GLF_IDENTITY(int(ivec3(4, 1, 0)), (int(ivec3(4, 1, 0))) / 1), 0, 1))))))))));
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) + vec2(0.0, 0.0)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, uint(uint(virtual_gid)))], read, 4, 64, _GLF_IDENTITY(4, 0 | (_GLF_IDENTITY(4, (true ? 4 : _GLF_FUZZED(-97661))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
