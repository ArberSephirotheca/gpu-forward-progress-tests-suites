#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false), bvec2(_GLF_IDENTITY(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bvec2(bvec2(bvec2(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), _GLF_IDENTITY(false || (bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (false || (bool(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(uintBitsToFloat(uvec2(112250u, 140339u))) : injectionSwitch)).x > injectionSwitch.y)), false)))) && true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false)))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch))))) - log(vec2(1.0, 1.0))).x, float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), (false ? _GLF_FUZZED(vec2(6.5, 3618.6962)) : _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch))) * mat2(1.0)))).x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), clamp(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)))) : _GLF_FUZZED(exp(injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), vec2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), vec2(mat4(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))), 1.0, sqrt(1.0), 0.0, 0.0, 1.0, 0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x, min(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x)))), 0.0, determinant(mat3(0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), sqrt(1.0), 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(53.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), max(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(53.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), clamp((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(53.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(53.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(53.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(53.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))), mat2(1.0) * ((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(1.9), _GLF_FUZZED(53.32)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))))))) * mat2(1.0)).y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(36.37, -83.27)), clamp(_GLF_FUZZED(vec2(36.37, -83.27)), _GLF_IDENTITY(_GLF_FUZZED(vec2(36.37, -83.27)), (_GLF_FUZZED(vec2(36.37, -83.27))) * mat2(_GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_FUZZED(vec2(36.37, -83.27)), clamp(_GLF_FUZZED(vec2(36.37, -83.27)), _GLF_FUZZED(vec2(36.37, -83.27)), _GLF_FUZZED(vec2(36.37, -83.27)))))) : injectionSwitch)).x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x > injectionSwitch.y))) || false), true, true, false)))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)), mix(vec2((_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)))[0], (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)))[1]), vec2(_GLF_FUZZED(vec4(-22.62, 39.42, 27.52, -55.48).s), _GLF_FUZZED(-4.1)), bvec2(false, false))).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, _GLF_IDENTITY(-83.27, clamp(-83.27, -83.27, -83.27)))) : injectionSwitch)).x > injectionSwitch.y)), true, true, false)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch), max((_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch), (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))))), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x > injectionSwitch.y)), true, true, false)), false || (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x > injectionSwitch.y)), true, true, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x > injectionSwitch.y)), true, true, false))), false || (! (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(36.37, -83.27)) : injectionSwitch)).x > injectionSwitch.y)), true, true, false)))))))))))) || false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, true && (false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), ! (! _GLF_IDENTITY((false), ! (! ((false))))))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), true, true)), (_GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), true, true)), false || (bool(bvec3((_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), true, true))))) && true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / determinant(mat2(1.0, 1.0, 0.0, 1.0))), injectionSwitch.y, injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), ! (! (! _GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 1.0, 1.0, abs(1.0), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) / 1.0), 1.0, log(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((-8914.7510))), bool(_GLF_IDENTITY(false, (false) || false))))), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0))) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) || false) || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), false || ((false)))) || false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false || (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))), true, true))), ! (! (false))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), bool(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), bool(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), bool(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false))), false || (! (bool(bvec2(! (_GLF_IDENTITY(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), bool(bvec3(((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), clamp(float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))), float(_GLF_IDENTITY(mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0)))), mat3(1.0) * (mat4x3(injectionSwitch.y, 1.0, 1.0, abs(1.0), _GLF_ONE(1.0, injectionSwitch.y), 1.0, log(1.0), 1.0, 0.0, 0.0, 1.0, length(abs(vec4(0.0, 0.0, 0.0, 0.0))))))))))))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))), ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), false))))))))))))), false || (! ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec2(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) || false), false))), bool(bvec2(! (false), true))))))), ! (! (_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! _GLF_IDENTITY((! (false)), ((! (false))) || _GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), false || (! (false)))))), ((! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), false || (bool(bvec4(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))) && true)), _GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(mix(injectionSwitch, injectionSwitch, greaterThanEqual(ivec2(-51098, -21617), ivec2(26381, 90843)))))).y)))), bvec2(bvec4(bvec2((false), true), false, true))))))) || _GLF_IDENTITY(false, bool(bvec3(false, true, false))))), false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bvec3((_GLF_IDENTITY(false, ! (! (false)))), false, true))))))) || false)))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) ^ (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(0u), uvec3(0u))))), uvec3(1u, 1u, 1u) * (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)))).x, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), max(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups))))))) - uvec3(0u, 0u, 0u)).x), 0u | (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(28789u, 198474u, 43481u)))), uvec3(0u, 0u, 0u) + (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) * uvec3(1u, 1u, 1u)))).x))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), (uint(uint(gl_NumWorkGroups.x))) - _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))), (_GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), (uint(uvec3(0u, 0u, 0u))) / 1u)) + 0u)) << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) + uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(8u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u)))))), max(~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u)))))), max(~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))))), ~ (~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u)))))), max(~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))))))))) | 0u))))) - 0u), ~ (~ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (uvec3(0u, 0u, 0u) >> _GLF_IDENTITY(uvec3(7u), uvec3(7u))) + (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)))))).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(gl_NumWorkGroups.x)))))))), 0u ^ (_GLF_IDENTITY(uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (0u) | (0u)))).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))))), max((uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))))))))), (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | (uvec3(0u, 0u, 0u))), uvec3(0u, 0u, 0u)))) / uvec3(1u, 1u, 1u))).x), uint(gl_NumWorkGroups.x))))))))) | (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups))) | (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)))).x), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) | uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) | uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, ~ (~ (gl_NumWorkGroups)))) | uvec3(0u, 0u, 0u)), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(_GLF_IDENTITY(0u, (0u) | 0u), 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(_GLF_IDENTITY(1u, (1u) << 0u), 1u, 1u))).x), _GLF_IDENTITY(uint(gl_NumWorkGroups.x), max(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | 0u)))))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), (uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(23114u) : gl_NumWorkGroups.x)), 0u, 0u)), max(uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(23114u) : gl_NumWorkGroups.x)), 0u, 0u)), uint(uvec3(_GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(23114u) : gl_NumWorkGroups.x)), 0u, 0u)))))))) - _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(0u, 0u, 0u)), (uint(uvec3(0u, 0u, 0u))) + 0u)) << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u)))))), max(~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))))))))) - 0u), ~ (~ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))).x), (uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), uvec3(0u, 0u, 0u) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)), (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u))) << uvec3(0u, 0u, 0u)))).x)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(gl_NumWorkGroups.x)))))))), 0u ^ (_GLF_IDENTITY(uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | uvec3(0u, 0u, 0u)))).x), uint(gl_NumWorkGroups.x)))))))), (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(152007u, 136549u, 86578u)))), (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(gl_NumWorkGroups.x))))))))) | (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) >> uvec3(0u, 0u, 0u)).x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((111374u / subgroup_local_id)) : 0u)))).x), 0u + (uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, _GLF_IDENTITY(0u, (false ? _GLF_FUZZED((111374u / subgroup_local_id)) : 0u)))).x))), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((_GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED((+ uvec3(2750u, 64929u, 133012u)))))) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(gl_NumWorkGroups.x)))))))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) / 1u))) - _GLF_IDENTITY((_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(119506u))), 0u, 0u)), (uint(uvec3(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u, 0u))) + 0u)) << _GLF_IDENTITY(uint(8u), uint(8u))), ~ (_GLF_IDENTITY(~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), uint(8u)))))), max(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (8u) << 0u)), uint(8u)))), ~ ((0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), max(uint(8u), _GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u)))))))))))))) - 0u), ~ (~ _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(gl_NumWorkGroups.x)))))))), 0u ^ (_GLF_IDENTITY(uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(uint(gl_NumWorkGroups.x)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), 0u ^ (uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x))), uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x))), uint(gl_NumWorkGroups.x)))))))), (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) | uint(_GLF_ZERO(0.0, injectionSwitch.x)))), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups), ((gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u))).x), uint(gl_NumWorkGroups.x))))))))) | (uint((_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x)))), (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))) | (uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY((gl_NumWorkGroups) - uvec3(0u, 0u, 0u), ((gl_NumWorkGroups) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), ~ (~ (uvec3(0u, 0u, 0u))))) / _GLF_IDENTITY(uvec3(1u, 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(1u, 1u, 1u)), ~ (~ (~ (uvec3(1u, 1u, 1u))))))))).x), uint(gl_NumWorkGroups.x))))))))))))))))) | 0u)) << 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), clamp(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) | uvec3(0u, 0u, 0u)))) + (gl_NumWorkGroups)).x, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) + (gl_NumWorkGroups)).x)), _GLF_IDENTITY(uint(uint(0u | (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) + (gl_NumWorkGroups)).x)))), (uint(uint(0u | (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) + (gl_NumWorkGroups)).x))))) | 0u)))), (true ? (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) + (gl_NumWorkGroups)).x), _GLF_IDENTITY(0u | (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) + (gl_NumWorkGroups)).x)), _GLF_IDENTITY(uint(uint(0u | (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) + (gl_NumWorkGroups)).x)))), (uint(uint(0u | (~ (_GLF_IDENTITY(gl_NumWorkGroups, _GLF_IDENTITY(uvec3(0u, 0u, 0u), uvec3(0u, 0u, 0u) + (uvec3(0u, 0u, 0u))) + (gl_NumWorkGroups)).x))))) | 0u)))) : _GLF_FUZZED(subgroup_id)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(gl_NumWorkGroups.x)), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) << 0u)))), (uint(uint(gl_NumWorkGroups.x))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(8u, 0u | (_GLF_IDENTITY(8u, (8u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u)))))), (_GLF_IDENTITY(8u, 0u | (_GLF_IDENTITY(8u, (8u) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))))) >> 0u)), uint(8u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), clamp(uint(uvec2(0u, 1u)), uint(uvec2(0u, 1u)), uint(uvec2(0u, 1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), (_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u ^ 0u)), _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), 1u * (uint(8u))))), uint(8u)), ~ (~ (0u << _GLF_IDENTITY(uint(8u), uint(8u))))), 0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u + (8u))))) / 1u))))), (false ? _GLF_FUZZED(subgroup_size) : ~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), clamp(uint(uvec2(0u, 1u)), uint(uvec2(0u, 1u)), uint(uvec2(0u, 1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u ^ 0u), (_GLF_IDENTITY((_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u ^ 0u), (true ? (_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u ^ 0u) : _GLF_FUZZED(subgroup_size)))) << 0u)), _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(uint(8u), uint(8u)))), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(8u), _GLF_IDENTITY(uint(8u), 1u * (uint(8u))))), uint(8u)), ~ (~ (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (uint(8u)) << 0u), uint(8u))))), 0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, min(_GLF_IDENTITY(8u, 1u * (8u)), 8u))), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u + (8u))))) / 1u))))))), max(~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (8u))), uint(8u))), ((0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (8u))), uint(uvec2(uint(_GLF_IDENTITY(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (8u))), 0u))), uint(8u)))) << 0u))))), ((1u | 1u) ^ 1u) ^ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id ++)))) << _GLF_IDENTITY(uint(8u), uint(8u)))), max(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : 8u))), uint(8u)))), ~ ((0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ~ (~ (8u))))))))))))))), ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> _GLF_IDENTITY(0u, min(0u, 0u))))), (uint(uint(gl_NumWorkGroups.x))) - _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, (8u) ^ 0u)) * 1u), (8u) ^ (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | (_GLF_IDENTITY(uint(1u), uint(1u))))))))), uint(8u))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec2(0u, 1u)), clamp(_GLF_IDENTITY(uint(uvec2(0u, 1u)), (uint(uvec2(0u, 1u))) + (0u | 0u)), uint(uvec2(0u, 1u)), uint(uvec2(0u, 1u))))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY((_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u ^ 0u), min((_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u ^ 0u), (_GLF_IDENTITY(uint(8u), uint(8u))) ^ (0u ^ 0u)))), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), min(uint(8u), uint(8u))), uint(8u)), _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), (true ? uint(8u) : _GLF_FUZZED(subgroup_id))), uint(8u)))), clamp(_GLF_IDENTITY(0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(8u), clamp(uint(8u), uint(_GLF_IDENTITY(8u, (_GLF_IDENTITY(8u, max(8u, 8u))) >> (0u | 0u))), _GLF_IDENTITY(uint(8u), 1u * (uint(8u))))), _GLF_IDENTITY(uint(8u), (uint(8u)) ^ (0u | 0u))), ~ (~ (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), (false ? _GLF_FUZZED(packSnorm2x16(vec2(578.106, -2374.0123))) : uint(8u))))))), 0u << _GLF_IDENTITY(uint(8u), uint(8u)), _GLF_IDENTITY(0u << _GLF_IDENTITY(uint(8u), uint(8u)), (0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, 0u + (8u))))) / 1u))))), max(~ ((0u << _GLF_IDENTITY(uint(8u), uint(8u)))), ~ (_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (8u))), uint(8u))), ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (8u))), uint(8u)))) << 0u))))), ((1u | 1u) ^ 1u) ^ (~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED((subgroup_id ++)))) << _GLF_IDENTITY(uint(8u), uint(8u)))), max(~ ((0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : 8u))), uint(8u)))), ~ ((0u << _GLF_IDENTITY(uint(8u), uint(_GLF_IDENTITY(8u, ~ (~ (8u)))))))))))))))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) - 0u), _GLF_IDENTITY(~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), max(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)), min(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)), uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)))), max(_GLF_IDENTITY(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)), min(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)), uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)))), _GLF_IDENTITY(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (_GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups))))) ^ uvec3(0u, 0u, 0u)).x))))), 0u, 1u)), _GLF_IDENTITY(min(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)), uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u))), uint(uvec4(_GLF_IDENTITY(min(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)), uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u))), (min(uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)), uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u)))) << 0u), ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), 1u, 0u))))))), (uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))))), uint(uint((uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(gl_NumWorkGroups.x), _GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) - 0u))), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x), min(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) / 1u)), _GLF_IDENTITY(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, 0u), (true ? uvec3(gl_NumWorkGroups.x, 0u, 0u) : _GLF_FUZZED(uvec3(28594u, 187328u, 48265u))))), clamp(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, 0u), (true ? uvec3(gl_NumWorkGroups.x, 0u, 0u) : _GLF_FUZZED(uvec3(28594u, 187328u, 48265u))))), ~ (~ (uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, 0u), (true ? uvec3(gl_NumWorkGroups.x, 0u, 0u) : _GLF_FUZZED(uvec3(28594u, 187328u, 48265u)))))))), uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, 0u), (true ? uvec3(gl_NumWorkGroups.x, 0u, 0u) : _GLF_FUZZED(uvec3(28594u, 187328u, 48265u))))), uint(_GLF_IDENTITY(uvec3(gl_NumWorkGroups.x, 0u, 0u), (true ? uvec3(gl_NumWorkGroups.x, 0u, 0u) : _GLF_FUZZED(uvec3(28594u, 187328u, 48265u))))))))), (uint(gl_NumWorkGroups.x)) - 0u))), min(uint(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x), uint(gl_NumWorkGroups.x))))))))))), (~ (~ _GLF_IDENTITY(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, min(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, (false ? _GLF_FUZZED(subgroup_local_id) : gl_NumWorkGroups.x))))) << 0u)))))), max(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, (true ? gl_NumWorkGroups : _GLF_FUZZED(uvec3(110835u, 33611u, 33791u)))))))).x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), _GLF_IDENTITY(_GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u)))), min(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u)))), uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u))))))), 0u, 1u)), min(uint(uvec3((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u)))), min(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u)))), uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u))))))), 0u, 1u)), uint(uvec3((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u)))), min(uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u)))), uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(_GLF_IDENTITY(gl_NumWorkGroups.x, uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), (uint(gl_NumWorkGroups.x)) | (uint(gl_NumWorkGroups.x))))), gl_NumWorkGroups.x), (_GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u)) ^ 0u))))))), 0u, 1u)))), min(uint(uvec3(_GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u))))), max((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u))))), _GLF_IDENTITY((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)) + 0u))))), ~ _GLF_IDENTITY((~ ((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), max((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) + 0u))))))), min(_GLF_IDENTITY((~ ((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), max((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) + 0u))))))), ((~ ((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), max((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) + 0u)))))))) - 0u), (~ ((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY(max(gl_NumWorkGroups.x, gl_NumWorkGroups.x), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp(_GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), max((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), _GLF_IDENTITY((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), clamp((max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)), (max(gl_NumWorkGroups.x, gl_NumWorkGroups.x)))))) + 0u)))))))))))), 0u, 1u)), uint(uvec3((uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, gl_NumWorkGroups.x))))), 0u, 1u))))), (uint(uint(_GLF_IDENTITY(gl_NumWorkGroups.x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))))))), uint(uint((uint(_GLF_IDENTITY(uint(gl_NumWorkGroups.x), min(uint(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, clamp(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x, _GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) - uvec3(0u, 0u, 0u)).x))), uint(gl_NumWorkGroups.x)))))))))) << 0u)))) << uint(_GLF_ZERO(0.0, injectionSwitch.x)));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false)))))), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), bvec2(bvec3(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, (false) || false), false))))), true))))))))))))
  return;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), min(uvec3(0u, 0u, 0u), uvec3(0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))))).x, min(gl_WorkGroupID.x, gl_WorkGroupID.x));
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * workgroup_id) | 0u)))), workgroup_size * workgroup_id)), (workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)) >> (1u ^ 1u))) | (workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, uint(uvec2(subgroup_base, 1u)))) | (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY((subgroup_base) - 0u, clamp((subgroup_base) - 0u, (subgroup_base) - 0u, (subgroup_base) - 0u))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))), true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, true)))), false)))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(false), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), _GLF_IDENTITY(true, bool(bvec3(true, false, false))), true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true)), true)))), false))))), ! (! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))) && true)) || false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), true, true), bvec3(bvec3(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), true, true)))), false))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u), max(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / 1u))), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (max(subgroup_size, subgroup_size))))))), ~ (~ (~ (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (max(subgroup_size, subgroup_size)))))), 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (max(subgroup_size, subgroup_size)))))), ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(max(subgroup_size, subgroup_size), 0u | (_GLF_IDENTITY(max(subgroup_size, subgroup_size), (max(subgroup_size, subgroup_size)) | (max(subgroup_size, subgroup_size))))))) ^ 0u))))))))));
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))) && true), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, (true) || false), true, true))) && true)))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(true, ! (! (true))), true, true)), (bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, true))) && true))))))), true, false))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id % 2, uint(uvec2(_GLF_IDENTITY(subgroup_local_id % 2, clamp(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) % 2, subgroup_local_id % 2)), 1u))))), subgroup_local_id % _GLF_IDENTITY(2, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(max(21352, 69671)), (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(max(21352, 69671)), int(_GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(max(21352, 69671)), (true ? _GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(2, 0 | (2)) : _GLF_FUZZED(max(21352, 69671)) : _GLF_FUZZED(-18590)))))) | 0)))))), max((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u), _GLF_IDENTITY(subgroup_local_id, min(subgroup_local_id, subgroup_local_id)))), 0u | _GLF_IDENTITY((subgroup_local_id), 1u * _GLF_IDENTITY(((subgroup_local_id)), (_GLF_IDENTITY(((subgroup_local_id)), (((subgroup_local_id))) << 0u)) + 0u))) % 2), (subgroup_local_id % _GLF_IDENTITY(2, (2) - 0)))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))), ~ (~ ((~ (_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)))))))) % 2)), subgroup_local_id % 2))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u), subgroup_local_id)) % 2)), max(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, ~ _GLF_IDENTITY((~ (subgroup_local_id)), ((~ (subgroup_local_id))) >> (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) % 2)), subgroup_local_id % 2)))), ~ (~ (~ ((_GLF_IDENTITY(subgroup_local_id % 2, max(_GLF_IDENTITY(subgroup_local_id % 2, min(subgroup_local_id % 2, _GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))) % 2)), subgroup_local_id % 2))))))))), max((subgroup_local_id % 2), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, (2) - 0)), max((subgroup_local_id % _GLF_IDENTITY(2, (2) - 0)), (subgroup_local_id % _GLF_IDENTITY(2, (2) - 0)))))), 1u, 0u, (0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(2u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u))), (((_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 1u)), (true ? uint(uvec3(1u, 0u, _GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec3(1u, 1u, 0u), max(uvec3(1u, 1u, 0u), uvec3(1u, 1u, 0u))))))) : _GLF_FUZZED(workgroup_base)))) << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))) * 1u) * (_GLF_IDENTITY(2u, (2u) | (2u))))), uint(2u)))))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, tan(0.0), 0.0, log(1.0), abs(0.0), 1.0)))), bool(bvec4((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, tan(0.0), 0.0, log(1.0), abs(0.0), 1.0)))), true, false, true))))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, clamp(next_virtual_gid, next_virtual_gid, next_virtual_gid))], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), (false ? _GLF_FUZZED(read) : _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (uint(1)) << 0u), 0u ^ (_GLF_IDENTITY(uint(1), (uint(1)) << 0u))))), _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), false, true)))))) && true)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 subgroupBarrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(_GLF_DEAD(false)))))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true)))) && true), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(_GLF_DEAD(false)))))), true, true)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (false ? _GLF_FUZZED(-8643.5970) : injectionSwitch[0])), injectionSwitch[1])).y))), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, true), true))))))
      return;
     return;
    }
   return;
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
