#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2(_GLF_FUZZED(-76.73), _GLF_FUZZED(-3683.0141)), bvec2(false, false)))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).y))))), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, ~ (~ (1)))]), vec2(_GLF_FUZZED(-76.73), _GLF_FUZZED(-3683.0141)), bvec2(false, false)))) - vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x))).y))))), false, false, false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (! (! (_GLF_IDENTITY(false, ! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), bool(bool(true && (_GLF_IDENTITY(bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), ! (! (bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[_GLF_IDENTITY(0, ~ (~ (0)))], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(7048.7566 - -451.824, (7048.7566 - _GLF_IDENTITY(-451.824, mix(float(_GLF_FUZZED(-267.842)), float(-451.824), bool(true)))) - 0.0))), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2(_GLF_FUZZED(195.112), (mat2(1.0) * (injectionSwitch))[1]), vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7.6)), bvec2(true, false)))).y)))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - _GLF_IDENTITY(-451.824, clamp(-451.824, -451.824, -451.824)))), _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(float(55411u))), _GLF_IDENTITY(vec2(_GLF_FUZZED(-28.20), (_GLF_FUZZED(injectionSwitch))[1]), (true ? vec2(_GLF_FUZZED(-28.20), (_GLF_FUZZED(injectionSwitch))[1]) : _GLF_FUZZED(injectionSwitch))), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(7048.7566 - -451.824, min(_GLF_IDENTITY(7048.7566 - -451.824, max(7048.7566 - -451.824, _GLF_IDENTITY(7048.7566 - -451.824, 1.0 * (7048.7566 - -451.824)))), _GLF_IDENTITY(7048.7566 - -451.824, (_GLF_IDENTITY(7048.7566 - -451.824, min(7048.7566 - -451.824, 7048.7566 - -451.824))) - 0.0))), (7048.7566 - -451.824) - 0.0), 0.0 + (_GLF_IDENTITY(7048.7566 - -451.824, (7048.7566 - -451.824) - _GLF_IDENTITY(0.0, min(0.0, 0.0))))))), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-8.1)), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))), false))).x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - _GLF_IDENTITY(-451.824, clamp(-451.824, -451.824, -451.824)))), _GLF_IDENTITY((injectionSwitch), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(injectionSwitch), mix(vec2((_GLF_FUZZED(injectionSwitch))[0], _GLF_FUZZED(float(55411u))), vec2(_GLF_FUZZED(-28.20), (_GLF_FUZZED(injectionSwitch))[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0))))[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(7048.7566 - -451.824, (7048.7566 - -451.824) - 0.0), 0.0 + (_GLF_IDENTITY(7048.7566 - -451.824, _GLF_IDENTITY((7048.7566 - -451.824) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? (7048.7566 - -451.824) - _GLF_IDENTITY(0.0, min(0.0, 0.0)) : _GLF_FUZZED(-3.7)))))))), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED((154.993)), ((injectionSwitch))[1]), vec2(((injectionSwitch))[0], _GLF_FUZZED((+ -5.5))), bvec2(true, false)))))[0], _GLF_FUZZED(-8.1)), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true)))))), false))).x > injectionSwitch.y)))) && true))))))), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y, _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[_GLF_IDENTITY(0, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (0))], _GLF_IDENTITY(_GLF_FUZZED(-8.1), clamp(_GLF_FUZZED(-8.1), _GLF_FUZZED(-8.1), _GLF_IDENTITY(_GLF_FUZZED(-8.1), (false ? _GLF_FUZZED(-2.7) : _GLF_FUZZED(-8.1)))))), bvec2(true, false))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(7048.7566, mix(float(7048.7566), float(_GLF_FUZZED(-7740.2063)), bool(_GLF_IDENTITY(false, true && (false))))) - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(7048.7566 - -451.824, (7048.7566 - -451.824) - 0.0))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x2(44.87, -5574.8866, 410.466, -194.596, 2.2, 4.0, 300.786, 3293.4254)) : mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), max(vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x2(44.87, -5574.8866, 410.466, -194.596, 2.2, 4.0, 300.786, 3293.4254)) : mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), vec2(_GLF_IDENTITY(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4x2(44.87, -5574.8866, 410.466, -194.596, 2.2, 4.0, 300.786, 3293.4254)) : mat4x2(injectionSwitch, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0))))))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y)))), ! (! (! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))), vec2(0.0, 0.0) + (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))))))).x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(7562.5938), ((injectionSwitch))[1]), vec2(_GLF_IDENTITY(((injectionSwitch))[0], (false ? _GLF_FUZZED(5.3) : ((injectionSwitch))[0])), _GLF_FUZZED(1771.5420)), bvec2(true, false)))[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y)), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(7048.7566 - -451.824, (7048.7566 - -451.824) - 0.0))), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), max((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))))), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[_GLF_IDENTITY(1, (1) ^ 0)]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y))), ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x, clamp(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x) - 0.0))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED((7048.7566 - _GLF_IDENTITY(-451.824, min(_GLF_IDENTITY(-451.824, min(-451.824, -451.824)), -451.824)))), (injectionSwitch)[1]), max(vec2(_GLF_FUZZED((7048.7566 - _GLF_IDENTITY(-451.824, min(_GLF_IDENTITY(-451.824, min(-451.824, -451.824)), -451.824)))), (injectionSwitch)[1]), vec2(_GLF_FUZZED((7048.7566 - _GLF_IDENTITY(-451.824, min(_GLF_IDENTITY(-451.824, min(-451.824, -451.824)), -451.824)))), (injectionSwitch)[1]))), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((7048.7566 - -451.824)), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y)))), false || (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((_GLF_IDENTITY(7048.7566 - -451.824, (7048.7566 - -451.824) - 0.0))), _GLF_IDENTITY((injectionSwitch), min(_GLF_IDENTITY((injectionSwitch), min((injectionSwitch), (injectionSwitch))), (injectionSwitch)))[1]), vec2((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-8.1)), bvec2(true, false))).x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))), ! (! (false))))), ! (! ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), bool(_GLF_IDENTITY(bvec3(! (! (false)), false, true), bvec3(bvec4(bvec3(! (! (false)), false, true), false))))))))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), false, true))))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), false, true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), false, true))))), (_GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(false)), false, true)), ! (! (bool(bvec3(! (_GLF_DEAD(false)), false, true)))))) && true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, _GLF_ZERO(0.0, injectionSwitch.x) + (injectionSwitch.x)))) > injectionSwitch.y)))), (_GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(528.141)), bool(false))))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(faceforward(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))))).x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x), clamp(_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x), _GLF_IDENTITY(_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x), 1.0 * (_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x))), _GLF_FUZZED(vec3(8.2, 3.2, 9.7).x)))), vec2(_GLF_FUZZED(-1.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))).y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x), clamp(_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x), _GLF_IDENTITY(_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x), 1.0 * (_GLF_FUZZED(vec3(8.2, 3.2, 9.7).x))), _GLF_FUZZED(vec3(8.2, 3.2, 9.7).x)))), vec2(_GLF_FUZZED(-1.6), (injectionSwitch)[1]), _GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false))))).y)))))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)), clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)), max(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))))), _GLF_IDENTITY(true, bool(bvec2(true, true))) && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)))))))), true && (bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x) : injectionSwitch.y))))))))))), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -1.8))), bool(false))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0 * (float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0)), sqrt(1.0), sqrt(1.0), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8.2, 3.2, 9.7).x)), vec2(_GLF_FUZZED(-1.6), (injectionSwitch)[1]), bvec2(false, true))).y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)))))))), true && (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x) : injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x) : injectionSwitch.y)))))) && true)))))))))) || false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat3x2(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -1.8))), bool(false))), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0)), 1.0 * (float(mat4(0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))))), 0.0)), sqrt(1.0), sqrt(1.0), 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(8.2, 3.2, 9.7).x)), vec2(_GLF_FUZZED(-1.6), (injectionSwitch)[1]), bvec2(false, true))).y)))))), _GLF_IDENTITY(bool(bool(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y)))))))), true && (bool(bool(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, _GLF_ONE(1.0, injectionSwitch.y) * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-3.3)), float(injectionSwitch.x), bool(true))))), injectionSwitch.x, injectionSwitch.x)))))) > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, 160.365)).x) : injectionSwitch.y))), true && (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(_GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))), (_GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true)))) * cos(0.0)))).x) : injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x) : injectionSwitch.y))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(_GLF_IDENTITY(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x, _GLF_IDENTITY(float(vec3(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x, 0.0, 1.0)), max(float(vec3(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x, 0.0, 1.0)), float(vec3(log(vec4(-7.4, 9.2, 30.15, _GLF_IDENTITY(160.365, mix(float(_GLF_FUZZED(float(true))), float(160.365), bool(true))))).x, 0.0, 1.0)))))) : injectionSwitch.y)))))) && true)))))))))) || false))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), false, false, true))))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY((_GLF_DEAD(false)), ! (! (_GLF_IDENTITY((_GLF_DEAD(false)), false || ((_GLF_DEAD(false))))))) && true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, _GLF_IDENTITY((gl_WorkGroupSize.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), min((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))))), clamp((gl_WorkGroupSize.x) | (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), (gl_WorkGroupSize.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), 0u ^ (~ (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))))))), _GLF_IDENTITY((gl_WorkGroupSize.x) | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? gl_WorkGroupSize : _GLF_FUZZED(uvec3(24927u, 147458u, _GLF_IDENTITY(120414u, max(120414u, 120414u)))))).x, (gl_WorkGroupSize.x) << _GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (0u) | (0u)))))), ~ (~ _GLF_IDENTITY(((gl_WorkGroupSize.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u))))), (((gl_WorkGroupSize.x) | _GLF_IDENTITY((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), max((_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)), (_GLF_IDENTITY(gl_WorkGroupSize.x, (gl_WorkGroupSize.x) << 0u)))))) | 0u))))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec3(bvec2(_GLF_DEAD(false), true), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, true, true)), false || (bool(bvec4(_GLF_DEAD(false), true, true, true))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bvec2((false), true)))) && true), ! (! (! (false))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, min(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], _GLF_IDENTITY(gl_WorkGroupID[2], max(gl_WorkGroupID[2], gl_WorkGroupID[2])))), _GLF_IDENTITY(gl_WorkGroupID, ~ (~ (gl_WorkGroupID))))), ((_GLF_IDENTITY(uvec3(1u, _GLF_IDENTITY(1u, (1u) | (1u)), _GLF_IDENTITY(1u, (1u) << 0u)), (true ? uvec3(1u, 1u, 1u) : _GLF_FUZZED(uvec3(180855u, 129293u, 134107u)))) << _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(87212u, 4624u, 81529u) & uvec3(0u, 0u, 0u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), clamp(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), _GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))), uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) ^ (_GLF_IDENTITY(uvec3(1u), (uvec3(1u)) | (uvec3(1u))))))))) >> _GLF_IDENTITY(uvec3(1u), uvec3(1u))) * (_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) << uvec3(0u, 0u, 0u))))) | (gl_WorkGroupID)))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0), mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, 1.0, 0.0, 1.0, cos(0.0), 0.0, 0.0))))))) / 1.0) > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x, max(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(1.9))))) > injectionSwitch.y)))), (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (_GLF_IDENTITY(false, ! (! (false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, false, false))))))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * subgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), _GLF_IDENTITY(max(0u ^ (subgroup_id), 0u ^ (subgroup_id)), clamp(max(0u ^ (subgroup_id), 0u ^ (subgroup_id)), max(0u ^ (subgroup_id), 0u ^ (subgroup_id)), max(0u ^ (subgroup_id), 0u ^ (subgroup_id))))))) ^ 0u) * subgroup_size, (_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(0u ^ (subgroup_id), max(0u ^ (subgroup_id), 0u ^ (subgroup_id))))) ^ 0u) * subgroup_size) | 0u), uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 1u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_size, 0u, 1u, 1u)), 0u, 0u, 1u), (uvec4(uint(uvec4(subgroup_size, 0u, 1u, 1u)), _GLF_IDENTITY(0u, (0u) | (0u)), 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) / _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, _GLF_IDENTITY(0u, max(0u, 0u)), 1u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_size, 0u, 1u, 1u)), 0u, 0u, 1u), (uvec4(uint(uvec4(subgroup_size, 0u, 1u, 1u)), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) | 0u)) / uint(_GLF_ONE(1.0, injectionSwitch.y))), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 1u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_size, 0u, 1u, 1u)), 0u, 0u, 1u), (uvec4(uint(uvec4(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), 0u, 1u, 1u)), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) / _GLF_IDENTITY(1u, (1u) / uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), (_GLF_ONE(1.0, injectionSwitch.y)) * 1.0)))) | ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec4(subgroup_size, 0u, 1u, 1u)), uint(_GLF_IDENTITY(uvec4(uint(uvec4(subgroup_size, 0u, 1u, 1u)), 0u, 0u, _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y)))), (uvec4(uint(uvec4(subgroup_size, 0u, 1u, _GLF_IDENTITY(1u, (1u) | 0u))), 0u, 0u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))))) / _GLF_IDENTITY(1u, (1u) / uint(_GLF_ONE(1.0, injectionSwitch.y))))))))) >> 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ (subgroup_id))) ^ 0u) * subgroup_size, uint(uint(_GLF_IDENTITY(subgroup_id * subgroup_size, (subgroup_id * subgroup_size) ^ 0u)))), subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size)), subgroup_id * subgroup_size), (clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, 0u ^ _GLF_IDENTITY((subgroup_id), min((subgroup_id), (subgroup_id))))) ^ 0u) * subgroup_size, uint(uint(subgroup_id * subgroup_size))), subgroup_id * subgroup_size, subgroup_id * subgroup_size)) * 1u)) - 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(true ? subgroup_base : _GLF_FUZZED(workgroup_size), (true ? subgroup_base : _GLF_FUZZED(workgroup_size)) | 0u)))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size)))), 0u ^ (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size)))), (true ? 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_base))), (true ? subgroup_base : _GLF_FUZZED(workgroup_size)))), min(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_base))), (true ? subgroup_base : _GLF_FUZZED(workgroup_size)))), (false ? _GLF_FUZZED(71564u) : (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_base))), (true ? subgroup_base : _GLF_FUZZED(workgroup_size)))))), (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_base))), (true ? subgroup_base : _GLF_FUZZED(workgroup_size)))))) : _GLF_FUZZED(34245u)))))) / ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u)))))) >> 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(53.79, 8.8, -373.933, -7.3).t), _GLF_FUZZED(5.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(_GLF_IDENTITY(vec4(53.79, 8.8, -373.933, -7.3), min(vec4(53.79, 8.8, -373.933, -7.3), vec4(53.79, 8.8, -373.933, -7.3))).t), _GLF_FUZZED(5.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(53.79, _GLF_IDENTITY(8.8, clamp(_GLF_IDENTITY(8.8, (8.8) / round(length(normalize(vec3(1.0, 1.0, 1.0))))), _GLF_IDENTITY(8.8, clamp(8.8, 8.8, 8.8)), 8.8)), -373.933, -7.3).t), _GLF_FUZZED(5.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))), (mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(53.79, _GLF_IDENTITY(8.8, clamp(8.8, _GLF_IDENTITY(8.8, clamp(8.8, 8.8, 8.8)), 8.8)), -373.933, -7.3).t), _GLF_FUZZED(5.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) * mat2(1.0))).y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(374.677)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x))).x > injectionSwitch.y))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y), true && (! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(374.677)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), injectionSwitch.x))).x > injectionSwitch.y))))))))))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(vec4(53.79, 8.8, -373.933, -7.3).t), _GLF_FUZZED(5.5)), bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false), false || (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)), (bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, clamp(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (true ? (subgroup_local_id + 1) % subgroup_size : _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), 0u ^ (_GLF_FUZZED(virtual_gid))))), (subgroup_local_id + _GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, min(1, 1))))) % subgroup_size, _GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, _GLF_IDENTITY(~ (~ ((subgroup_local_id + 1) % subgroup_size)), min(_GLF_IDENTITY(~ (~ ((_GLF_IDENTITY(subgroup_local_id, uint(uvec3(_GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, (1u | 0u), 1u))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 1u))) + 1) % subgroup_size)), (~ (~ ((subgroup_local_id + 1) % subgroup_size))) / 1u), ~ (~ ((subgroup_local_id + 1) % subgroup_size))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))) || false)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))
  barrier();
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec3(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), min(int(ivec3(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(ivec3(4, 0, int(_GLF_ZERO(0.0, injectionSwitch.x)))))))) / 1)) | 0), 64, _GLF_IDENTITY(2, (2) / 1)), _GLF_IDENTITY((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))) | ((true ? buf[virtual_gid] : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_FUZZED(workgroup_base))))), (false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), max(_GLF_FUZZED(workgroup_base), _GLF_IDENTITY(_GLF_FUZZED(workgroup_base), 0u | (_GLF_IDENTITY(_GLF_FUZZED(workgroup_base), (_GLF_FUZZED(workgroup_base)) - 0u))))))))))), 4, 64, 2), max(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(_GLF_IDENTITY(4, min(4, 4)), 4)), 64, 2)))), ~ _GLF_IDENTITY((~ ((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), min((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), clamp((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), (true ? _GLF_IDENTITY(buf[virtual_gid], 0u | (buf[virtual_gid])) : _GLF_FUZZED(workgroup_base)), (true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)))))), ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))) | ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))))), 4, 64, 2), max(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)))))), ~ (~ ((~ ((_GLF_IDENTITY(atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))) | ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))))), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))) | ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)))))), ~ (~ (uint(_GLF_IDENTITY(buf[virtual_gid], _GLF_IDENTITY((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base)), ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))) | ((true ? buf[virtual_gid] : _GLF_FUZZED(workgroup_base))))))))))), 4, 64, 2), max(atomicLoad(buf[virtual_gid], 4, 64, 2), atomicLoad(buf[virtual_gid], _GLF_IDENTITY(4, min(4, 4)), 64, 2)))))))))) - _GLF_IDENTITY(0u, _GLF_IDENTITY(max(0u, 0u), clamp(max(0u, 0u), max(0u, 0u), _GLF_IDENTITY(max(0u, 0u), (_GLF_IDENTITY(max(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u))) | (0u)), 0u), (max(0u, 0u)) | 0u)) >> 0u)))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if((subgroup_local_id % 2) == 0)
  {
   subgroupAll(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (_GLF_IDENTITY(false, ! (! (false))))), bool(bool((! (_GLF_IDENTITY(false, ! (! (false))))))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), mix(vec2(_GLF_FUZZED(-629.794), _GLF_FUZZED(3.1)), vec2(((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(1.0, 1.0), min(vec2(1.0, 1.0), vec2(1.0, 1.0))) * (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))))))[1]), bvec2(true, true)))), sin(vec2(0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false)))), ! (! (_GLF_IDENTITY(false, true && (false))))));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), bool(bvec4((false), true, true, true)))))) && true))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, false, false)))) || false)))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x4(injectionSwitch.y, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 1.0)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED((-2153.4796 * -4480.8956)), _GLF_FUZZED(1.5)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x < injectionSwitch.y)), true)), ! (! (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, (1) / 1))), 1))), 4, _GLF_IDENTITY(64, _GLF_IDENTITY(clamp(64, 64, _GLF_IDENTITY(64, (64) / 1)), (clamp(64, 64, _GLF_IDENTITY(64, (64) / 1))) << 0)), 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)), true && (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), max(vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0)), vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y)))) && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false))), false), true))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(657.535)), float(injectionSwitch.y), bool(true)))), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y))), (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), min((injectionSwitch) - vec2(0.0, 0.0), (injectionSwitch) - vec2(0.0, 0.0)))), injectionSwitch)).y)))) && true)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
