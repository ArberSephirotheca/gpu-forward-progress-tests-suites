#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false))))), false || (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false)), bool(bool(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || false), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, false)))))))))) || false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (_GLF_IDENTITY(! (! (false)), bool(bvec3(! (! (false)), true, false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && (_GLF_IDENTITY((false), true && ((false))) || false)))), bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false)))), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).y)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), ! (! (bool(_GLF_DEAD(false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false)))) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false))) || false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, true && (false))))) ? _GLF_FUZZED(vec2(74.03, 6004.8001)) : injectionSwitch)), vec2(0.0, 0.0) + (injectionSwitch))) / vec2(1.0, 1.0)), injectionSwitch)), (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-4.8, -512.126).t)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), clamp(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), min((injectionSwitch) * mat2(1.0), (injectionSwitch) * mat2(1.0))), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) + _GLF_IDENTITY(vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)), mix(vec2(_GLF_FUZZED((7961.2068)), _GLF_FUZZED(-9528.8788)), vec2(_GLF_IDENTITY((vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))[0], 1.0 * ((vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))[0])), (vec2(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0)))[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), (injectionSwitch) * mat2(1.0)))), injectionSwitch)).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, (0u | 0u) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), max((_GLF_IDENTITY(subgroup_size, (0u | 0u) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))), (_GLF_IDENTITY(subgroup_size, (0u | 0u) | (_GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))))))) / 1u)) * 1u))), (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size), max((subgroup_size), _GLF_IDENTITY((subgroup_size), ((subgroup_size)) + uint(_GLF_ZERO(0.0, injectionSwitch.x))))) / 1u)) * 1u)))) | (_GLF_IDENTITY(subgroup_id * subgroup_size, 1u * (subgroup_id * _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u)) * 1u)))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec3(bvec2(false, true), false)))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)), ! (! (bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED((-8.8)) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(tan(vec2(0.0, 0.0)))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0)), float(mat2(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0)), 1.0, 0.0, 1.0)))))) > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(tan(vec2(0.0, 0.0)))), injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0)), float(mat2(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0)), 1.0, 0.0, 1.0)))))) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(tan(vec2(0.0, 0.0)))), injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(9.8, 4.8, 2.6).b)), vec2(_GLF_FUZZED(559.696), (injectionSwitch)[1]), bvec2(false, true))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0)), float(mat2(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0)), 1.0, 0.0, 1.0)))))) > injectionSwitch.y), ! (! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, injectionSwitch), (max(injectionSwitch, injectionSwitch)) * vec2(1.0, 1.0))).x, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))[1])))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(tan(vec2(0.0, 0.0)))), injectionSwitch)), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(9.8, 4.8, 2.6).b)), vec2(_GLF_FUZZED(559.696), (injectionSwitch)[1]), bvec2(false, true))), max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x, 1.0)), float(mat2(float(vec2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 1.0)), 1.0, 0.0, 1.0)))))) > injectionSwitch.y))))))) || false)) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, false)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true))))), true, false)))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) && true)))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bvec4(! (_GLF_DEAD(false)), true, true, false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, ! (! (false))))))), false || (! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) || false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(273.476)), vec2(_GLF_FUZZED(float(97917)), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), max(_GLF_IDENTITY(_GLF_IDENTITY(max(1, 1), 0 ^ (_GLF_IDENTITY(max(1, 1), 1 * (max(1, 1))))), (max(1, 1)) >> 0), _GLF_IDENTITY(max(1, 1), (_GLF_IDENTITY(max(1, 1), (max(1, 1)) / 1)) | 0))))], (true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_IDENTITY(_GLF_FUZZED(mix(_GLF_IDENTITY(-201.770, clamp(-201.770, -201.770, -201.770)), 3.4, -9292.1727)), clamp(_GLF_IDENTITY(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), float(mat2x4(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, log(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))), transpose(_GLF_IDENTITY(transpose(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), float(mat2x4(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, log(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))), (true ? transpose(mat3x4(_GLF_IDENTITY(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), float(mat2x4(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, length(vec3(0.0, 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, log(_GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(mat4x3(-8.4, 73.60, -8.0, -3.6, -9.4, -33.44, 6.2, 7.8, -67.78, 56.12, 7.4, -9404.4867)))))))), _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), _GLF_IDENTITY(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), float(mat3(_GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 1.0))))))))).y)) && true, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))) && true) || false))) || (_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7787.9229)), vec2(_GLF_FUZZED(416.273), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), mix(vec2((mat2(1.0) * (injectionSwitch))[0], _GLF_FUZZED(7787.9229)), vec2(_GLF_FUZZED(416.273), (mat2(1.0) * (injectionSwitch))[1]), bvec2(false, true)))))).x > injectionSwitch.y)))), _GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(1, max(1, 1))], (_GLF_IDENTITY(true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0))), (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))) / 1)))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), mix(float(_GLF_FUZZED(-18.92)), float(true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727))), bool(true))))))).y)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(1, max(1, 1))], (_GLF_IDENTITY(true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(_GLF_IDENTITY(ivec3(~ (1), 1, _GLF_IDENTITY(0, (0 >> _GLF_IDENTITY(int(7), int(7))) + (0))), (_GLF_IDENTITY(ivec3(~ (1), 1, 0), max(ivec3(~ (1), 1, 0), ivec3(~ (1), 1, 0)))) >> ivec3(0, 0, 0))))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)), mix(float(_GLF_FUZZED(-18.92)), float(true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727))), bool(true))))))).y)) && true)), ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true) || false))) || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, 9706.3192, -5.3)) : mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302)))), (false ? _GLF_FUZZED(mat2(-97.50, 4392.2810, -6.5, 968.367)) : _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((mat2(1.0)), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + ((mat2(1.0))))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))))))))[_GLF_IDENTITY(1, max(1, 1))], (true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, 9706.3192, -5.3)) : mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(vec2(-4.1, -8.6)) : (injectionSwitch) * mat2(1.0))), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302)))), (false ? _GLF_FUZZED(mat2(-97.50, 4392.2810, -6.5, 968.367)) : _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (mat2(0.0, 0.0, 0.0, 0.0)) + mat2(0.0, 0.0, 0.0, 0.0)) + (_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) / mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))))))))[_GLF_IDENTITY(1, max(1, 1))], (true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, 9706.3192, -5.3)) : mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), mat2(mat4x2(mat2(1.0))))) / mat2(1.0, 1.0, 1.0, 1.0)), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, _GLF_IDENTITY(793.302, min(793.302, _GLF_IDENTITY(793.302, 1.0 * (793.302)))))))), (false ? _GLF_FUZZED(mat2(-97.50, 4392.2810, -6.5, 968.367)) : _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))))))))[_GLF_IDENTITY(1, max(1, 1))], (true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y)), bool(bool(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, 9706.3192, -5.3)) : mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(vec2(0.0, 0.0), min(_GLF_IDENTITY(vec2(0.0, 0.0), max(vec2(0.0, 0.0), vec2(0.0, 0.0))), vec2(0.0, 0.0))) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), mat2(mat3(mat2(0.0, 0.0, 0.0, 0.0)))) + (mat2(1.0))), mat2(mat3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))), (_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))))))[_GLF_IDENTITY(1, max(1, 1))], _GLF_IDENTITY((true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727))), max((true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727))), (true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))))).y))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true) && true)) || false))) || (_GLF_IDENTITY(false, ! (! (false)))))))))) && true, bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-9.3)), bool(false))) > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(1, max(1, 1))], (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat4(7257.1529, 916.733, -34.40, 71.05, 74.43, 7569.8676, -557.382, -6.3, -4.4, -7.3, 1920.7122, -7.6, -421.857, 72.50, -3933.1712, 2.9)) : mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))])) : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y)) && true, ((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(0.1) : _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(821.553)), bool(false))), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), injectionSwitch.y))))) - 0.0)), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true) || false))) || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-3.8), _GLF_FUZZED(-118.827)), bvec2(false, false))).x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, 9706.3192, -5.3)) : mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch))) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.4) : 0.0))) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))), mat2(0.0, 0.0, 0.0, 0.0) + (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.4) : 0.0))) + (mat2(1.0))))), (mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-2.4) : 0.0))) + (mat2(1.0)))))) * mat2(1.0)), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.9)), bool(false))), 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))))))), (false ? _GLF_FUZZED(vec2(-8563.0895, -0.0)) : _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(2.2)))), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))))))))[_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(1, clamp(1, 1, 1)))), (_GLF_IDENTITY(~ (~ (1)), (~ (~ (1))) - 0)) << int(_GLF_ZERO(0.0, injectionSwitch.x)))), max(1, 1))], (true ? _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], max(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], min(injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))], injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))])))) : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y)) && true, ((_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true) || _GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 1.0, 1.0))))), injectionSwitch)).y)))))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))))))) && true, ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(1, max(1, 1))], (true ? _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0)) + 0))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0)) + 0))], (injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0)) + 0))]) - 0.0)) / 1.0) : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y, (true ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))[_GLF_IDENTITY(1, max(1, 1))], (true ? _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0)) + 0))], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0)) + 0))], (injectionSwitch[_GLF_IDENTITY(1, _GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0), (~ _GLF_IDENTITY((_GLF_IDENTITY(~ (1), int(ivec3(~ (1), _GLF_IDENTITY(1, (1) >> 0), 0)))), ((_GLF_IDENTITY(~ (1), int(ivec3(~ (_GLF_IDENTITY(1, min(1, 1))), _GLF_IDENTITY(1, _GLF_IDENTITY((1) >> 0, ~ (~ ((_GLF_IDENTITY(1, int(ivec2(1, 0)))) >> 0)))), 0))))) ^ 0)) + 0))]) - 0.0)) / 1.0) : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y : _GLF_FUZZED(-9398.1664))))) && true, ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(vec3(9.9, -3.7, 6.5))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(vec3(9.9, -3.7, 6.5))))).x > injectionSwitch.y)), true && (! ((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)) : _GLF_FUZZED(vec2(vec3(9.9, -3.7, 6.5))))).x > injectionSwitch.y)))))), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true) || false))) || (_GLF_IDENTITY(false, ! (! (false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, 9706.3192, -5.3)) : mat2(injectionSwitch[0], 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), abs(1.0)))))), _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-50752)))], 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, 9706.3192, -5.3)) : mat2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-582.985), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(0.8)), bvec2(true, false)))[0], 0.0, 0.0, abs(1.0)))))), 0.0, 0.0)), (false ? _GLF_FUZZED(8.2) : float(vec3(_GLF_IDENTITY(injectionSwitch[0], float(_GLF_IDENTITY(mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)), (false ? _GLF_FUZZED(mat2(5.5, 1.2, _GLF_IDENTITY(9706.3192, min(9706.3192, 9706.3192)), -5.3)) : mat2(injectionSwitch[0], 0.0, 0.0, abs(1.0)))))), 0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, injectionSwitch), min(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), vec2(0.0, 0.0) + (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), (min(injectionSwitch, injectionSwitch)) * mat2(1.0)))), min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * mat2(1.0)), vec2(0.0, 0.0) + ((injectionSwitch) * _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0))) + (mat2(1.0))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)), (_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)), transpose(transpose(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)), (false ? _GLF_FUZZED(mat2(-5.7, 0.2, 6.7, -344.798)) : mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))))))) + mat2(0.0, 0.0, 0.0, 0.0))))) : _GLF_FUZZED(mat2(96.01, -94.26, -2360.3499, 793.302))))))))[_GLF_IDENTITY(1, max(1, 1))], (true ? injectionSwitch[_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), int(ivec3(~ (1), 1, 0)))))] : _GLF_FUZZED(mix(-201.770, 3.4, -9292.1727)))))).y)) && true, ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) && true) || false))) || (_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(bool((false))))))))))))) && true) || false), true, false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true)), true && (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true)), _GLF_IDENTITY(bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true)), false, false)), (bool(bvec3(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true))))), true)), false, false))) && true))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0)))).x > injectionSwitch.y)))))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (false ? _GLF_FUZZED(asin(injectionSwitch)) : _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))))), (injectionSwitch))) + vec2(0.0, 0.0)))).x > injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0))), (true ? vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), (injectionSwitch))) + vec2(0.0, 0.0))) : _GLF_FUZZED(step(faceforward(1.0, 180.872, 65.09), vec2(-47.04, -9.5)))))).x > injectionSwitch.y)))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) || (bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), clamp(min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (1u | 0u), 0u, 0u), clamp(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (1u | 0u), 0u, 0u), uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (1u | 0u), 0u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (1u | 0u), 0u, 0u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)), 0u ^ (_GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))), (1u | 0u), 0u, 0u)) << uvec4(0u, 0u, 0u, 0u))))))), _GLF_IDENTITY(min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size))), (min(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (_GLF_IDENTITY(uint(uvec2(subgroup_size, 0u)), (uint(uvec2(subgroup_size, 0u))) ^ 0u)) - (0u | 0u))), _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))) << 0u), min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | (subgroup_size)))))), (_GLF_IDENTITY(false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED((170329u + workgroup_id)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), uint(uvec3(((subgroup_size)), 1u, 0u)))) - 0u)))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))))))), (false ? _GLF_FUZZED(workgroup_size) : (subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u) : _GLF_FUZZED((170329u + workgroup_id)))), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u))), min(subgroup_size, _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), uint(uvec3(((subgroup_size)), 1u, 0u)))) - 0u)))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u)))))))) >> 0u)))), uint(uvec3(workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) << 0u), (_GLF_IDENTITY(0u, (0u) << 0u)) - 0u) | (subgroup_size)))), (false ? _GLF_FUZZED(workgroup_size) : (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) % _GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((((subgroup_size))), 0u + (_GLF_IDENTITY((((subgroup_size))), min((((subgroup_size))), (((subgroup_size))))))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), min(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), _GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u)), (uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u))) >> 0u)) | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 1u ^ 1u))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) * 1u)))), ((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))))) * 1u))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u)))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), min(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), _GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u)), (uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u))) >> 0u)) | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 1u ^ 1u))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) * 1u)))), ((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))))) * 1u))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))))))), ~ (~ (uint((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), min(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), _GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u)), (uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u))) >> 0u)) | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 1u ^ 1u))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) * 1u)))), ((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))))) * 1u))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))))))))))), (uint(_GLF_IDENTITY(uint((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), min(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), _GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u)), (uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u))) >> 0u)) | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 1u ^ 1u))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) * 1u)))), ((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))))) * 1u))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))))))), ~ (~ (uint((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), min(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), _GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u)), (uint(uvec3(1u, (0u << _GLF_IDENTITY(uint(8u), _GLF_IDENTITY(uint(8u), uint(uvec4(uint(8u), 0u, 0u, 0u))))), 1u))) >> 0u)) | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) | (((subgroup_size))))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (_GLF_IDENTITY(1u ^ 1u, max(_GLF_IDENTITY(1u ^ 1u, (1u ^ 1u) | (1u ^ 1u)), _GLF_IDENTITY(1u ^ 1u, ~ (~ (_GLF_IDENTITY(1u ^ 1u, (false ? _GLF_FUZZED(subgroup_id) : 1u ^ 1u))))))))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ ((subgroup_size)), (1u | 1u) * (~ ((subgroup_size))))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), max((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) * 1u)))), ((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))))) * 1u))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u)))))))))))) << 0u)) >> ((0u << _GLF_IDENTITY(uint(8u), uint(8u))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 0u | (uint(6u)))))))), clamp(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), min(((subgroup_size)), ((subgroup_size)))), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((_GLF_IDENTITY(subgroup_size, (0u << _GLF_IDENTITY(uint(2u), uint(2u))) + (_GLF_IDENTITY(subgroup_size, (subgroup_size) + 0u)))))) | 0u), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(0u ^ (((subgroup_size))), (0u ^ (((subgroup_size)))) >> 0u))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u), ((_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, (subgroup_size) | (0u << _GLF_IDENTITY(uint(8u), uint(8u)))))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), ((subgroup_size))))), (0u ^ (((subgroup_size)))) >> 0u))), clamp((_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), ((subgroup_size))))), (0u ^ (((subgroup_size)))) >> 0u))), (_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), ((subgroup_size))))), (0u ^ (((subgroup_size)))) >> 0u))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), ((subgroup_size))))), (0u ^ (((subgroup_size)))) >> 0u))), 0u + ((_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), ((subgroup_size))))), (0u ^ (((subgroup_size)))) >> 0u))))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u)) << (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))), _GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) / 1u), (((subgroup_size))) - 0u))), _GLF_IDENTITY((_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) * 1u))))), ((_GLF_IDENTITY(((subgroup_size)), _GLF_IDENTITY(0u ^ (((subgroup_size))), 0u ^ (0u ^ (((subgroup_size))))))) | 0u) | 0u)), (~ ((subgroup_size))) | 0u), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), 0u ^ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u)) >> 0u))), (~ (_GLF_IDENTITY((subgroup_size), ((subgroup_size)) - 0u))) | 0u), 0u ^ (_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY(((subgroup_size)), (((subgroup_size))) - 0u))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u | (((_GLF_IDENTITY(subgroup_size, uint(uvec4(subgroup_size, 0u, 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))))) | 0u), (~ ((subgroup_size))) | 0u))), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) | 0u), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), min(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid))))))) | 0u)), 0u + (_GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) | 0u), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), min(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid))))))) | 0u)), clamp((_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) | 0u), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), min(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid))))))) | 0u)), (_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) | 0u), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), min(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid))))))) | 0u)), _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) | 0u), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), min(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid))))))) | 0u)), ((_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) | 0u), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), min(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid))))))) | 0u))) | ((_GLF_IDENTITY(~ _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, _GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u)))))) | 0u), (~ (_GLF_IDENTITY((subgroup_size), (_GLF_IDENTITY(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), min(true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid), true ? _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))) : _GLF_FUZZED(virtual_gid))))))) | 0u)))))))) ^ (1u ^ _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(num_workgroup) : 1u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), _GLF_IDENTITY((((subgroup_size))) - 0u, uint(_GLF_IDENTITY(uint((((subgroup_size))) - 0u), max(uint((((subgroup_size))) - 0u), uint((((subgroup_size))) - 0u)))))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u)))), 0u | (0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), _GLF_IDENTITY((((subgroup_size))) - 0u, uint(_GLF_IDENTITY(uint((((subgroup_size))) - 0u), max(uint((((subgroup_size))) - 0u), uint((((subgroup_size))) - 0u)))))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((subgroup_size))) | 0u)) ^ (_GLF_IDENTITY(1u ^ 1u, (_GLF_IDENTITY(1u ^ 1u, 0u ^ (1u ^ 1u))) * 1u))))))))), ((_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u | _GLF_IDENTITY((subgroup_size), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), _GLF_IDENTITY((((subgroup_size))) - 0u, uint(_GLF_IDENTITY(uint((((subgroup_size))) - 0u), max(uint((((subgroup_size))) - 0u), uint((((subgroup_size))) - 0u)))))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size)))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u)))), 0u | (0u | _GLF_IDENTITY((subgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), _GLF_IDENTITY((((subgroup_size))) - 0u, uint(_GLF_IDENTITY(uint((((subgroup_size))) - 0u), max(uint((((subgroup_size))) - 0u), uint((((subgroup_size))) - 0u)))))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), _GLF_IDENTITY((((subgroup_size))) - 0u, uint(_GLF_IDENTITY(uint((((subgroup_size))) - 0u), max(uint((((subgroup_size))) - 0u), uint((((subgroup_size))) - 0u)))))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_size)), max(((subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY((subgroup_size), min(_GLF_IDENTITY((subgroup_size), 1u * (_GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size))))), _GLF_IDENTITY((subgroup_size), min((subgroup_size), (subgroup_size)))))), _GLF_IDENTITY((((subgroup_size))) - 0u, uint(_GLF_IDENTITY(uint((((subgroup_size))) - 0u), max(uint((((subgroup_size))) - 0u), uint((((subgroup_size))) - 0u)))))))), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | 0u), (~ ((subgroup_size))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (_GLF_IDENTITY(~ _GLF_IDENTITY(((subgroup_size)), (_GLF_IDENTITY(((subgroup_size)), 0u ^ (((subgroup_size))))) | _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), (~ ((subgroup_size))) | 0u)) ^ (1u ^ 1u))))))))))) - 0u) >> 0u)))))))), _GLF_IDENTITY(0u, (0u) | (0u)), 1u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), ! (! (_GLF_IDENTITY(! (false), ! (! (! (_GLF_IDENTITY(false, true && (false)))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec3(! (false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)), ! (! (! (false))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))) && true)), true && (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))))))))))))) || false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, max(2, 2)))), max(2, 2)));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), true), bvec2(bvec4(bvec2(_GLF_DEAD(false), true), true, true))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-2.1) : injectionSwitch.x)) < injectionSwitch.y)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y))) || false)))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)) || _GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), _GLF_IDENTITY(bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(bool(bvec4(! (! (_GLF_IDENTITY(false, true && (false)))), true, false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (bool(true))))), true && (bool(_GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (bool(true)), bool(bvec4(_GLF_IDENTITY(! (bool(true)), bool(bool(! (bool(true))))), true, false, false))))))))) && true))))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) || false) && true)))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(610.392), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-101.193, min(_GLF_IDENTITY(-101.193, float(vec3(-101.193, 1.0, 0.0))), -101.193)))), bvec2(true, false))))))).y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), vec2(mat3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(610.392), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-101.193, min(_GLF_IDENTITY(-101.193, float(vec3(-101.193, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(93.88) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), -101.193)))), bvec2(true, false))))))).y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), vec2(mat3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))))), max(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(cos(log(injectionSwitch))), max(_GLF_FUZZED(cos(log(injectionSwitch))), _GLF_FUZZED(cos(log(injectionSwitch)))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < injectionSwitch.y))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)))) || false))))) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))))) < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), clamp(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(610.392), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-101.193, min(_GLF_IDENTITY(-101.193, float(vec3(-101.193, 1.0, 0.0))), -101.193)))), bvec2(true, false))))))).y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), vec2(mat3(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(610.392), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(-101.193, min(_GLF_IDENTITY(-101.193, float(vec3(-101.193, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(93.88) : _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - 0.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), -101.193)))), bvec2(true, false))))))).y)) ? injectionSwitch : _GLF_FUZZED(cos(_GLF_IDENTITY(log(injectionSwitch), (log(injectionSwitch)) - vec2(0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)))))))) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, true))) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), vec2(mat3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))), mix(vec2((_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), vec2(mat3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))))[0], _GLF_FUZZED(-680.215)), vec2(_GLF_FUZZED((vec2(2288.1281, -7.3).y * 8.4)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), min(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), vec2(mat3(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))), 0.0, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0))))))[1]), bvec2(false, true))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-81.13), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(2974.5192)), bvec2(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(cos(log(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(cos(log(injectionSwitch))), _GLF_IDENTITY(max(_GLF_FUZZED(cos(log(injectionSwitch))), _GLF_FUZZED(cos(log(injectionSwitch)))), (false ? _GLF_FUZZED(vec2(-0.6, -1.5)) : max(_GLF_FUZZED(cos(log(injectionSwitch))), _GLF_FUZZED(cos(log(injectionSwitch)))))))))))))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, false))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2((_GLF_DEAD(false)), true)))))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true)))))), true && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true))))), bool(bvec3(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true))))))), true))))), true, true))))))))))), (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), true)))), bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), true)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), true)))), true)), bvec2(bvec2(bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(true, true), false, false)), _GLF_IDENTITY(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), bvec2(bvec3(bvec2(bvec3(bvec2(bvec4(bvec2(true, true), false, false)), true)), true)))), true)))))))))))), true && (_GLF_IDENTITY(true, false || (true)))))), _GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), true && (bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)))))), true, true)), true), true, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false))))), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), true, true)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), true, true))))) || false))))))))), ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)), true && (bool(_GLF_IDENTITY(bool((false)), (bool((false))) || false)))))), true, true)), true), true, true)))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(true && (false))))), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), true, true)))), (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), bvec2(bvec4(bvec2(bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, true)), true), true, true))))) || false)))))))))) || false)), true))) && true, ! (! ((bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true))) && _GLF_IDENTITY(true, (true) || false)))))) || false))), false || (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0))), _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.0)), bool(_GLF_IDENTITY(false, ! (! (false))))))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(mat3(injectionSwitch, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(sin(0.0), 1.0)), dot(vec2(1.0, 0.0), vec2(sin(0.0), 1.0))), 1.0, 1.0, 1.0, 0.0, sin(0.0), 0.0))))).y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-547.055), _GLF_FUZZED(4531.4563)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), uint(uvec3(uint(1), 0u, 0u)))) | 0u), (uint(1)) << 0u), _GLF_IDENTITY(4, _GLF_IDENTITY((4) << int(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), mix(float(_GLF_IDENTITY(_GLF_FUZZED(-4009.3794), (false ? _GLF_FUZZED(-895.288) : _GLF_IDENTITY(_GLF_FUZZED(-4009.3794), 0.0 + (_GLF_FUZZED(-4009.3794)))))), float(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), clamp(min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), bool(true)))), min((_GLF_IDENTITY(4, ~ (~ (4)))) << int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY((4) << int(_GLF_ZERO(0.0, injectionSwitch.x)), ((4) << _GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)), ~ (~ (int(_GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x)))))) * int(_GLF_ONE(1.0, injectionSwitch.y)))) << (0 & -71282))))), 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, (4) << 0), 4, 4)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), bool(bool((false))))))))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / round(length(normalize(vec2(1.0, 1.0))))) > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(46.49))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(0.4)), vec2(_GLF_FUZZED(8.1), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).x > injectionSwitch.y) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y) || false)), true && (! (! ((injectionSwitch.x > injectionSwitch.y) || false))))))), ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y) || false)), _GLF_IDENTITY(true && (! (! ((injectionSwitch.x > injectionSwitch.y) || false))), true && (true && (! (! ((injectionSwitch.x > injectionSwitch.y) || false)))))))))) || false)), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.1)), bool(false))) > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(765.118), _GLF_FUZZED(-79.29)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).x > injectionSwitch.y) || false)), true && (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (true))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))))), true))))))) || false))))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.1)), bool(false))) > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(1.3, -7937.2030)))).y) || false), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y) || false)), true && (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))) || false))))))), bool(bool((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.1)), bool(false))) > injectionSwitch.y) || false), ! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y) || false)), true && (! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true))))))) || false)))))))))))))), true)))))), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))))) || _GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), (bool(bvec4(_GLF_DEAD(false), true, false, true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true)))), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), (true && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (_GLF_IDENTITY(! ((! ((false)))), (_GLF_IDENTITY(! ((! ((false)))), bool(bvec2(! ((! ((false)))), false)))) && true))))) || false)) || false))))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7.9), _GLF_FUZZED(8.8)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   subgroupAll(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(false, (false) && true))) && true)), ((! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), true && (! ((false) && true)))))), false || (_GLF_IDENTITY(false, (false) && true)))))) && true)));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), bool(bvec2(! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) && true)), true))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0))).x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), 0.0, 0.0))).x)) > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(bool(bvec2(false, false)), false || (bool(bvec2(false, false))))))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), true), false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true, true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true, true)), (bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), false, true, true))) || false)))), false, false)))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false))))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, false)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(3705.4377, -63.73)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || false), false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true, ! (! (true))), true))))))))) && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 atomicStore(buf[virtual_gid], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
