#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec2 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(sin(5.6))))), float(_GLF_FUZZED(552.134)), bool(false))), bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true))), false, true, false)))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x = subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))), false, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), false, false))))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x)), _GLF_IDENTITY((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x))) - uvec3(0u, 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec4((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x))) - uvec3(0u, 0u, 0u), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x))) - uvec3(0u, 0u, 0u), 0u)))), max(uvec3(_GLF_IDENTITY(uvec4((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x))) - uvec3(0u, 0u, 0u), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x))) - uvec3(0u, 0u, 0u), 0u)))), uvec3(_GLF_IDENTITY(uvec4((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x))) - uvec3(0u, 0u, 0u), 0u), uvec4(0u, 0u, 0u, 0u) | (uvec4((uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(0.5)), bool(false))))))), 0.0)), injectionSwitch.x))) - uvec3(0u, 0u, 0u), 0u)))))))) | (_GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y = workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.2)), bool(false))), injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec2(false, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y) * 1.0)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.4), _GLF_IDENTITY((injectionSwitch)[1], min((injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_IDENTITY((injectionSwitch), mix(vec2(((injectionSwitch))[0], ((injectionSwitch))[1]), vec2(_GLF_FUZZED(-9902.3875), _GLF_FUZZED(float(true))), bvec2(false, false)))[0], _GLF_FUZZED(-1321.5401)), bvec2(true, false))).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true)))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0)))), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), (injectionSwitch.y) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-781.134), (false ? _GLF_FUZZED(-884.555) : _GLF_FUZZED(-781.134))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), (injectionSwitch.y) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-781.134), (false ? _GLF_FUZZED(-884.555) : _GLF_FUZZED(-781.134))), clamp(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), (injectionSwitch.y) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-781.134), (false ? _GLF_FUZZED(-884.555) : _GLF_FUZZED(-781.134))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), (injectionSwitch.y) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-781.134), (false ? _GLF_FUZZED(-884.555) : _GLF_FUZZED(-781.134))), true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - abs(0.0)), (injectionSwitch.y) - 0.0) : _GLF_IDENTITY(_GLF_FUZZED(-781.134), (false ? _GLF_FUZZED(-884.555) : _GLF_FUZZED(-781.134)))))) - 0.0)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       return;
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((+ 47.90))), float(injectionSwitch.x), bool(true))), injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)))))))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.y;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))), (_GLF_IDENTITY(false, (false) && true)) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(bool((false) || _GLF_IDENTITY(false, (false) || false)))))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_base = subgroup_id * GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec2(bvec2(false, false))))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, false), bvec3(bvec4(bvec3(false, false, false), false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), false || ((false)))), ! (! (! (_GLF_IDENTITY((false), false || ((false))))))))))))) || false)))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, false))), true, false, false)))))))
  barrier();
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(float(vec4(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)), (true ? float(vec4(float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0), (mat4x2(injectionSwitch.x, 0.0, 1.0, 1.0, 1.0, sin(0.0), 0.0, 0.0)) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, 1.0, 0.0)) : _GLF_FUZZED(-1648.9799))))) > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(11.90)), bool(false))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false))), false)))), (bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), bvec3(bvec4(bvec3(injectionSwitch.x > injectionSwitch.y, true, true), false))))) || _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat2x3(injectionSwitch.x, 0.0, exp(0.0), 1.0, 0.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))), max(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))))) << _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, clamp((1u) ^ 0u, (1u) ^ 0u, (1u) ^ 0u)))) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), _GLF_IDENTITY(1u, (1u) | (1u)), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, min(1u, 1u))) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((1u) ^ 0u, max((1u) ^ 0u, (1u) ^ 0u)), 1u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) ^ (uvec4(_GLF_IDENTITY((1u) ^ 0u, max((1u) ^ 0u, (1u) ^ 0u)), 1u, 1u, 1u))))))) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u)) >> 0u), _GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 0u | (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u))))), 1u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), (_GLF_IDENTITY(1u, (1u) ^ 0u)) / 1u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((1u) ^ 0u, uint(uvec2(_GLF_IDENTITY((1u) ^ 0u, 0u ^ ((1u) ^ 0u)), 0u))) : _GLF_FUZZED(num_workgroup))))) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u)), (false ? _GLF_FUZZED(uvec3(2231u, 91465u, 3422u)) : uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u))))))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ _GLF_IDENTITY(0u, (0u) | 0u)), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)) / uvec3(1u, 1u, 1u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))) << _GLF_IDENTITY(uint(4u), uint(4u)))))) >> _GLF_IDENTITY(uint(4u), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) / 1u)) / 1u)))), 1u))) + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), min(((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) / 1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, ~ (~ (1u))), (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(1u, (1u) >> 0u)) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), ~ (~ (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u)))), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (1u))) ^ 0u), (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u))), (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)) ^ uvec3(0u, 0u, 0u))) - uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, ((1u) ^ 0u) ^ 0u))) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (uint(uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u), 0u, 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u)) | 0u))) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))) << _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u)), (false ? _GLF_FUZZED(uvec3(2231u, 91465u, 3422u)) : uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u))))))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)) / uvec3(1u, 1u, 1u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u)), (false ? _GLF_FUZZED(uvec3(2231u, 91465u, 3422u)) : uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u))))))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)) / uvec3(1u, 1u, 1u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))) | (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u)), (false ? _GLF_FUZZED(uvec3(2231u, 91465u, 3422u)) : uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u))))))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)) / uvec3(1u, 1u, 1u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))))) << _GLF_IDENTITY(uint(4u), uint(4u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))) + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x), ((_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 1u, ((_GLF_IDENTITY(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), min((_GLF_IDENTITY(1u, (1u) ^ 0u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), max((_GLF_IDENTITY(1u, (1u) ^ 0u)), (_GLF_IDENTITY(1u, (1u) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), ((_GLF_IDENTITY(1u, (1u) ^ 0u))) / 1u))) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u, max((_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u))) | ((_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u))), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) ^ 0u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))) << _GLF_IDENTITY(uint(4u), uint(4u)), ~ (~ (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), _GLF_IDENTITY(1u, (1u) | (1u)), 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)) | uvec3(0u, 0u, 0u)), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(uvec4(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), 0u)))))))), (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), min(_GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), ((_GLF_IDENTITY(1u, (1u) ^ 0u))) | ((_GLF_IDENTITY(1u, (1u) ^ 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)), uint(uint((_GLF_IDENTITY(1u, (1u) ^ 0u))))))) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, min(0u, 0u)))) ^ _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u | 0u))) | 0u)), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), uvec3(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), _GLF_IDENTITY(uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u) ^ 0u, (_GLF_IDENTITY((1u) ^ 0u, min((1u) ^ 0u, (1u) ^ 0u))) | ((1u) ^ 0u)))) ^ 0u), 1u, 0u), _GLF_IDENTITY(min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)), (min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))) | (min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u)), (false ? _GLF_FUZZED(uvec3(2231u, 91465u, 3422u)) : uvec3(uvec4(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), (false ? _GLF_FUZZED(uvec3(160102u, 130263u, 60687u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, uint(uvec4(0u, 0u, 1u, 1u))))) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), _GLF_IDENTITY(1u, max(1u, 1u)), 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))))), 1u))))))))))))), uint(uint(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u), (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ _GLF_IDENTITY(0u, (0u) | (0u)))) ^ 0u)) << 0u))), 1u, 0u), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u, (false ? _GLF_FUZZED(atomicMax(workgroup_id, workgroup_size)) : (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u))), 1u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))), min(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))) | (~ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), min(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u), (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u)))), (uint(_GLF_IDENTITY(uint(1u), min(uint(1u), uint(1u))))) | 0u))) ^ 0u)) ^ 0u), 1u, 0u), (uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u)) / uvec3(1u, 1u, 1u))) / uvec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), uvec3(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) ^ 0u)) ^ 0u), 1u, 0u))))))))))))) << _GLF_IDENTITY(uint(4u), uint(4u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u))) + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x))), (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x, (GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x) | (0u ^ 0u)))) | (workgroup_base + subgroup_base + ((subgroup_local_id + 1) % GLF_merged2_0_1_13_1_1_12subgroup_sizeworkgroup_id.x)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((_GLF_IDENTITY(subgroup_local_id % 2, min(_GLF_IDENTITY(subgroup_local_id % 2, ~ (~ (subgroup_local_id % 2))), subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(_GLF_IDENTITY(uint(1), min(uint(1), uint(_GLF_IDENTITY(1, ~ (~ (1)))))), uint(1))), (_GLF_IDENTITY(uint(1), (false ? _GLF_FUZZED(workgroup_id) : uint(1)))) / 1u), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))) || _GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, _GLF_IDENTITY((_GLF_IDENTITY(64, min(64, 64))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((64), ((64)) | ((64)))), clamp(~ (_GLF_IDENTITY((64), ((64)) | _GLF_IDENTITY(((64)), ~ (~ (((64))))))), ~ (_GLF_IDENTITY((64), ((64)) | ((64)))), ~ (_GLF_IDENTITY((64), ((_GLF_IDENTITY(64, (64) >> 0))) | ((64)))))))) | (64)), 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           barrier();
          }
         return;
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4x2(-1.4, -271.734, -2344.3535, 6.4, 5.0, 67.49, 6.0, 6022.2047)) : mat4x2(injectionSwitch.x, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y, false), bvec2(bvec4(bvec2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, false), true, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), false || (! (true))))), (injectionSwitch.x < injectionSwitch.y)) && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), bool(bool(bool(bvec4(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(164.477)), bool(false))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) && true), false, true, true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)) || false), true && (false))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, max(_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, ~ (_GLF_IDENTITY(~ (virtual_gid), (~ (virtual_gid)) - 0u))))), _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (virtual_gid) ^ 0u)) - 0u))), virtual_gid))], read, 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((false ? _GLF_FUZZED(-867.552) : injectionSwitch.y), max(_GLF_IDENTITY((false ? _GLF_FUZZED(-867.552) : injectionSwitch.y), (true ? (false ? _GLF_FUZZED(-867.552) : injectionSwitch.y) : _GLF_FUZZED(4.2))), (false ? _GLF_FUZZED(-867.552) : injectionSwitch.y))))) || false), bool(bvec2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, true))))))) || false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))), true, true, true)))))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
