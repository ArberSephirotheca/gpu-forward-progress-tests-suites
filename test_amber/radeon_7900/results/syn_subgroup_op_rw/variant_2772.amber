#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0))) * (injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (_GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.92, 37.85)))).y, injectionSwitch.y), clamp(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.92, 37.85)))).y, injectionSwitch.y), max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.92, 37.85)))).y, injectionSwitch.y), _GLF_IDENTITY(max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.92, 37.85)))).y, injectionSwitch.y), (false ? _GLF_FUZZED(-5.1) : max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.92, 37.85)))).y, injectionSwitch.y)))))) / _GLF_IDENTITY(round(length(normalize(sqrt(1.0)))), mix(float(_GLF_FUZZED(4.0)), float(round(length(normalize(sqrt(1.0))))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.92, 37.85)))).y, injectionSwitch.y)) / round(length(normalize(sqrt(1.0))))), mix(float(_GLF_FUZZED(-8776.4247)), float(_GLF_IDENTITY(max(injectionSwitch.y, injectionSwitch.y), (max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-58.92, 37.85)))).y, injectionSwitch.y)) / round(length(_GLF_IDENTITY(normalize(sqrt(1.0)), (true ? normalize(sqrt(1.0)) : _GLF_FUZZED(6.0))))))), bool(true)))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), mix(float(_GLF_FUZZED(939.472)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true)))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, false || (false)))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec4(false, false, _GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    return;
   return;
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(116444u), clamp(_GLF_FUZZED(116444u), _GLF_FUZZED(116444u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(116444u), uint(uvec3(_GLF_FUZZED(116444u), (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))))), max(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)))) ^ 1u), 0u))), ~ (~ _GLF_IDENTITY((_GLF_FUZZED(116444u)), ((_GLF_FUZZED(116444u))) * 1u))))) : gl_WorkGroupSize.x));
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-11.33))), determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 1.0, abs(0.0), 0.0, 0.0)), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(sin(0.0), 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 1.0), vec4(sin(0.0), 1.0, 1.0, 0.0))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0))) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0), injectionSwitch.x)) < injectionSwitch.y)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - tan(0.0))))))
    return;
   return;
  }
 uint workgroup_base = workgroup_size * _GLF_IDENTITY(workgroup_id, uint(uvec2(workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) >> 0u))), 0u + (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))), uint(uvec3(~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 1u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u)), max((_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))), uint(uvec3(~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 1u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(3u), uint(3u))), ~ (_GLF_IDENTITY(~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))), uint(uvec3(~ ((1u << _GLF_IDENTITY(uint(3u), uint(3u)))), 1u, 1u))))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))), max(_GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))))) ^ ((_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (_GLF_IDENTITY(uint(3u), max(uint(3u), uint(3u)))) - 0u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u + (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)) | 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)) | 0u))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), _GLF_IDENTITY(uint(1u), (_GLF_IDENTITY(uint(1u), (uint(1u)) / 1u)) | 0u)))), _GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) * (_GLF_IDENTITY(_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(1u), uint(1u))))), 0u + (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))) ^ ((_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u + (3u))), 1u * (uint(_GLF_IDENTITY(3u, 0u + (3u))))))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), ~ (~ (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), uint(1u)), (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(1u), uint(1u))))), 0u + (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))) ^ ((_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u + (3u))), 1u * (uint(_GLF_IDENTITY(3u, 0u + (3u))))))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), ~ (~ (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), uint(1u))) | (_GLF_IDENTITY(_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(1u), uint(1u))))), 0u + (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))) ^ ((_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u + (3u))), 1u * (uint(_GLF_IDENTITY(3u, 0u + (3u))))))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), ~ (~ (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), uint(1u)), 0u + (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(uint(1u), uint(1u))))), 0u + (_GLF_IDENTITY((((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))) << _GLF_IDENTITY(uint(1u), uint(1u))), _GLF_IDENTITY(0u, (0u) | (_GLF_IDENTITY(0u, (0u) << 0u))) ^ ((_GLF_IDENTITY(((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(3u), uint(_GLF_IDENTITY(3u, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(3u, 0u + (3u))), 1u * (uint(_GLF_IDENTITY(3u, 0u + (3u))))))))), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))), ~ (~ (_GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u)))))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u + (((_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)) << _GLF_IDENTITY(uint(3u), uint(3u)), (1u << _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), (uint(3u)) | (uint(3u))))) >> 0u)) >> _GLF_IDENTITY(uint(3u), uint(3u))))) << _GLF_IDENTITY(uint(1u), uint(1u))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), min(uint(1u), _GLF_IDENTITY(uint(1u), ~ (~ (uint(1u)))))), uint(1u))))))))))));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) + 0u), (true ? _GLF_IDENTITY(workgroup_base, (workgroup_base) ^ 0u) + subgroup_base : _GLF_FUZZED(subgroup_local_id))) + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base))) * 1u) + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) ^ 0u), _GLF_IDENTITY(_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(_GLF_IDENTITY(0, (0) | 0), (_GLF_IDENTITY(0, (0) | 0)) | (_GLF_IDENTITY(0, (0) | 0)))), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), 0))), 4)), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, 0 | (_GLF_IDENTITY(0, ~ (~ (0)))))), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, clamp((4) >> 0, (4) >> 0, _GLF_IDENTITY((4) >> 0, (_GLF_IDENTITY((4) >> 0, (true ? (4) >> 0 : _GLF_FUZZED(21488)))) * 1)))), clamp(4, 4, 4)), 0))), 4))), int(_GLF_IDENTITY(ivec3(~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, ((4) >> 0) + _GLF_IDENTITY(0, (0) - 0))), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), 0))), 4))), 0, 0), clamp(ivec3(~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0))))), min(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0))))), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, max(0, 0))))))))), 4))), 0, 0), ivec3(~ (_GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, max(4, 4))) << 0), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), 0))), 4), int(int(_GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), 0))), 4), clamp(max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), 0))), 4), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), 0))), 4), max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), clamp(4, 4, 4)), 0))), 4)))))))), 0, 0), ivec3(~ (_GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(-86940)))))), clamp(4, 4, 4)), int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) << 0)) << 0)), clamp(4, 4, 4)), 0))), 4))), 0, 0))))))), 64, 2);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1488.8241) : _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(0.0 + (injectionSwitch.y), clamp(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y), _GLF_IDENTITY(0.0 + (injectionSwitch.y), float(vec2(_GLF_IDENTITY(0.0 + (injectionSwitch.y), max(0.0 + (injectionSwitch.y), 0.0 + (injectionSwitch.y))), 1.0))))))))), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, false)))) && true), true))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (false ? _GLF_FUZZED(297.542) : _GLF_ZERO(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), clamp(length(normalize(vec2(1.0, 1.0))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), mix(float(length(normalize(vec2(1.0, 1.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(-407.419), 1.0 * (_GLF_FUZZED(-407.419)))), bool(false))), _GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), (length(normalize(vec2(1.0, 1.0)))) - 0.0)))), 0.0, determinant(mat4(0.0, 0.0, 0.0, log(1.0), _GLF_IDENTITY(abs(0.0), mix(float(abs(0.0)), float(_GLF_FUZZED(900.229)), bool(false))), tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), float(vec3(float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, round(_GLF_IDENTITY(length(normalize(vec2(1.0, 1.0))), min(length(normalize(vec2(1.0, 1.0))), length(normalize(vec2(1.0, 1.0)))))), 0.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(log(1.0), (false ? _GLF_FUZZED(-340.708) : log(1.0))), (false ? _GLF_FUZZED(28.74) : log(1.0))), abs(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), min(float(0.0), float(0.0)))))), tan(0.0), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0)), 1.0, 1.0)))), injectionSwitch.x)))))], uint(1), _GLF_IDENTITY(4, (false ? _GLF_FUZZED(30438) : 4)), 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), (bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(false)))))) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false))))))), ! (! (bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), false || (bool(bool(_GLF_DEAD(false)))))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false))), (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), bool(_GLF_IDENTITY(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true), bvec2(bvec2(bvec2(bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))), true)))))), true && (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), (bool(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))) || false))))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (! (_GLF_IDENTITY(false, (false) || false))) && true))))), bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)), false))), true, false, false))))) || false))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), false || ((false))), _GLF_IDENTITY(true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, true)), ! (! (bool(bvec4((false), false, true, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), ! (_GLF_IDENTITY(! (true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, true)), ! (! (bool(bvec4((false), false, true, true))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), true && (! (true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)), ! (! (bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))), _GLF_IDENTITY(bool(bvec4((false), false, true, true)), bool(bvec3(_GLF_IDENTITY(bool(bvec4((false), false, true, true)), ! (_GLF_IDENTITY(! (bool(bvec4((false), false, true, true))), ! (_GLF_IDENTITY(! (! (bool(bvec4((false), false, true, true)))), ! (! (! (! (bool(bvec4((false), false, true, true))))))))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))) || false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (_GLF_IDENTITY(! ((false) || false), (_GLF_IDENTITY(! ((false) || false), false || (! ((false) || false)))) && true))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true)))) && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), ! (! (bool(bvec2((false), false)))))) || false), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), false)), ! (! (bool(bvec2((false), false)))))) || false)))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, false))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false))))), false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)), false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))), ! (! ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), true)))), true)))))))), ! (! (_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))))), bool(bvec4(! (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))), ! (! ((_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (! (false)))))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))) || false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))), true && (bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3((false), true, true))))), false)), true && (bool(bvec2(_GLF_IDENTITY(bool(bvec3((false), true, true)), ! (! (bool(bvec3((false), true, true))))), false)))))) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))))))))) && true)) || _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))), bool(bvec3((! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), ! (! ((_GLF_IDENTITY(false, (false) || false))))), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))), true, true))), bool(bvec2(_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (false) || false)), false))))), bool(bvec4(! _GLF_IDENTITY((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, false))) || false)), false))))), false || ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(bvec3((false), true, false))) || false)), false))))))), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)))))), true, false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, _GLF_IDENTITY(false, (false) || false)), true)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((false) || false))))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), true)))), bvec3(bvec3(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY((false) || false, false || ((false) || false))))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((! (bool(false))), false || ((! (bool(false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))))), _GLF_IDENTITY(bool(bvec4(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))))), false, true, false)), bool(bvec2(bool(bvec4(bool(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) && true), false, true, true))))), false, true, false)), true))))), (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((false) || false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((false) || false)), (_GLF_IDENTITY((false) || false, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || ((false) || false))) || false))))))))), false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, false), true))))))), true)))))))), false || ((! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, false || (true)))))) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, (false) || false)), bool(bool((_GLF_IDENTITY(false, (false) || false))))))), false))))))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), true, _GLF_IDENTITY(false, (false) || false)), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), (false) || false)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false)))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, true && (true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (true))), false), true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, (false) || false)), false)))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true, false), true)))), bvec3(bvec4(bvec3(bvec3(bvec3(bvec4(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false))))))) || false)), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bvec2(! (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), ! (! (! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true))))))))) || false)), false))))))) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))))), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, true && (true))))), false), true)))), true))))))))))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], read, _GLF_IDENTITY(4, clamp(4, _GLF_IDENTITY(4, clamp(4, 4, 4)), _GLF_IDENTITY(4, int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ (4)))), _GLF_IDENTITY(64, ~ (~ (64))), 4);
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
