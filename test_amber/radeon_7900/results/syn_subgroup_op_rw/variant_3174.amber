#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)), ! (! (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true), true)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || _GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec2((false), true)), (bool(bvec2((false), true))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), _GLF_IDENTITY(vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(asin(-1846.5135)))), 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(11.20)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, (0.0) / 1.0))))), 0.0, 1.0))))))), 1.0, 0.0)), mat2(1.0) * (vec2(vec4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), clamp(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, sqrt(0.0) + (0.0)), 0.0)), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(5632.3224, 8.3)))))), 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, 1.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), min(vec2(mat3x4(injectionSwitch, 1.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), vec2(mat3x4(injectionSwitch, 1.0, 0.0, cos(0.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat3(round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))), vec2(mat4x2(injectionSwitch, 0.0, 1.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))))))), 1.0, 0.0))))).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(54.71)), (false ? _GLF_FUZZED(-149.503) : _GLF_IDENTITY((true ? injectionSwitch.y : _GLF_FUZZED(54.71)), max((true ? injectionSwitch.y : _GLF_FUZZED(54.71)), (true ? injectionSwitch.y : _GLF_FUZZED(54.71))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))), true, false))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0)))), true && (! (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-223.595), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(3.9)), bvec2(true, false))).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))), bool(bool(bool(_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), true && (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))))))))))), true, false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))), ! (! ((_GLF_IDENTITY(! (_GLF_DEAD(false)), bool(bool(! (_GLF_DEAD(false)))))))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true)))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), false || (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))) && true))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(472.469)), float(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))), bool(true))))))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(determinant(mat4(358.596, 6.3, 888.681, -6.9, -625.292, 47.34, 9.9, 45.29, -86.91, -39.57, -57.62, 84.00, -5492.3363, -196.460, 7258.0096, -979.598))))))))), false))))))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat3x4(injectionSwitch.x, abs(1.0), _GLF_IDENTITY(exp(sin(0.0)), clamp(exp(sin(0.0)), exp(sin(0.0)), exp(sin(0.0)))), 0.0, 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, 1.0, abs(1.0)))) > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups.x, (_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | (gl_NumWorkGroups)).x) | (gl_NumWorkGroups.x))) / ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(3u), clamp(_GLF_IDENTITY(uint(3u), min(uint(3u), uint(3u))), uint(3u), uint(3u))), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) && true)) && true)))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))) || false)), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false), false))))))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)) * workgroup_id, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u)))), max((_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u)))), (_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u))))))) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), _GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u))) * (uvec2(workgroup_size * workgroup_id, 1u))), min(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * workgroup_id, 1u), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (1u) * 1u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | (1u)), 1u)), (1u) + 0u)) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))), clamp(uvec2(1u, 1u), uvec2(1u, 1u), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) >> uvec2(0u, 0u)))) * (uvec2(workgroup_size * workgroup_id, 1u))), _GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), _GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(1u, _GLF_IDENTITY(1u, (1u) << 0u)), uvec2(1u, 1u))) * (uvec2(workgroup_size * workgroup_id, 1u))))), uvec2(workgroup_size * workgroup_id, 1u), uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(max(workgroup_size * workgroup_id, workgroup_size * workgroup_id), (max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)) >> 0u)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), _GLF_IDENTITY(max(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (max(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))) >> uvec3(0u, 0u, 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) | 0u)))), max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec3(_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, _GLF_IDENTITY(workgroup_id, ~ (~ (workgroup_id))))), max(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_size)))) << 0u))), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_IDENTITY(_GLF_FUZZED(-6.6), max(_GLF_FUZZED(-6.6), _GLF_FUZZED(-6.6)))), bool(false)))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(cosh(vec2(6500.4777))))).x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))), (true ? _GLF_IDENTITY(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, 0u | (4u))) | (4u))), uint(4u)))), _GLF_IDENTITY(max(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), (false ? _GLF_FUZZED(uvec3(86262u, 155075u, 39095u)) : max(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))))))) : _GLF_FUZZED(uvec3(95663u, 102778u, 144018u))))) | (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, max(_GLF_IDENTITY(workgroup_size, (workgroup_size) << 0u) * workgroup_id, workgroup_size * workgroup_id)), (_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id))) << 0u), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), max(uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), _GLF_IDENTITY(uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), (uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x))) - 0u), (0u << _GLF_IDENTITY(uint(4u), uint(4u)))), uvec3(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * 1.0), injectionSwitch.x)), _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), uint(uvec3(_GLF_IDENTITY((0u << _GLF_IDENTITY(uint(4u), uint(4u))), clamp((0u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), 0u ^ (_GLF_IDENTITY(uint(4u), (uint(4u)) | 0u))))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))), (0u << _GLF_IDENTITY(uint(4u), uint(4u))))), 0u, _GLF_IDENTITY(1u, max(1u, 1u)))))))))))), 1u)))), min(uint(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)) * workgroup_id, _GLF_IDENTITY(1u, 0u | (_GLF_IDENTITY(1u, (1u) << 0u)))), _GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size, 0u ^ (workgroup_size)) ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)))))))), uvec2(1u, 1u), uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(1u, 1u) * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), clamp(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u), _GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), max(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u))))))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), min(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))), uvec2(1u, 1u), uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))))) << 0u), 1u))))), uvec2(1u, 1u), uvec2(1u, 1u)), uvec2(1u, 1u) * (clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), uvec2(1u, 1u), uvec2(1u, 1u)))))))), min(uvec2(1u, 1u) * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), clamp(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u), _GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), max(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u))))))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), min(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))), uvec2(1u, 1u), uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))))) << 0u), 1u))))), uvec2(1u, 1u), uvec2(1u, 1u)), uvec2(1u, 1u) * (clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), uvec2(1u, 1u), uvec2(1u, 1u)))))))), _GLF_IDENTITY(uvec2(1u, 1u) * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), clamp(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u), _GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), max(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u))))))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), min(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))), uvec2(1u, 1u), uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))))) << 0u), 1u))))), uvec2(1u, 1u), uvec2(1u, 1u)), uvec2(1u, 1u) * (clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), uvec2(1u, 1u), uvec2(1u, 1u)))))))), ~ (~ (uvec2(1u, 1u) * (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((_GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), clamp(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u), _GLF_IDENTITY(workgroup_size ^ uvec2(68743u, 161425u), max(workgroup_size ^ uvec2(68743u, 161425u), workgroup_size ^ uvec2(68743u, 161425u))))))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), min(_GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))))), uvec2(1u, 1u), uvec2(1u, 1u)), ~ (~ (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(bitfieldReverse(subgroup_id))))) << 0u), 1u))))), uvec2(1u, 1u), uvec2(1u, 1u)), uvec2(1u, 1u) * (clamp(_GLF_IDENTITY(uvec2(1u, 1u), (false ? _GLF_FUZZED((workgroup_size ^ uvec2(68743u, 161425u))) : _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / _GLF_IDENTITY(uvec2(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, ~ (~ (1u)))) | 0u), 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u))))), uvec2(1u, 1u), uvec2(1u, 1u))))))))))))))) * (uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, (workgroup_id) | _GLF_IDENTITY((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))), ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))) | ((_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))), 1u))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), (~ (~ (workgroup_size * workgroup_id))) ^ 0u)), 1u), max(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), (~ (~ (workgroup_size * workgroup_id))) ^ 0u)), 1u), uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY(~ (~ (workgroup_size * workgroup_id)), (~ (~ (workgroup_size * workgroup_id))) ^ 0u)), 1u))), uvec2(workgroup_size * workgroup_id, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u)))))))), uint(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), clamp(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(_GLF_IDENTITY(1u, (1u) | (1u)), 1u), uvec2(1u, 1u))) * (uvec2(workgroup_size * workgroup_id, 1u)), max(_GLF_IDENTITY(uvec2(1u, 1u), _GLF_IDENTITY(clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u)), (clamp(uvec2(1u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) | (1u))))), _GLF_IDENTITY(uvec2(1u, 1u), (true ? uvec2(1u, 1u) : _GLF_FUZZED(clamp(uvec2(128174u, 51709u), workgroup_size, workgroup_size)))), uvec2(1u, 1u))) | (_GLF_IDENTITY(clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u)), (clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(1u, 1u))) >> (_GLF_IDENTITY(uvec2(0u, 0u), (_GLF_IDENTITY(uvec2(0u, _GLF_IDENTITY(0u, ~ (~ (0u)))), (uvec2(0u, 0u)) >> uvec2(0u, 0u))) / uvec2(1u, 1u)) ^ uvec2(0u, 0u)))))) * (uvec2(workgroup_size * workgroup_id, 1u)), _GLF_IDENTITY(uvec2(1u, 1u), clamp(uvec2(1u, 1u), uvec2(1u, 1u), uvec2(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(num_workgroup))), _GLF_IDENTITY(1u, uint(uvec2(1u, 0u)))))) * _GLF_IDENTITY((uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), _GLF_IDENTITY(1u, (1u) * ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), ~ (_GLF_IDENTITY(~ ((uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ _GLF_IDENTITY((workgroup_size * workgroup_id), ((workgroup_size * workgroup_id)) | ((workgroup_size * workgroup_id))))) | (workgroup_size * workgroup_id)), 1u))), (~ ((uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id)), 1u)))) | (~ ((uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id), uint(uvec3((_GLF_IDENTITY(workgroup_size * workgroup_id, 0u ^ (workgroup_size * workgroup_id))) | (workgroup_size * workgroup_id), (((0u ^ 1u) << _GLF_IDENTITY(uint(2u), uint(2u))) >> _GLF_IDENTITY(uint(2u), uint(2u))), 0u)))), 1u)))))))))), uvec2(workgroup_size * workgroup_id, 1u), _GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), min(uvec2(workgroup_size * workgroup_id, 1u), uvec2(workgroup_size * workgroup_id, 1u)))))))), max(uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), 0u | (~ (workgroup_size * workgroup_id))))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), 0u | (~ (workgroup_size * workgroup_id))))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u)), (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), 0u | (~ (workgroup_size * workgroup_id))))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))) | (uint(uvec4(_GLF_IDENTITY(workgroup_size * workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * workgroup_id), 0u | (~ (workgroup_size * workgroup_id))))), 1u, ((1u << _GLF_IDENTITY(uint(3u), uint(3u))) >> _GLF_IDENTITY(uint(3u), uint(3u))), 0u))))), 1u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), uvec2(1u, 1u) * _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u)) / uvec2(1u, 1u))), clamp((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u)) / uvec2(1u, 1u))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u)) / uvec2(1u, 1u))), _GLF_IDENTITY((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u)) / uvec2(1u, 1u))), ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u)) / uvec2(1u, 1u)))) | ((_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u), (uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, _GLF_IDENTITY((workgroup_size * workgroup_id), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size * workgroup_id))) << 0u), 1u)) / uvec2(1u, 1u)))))))), (_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))))) * workgroup_id, 1u), _GLF_IDENTITY(uvec2(1u, 1u), (uvec2(1u, 1u)) / uvec2(1u, 1u)) * (uvec2(workgroup_size * workgroup_id, 1u)))) | (_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), uvec2(_GLF_IDENTITY(1u, (true ? _GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 1u))) : _GLF_FUZZED(subgroup_id))), 1u) * (uvec2(workgroup_size * workgroup_id, 1u))))), _GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), (_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), min(uvec2(workgroup_size * workgroup_id, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : 1u, (false ? _GLF_FUZZED(_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, subgroup_id))) : 1u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) | _GLF_IDENTITY((1u), ~ (~ ((1u)))))), uvec2(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)))) | (workgroup_size)) * workgroup_id, 1u)))) ^ uvec2(0u, 0u)), uvec2(_GLF_IDENTITY(workgroup_size, max(workgroup_size, workgroup_size)) * workgroup_id, 1u)))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), clamp(_GLF_IDENTITY(uvec2(workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id)), (_GLF_IDENTITY(workgroup_id, 0u | (workgroup_id))) * 1u)) >> 0u), _GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, (workgroup_id) + 0u)))), workgroup_id)), 1u), uvec2(1u, _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(21755u) : 1u)), clamp(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(21755u) : 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(21755u) : 1u)), (_GLF_IDENTITY(1u, (false ? _GLF_FUZZED(21755u) : 1u))) << 0u), _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(21755u) : 1u))))) * (uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, min(_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (_GLF_IDENTITY(workgroup_size * workgroup_id, (true ? workgroup_size * workgroup_id : _GLF_FUZZED(workgroup_size)))) >> 0u)) << 0u), workgroup_size * workgroup_id)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)), (true ? (false ? _GLF_FUZZED(workgroup_id) : _GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)) : _GLF_FUZZED((workgroup_size / subgroup_size))))) * workgroup_id)), 1u))), uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, clamp(workgroup_size * workgroup_id, workgroup_size * workgroup_id, workgroup_size * workgroup_id)), 1u), _GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), (uvec2(workgroup_size * workgroup_id, 1u)) << uvec2(_GLF_IDENTITY(0u, (0u) / 1u), 0u))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), uvec2(uvec4(_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), (uvec2(workgroup_size * workgroup_id, 1u)) | (_GLF_IDENTITY(uvec2(workgroup_size * workgroup_id, 1u), (true ? uvec2(workgroup_size * workgroup_id, 1u) : _GLF_FUZZED(uvec2(122088u, 113748u)))))), 1u, 1u))), clamp(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_size * workgroup_id, max(workgroup_size * workgroup_id, workgroup_size * workgroup_id)), 1u), uvec2(1u, 1u) * _GLF_IDENTITY((uvec2(workgroup_size * workgroup_id, 1u)), uvec2(0u, 0u) | ((uvec2(workgroup_size * workgroup_id, 1u))))), uvec2(workgroup_size * workgroup_id, 1u), uvec2(_GLF_IDENTITY(workgroup_size, (workgroup_size) / (1u & 1u)) * workgroup_id, 1u))))) | _GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), 0u)))))), clamp(_GLF_IDENTITY(workgroup_size * workgroup_id, (workgroup_size * _GLF_IDENTITY(workgroup_id, clamp(workgroup_id, _GLF_IDENTITY(workgroup_id, max(workgroup_id, workgroup_id)), workgroup_id))) | 0u), workgroup_size * workgroup_id, _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id)))), workgroup_size * workgroup_id));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(0.0, (0.0) + length(vec2(0.0, 0.0))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + _GLF_IDENTITY(subgroup_base, ~ (~ (_GLF_IDENTITY(subgroup_base, (true ? subgroup_base : _GLF_FUZZED(workgroup_size))))))) >> 0u))), (_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (false ? _GLF_FUZZED(32428u) : uint(_GLF_ZERO(0.0, injectionSwitch.x))))), uint(uvec4(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 1u, 0u, 0u)))) | 0u) + subgroup_local_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ (~ (workgroup_base))) + subgroup_base, uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 0u, 0u))))), 0u), max(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 0u, 0u))))), 0u), uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 0u, 0u))))), 0u))))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))), min(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base))), (true ? uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), min(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))))) : _GLF_FUZZED(28641u)))))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) ^ 0u) | (workgroup_base + subgroup_base)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base))), 0u | (workgroup_base + subgroup_base)))))), min(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? workgroup_base : _GLF_FUZZED(subgroup_size))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? workgroup_base : _GLF_FUZZED(subgroup_size))), ~ (~ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, ! (! (true))))) ? workgroup_base : _GLF_FUZZED(subgroup_size))))))))) + subgroup_base))), _GLF_IDENTITY(uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | _GLF_IDENTITY((workgroup_base + subgroup_base), max((workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))))), (true ? uint(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u | (workgroup_base + subgroup_base))) : _GLF_FUZZED(28641u))))))) | 0u)), 0u))) + ((_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(0u, ~ (~ (0u))) + (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + 1))) % subgroup_size);
 if(_GLF_DEAD(false))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))), (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))) && true))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))) == 0, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), min(_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)), _GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)))))))))) == 0, (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))) == 0) || false)), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(0u, 0u)))) + 0u) | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))) == 0, (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))) == 0) || false))), (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)))))) << 0u) == _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))) == 0) || false))), true && ((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))), (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2)))))) << 0u) == _GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 0 ^ (0))))))), (_GLF_IDENTITY((subgroup_local_id % 2), 0u | ((_GLF_IDENTITY(subgroup_local_id % 2, 0u | (subgroup_local_id % 2))))) == 0) || false)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(distance(vec4(54.03, -3399.1928, -1.7, 30.43), vec4(1.7, 4.5, 4.4, 5.9))) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), _GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, sqrt(1.0), 0.0, 1.0))), injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-561.939), _GLF_FUZZED(5.4)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(551.524), _GLF_FUZZED(-2880.2898)), mix(vec2((vec2(_GLF_FUZZED(_GLF_IDENTITY(551.524, mix(float(_GLF_IDENTITY(551.524, max(551.524, 551.524))), float(_GLF_FUZZED((- -53.05))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FUZZED(-2880.2898)))[0], _GLF_FUZZED(5.8)), vec2(_GLF_FUZZED(-299.296), (vec2(_GLF_FUZZED(551.524), _GLF_FUZZED(-2880.2898)))[1]), bvec2(false, true))), _GLF_IDENTITY(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), min(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), _GLF_IDENTITY(vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1]), (vec2((vec2(injectionSwitch))[0], (vec2(injectionSwitch))[1])) - vec2(0.0, 0.0)))), bvec2(true, true))))).y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   subgroupAll(_GLF_IDENTITY(false, (false) && true));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(10.89)), vec2((injectionSwitch)[_GLF_IDENTITY(0, max(0, 0))], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), bool(bool(bool(bool(_GLF_DEAD(false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(float(41040u))), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))) || (false), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) || false), true && _GLF_IDENTITY((bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y)) || (false))), ((bool(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(64.09, -4.9)))).x > injectionSwitch.y))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8073.3411) : injectionSwitch.y)) : _GLF_FUZZED(4216.9219))))) || (false)))) && true))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y)))))))) || (false)))))) || false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.7)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   subgroupAll(false);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, true && (false)), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), bool(bvec3(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), ! (! (! ((false)))))))), _GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), true && (! (_GLF_IDENTITY(true, false || (true))))))), false)))) && true)), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true, false)))), true), bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(true, false || (true)) && (false)), true, false)))), true))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(read, ~ (~ (read))), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3((false) || _GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false, true)))), bool(bvec4(false, false, _GLF_IDENTITY(false, ! (! (false))), true)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
