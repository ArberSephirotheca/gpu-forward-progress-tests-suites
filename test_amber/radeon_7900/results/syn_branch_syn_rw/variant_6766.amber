#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(9715.5771, -7.9)))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 0.0, _GLF_IDENTITY(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8310.5353)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-432.165)), float(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(float(mat4x2(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8310.5353)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-432.165)), float(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(float(mat4x2(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8310.5353)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-432.165)), float(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), (true ? float(mat4x2(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8310.5353)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-432.165)), float(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)) : _GLF_FUZZED(-2650.7440))), float(mat4x2(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8310.5353)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-432.165)), float(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), _GLF_IDENTITY(float(mat4x2(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8310.5353)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-432.165)), float(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0)), 1.0 * (float(mat4x2(sqrt(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(8310.5353)), float(0.0), bool(true))), _GLF_IDENTITY(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(-432.165)), float(float(mat2x3(0.0, 1.0, 1.0, sqrt(tan(0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec3(true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (injectionSwitch.x < injectionSwitch.y))))))), 1.0, 1.0, abs(1.0), 0.0, 0.0, 1.0, 1.0))))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(_GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-77.06) : determinant(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0))))), (true ? _GLF_IDENTITY(vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0)), 0.0, 1.0)), (false ? _GLF_FUZZED(-77.06) : determinant(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (min(0.0, 0.0)) - 0.0)), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) * _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))))))))), mat4(1.0) * (vec4(1.0, 1.0, 1.0, _GLF_IDENTITY(determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)), (false ? _GLF_FUZZED(-77.06) : determinant(mat3(1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0, 0.0, 1.0))))))) : _GLF_FUZZED(sin(vec4(39.68, 689.754, -3.7, -0.5))))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), max(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), dot(vec4(1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(faceforward(distance(vec2(612.836, 2280.3166), injectionSwitch), faceforward(-663.716, -765.702, -448.596), acos(-5506.2561))))), 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)))), float(mat2x4(1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), float(mat2x4(1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))), 1.0)), 1.0, determinant(mat3(1.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (1.0) * 1.0), 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(max(0.0, 0.0), max(max(0.0, 0.0), max(0.0, 0.0)))))))), 0.0, 0.0, 0.0))), float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.4)), float(1.0), bool(true))))), 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0)))), abs(0.0)))), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0)))) * mat3(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.1, -9242.0321, -5086.2253), (false ? _GLF_FUZZED(vec3(-3.9, 1.4, -5.8)) : vec3(-9.1, -9242.0321, -5086.2253)))) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) - 0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, _GLF_IDENTITY(-9242.0321, max(-9242.0321, -9242.0321)), -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(abs(0.0), 1.0 * (_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-85.31)), float(_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))), bool(true))))), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-72.14, -21.81).t)), float(1.0), bool(true)))), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 1.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3(-7.9, -231.451, 697.865, -5.7, -57.55, 992.303, 99.30, 674.243, -965.928)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)), mix(vec3((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[0], (_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[1], _GLF_FUZZED(-0.8)), vec3(_GLF_FUZZED(-4.7), _GLF_FUZZED(9903.9916), _GLF_IDENTITY((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2], clamp((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2], _GLF_IDENTITY((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2], ((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2]) * 1.0), (_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2]))), bvec3(false, false, true))) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y))))))), determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))))))), mat3(1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(4.4)), float(1.0), bool(true))))), 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), _GLF_IDENTITY(vec2(0.0, 1.0), (vec2(0.0, 1.0)) - vec2(0.0, 0.0)))), abs(0.0)))), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), clamp(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0)))) * mat3(1.0)))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(vec3(-9.1, -9242.0321, -5086.2253), (false ? _GLF_FUZZED(vec3(-3.9, 1.4, -5.8)) : vec3(-9.1, -9242.0321, -5086.2253)))) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))), 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), (dot(vec4(1.0, 1.0, 1.0, determinant(mat3(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat4x3(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))) - 0.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))) / _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), min(_GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 1.0), transpose(transpose(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_FUZZED(vec3(-9.1, _GLF_IDENTITY(-9242.0321, max(-9242.0321, -9242.0321)), -5086.2253)) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(abs(0.0), 1.0 * (_GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-85.31)), float(_GLF_IDENTITY(abs(0.0), max(abs(0.0), abs(0.0)))), bool(true))))), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(vec2(-72.14, -21.81).t)), float(1.0), bool(true)))), _GLF_IDENTITY(vec2(0.0, 1.0), vec2(vec4(vec2(0.0, 1.0), 1.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))), _GLF_IDENTITY(vec3(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, 1.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat3(-7.9, -231.451, 697.865, -5.7, -57.55, 992.303, 99.30, 674.243, -965.928)) : _GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0), (mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0)) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x), 0.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)), mix(vec3((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[0], (_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[1], _GLF_FUZZED(-0.8)), vec3(_GLF_FUZZED(-4.7), _GLF_FUZZED(9903.9916), _GLF_IDENTITY((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2], clamp((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2], _GLF_IDENTITY((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2], ((_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2]) * 1.0), (_GLF_FUZZED(vec3(-9.1, -9242.0321, -5086.2253)))[2]))), bvec3(false, false, true))) : vec3(_GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(1.0, float(mat2x3(1.0, sin(0.0), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), abs(0.0), 1.0, sqrt(1.0)))), 1.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, round(length(normalize(_GLF_ONE(1.0, injectionSwitch.y))))))), determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0)), 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0))), vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(vec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), abs(0.0)))), 0.0))))))))))))), 0.0, 0.0, 0.0))).x > injectionSwitch.y), true)), ! (! (bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_IDENTITY(_GLF_FUZZED(vec2(-42.48, 152.084)), (_GLF_FUZZED(vec2(-42.48, 152.084))) - vec2(0.0, 0.0)) : injectionSwitch)).y), true), _GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true)))), false, false))))), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true))), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2((injectionSwitch.x > injectionSwitch.y), true)))), bvec2(bvec4(bvec2(bvec2(bvec2(bvec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true)))), false, false))))), true)))))))))) || ((injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec3(_GLF_WRAPPED_IF_FALSE(false), false, false))))
    {
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 for(int _injected_loop_counter = _GLF_IDENTITY(1, clamp(1, 1, 1)); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter > 0, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_injected_loop_counter > 0, (_injected_loop_counter > 0) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))); _injected_loop_counter --)
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        break;
       return;
      }
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            return;
           for(int _injected_loop_counter = _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (0 >> _GLF_IDENTITY(int(5), int(5))) ^ (4))))), int(int(_GLF_IDENTITY(((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))))), (_GLF_IDENTITY(((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(4), _GLF_IDENTITY((_GLF_IDENTITY(int(4), clamp(int(4), int(4), int(4)))) / 1, ((_GLF_IDENTITY(int(4), _GLF_IDENTITY(clamp(int(4), int(4), int(4)), (clamp(int(4), int(4), int(4))) - 0))) / 1) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4))))), 0 | (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(_GLF_IDENTITY(4, _GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), int(_GLF_IDENTITY(int(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), int(_GLF_IDENTITY(ivec4((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), 0, 0, 0), min(ivec4((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), 0, 0, 0), ivec4((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), 0, 0, 0)))))), (int(_GLF_IDENTITY((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), int(_GLF_IDENTITY(ivec4((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), 0, 0, 0), min(ivec4((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), 0, 0, 0), ivec4((false ? _GLF_IDENTITY(_GLF_FUZZED(_injected_loop_counter), max(_GLF_FUZZED(_injected_loop_counter), _GLF_FUZZED(_injected_loop_counter))) : 4), 0, 0, 0))))))) | 0)))))))))) | (((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(4), ~ (~ (int(4)))), int(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_injected_loop_counter) : 4)))))))))); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x)))) || false); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
             do
              {
               if(_GLF_DEAD(false))
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, injectionSwitch.y))); _injected_loop_counter ++)
                  {
                   do
                    {
                     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bool(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false || _GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), bool(bvec4(! (_GLF_IDENTITY((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), false, true, true)))))))
                      {
                       if(_GLF_DEAD(false))
                        continue;
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     else
                      {
                      }
                     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
                      {
                       if(_GLF_DEAD(false))
                        return;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))));
                  }
                 if(_GLF_DEAD(false))
                  break;
                }
               if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))), true))))
                continue;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)), true && (true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false)))))));
            }
          }
         else
          {
          }
        }
      }
    }
   else
    {
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 do
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, (1) / 1)); _injected_loop_counter ++)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(95.73) : injectionSwitch.y)), injectionSwitch.y))))))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (false) || false)))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
         else
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             for(int _injected_loop_counter = (((1 | 1) << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | 0, ((int(5)) | 0) | ((int(5)) | 0)))) >> 0)), (_GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | 0, ((int(5)) | 0) | ((int(5)) | 0)))) >> 0)), 0 ^ (_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (_GLF_IDENTITY(int(5), _GLF_IDENTITY((int(5)) | 0, ((int(5)) | 0) | ((int(5)) | 0)))) >> 0))))) / 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, ~ (~ (0)))); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               return;
               if(_GLF_DEAD(false))
                return;
              }
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(8145.9538, max(8145.9538, 8145.9538)) / -73.84))), bool(false))) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))).y))))))))))
              return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(false))
        return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) || false)))));
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))) || false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), _GLF_IDENTITY(bvec3(bvec4(bvec3(false, false, true), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(false, false, true), true))), bvec3(bvec4(bvec3(bvec3(bvec4(bvec3(false, false, true), true))), true))))))))))
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
        {
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(_GLF_IDENTITY(0, min(0, 0)), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(0, min(0, _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (_GLF_IDENTITY(0, ~ (~ (0)))) << 0)) >> 0))), (_GLF_IDENTITY(0, min(0, 0))) << 0)))); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       break;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))
      break;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y))))
      continue;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, determinant(mat2(0.0, 0.0, 0.0, length(vec2(0.0, 0.0)))) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) - 0.0), 1.0, log(1.0)), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) - 0.0), 1.0, log(1.0)), vec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x))))) - 0.0), 1.0, log(1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), _GLF_IDENTITY(max(injectionSwitch.x, injectionSwitch.x), clamp(max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x), max(injectionSwitch.x, injectionSwitch.x)))))))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
      }
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), true && (! _GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), (_GLF_IDENTITY(true && ((false)), bool(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)) && ((false)), true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true))))), _GLF_IDENTITY(true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), true && (! (false))), bool(bvec3(_GLF_IDENTITY(! (false), true && (! (false))), false, true))))), true && (true && (! (_GLF_IDENTITY(! (false), true && (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false)))))), ! (! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))), ! (! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))))))))))))))), false || (false))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          return;
        }
       if(_GLF_DEAD(false))
        return;
       do
        {
         for(int _injected_loop_counter = _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(0, (0) ^ 0), 1)), (int(ivec2(_GLF_IDENTITY(0, (0) ^ 0), 1))) ^ 0)), 0, 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, max(1, 1))); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (int(4))), 0 + (~ (~ (int(4)))))))), _GLF_IDENTITY(bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (int(4))), 0 + (~ (~ (int(4)))))))), _GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (int(4))), 0 + (~ (~ (int(4)))))))), _GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bool(bool(bvec4(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), _GLF_IDENTITY(~ (~ (int(4))), 0 + (~ (~ (int(4)))))))), _GLF_IDENTITY(false, true && (false)), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               return;
              }
            }
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
            {
             return;
            }
           else
            {
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         return;
        }
       else
        {
        }
      }
     for(int _injected_loop_counter = (_GLF_IDENTITY(0 | 0, (0 | _GLF_IDENTITY(_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (0) + int(_GLF_ZERO(0.0, injectionSwitch.x)))))), ~ (_GLF_IDENTITY(~ (0), max(~ _GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), (_GLF_IDENTITY((_GLF_IDENTITY(0, (0) | 0)), 0 + ((_GLF_IDENTITY(0, (0) | 0))))) + (0 ^ 0)), ~ (0)))))) - 0)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1), (_GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1)) - (0 << _GLF_IDENTITY(int(3), int(3)))))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, false))))))))))
        return;
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))) / vec2(1.0, 1.0)), injectionSwitch)).y)))))))), true)), bool(bool(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), true, false, true))) || _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, true && (false)), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(false, true && (false)), false), false))))))), false, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || ((! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), true, false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 1.0))).x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), true, false, true))) || false)), false, true))) && true)), true)))))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), ((false)) && true) && true)))))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(8832.5142)), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(mat3x4(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, exp(0.0))), _GLF_IDENTITY(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, exp(0.0))), max(dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, exp(0.0))), dot(vec3(1.0, 1.0, 0.0), vec3(0.0, 0.0, exp(0.0)))))), 1.0, 1.0, 1.0))), bool(true))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 1.0, 1.0, 0.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 0.0, 0.0))), 0.0, 0.0, 1.0)))))))), (_GLF_IDENTITY(injectionSwitch.y, float(mat2x3(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1.9))), 1.0, 1.0, sqrt(1.0), 1.0, 1.0)))) - 0.0)))))
  {
   do
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
    }
   while(_GLF_WRAPPED_LOOP(false));
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   do
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        break;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        return;
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         do
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         while(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), true && (_GLF_WRAPPED_LOOP(false))), true && (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), bool(bvec4(_GLF_WRAPPED_LOOP(false), true, false, false)))) || false))));
        }
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           return;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
            return;
          }
        }
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      return;
    }
  }
 else
  {
   for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      break;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), ! (! (_GLF_WRAPPED_IF_TRUE(true)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false)), ! (_GLF_IDENTITY(! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false))), false || (! (bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false)))))))), (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))) && true)));
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5867.7889), _GLF_FUZZED(-65.85)), bvec2(false, false))).x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))), ! (! (bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))))), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            return;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-4.3))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, _GLF_IDENTITY(false, ! (! (false)))))))))))
        return;
      }
     else
      {
       return;
      }
    }
  }
 else
  {
  }
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, cos(0.0)))).y, true && (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 0.0, 0.0, 0.0, cos(0.0)))).y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     else
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), _GLF_IDENTITY(bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false)), (bool(bvec3(_GLF_WRAPPED_IF_TRUE(true), false, false))) && true)))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _GLF_IDENTITY(_injected_loop_counter ++, (_injected_loop_counter ++) * 1))
          {
           if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.1), mix(float(_GLF_FUZZED(float(-66844))), float(_GLF_FUZZED(-4.1)), bool(true)))), vec2(_GLF_FUZZED(20.31), (injectionSwitch)[1]), bvec2(false, true))).y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))))))) > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(87.78), _GLF_FUZZED(-23.64)), bvec2(false, false))).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0))))), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))))))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(87.78), _GLF_FUZZED(-23.64)), bvec2(false, false))).x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(mat3(injectionSwitch.x, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))), 0.0, 0.0, 1.0, 1.0))))), min(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))), clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))), _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-271.648)), bool(false))))))))) > injectionSwitch.y)) && true))))))))
            {
             if(_GLF_DEAD(false))
              break;
             return;
            }
          }
         for(int _injected_loop_counter = (int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(1), int(1))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
          {
           return;
          }
        }
       else
        {
        }
      }
     do
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, false || (false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true && ((injectionSwitch.x > injectionSwitch.y)))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))))), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y) && true))), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, false || (true))))), ! (! (true))), false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 2.5))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- 2.5))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y)) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)), true && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ 0)))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        return;
       do
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (1 ^ 1)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      break;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           return;
          }
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          break;
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))), (! (_GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(true, ! (! (true)))))))) && true))))))))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         return;
        }
      }
    }
  }
 else
  {
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) >> 0u)) | (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)))), (workgroup_base) << 0u)) << 0u) + subgroup_base + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(uvec3(_GLF_IDENTITY(39912u, (_GLF_IDENTITY(39912u, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (39912u), (~ (39912u)) | (~ (39912u))), (_GLF_IDENTITY(~ (39912u), (~ (39912u)) | (~ (39912u)))) << (0u ^ 0u))))) | (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), (uint(1u)) << 0u), uint(_GLF_IDENTITY(1u, (true ? 1u : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, (0u & 133901u))))))))))))), 146217u, 88516u).t) : subgroup_local_id));
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(791.106) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x), (clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(_GLF_IDENTITY(791.106, mix(float(791.106), float(_GLF_FUZZED(-2.3)), bool(false)))) : injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) - 0.0))), bool(true))) < _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch)))))) - vec2(0.0, 0.0)).y, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(-9.3)), clamp(float(_GLF_FUZZED(-9.3)), _GLF_IDENTITY(float(_GLF_FUZZED(-9.3)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-9.3)), min(float(_GLF_FUZZED(-9.3)), float(_GLF_FUZZED(-9.3)))), float(_GLF_FUZZED(-9.3)), float(_GLF_FUZZED(-9.3)))), _GLF_IDENTITY(float(_GLF_FUZZED(-9.3)), float(mat2(float(_GLF_FUZZED(-9.3)), 1.0, _GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(determinant(mat3(-65.28, -7.9, -8.2, -8761.2455, 8200.4779, -116.580, 613.627, 270.047, -32.02))) : exp(0.0))), 0.0))))), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), exp(0.0)), (true ? mat3(injectionSwitch, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), exp(0.0)) : _GLF_FUZZED(mat3(5.5, -19.56, -2.9, 8.7, -9328.7155, -7698.8977, 5.3, -62.40, 142.684)))))).x, clamp(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(791.106) : injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x, injectionSwitch.x))), bool(true))) < injectionSwitch.y)), ! (! (bool(bool(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-9.3)), float(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(791.106) : injectionSwitch.x)), (false ? _GLF_FUZZED(-75.99) : _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(791.106) : injectionSwitch.x)))), injectionSwitch.x, injectionSwitch.x))), bool(true))) < injectionSwitch.y))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           return;
          }
        }
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) && true)));
   if(_GLF_DEAD(false))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), ! (! (! (injectionSwitch.x > injectionSwitch.y))))))))))
      {
      }
     else
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
      }
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], clamp(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) | (_GLF_IDENTITY(buf[virtual_gid], (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(buf[virtual_gid], clamp(buf[virtual_gid], buf[virtual_gid], buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)])))))), uint(uvec3(buf[virtual_gid], 1u, 1u))), _GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) - _GLF_IDENTITY(0u, 0u + (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), (0u | 0u) | ((_GLF_IDENTITY(0u, uint(uint(0u)))))) / 1u), (_GLF_IDENTITY(_GLF_IDENTITY(0u, uint(uint(0u))), (_GLF_IDENTITY(0u, uint(uint(0u)))) / 1u)) >> 0u)) * ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), 0u | (_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (1u << _GLF_IDENTITY(uint(7u), uint(7u))) << (0u << _GLF_IDENTITY(uint(3u), uint(3u))))))) >> _GLF_IDENTITY(uint(7u), uint(7u))))))), buf[_GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))])), 4, 64, 2);
 for(int _injected_loop_counter = ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(6), int(6)), max(1 << _GLF_IDENTITY(int(6), int(6)), 1 << _GLF_IDENTITY(int(6), int(6))))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, false || (true))))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, ~ (~ (_injected_loop_counter))) != (0 | 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))) || false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))) || false, true && (_GLF_IDENTITY((! (false)) || false, false || (_GLF_IDENTITY((! (false)), false || ((! (false)))) || false)))), true, _GLF_IDENTITY(true, ! (! (true))), true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY((! (false)) || false, true && (_GLF_IDENTITY((! (false)) || false, false || ((! _GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true))))) && true), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true))))) && true), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true))))) && true), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true)))), (bool(_GLF_IDENTITY(bvec3((false), false, true), bvec3(bvec4(bvec3((false), false, true), true))))) && true), true, false, true)))))), true, false, false))))) || false)))), true, _GLF_IDENTITY(true, ! (! (true))), true)), false)))))))))
      {
       if(_GLF_DEAD(false))
        break;
       return;
      }
    }
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, ! (! (true)))))
    {
     if((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u ^ 0u)), max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u ^ 0u)), _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) + (0u ^ 0u)))), subgroup_local_id)) % _GLF_IDENTITY(2, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), ~ (~ (~ (2)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, _GLF_IDENTITY(1, (1) << 0)))) + 0))))), max((_GLF_IDENTITY(2, int(ivec2(2, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, clamp(1, 1, 1)), 1, 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(-5474) : _GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec2(ivec2(2, 1)))), clamp(_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec2(ivec2(2, 1)))), _GLF_IDENTITY(ivec2(2, 1), ivec2(ivec2(ivec2(2, 1)))), _GLF_IDENTITY(ivec2(2, 1), ivec2(ivec2(ivec2(2, 1)))))), (ivec2(2, _GLF_IDENTITY(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec4(1, 0, 0, (0 >> _GLF_IDENTITY(int(5), int(_GLF_IDENTITY(5, (5) - (1 ^ 1)))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), ! (! (bool(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) ? _GLF_FUZZED(_GLF_IDENTITY(16392, ~ _GLF_IDENTITY((~ (16392)), min((~ (16392)), _GLF_IDENTITY((~ (16392)), ~ (~ ((~ _GLF_IDENTITY((16392), (_GLF_IDENTITY((16392), clamp((16392), _GLF_IDENTITY((16392), int(ivec2((16392), 0))), (16392)))) | ((16392))))))))))) : 1)))) * _GLF_IDENTITY(ivec2(1, 1), ~ (~ (_GLF_IDENTITY(ivec2(1, 1), ivec2(1, 1) * (ivec2(1, 1)))))))))), ((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, min(2, _GLF_IDENTITY(2, (2) | (2)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY(~ (~ (16392)), 1 * (~ (~ (16392)))))) : 1, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), bool(bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))))))) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(16392, (true ? 16392 : _GLF_FUZZED(96447))), ~ _GLF_IDENTITY((~ (16392)), max((~ (16392)), _GLF_IDENTITY((~ (16392)), int(ivec4((~ (16392)), 0, 0, 1))))))) : 1, ~ (~ (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-1509.8516), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(1.6)), bvec2(true, false))).x, (injectionSwitch.x) / 1.0) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, ~ (~ (16392)))) : 1)))) * 1))))) * ivec2(1, 1)))))) | 0))))) | _GLF_IDENTITY(0, _GLF_IDENTITY(int(ivec4(0, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))), (true ? int(ivec4(0, 1, 0, int(_GLF_ONE(1.0, injectionSwitch.y)))) : _GLF_FUZZED(-19851))))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec3(ivec2(2, 1), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) / 1))))))))) + 0))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))) * ivec2(1, 1))))))))) | 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))))))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5474, (-5474) * int(_GLF_ONE(1.0, injectionSwitch.y)))) : (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1)))))) : _GLF_FUZZED(826))))))))) | 0), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), _GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(7), int(7)))))), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1))))) + 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), int(ivec4((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1)))))) / ivec2(1, 1))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | (0))))))), (1 | 0), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (1 & 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, _GLF_IDENTITY(1, (1) | (1)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-5474), (_GLF_FUZZED(-5474)) >> 0) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> (0 & 12838)), 1), (ivec2(2, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))).y)) ? _GLF_FUZZED(16392) : 1), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)) ^ 0)))) * ivec2(1, 1))))))))) | 0))), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec3(ivec2(2, 1), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) / 1))))))))) + 0))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))) * ivec2(1, 1))))))))) | 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))))))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5474, (-5474) * int(_GLF_ONE(1.0, injectionSwitch.y)))) : (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1)))))) : _GLF_FUZZED(826))))))))) | 0), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), _GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(7), int(7)))))), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1))))) + 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), int(ivec4((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1)))))) / ivec2(1, 1))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | (0))))))), (1 | 0), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (1 & 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, _GLF_IDENTITY(1, (1) | (1)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-5474), (_GLF_FUZZED(-5474)) >> 0) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> (0 & 12838)), 1), (ivec2(2, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))).y)) ? _GLF_FUZZED(16392) : 1), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)) ^ 0)))) * ivec2(1, 1))))))))) | 0))), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))), (ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec3(ivec2(2, 1), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) / 1))))))))) + 0))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))) * ivec2(1, 1))))))))) | 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))))))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5474, (-5474) * int(_GLF_ONE(1.0, injectionSwitch.y)))) : (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1)))))) : _GLF_FUZZED(826))))))))) | 0), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), _GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(7), int(7)))))), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1))))) + 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), int(ivec4((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1)))))) / ivec2(1, 1))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | (0))))))), (1 | 0), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (1 & 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, _GLF_IDENTITY(1, (1) | (1)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-5474), (_GLF_FUZZED(-5474)) >> 0) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> (0 & 12838)), 1), (ivec2(2, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))).y)) ? _GLF_FUZZED(16392) : 1), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)) ^ 0)))) * ivec2(1, 1))))))))) | 0))), 1, ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3))))) / ivec3(1, 1, 1)))), 0), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec3(ivec2(2, 1), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) / 1))))))))) + 0))))), max((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), max(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))))), clamp(int(ivec2(_GLF_IDENTITY(2, max(2, 2)), 1)), int(ivec2(2, 1)), int(ivec2(2, 1)))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : _GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec3(1, 1, 0), ivec3(0, 0, 0) ^ (ivec3(1, 1, 0)))))) ^ 0))))) * ivec2(1, 1))))))))) | 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), ivec2(2, 1))))), ivec2(2, 1)))) << ivec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))), 2)), 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))))))))), int(_GLF_IDENTITY(int((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), ivec2(2, 1))))), ivec2(2, 1)))) << ivec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))), 2)), 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348))))))))))), (int((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), ivec2(2, 1))))), ivec2(2, 1)))) << ivec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))), 2)), 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))))))))))) | (int((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (_GLF_IDENTITY(ivec2(2, 1), clamp(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), _GLF_IDENTITY(ivec2(2, 1), max(ivec2(2, 1), ivec2(2, 1))))), ivec2(2, 1)))) << ivec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) - 0), _GLF_IDENTITY(2, ~ (~ (2))))), 2)), 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348))))))))))))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(ivec2(21745, 85717).r) : _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), min((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (_GLF_IDENTITY(2, int(ivec2(2, 1))))))) + 0))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5474, (-5474) * int(_GLF_ONE(1.0, injectionSwitch.y)))) : (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((_GLF_IDENTITY(16392, (16392) | (16392))) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), _GLF_IDENTITY(~ (~ (int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))))), (1 ^ 1) | (~ (~ (int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1)))))))) : _GLF_FUZZED(826))))))))) | 0), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), _GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) | (0 >> _GLF_IDENTITY(int(7), int(7)))))), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1))))) + 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(_GLF_IDENTITY(2, (true ? 2 : _GLF_FUZZED(83724))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) - 0), (_GLF_IDENTITY(1, (1) - 0)) | (_GLF_IDENTITY(1, (1) - 0))))) ^ ivec2(0, 0))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1)))))) / ivec2(1, 1))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ((0)) | 0))))))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1)))))) / ivec2(1, 1))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ((0)) | 0))))))))), (false ? _GLF_FUZZED(-40657) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1)))))) / ivec2(1, 1))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | _GLF_IDENTITY((0), min((0), _GLF_IDENTITY((0), ((0)) | 0))))))))))))), (1 | 0), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (1 & 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, _GLF_IDENTITY(1, (1) | (1)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-5474), (_GLF_IDENTITY(_GLF_FUZZED(-5474), clamp(_GLF_FUZZED(-5474), _GLF_IDENTITY(_GLF_FUZZED(-5474), (_GLF_IDENTITY(_GLF_FUZZED(-5474), min(_GLF_FUZZED(-5474), _GLF_FUZZED(-5474)))) | (_GLF_FUZZED(-5474))), _GLF_FUZZED(-5474)))) >> 0) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> (0 & 12838)), 1), (ivec2(2, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0)), 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))).y)) ? _GLF_FUZZED(16392) : 1), (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)))) ? _GLF_FUZZED(16392) : 1), max((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)))) ? _GLF_FUZZED(16392) : 1), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y), false || ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch)).x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)))) ? _GLF_FUZZED(16392) : 1)))) ^ 0)))) * ivec2(1, 1))))))))) | 0))), 0), max(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec3(ivec2(2, 1), (_GLF_IDENTITY(0, (0) | int(_GLF_ZERO(0.0, injectionSwitch.x))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(_GLF_IDENTITY(int(1), (int(1)) ^ 0)))) / 1))))))))) + 0))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, _GLF_IDENTITY(2, (2) ^ 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), _GLF_IDENTITY((ivec2(2, 1)), ((ivec2(2, 1))) + ivec2(0, 0)) * ivec2(1, 1))), clamp(int(ivec2(2, 1)), int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) | (ivec2(2, 1)))), int(ivec2(2, _GLF_IDENTITY(1, min(1, 1)))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))), ((ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1))))) | (_GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))), ((ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1))))) / ivec2(1, 1)))) * ivec2(1, 1))))))))) | 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY((int(ivec2(2, 1))), int(_GLF_ZERO(0.0, injectionSwitch.x)) ^ ((int(ivec2(2, 1))))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (true ? (_GLF_IDENTITY(2, int(ivec2(2, 1)))) : _GLF_FUZZED(-16516))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5474, (-5474) * _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), ~ (~ (int(_GLF_ONE(1.0, injectionSwitch.y))))))) : (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) + (_GLF_IDENTITY(ivec2(2, 1), ivec2(ivec3(ivec2(2, 1), 0))))), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0))), int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0))), 1), ivec2(ivec2(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0))), 1), (ivec2(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0))), 1)) / ivec2(1, 1)))))))) : 1)))) * ivec2(1, 1))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, int(int(_GLF_IDENTITY(2, clamp(2, 2, 2))))), (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, 1), _GLF_IDENTITY((ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(findLSB(uvec2(146429u, 62330u))) : (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))))) * ivec2(1, 1)))))) : _GLF_FUZZED(826))))))))) | 0), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), _GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(7), int(7)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) ? 0 >> _GLF_IDENTITY(int(7), int(7)) : _GLF_FUZZED(86146))))))), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1))))) + 0), (false ? _GLF_FUZZED(-12496) : _GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1))))) + 0))))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), int(ivec4((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, (1 ^ ((1 << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2)))) | ((1) - 0)))), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), _GLF_IDENTITY(~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))), ~ (~ (~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))))))) / ivec2(1, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) + 0)))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | (0))))))), (1 | 0), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (1 & 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, _GLF_IDENTITY(1, (1) | (1)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-5474, clamp(-5474, -5474, -5474))), (_GLF_FUZZED(-5474)) >> 0) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> (0 & 12838)), 1), (ivec2(2, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY((injectionSwitch), max(_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(((injectionSwitch)), vec2(vec2(((injectionSwitch))))) * mat2(1.0)), (injectionSwitch)))).y)) ? _GLF_FUZZED(16392) : _GLF_IDENTITY(1, (1) - 0)), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)) ^ 0)))) * ivec2(1, 1))))))))) | 0))), 0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(_GLF_IDENTITY(ivec2(2, 1), _GLF_IDENTITY(ivec2(ivec3(ivec2(2, 1), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) / 1)))))), ivec2(ivec3(ivec2(ivec3(ivec2(2, 1), (0 >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(int(int(1))), (int(int(int(1)))) / 1)))))), 0)))))) + 0))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1)))), (int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1))))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), int(ivec2(2, 1)), int(ivec2(2, 1)))))), ((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1)))), (int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1))))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), int(ivec2(2, 1)), int(ivec2(2, 1))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1)))), (int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1))))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), int(ivec2(2, 1)), int(ivec2(2, 1)))))), clamp((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1)))), (int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1))))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), int(ivec2(2, 1)), int(ivec2(2, 1)))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1)))), (int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1))))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), int(ivec2(2, 1)), int(ivec2(2, 1)))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) * ivec2(1, 1))), clamp(_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1)))), (int(ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-67659) : 1))))) >> (0 >> _GLF_IDENTITY(int(8), int(8)))), int(ivec2(2, 1)), int(ivec2(2, 1)))))))))), (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false))))), (! (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && (false)))))) && true))))))) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))) * ivec2(1, 1))))))))) | 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, min(2, 2)), _GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, _GLF_IDENTITY((0), (false ? _GLF_FUZZED(50129) : (0))) ^ (_GLF_IDENTITY(0, ~ (~ (_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED((bvec4(false, true, false, false) , 58191))))))) & 60348)))), ~ (~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) << ivec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))), _GLF_IDENTITY((int(ivec2(2, 1))), (_GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> (0 ^ 0))) + 0) + _GLF_IDENTITY(0, (0) ^ (0 & 60348)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(2, int(ivec2(2, 1))), _GLF_IDENTITY(int(int(_GLF_IDENTITY(2, int(ivec2(2, 1))))), 0 + (int(int(_GLF_IDENTITY(2, int(ivec2(2, 1))))))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(_GLF_IDENTITY(-5474, (-5474) * int(_GLF_ONE(1.0, injectionSwitch.y)))) : (_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(4522.1460)), float(injectionSwitch.y), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1))), (true ? _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), _GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, 0 | (2)))))))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, ((16392) ^ 0) | (_GLF_IDENTITY((16392) ^ 0, ~ (~ ((16392) ^ 0))))))) : 1)))) * ivec2(1, 1))), ~ (~ (int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, max(_GLF_IDENTITY(2, (2) | 0), 2)))), _GLF_IDENTITY(1, (_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-0.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, _GLF_IDENTITY((16392) ^ 0, _GLF_IDENTITY(((16392) ^ 0), max(_GLF_IDENTITY(((16392) ^ 0), clamp(((16392) ^ 0), ((16392) ^ 0), ((16392) ^ 0))), ((16392) ^ 0))) | ((16392) ^ 0)))) : 1)))) * ivec2(1, 1)))))) : _GLF_FUZZED(826))))))))) | 0), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (2)), _GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (1) | (0 >> _GLF_IDENTITY(int(7), int(7)))))), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), clamp(int(ivec2(2, 1)), int(ivec2(2, 1)), int(ivec2(2, 1))))) + 0))))), max(_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ ivec2(0, 0))))), 0 + (_GLF_IDENTITY((_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), (ivec2(2, _GLF_IDENTITY(1, (1) - 0))) ^ _GLF_IDENTITY(ivec2(0, 0), max(ivec2(0, 0), ivec2(0, 0))))))), int(ivec4((_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), min(ivec2(2, _GLF_IDENTITY(1, (1) - 0)), ivec2(2, _GLF_IDENTITY(1, (1) - 0)))), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))))), (ivec2(_GLF_IDENTITY(ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-55228) : 0)), 1), _GLF_IDENTITY(~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))), min(~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1))), ~ (~ (ivec4((ivec2(2, _GLF_IDENTITY(1, (1) - 0))), 0, 1)))))))) / ivec2(_GLF_IDENTITY(1, (1) | (1)), 1))) ^ ivec2(0, _GLF_IDENTITY(0, (0) | (0))))))), (1 | 0), ((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))), (1 & 1)))))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) | (1)))))), (false ? _GLF_IDENTITY(_GLF_FUZZED(-5474), (_GLF_FUZZED(-5474)) >> 0) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(2, (2) >> (_GLF_IDENTITY(0 & 12838, min(0 & 12838, 0 & 12838)))), 1), (ivec2(2, _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.7)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), mat2(mat3(_GLF_IDENTITY(mat2(injectionSwitch.x, 0.0, 0.0, 0.0), transpose(transpose(mat2(injectionSwitch.x, 0.0, 0.0, 0.0))))))))), float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0)))))), bool(true))) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(injectionSwitch) : (injectionSwitch))), _GLF_IDENTITY(max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)), mix(vec2(_GLF_FUZZED(-156.040), _GLF_FUZZED(-97.07)), vec2((max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))[0], (max(_GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) * mat2(1.0)), (injectionSwitch)))[1]), bvec2(true, true))))).y)) ? _GLF_FUZZED(16392) : 1), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(_GLF_FUZZED(4.7)), mix(float(_GLF_FUZZED(-7395.0767)), float(float(_GLF_FUZZED(4.7))), bool(true))), float(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 1.0, 0.0, cos(0.0), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, sqrt(1.0))))), bool(true))) > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)) ^ 0)))) * ivec2(1, 1))))))))) | 0))), 0)))) - ivec2(0, 0))), (int(ivec2(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY(0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0)), 0 | (_GLF_IDENTITY(0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0)), ~ (~ (0 + (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), clamp(_GLF_IDENTITY(int(ivec2(_GLF_IDENTITY(2, ~ (~ (_GLF_IDENTITY(2, max(2, 2))))), 1)), (int(ivec2(2, 1))) + 0), _GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), _GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY((int(ivec2(2, 1))) + 0, (false ? _GLF_FUZZED(-96308) : (int(ivec2(2, 1))) + 0)))))))))))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) ^ 0))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(92342)))), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, 0 | (16392))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))))) * ivec2(1, 1))))), min(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(92342)))), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, 0 | (16392))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))))) * ivec2(1, 1))))), _GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, _GLF_IDENTITY(1, (true ? _GLF_IDENTITY(1, 0 | (1)) : _GLF_FUZZED(92342)))), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY(16392, 0 | (16392))) : _GLF_IDENTITY(1, clamp(1, 1, 1)))))) * ivec2(1, 1))))))))))) | 0), max(_GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY(0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(_GLF_IDENTITY(ivec2(2, 1), min(ivec2(2, 1), ivec2(2, 1))))) + 0))), int(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), max(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), ~ ((_GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, 1)) | ivec2(0, 0))), (int(ivec2(2, 1))) + 0))))), 1, 0))))), (0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, 1)), (_GLF_IDENTITY(int(ivec2(2, 1)), 0 | (int(ivec2(2, 1))))) + 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), int(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), max(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), ~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))))), 1, 0)))))) + int(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), int(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), max(~ _GLF_IDENTITY(((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), ~ (~ (((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0)))))), ~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))))), 1, 0)))))), (true ? _GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY(0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY((int(ivec2(2, 1))), 0 ^ ((int(ivec2(2, 1))))) + 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), int(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((4073 | -62726)) : 1))))))) + 0))), max(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), ~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))))), 1, 0))))), (_GLF_IDENTITY(0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY((int(ivec2(2, 1))), 0 ^ ((int(ivec2(2, 1))))) + 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), int(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((4073 | -62726)) : 1))))))) + 0))), max(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), ~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))))), 1, 0))))), 0 + (0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY((int(ivec2(2, 1))), 0 ^ ((int(ivec2(2, 1))))) + 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), int(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((4073 | -62726)) : 1))))))) + 0))), max(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), ~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))))), 1, 0)))))))) | (0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY((int(ivec2(2, 1))), 0 ^ ((int(ivec2(2, 1))))) + 0)), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), int(ivec3(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, _GLF_IDENTITY(1, clamp(1, _GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (false ? _GLF_FUZZED((4073 | -62726)) : 1))))))) + 0))), max(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), ~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))))), 1, 0)))))))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-7587), clamp(_GLF_FUZZED(-7587), _GLF_FUZZED(-7587), _GLF_FUZZED(-7587))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((-39076 >> (71760 - 43239))) : _GLF_FUZZED(-7587)))))) | (_GLF_IDENTITY(int(ivec2(2, 1)), 0 + _GLF_IDENTITY((_GLF_IDENTITY(int(ivec2(2, _GLF_IDENTITY(1, (1) << 0))), (int(ivec2(2, 1))) + _GLF_IDENTITY(_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))), (_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(4), int(4))))) | (_GLF_IDENTITY(0, (0) ^ (0 >> _GLF_IDENTITY(int(4), int(4)))))))), ~ (_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), min(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))), _GLF_IDENTITY(~ ((_GLF_IDENTITY(int(ivec2(2, 1)), _GLF_IDENTITY((int(ivec2(2, 1))), min((int(ivec2(2, 1))), _GLF_IDENTITY((int(ivec2(2, 1))), ((int(ivec2(2, 1)))) >> 0))) + 0))), (~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), min(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), int(ivec4(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), 0, 0, 1)))))))) << 0))), max(~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) / 1), (int(ivec2(2, 1))) + 0))), ~ ((_GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), min(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0), (_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0)) << 0))))))), 1, 0)))))))))), max((_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), int(ivec2(2, 1)))), _GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (false ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), (ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_FUZZED(16392), (_GLF_IDENTITY(_GLF_FUZZED(16392), min(_GLF_FUZZED(16392), _GLF_FUZZED(16392)))) | (_GLF_FUZZED(16392))) : 1)))) * ivec2(1, 1)))), (_GLF_IDENTITY(2, int(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(2, 1), ivec2(0, 0) ^ (ivec2(2, 1))), (ivec2(2, _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)), min(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)), 1 * (_GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))), _GLF_IDENTITY(1, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y)) ? _GLF_FUZZED(16392) : 1)))))) * ivec2(1, 1))))) ^ 0)))))) | _GLF_IDENTITY(0, max(0, 0))), _GLF_IDENTITY(2, _GLF_IDENTITY((_GLF_IDENTITY(2, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec2(2, 1), ~ (~ (ivec2(2, 1))))), 0 + (_GLF_IDENTITY(int(ivec2(2, 1)), (int(ivec2(2, 1))) + 0))))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(2, int(ivec2(2, 1)))), max((_GLF_IDENTITY(2, int(ivec2(2, 1)))), (_GLF_IDENTITY(2, int(ivec2(2, 1)))))), (false ? _GLF_FUZZED(-5474) : (_GLF_IDENTITY(2, int(_GLF_IDENTITY(ivec2(2, 1), _GLF_IDENTITY((ivec2(2, _GLF_IDENTITY(_GLF_IDENTITY(1, (0 | 0) ^ (1)), (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(16392) : 1)))) * ivec2(1, 1), ((ivec2(2, _GLF_IDENTITY(1, (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) ? _GLF_FUZZED(16392) : 1)))) * ivec2(1, 1)) - ivec2(0, 0)))))))))) | 0))), 0))) | 0)), 2))) == 0)
      {
       do
        {
         if(_GLF_DEAD(false))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            break;
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))))))
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec4(0, 0, 0, 0))), min(int(_GLF_IDENTITY(ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec4(0, 0, 0, 0))), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec4(0, 0, 0, 0))), (int(_GLF_IDENTITY(ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y)))) ^ ivec4(0, 0, 0, 0)))) / 1)))), 64, 4);
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
              {
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 & 1)); _injected_loop_counter ++)
                    {
                     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(9.7)), bool(false))) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(9.7)), bool(false))) < injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(9.7)), bool(false))) < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(9.7)), bool(false))) < injectionSwitch.y))))) || false)) || false))))
                      {
                       if(_GLF_DEAD(false))
                        return;
                       if(_GLF_DEAD(false))
                        return;
                       do
                        {
                         return;
                        }
                       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, ! (! (false)))));
                      }
                     else
                      {
                      }
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))))
                    {
                     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
                      return;
                     break;
                    }
                   break;
                  }
                }
               else
                {
                 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))); _injected_loop_counter ++)
                  {
                   if(_GLF_DEAD(false))
                    {
                     do
                      {
                       return;
                      }
                     while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, false), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, false), true))))), true))))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, false), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, false), true))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_WRAPPED_LOOP(false), false, false), bvec3(bvec4(bvec3(_GLF_WRAPPED_LOOP(false), false, false), true))))), true))))))))));
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     for(int _injected_loop_counter = (int(_GLF_ONE(1.0, injectionSwitch.y)) ^ 1); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_IDENTITY(_injected_loop_counter < 1, bool(_GLF_IDENTITY(bool(_injected_loop_counter < 1), true && (bool(_injected_loop_counter < 1))))), ! (! (_injected_loop_counter < 1)))); _injected_loop_counter ++)
                      {
                       return;
                      }
                    }
                  }
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), float(_GLF_FUZZED(960.504)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))))
              {
               for(int _injected_loop_counter = _GLF_IDENTITY(1, 1 * (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                {
                 return;
                }
              }
             if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))) && true), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))) && true)))))) || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))) && true), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))) && true)))))) || (false)), (_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false)))))) && true), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), false || ((false))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), true && (! (_GLF_IDENTITY(false, true && (false)))))) && true)))))) || (false))) && true)) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, false || (false))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(true && (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), bool(bvec4(true && (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), false, false, false))))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(false, false || (false))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bool((false)))))), bool(_GLF_IDENTITY(bvec3(false || (false), true, false), bvec3(bvec3(bvec3(false || (false), true, false))))))))))), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (_GLF_IDENTITY(false || (false), bool(bvec4(false || (false), true, true, false)))) || false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY(! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), true && (! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))))), ! (! (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))), ! (! ((! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), false || (false || (false))))))))))))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false || (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)) && true)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), (bool(bvec3((false), true, true))) && true))))) && true))))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false || (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)) && true)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), (bool(bvec3((false), true, true))) && true))))) && true))))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))))), false, true, true)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), (false || (false)) && true)))), bool(bvec4(! (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), _GLF_IDENTITY((false || (false)) && true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false || (false)) && true)))))), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((! (_GLF_DEAD(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), true, true)), (bool(bvec3((false), true, true))) && true))))) && true))))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), true && ((_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))))))))), false, true, true)))))))))) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))) && true)))))
              {
               if(_GLF_DEAD(false))
                break;
               return;
              }
             if(_GLF_DEAD(false))
              return;
            }
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             return;
            }
           do
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0), transpose(transpose(mat2x3(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, 0.0)))))))) > injectionSwitch.y))))
              return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              continue;
             continue;
            }
           if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, bool(bool(false))), false, false))))))))), (injectionSwitch.x > injectionSwitch.y))))
            continue;
           if(_GLF_DEAD(false))
            break;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))));
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), 0 + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(7)), ~ (~ (_GLF_IDENTITY(int(7), int(7))))), 0 ^ (_GLF_IDENTITY(int(7), int(7))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(int(7), ~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec2(int(7), (_GLF_IDENTITY(1 ^ 0, (1 ^ 0) / (1 ^ 0)))))), 0 | (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) >> 0)) | (int(7)))))))), _GLF_IDENTITY(((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5))), (((1 << _GLF_IDENTITY(int(5), int(5))) >> _GLF_IDENTITY(int(5), int(5)))) << 0) * (_GLF_IDENTITY(int(7), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(_GLF_IDENTITY(7, _GLF_IDENTITY(0 + (_GLF_IDENTITY(7, (7) | (7))), max(_GLF_IDENTITY(0 + (_GLF_IDENTITY(7, (7) | (7))), min(_GLF_IDENTITY(0 + (_GLF_IDENTITY(7, (7) | (7))), max(0 + (_GLF_IDENTITY(7, (7) | (7))), 0 + (_GLF_IDENTITY(7, (7) | (7))))), 0 + (_GLF_IDENTITY(7, (7) | (7))))), _GLF_IDENTITY(0 + (_GLF_IDENTITY(7, (7) | (7))), int(int(0 + (_GLF_IDENTITY(7, (7) | (7)))))))))), _GLF_IDENTITY((int(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, (7) | (7)))))), ((int(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, (7) | (7))))))) | ((int(_GLF_IDENTITY(7, 0 + (_GLF_IDENTITY(7, (7) | (7)))))))) >> 0), ~ (~ (_GLF_IDENTITY(int(7), ~ (~ (int(7))))))), 0 | (_GLF_IDENTITY(_GLF_IDENTITY(int(7), int(ivec2(int(7), (_GLF_IDENTITY(1 ^ 0, (1 ^ _GLF_IDENTITY(0, clamp(_GLF_IDENTITY(0, (0) | (0)), 0, _GLF_IDENTITY(0, (0) * (1 | 1))))) / (1 ^ 0)))))), 0 | (_GLF_IDENTITY(int(7), (_GLF_IDENTITY(int(7), (int(7)) >> 0)) | (int(7)))))))))))); _injected_loop_counter ++)
            {
             return;
            }
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(false))
            return;
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
        {
        }
       else
        {
         atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
        }
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, max(1, 1)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    continue;
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(false))
        break;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             return;
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            continue;
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        continue;
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        continue;
       continue;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || false)), (_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, (true) || _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, true, true), bvec3(bvec4(bvec3(true, true, true), true)))))))
      {
       do
        {
         subgroupBarrier();
        }
       while(_GLF_WRAPPED_LOOP(false));
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(-48338 & (0 >> _GLF_IDENTITY(int(2), int(2))), (-48338 & (0 >> _GLF_IDENTITY(int(2), int(2)))) - 0))); _injected_loop_counter --)
        {
         if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, false))))))
          break;
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))))))))
          return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     break;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))
    break;
   if(_GLF_DEAD(false))
    break;
  }
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
  }
 else
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      {
       if(_GLF_DEAD(false))
        return;
       break;
      }
     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(4.6)), bool(false)))) - 0.0), injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(1.0, 1.0) * (injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)), injectionSwitch, injectionSwitch)).y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), false || (((injectionSwitch.x < injectionSwitch.y)))) || false))))), _GLF_IDENTITY(false, ! (! (false)))))))))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(true && (! ((injectionSwitch.x > injectionSwitch.y))), (true && (! ((injectionSwitch.x > injectionSwitch.y)))) && true)) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, false, true))))), (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)).y, false, true)))))) && true))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true)))), true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) && true))))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-24.82), _GLF_FUZZED(7310.9757)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true)))) + vec2(0.0, 0.0)))).y), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bvec3(! (injectionSwitch.x > injectionSwitch.y), true, false))))))))), _GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false, false)), (bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), (! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))) || false))), false, false))) && true))), true, false), bvec3(bvec3(bvec3(! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true, false)))), bvec3(bvec3(bvec3(! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y))))))))), bool(bvec4(! ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), bool(bool(! (! ((injectionSwitch.x > injectionSwitch.y))))))))), false, true, true)))))), true, false)))))))))) || false))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0))))))).y))))
            return;
           for(int _injected_loop_counter = _GLF_IDENTITY(1, int(_GLF_ZERO(0.0, injectionSwitch.x)) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                break;
              }
             else
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_ZERO(0.0, injectionSwitch.x)) | _GLF_IDENTITY((_injected_loop_counter), max(_GLF_IDENTITY((_injected_loop_counter), (_GLF_IDENTITY((_injected_loop_counter), ((_injected_loop_counter)) << 0)) / 1), (_injected_loop_counter)))) > 0); _injected_loop_counter --)
                {
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x2(injectionSwitch.y, 0.0, 0.0, 1.0, 0.0, 1.0))))))))))
                      break;
                     return;
                    }
                   return;
                  }
                }
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               break;
              }
             return;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                return;
               break;
              }
            }
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _GLF_IDENTITY(_injected_loop_counter --, 0 ^ (_injected_loop_counter --)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               return;
              }
            }
          }
        }
       else
        {
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_DEAD(false))
            return;
          }
         else
          {
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(float(injectionSwitch.x))) > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(false))
          {
           if(_GLF_WRAPPED_IF_TRUE(true))
            {
             if(_GLF_WRAPPED_IF_TRUE(true))
              {
               return;
              }
             else
              {
              }
             if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
              break;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) : _GLF_FUZZED((injectionSwitch * (mat3x2(-3.4, 8.4, -3.9, -946.678, -6.9, -6.9) * mat2x3(1.7, -225.811, 4534.5069, -92.18, -7.7, -1.1)))))) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))).x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false ? _GLF_FUZZED(vec2(_GLF_IDENTITY(-2.0, (false ? _GLF_FUZZED(-6.0) : _GLF_IDENTITY(-2.0, mix(float(-2.0), float(_GLF_FUZZED(-4834.3236)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y))))))), -8.3)) : injectionSwitch, (false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8960.1413, -53.53), min(vec2(-8960.1413, -53.53), _GLF_IDENTITY(_GLF_IDENTITY(vec2(-8960.1413, -53.53), max(_GLF_IDENTITY(vec2(-8960.1413, -53.53), max(vec2(-8960.1413, _GLF_IDENTITY(-53.53, float(float(-53.53)))), vec2(-8960.1413, -53.53))), _GLF_IDENTITY(vec2(-8960.1413, -53.53), clamp(vec2(-8960.1413, -53.53), vec2(-8960.1413, -53.53), vec2(-8960.1413, -53.53))))), max(_GLF_IDENTITY(_GLF_IDENTITY(vec2(-8960.1413, -53.53), vec2(mat2x4(vec2(-8960.1413, -53.53), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), clamp(vec2(-8960.1413, -53.53), vec2(-8960.1413, -53.53), vec2(-8960.1413, -53.53))), vec2(-8960.1413, _GLF_IDENTITY(-53.53, 1.0 * (-53.53))))))), (vec2(-8960.1413, -53.53)) / vec2(1.0, 1.0))) : false ? _GLF_FUZZED(vec2(-2.0, -8.3)) : injectionSwitch))))) - vec2(0.0, 0.0)).y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
          return;
         atomicStore(checker[virtual_gid], read, 4, 64, 4);
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             return;
             if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))))
              break;
            }
           else
            {
            }
          }
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))))))
          {
           if(_GLF_DEAD(false))
            continue;
           break;
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
        }
      }
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
