#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-719.514)))))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false))))))))), (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))), true && (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))), false), true, true)))))), false || (! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false)))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))))))))) && true)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_DEAD(false))))), ((! (bool(bool(_GLF_DEAD(false)))))) && true)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (bool(bool(_GLF_DEAD(false)))))), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))), ! _GLF_IDENTITY((! (bool(bool(_GLF_DEAD(false))))), ((! (bool(bool(_GLF_DEAD(false)))))) && true)), _GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)) || (bool(bool(_GLF_DEAD(false))))))) || false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(true, false || (true)), true))), _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-7.1)), float(injectionSwitch.y), bool(true)))), _GLF_IDENTITY(bool(bool((injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(bool(bool((injectionSwitch.x > injectionSwitch.y))), false, false)))))))), true, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec4(! (true), true, false, true))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, uint(uvec3(gl_NumWorkGroups.x, 0u, 0u)));
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(vec3(449.031, 15.56, 948.693).x)), bool(false))), 1.0)), 0.0, 1.0, 1.0, determinant(mat4(1.0, determinant(mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(_GLF_FUZZED(8.3), (false ? _GLF_FUZZED(6.8) : _GLF_IDENTITY(_GLF_FUZZED(8.3), (_GLF_FUZZED(8.3)) + 0.0)))), float(0.0), bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(0.0, 1.0)), dot(vec2(1.0, 0.0), vec2(0.0, 1.0))), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, sin(0.0), 1.0, exp(0.0), 1.0, 1.0, 0.0))), 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0)), (vec2(mat4x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), 0.0, 1.0)))) * vec2(1.0, 1.0)), 0.0, 1.0, 1.0, determinant(mat4(1.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, exp(0.0), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-135.382) : 0.0)))), 1.0, 1.0), vec3(1.0, 0.0, 0.0)), mix(float(_GLF_FUZZED(78.13)), float(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), bool(true))), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 0.0))) / vec2(1.0, 1.0))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true && (((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), ! (! (! (_GLF_IDENTITY(false, false || (false))))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true && ((! (bool(bvec2(_GLF_IDENTITY(false, true && (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u), min(workgroup_size, workgroup_size)) * _GLF_IDENTITY(workgroup_id, 0u | (workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-4.7)), bool(false))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(ceil(injectionSwitch)))))).x > injectionSwitch.y)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(9.8, clamp(_GLF_IDENTITY(9.8, min(9.8, 9.8)), 9.8, 9.8))))) > injectionSwitch.y)))))), false || ((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(9.8, clamp(_GLF_IDENTITY(9.8, min(9.8, 9.8)), 9.8, 9.8))))) > injectionSwitch.y)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), ! (! (_GLF_IDENTITY((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! (! ((false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec3(43.56, -0.1, 1.9).s)), vec2(_GLF_FUZZED(-934.906), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch.y : _GLF_FUZZED(sinh(-9.9))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), _GLF_IDENTITY(false || (false), (false || (false)) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(false, false || (false)) || (false)), true && (false)))), (injectionSwitch.x > injectionSwitch.y)))))))), ! (! ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), false, false)), (bool(bvec3(false, false, false))) || false))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(! (false), false, false))))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))), (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), true && (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))), false || (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true)))))))))))) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))))))
      barrier();
     barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), injectionSwitch)).x > injectionSwitch.y)))) || false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)) / 1.0)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, true, true, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (! ((injectionSwitch.x > injectionSwitch.y))) || false))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, false || (false))), (! (_GLF_IDENTITY(false, false || (false)))) || false))) ? _GLF_IDENTITY(_GLF_FUZZED(atomicOr(virtual_gid, 71848u)), 0u + (_GLF_FUZZED(atomicOr(virtual_gid, 71848u)))) : _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(_GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)), subgroup_base, subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) * 1u), (_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) ^ (0u | 0u))) << 0u) + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base))))) / 1u), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), (workgroup_base + subgroup_base) << 0u), _GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(subgroup_base)), (false ? _GLF_FUZZED(workgroup_size) : uint(uint(subgroup_base))))))), workgroup_base + subgroup_base)))))) + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(((subgroup_local_id + 1) % subgroup_size), (_GLF_IDENTITY((subgroup_local_id + 1), max((subgroup_local_id + 1), (subgroup_local_id + 1))) % subgroup_size), ((subgroup_local_id + _GLF_IDENTITY(1, (1) | 0)) % _GLF_IDENTITY(subgroup_size, uint(uvec2(subgroup_size, 0u)))))), (_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((false ? _GLF_FUZZED(atomicOr(virtual_gid, 71848u)) : _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, uint(_GLF_IDENTITY(uvec2(subgroup_base, 0u), uvec2(_GLF_IDENTITY(uvec3(uvec2(subgroup_base, 0u), 1u), (true ? uvec3(uvec2(subgroup_base, 0u), _GLF_IDENTITY(1u, _GLF_IDENTITY(~ (~ (1u)), (~ (~ (1u))) | 0u))) : _GLF_FUZZED(uvec3(138589u, 11931u, 103835u)))))))), _GLF_IDENTITY(workgroup_base + subgroup_base, (workgroup_base + subgroup_base) / 1u), workgroup_base + subgroup_base))), ((false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(atomicOr(virtual_gid, 71848u)), (_GLF_FUZZED(atomicOr(virtual_gid, 71848u))) ^ 0u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(atomicOr(virtual_gid, 71848u)), (_GLF_FUZZED(atomicOr(virtual_gid, 71848u))) ^ 0u)))) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec3(workgroup_base + subgroup_base, 1u, 0u))), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(true, ! (! (true))) ? workgroup_base + subgroup_base : _GLF_FUZZED(subgroup_id))), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), _GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) >> 0u))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(subgroup_local_id) : 1u)) * (workgroup_base + subgroup_base))))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(workgroup_base))) + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))), clamp(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))), ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))), _GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) + 0u)))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))), (true ? ~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))) : _GLF_FUZZED(workgroup_size))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 1u, 1u)))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), _GLF_IDENTITY(subgroup_base, (false ? _GLF_FUZZED(bitfieldInsert(num_workgroup, virtual_gid, 14461, -95523)) : _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)))))), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u)), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (true ? _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u) : _GLF_FUZZED(subgroup_size))), _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))))), max(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + _GLF_IDENTITY(subgroup_base, 1u * (_GLF_IDENTITY(subgroup_base, (subgroup_base) << (0u << _GLF_IDENTITY(uint(8u), uint(8u))))))), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base + subgroup_base, (false ? _GLF_FUZZED(num_workgroup) : workgroup_base + subgroup_base))) / (1u & 1u)), max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u), ~ (~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u), (_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u), 0u | (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)))) | 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u, ~ (~ (_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u, ((~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u) / 1u))))))))) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, (7u) / (0u ^ (1u & 1u)))))), 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (0u & 58684u) | (subgroup_base)), max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), _GLF_IDENTITY((~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))), clamp((~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (_GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))))) / (1u ^ 0u)))), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) / ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u))))))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), _GLF_IDENTITY(0u ^ ((workgroup_base + subgroup_base)), (true ? 0u ^ ((workgroup_base + subgroup_base)) : _GLF_FUZZED(virtual_gid)))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(atomicOr(workgroup_size, 116997u)) : workgroup_base)) + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) >> 0u)), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), _GLF_IDENTITY(workgroup_base, (workgroup_base) * (((1u & 1u) << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))) + subgroup_base)), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), min(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)))), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + _GLF_IDENTITY(0u, 0u ^ (0u)))) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) | (_GLF_IDENTITY(subgroup_base, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? subgroup_base : _GLF_FUZZED(workgroup_id)))))), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), _GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))), max(_GLF_IDENTITY((~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))), (true ? (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) : _GLF_FUZZED(workgroup_size))), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))))) + 0u)) / 1u), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (workgroup_base + subgroup_base)))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), _GLF_IDENTITY((~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))), (_GLF_IDENTITY((~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))), 0u ^ ((~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base)))))))) | 0u) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) >> 0u)), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), ~ (~ (uint(4u)))))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(_GLF_IDENTITY(4u, (4u) << 0u)))))), (true ? uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - 0u)), clamp((_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - 0u)), (_GLF_IDENTITY((workgroup_base + subgroup_base), ((workgroup_base + subgroup_base)) - 0u)))), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + _GLF_IDENTITY(0u, (0u) | (0u)))) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u)), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / _GLF_IDENTITY(1u, (1u) >> 0u)), workgroup_base + subgroup_base)), uint(uvec4(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << (161679u & 0u)), 0u ^ (subgroup_base)), subgroup_base)), clamp(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))), max(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))), _GLF_IDENTITY(max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))), 0u | (max(workgroup_base + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY((workgroup_base + subgroup_base), clamp((workgroup_base + subgroup_base), (workgroup_base + subgroup_base), (workgroup_base + subgroup_base))) | (workgroup_base + subgroup_base))))))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u), (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), clamp(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)))), min(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), clamp(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)))), (uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), clamp(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base))))) << 0u), uint(_GLF_IDENTITY(uint(workgroup_base + subgroup_base), clamp(uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base), uint(workgroup_base + subgroup_base)))))))), 0u ^ ((workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))) >> 0u)))))) - 0u)) - ((85770u & 0u) ^ 0u))), (~ (_GLF_IDENTITY(~ ((workgroup_base + subgroup_base)), (~ (_GLF_IDENTITY((workgroup_base + subgroup_base), 0u ^ ((workgroup_base + subgroup_base))))) - 0u))) + 0u)) / 1u), workgroup_base + subgroup_base)), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 1u, 1u))), ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))), 1u)) << (uvec3(0u, 0u, 0u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))))) : _GLF_FUZZED(num_workgroup)))))))) ^ (0u << _GLF_IDENTITY(uint(_GLF_IDENTITY(8u, (false ? _GLF_FUZZED(subgroup_id) : 8u))), uint(8u))))) + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, ~ (~ (subgroup_local_id))), max(_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (subgroup_local_id), clamp(~ (subgroup_local_id), ~ (subgroup_local_id), ~ (subgroup_local_id))))), subgroup_local_id)) + 1) % subgroup_size)) | 0u);
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(64, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (64), int(ivec2(~ (64), 0))), (_GLF_IDENTITY(~ (64), int(ivec2(~ (64), 0)))) ^ 0))), 2);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true ? injectionSwitch : _GLF_FUZZED(injectionSwitch), mix(vec2(_GLF_FUZZED(743.075), _GLF_FUZZED(vec4(57.76, 5351.4498, -5003.6494, 6.7).y)), vec2((true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[0], (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))[1]), bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), injectionSwitch)).y))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, uint(_GLF_IDENTITY(uvec2(next_virtual_gid, 1u), (uvec2(next_virtual_gid, 1u)) << uvec2(0u, 0u))))], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))), int(_GLF_ONE(1.0, injectionSwitch.y)) * (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1))))), (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, int(int(1)))))) / 1)))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, (1) ^ 0)), (uint(1)) - _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))), 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, clamp(1, 1, 1))), (uint(1)) - _GLF_IDENTITY(0u, (0u) * 1u)), _GLF_IDENTITY(0u, (0u) << 0u))), (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), max(_GLF_IDENTITY(~ (~ (1)), max(~ (~ (1)), ~ (~ (1)))), _GLF_IDENTITY(~ (~ (1)), (false ? _GLF_FUZZED(-87859) : ~ (~ (1)))))))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), min(uint(_GLF_IDENTITY(1, ~ (~ (1)))), uint(_GLF_IDENTITY(1, ~ (~ (1))))))) | _GLF_IDENTITY(0u, min(0u, 0u))), (uint(1)) + 0u)) - 0u), _GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), (~ (1)) | 0)))))), (uint(1)) + 0u)) - 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (uint(1)) + 0u)) - 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) / 1))), _GLF_IDENTITY(1, ~ (~ (1)))))), (uint(1)) + 0u)) - 0u)), (_GLF_IDENTITY(clamp(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), (~ (1)) | 0)))))), (uint(1)) + 0u)) - 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (uint(1)) + 0u)) - 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) / 1))), _GLF_IDENTITY(1, ~ (~ (1)))))), (uint(1)) + 0u)) - 0u)), (clamp(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), clamp(~ (1), ~ (1), _GLF_IDENTITY(~ (1), (~ (1)) | 0)))))), (uint(1)) + 0u)) - 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(1, ~ (~ (1)))), (uint(1)) + 0u)) - 0u), _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), max(_GLF_IDENTITY(1, ~ (~ _GLF_IDENTITY((1), ((1)) / 1))), _GLF_IDENTITY(1, ~ (~ (1)))))), (uint(1)) + 0u)) - 0u))) / 1u)) << 0u)), 0u))) + 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), (0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))) - 0u), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))))), clamp(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), (0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))) - 0u), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), (0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))) - 0u), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), min(_GLF_IDENTITY(0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))))), (0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))) - 0u), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)))))))))), uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), max(_GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(0u)))), ~ (~ ((_GLF_IDENTITY(0u, uint(uint(0u))))))), (_GLF_IDENTITY(0u, uint(uint(0u)))))) | (0u))))))), (min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY(_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) - 0u, 0u ^ (_GLF_IDENTITY((uint(1)), ((uint(1))) / 1u) - 0u))), 0u)), (uint(uvec2(_GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) + 0u)) - 0u), 0u))) + 0u), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), _GLF_IDENTITY((uint(1)), _GLF_IDENTITY(max(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), clamp(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u))))), _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), min(max(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), clamp(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u))))), _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), _GLF_IDENTITY(max(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), clamp(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u))))), _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1))))), (max(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), clamp(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u))))), _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1)))))) | (max(_GLF_IDENTITY((uint(1)), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), clamp(uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u)), uint(_GLF_IDENTITY(uint((uint(1))), (uint((uint(1)))) + 0u))))), _GLF_IDENTITY((uint(1)), 0u ^ ((uint(1)))))))))) - 0u), 0u)), min(_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u)), 0u ^ (_GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), _GLF_IDENTITY(0u, (0u) >> 0u))), (uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), 0u))) | (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(uint(1), min(uint(_GLF_IDENTITY(1, max(1, 1))), uint(1))), (uint(1)) - 0u), 0u)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)), 1u)))) | (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_id))))))))), ((_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | 0u)) - 0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))), max(~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))), ~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))))))))), 1u)))) | (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(subgroup_id)))))))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | (0u)))), uint(_GLF_IDENTITY(uint(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)), 1u)))) | (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_id))))))))), ((_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | 0u)) - 0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))), max(~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))), ~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))))))))), 1u)))) | (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(subgroup_id)))))))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | (0u))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? uint(uint(uvec2(_GLF_IDENTITY(uint(1), (uint(1)) - 0u), _GLF_IDENTITY(0u, _GLF_IDENTITY((_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)), 1u)))) | (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(0u, min(0u, 0u)) : _GLF_FUZZED(subgroup_id))))))))), ((_GLF_IDENTITY(0u, uint(uint(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(uvec2(_GLF_IDENTITY(0u, _GLF_IDENTITY((0u), (_GLF_IDENTITY((0u), ((0u)) | 0u)) - 0u) | (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))), max(~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))), ~ (_GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0u, max(0u, 0u))), (true ? ~ (_GLF_IDENTITY(0u, max(0u, 0u))) : _GLF_FUZZED(subgroup_id)))))))))))), 1u)))) | (_GLF_IDENTITY(0u, (true ? _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), clamp(_GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)), _GLF_IDENTITY(0u, min(0u, 0u)))) : _GLF_FUZZED(subgroup_id)))))))))) << (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))) | (0u))))) : _GLF_FUZZED((true , subgroup_local_id)))))))))) - 0u))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, 0u ^ (next_virtual_gid))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))) && true), true)))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) + 0.0), injectionSwitch.x), 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), clamp(_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(29.15)), float(injectionSwitch.x), bool(true))), 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0)))), max(vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0)))), vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0), min(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), log(1.0), 1.0))))))).x, float(mat4(injectionSwitch.x, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, log(1.0), 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0)), (dot(vec4(1.0, 1.0, 0.0, 1.0), vec4(0.0, 0.0, 1.0, 0.0))) * 1.0)), 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(60.50) : 1.0)), 1.0))))))))))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, cos(0.0), 0.0, 1.0, 1.0, 1.0, 0.0))) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))))), bool(bvec4(bool(_GLF_IDENTITY(bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(! (bool((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false, true, true)))))), false, false, false)))) && true)) && true)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(false, false || (false)), true, true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(0u), (uint(0u)) - (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) / uint(_GLF_ONE(1.0, injectionSwitch.y)))) * 1u) >> _GLF_IDENTITY(uint(5u), uint(5u)))), uint(0u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(0u, (0u) / 1u)), uint(_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))) * _GLF_IDENTITY((_GLF_IDENTITY(read, (read) * (0u | 1u))), clamp((read), (read), (read)))), 4, 64, _GLF_IDENTITY(_GLF_IDENTITY(4, (0 | 0) | (_GLF_IDENTITY(4, _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec2(_GLF_IDENTITY(4, clamp(4, 4, 4)), 0))), (4) >> 0)), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), min(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4), int(ivec4((4), 1, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0))) >> 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), (min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0))) << 0)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), (true ? min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)) : _GLF_FUZZED(73907)))))))), ~ (~ (_GLF_IDENTITY(4, (0 | 0) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), min(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), (min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0))) << 0)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), 1 * (_GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(4, (4) >> 0)), (true ? min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)) : _GLF_FUZZED(73907))))))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), min(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), (min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0))) << 0)))) | (_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), 1 * (_GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(4, (4) >> 0)), (true ? min(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, (4) << 0)) | 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4) >> 0, max((4) >> 0, (4) >> 0)))) : _GLF_FUZZED(73907))))))), int(ivec2((_GLF_IDENTITY(_GLF_IDENTITY(4, (4) - 0), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) >> 0), max(_GLF_IDENTITY(4, (4) >> 0), _GLF_IDENTITY(4, (4) >> 0)))), (_GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, _GLF_IDENTITY((4), _GLF_IDENTITY(int(ivec4((4), 0, 0, 0)), int(ivec2(int(ivec4((4), 0, 0, 0)), 1)))) >> 0)), min(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), _GLF_IDENTITY(min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)), (min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY((4), (_GLF_IDENTITY((4), min((4), (4)))) | (_GLF_IDENTITY((4), ~ (~ ((4)))))) | 0)) >> 0))) << 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), 1 * (_GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(_GLF_IDENTITY(4, (4) ^ int(_GLF_ZERO(0.0, injectionSwitch.x))), (4) >> 0)), (0 | 0) ^ (min(_GLF_IDENTITY(_GLF_IDENTITY(4, (4) | 0), 1 * (_GLF_IDENTITY(4, (4) | 0))), _GLF_IDENTITY(4, (4) >> 0)))), (true ? min(_GLF_IDENTITY(4, (4) | 0), _GLF_IDENTITY(4, (4) >> 0)) : _GLF_FUZZED(73907))))))), 0)))) | 0))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) || false) || (_GLF_DEAD(false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
