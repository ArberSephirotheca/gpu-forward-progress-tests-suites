#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), injectionSwitch)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))), _GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat2(injectionSwitch, 0.0, 1.0))).y), true && ((injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) && true)) && true)) && (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1.6)), bool(false)))) * _GLF_IDENTITY(dot(vec2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(float(3108u)) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))) || false), false)))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, true, false)))) || false), (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || false)))) && true))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false, false || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(vec3(injectionSwitch.y, 1.0, sqrt(0.0)), (false ? _GLF_FUZZED(vec3(33.89, -8468.8970, 63.17)) : vec3(injectionSwitch.y, 1.0, sqrt(0.0)))))), true && (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false)), (bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, false, false))) && true))), true && (_GLF_DEAD(false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x)) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(0.0, 0.0) + (injectionSwitch), _GLF_IDENTITY(vec2(mat4x2(vec2(0.0, 0.0) + (injectionSwitch), 0.0, 0.0, 0.0, 1.0, exp(log(1.0)), 1.0)), vec2(mat4x3(vec2(mat4x2(vec2(0.0, 0.0) + (injectionSwitch), 0.0, 0.0, 0.0, 1.0, exp(log(1.0)), 1.0)), 1.0, 1.0, abs(0.0), 1.0, abs(1.0), 1.0, 0.0, 1.0, 0.0, 1.0))))).x)) > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, ~ (~ (_GLF_IDENTITY(gl_NumWorkGroups.x, (gl_NumWorkGroups.x) >> 0u))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false)), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, false)), (bool(bvec3(false, true, false))) || false))))) || (false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, (true) && true))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - log(vec2(1.0, 1.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)), mix(vec2(_GLF_FUZZED(-97.79), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1], ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[1]) / 1.0)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)))[0], _GLF_FUZZED(-3562.7393)), bvec2(_GLF_IDENTITY(true, true && (true)), false))).y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(1.0, abs(1.0) * (1.0)), 1.0) * (injectionSwitch)).y))))))))), true && (bool(bool(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))), ! (! (bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(44.89)), bool(false))), injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))), bool(_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false))))))), true, true))))), true && (_GLF_IDENTITY(bool(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true))))), false || (bool(false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, true)))))))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), true && (! ((injectionSwitch.x > injectionSwitch.y))))) && true))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))) - 0.0)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-667.323)), bool(false))))) > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)))))), ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))) || false)))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), false), bvec3(bvec4(bvec3(true, false, false), false)))), (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), false))))) || false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((5.9 / -463.432) * -8046.2471))), bool(false))), max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((5.9 / -463.432) * -8046.2471))), bool(false))), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((5.9 / -463.432) * -8046.2471))), bool(false))))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(8.4))), _GLF_IDENTITY(injectionSwitch.y, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-165.304)), bool(false))))))))))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), 0.0, 0.0, 0.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, length(0.0)))), 1.0, 0.0, 0.0, sin(0.0)), transpose(transpose(mat4(injectionSwitch.y, sqrt(0.0), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(0.6, _GLF_IDENTITY(-4.5, min(-4.5, -4.5)), 7.9, 9.8, 58.46, -5866.3068, -56.93, -3.7, _GLF_IDENTITY(9527.6378, (9527.6378) / 1.0), _GLF_IDENTITY(_GLF_IDENTITY(-4.5, (false ? _GLF_FUZZED(-8.2) : -4.5)), max(_GLF_IDENTITY(-4.5, (false ? _GLF_FUZZED(-8.2) : -4.5)), _GLF_IDENTITY(-4.5, (false ? _GLF_FUZZED(-8.2) : -4.5)))), -4.9, -0.2, -4.7, -4216.5608, -5176.4840, _GLF_IDENTITY(-2.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4173.2152) : -2.1)))) : _GLF_IDENTITY(mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(_GLF_IDENTITY(tan(0.0), _GLF_IDENTITY((_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(_GLF_IDENTITY(-9624.9885, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), true)))) ? _GLF_FUZZED(2420.5348) : -9624.9885)))))) / round(length(normalize(1.0))), max((_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(_GLF_IDENTITY(-9624.9885, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), true)))) ? _GLF_FUZZED(2420.5348) : -9624.9885)))))) / round(length(normalize(1.0))), (_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(_GLF_IDENTITY(-9624.9885, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), true)))) ? _GLF_FUZZED(2420.5348) : -9624.9885)))))) / round(length(normalize(1.0))))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (true ? tan(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, cos(0.0), 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-9624.9885, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), true)))) ? _GLF_FUZZED(2420.5348) : -9624.9885)))))) / round(length(normalize(1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0)), (mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (true ? tan(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(float(0.0))), 0.0)), 1.0, 0.0, 1.0, sqrt(0.0), 1.0, cos(0.0), 1.0)))) : _GLF_FUZZED(_GLF_IDENTITY(-9624.9885, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), true)))) ? _GLF_FUZZED(2420.5348) : -9624.9885)))))) / round(length(normalize(1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(_GLF_IDENTITY(-9624.9885, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))), true)))) ? _GLF_FUZZED(2420.5348) : -9624.9885)))))) / round(length(normalize(1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0, 0.0, 0.0, sin(0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))) - mat4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(44.43), (injectionSwitch)[1]), vec2(_GLF_IDENTITY((injectionSwitch)[0], max((injectionSwitch)[0], (injectionSwitch)[0])), _GLF_FUZZED(-887.567)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))).x)))))))), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))) * (_GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, min(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(((5.9 / -463.432) * -8046.2471))), bool(false))), injectionSwitch.y)))), float(_GLF_IDENTITY(_GLF_IDENTITY(mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, tan(0.0), 0.0, 0.0, 0.0, log(round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), 1.0, length(0.0)))), 1.0, 0.0, 0.0, sin(0.0)), transpose(_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))), (_GLF_IDENTITY(transpose(mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(tan(0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))), transpose(transpose(transpose(mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(_GLF_IDENTITY(tan(0.0), (tan(0.0)) * 1.0)), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))))))) * mat4(1.0)))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x3((injectionSwitch) * mat2(1.0), 0.0, 1.0, 1.0, 1.0)))).x > injectionSwitch.y)) ? _GLF_FUZZED(mat4(0.6, _GLF_IDENTITY(-4.5, min(-4.5, -4.5)), 7.9, 9.8, 58.46, -5866.3068, -56.93, -3.7, _GLF_IDENTITY(9527.6378, (9527.6378) / 1.0), _GLF_IDENTITY(-4.5, (false ? _GLF_IDENTITY(_GLF_FUZZED(-8.2), max(_GLF_IDENTITY(_GLF_FUZZED(-8.2), (_GLF_FUZZED(-8.2)) + 0.0), _GLF_FUZZED(-8.2))) : -4.5)), -4.9, -0.2, -4.7, -4216.5608, -5176.4840, _GLF_IDENTITY(-2.1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-4173.2152) : -2.1)))) : mat4(injectionSwitch.y, sqrt(0.0), 1.0, 0.0, exp(_GLF_IDENTITY(tan(0.0), (_GLF_IDENTITY(tan(0.0), (true ? tan(0.0) : _GLF_FUZZED(_GLF_IDENTITY(-9624.9885, (false ? _GLF_FUZZED(2420.5348) : -9624.9885)))))) / round(length(normalize(1.0))))), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, sin(0.0))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(0u ^ (subgroup_size), _GLF_IDENTITY((0u ^ (subgroup_size)), min((0u ^ (subgroup_size)), (0u ^ (subgroup_size)))) / 1u));
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id))))) << 0u, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id))))) << 0u, 0u | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id))))) << 0u, (_GLF_IDENTITY((subgroup_local_id), min((_GLF_IDENTITY(subgroup_local_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), max(~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u)), ~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) ^ 0u))))))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) << 0u)), 1u * ((subgroup_local_id))))) << 0u) | (_GLF_IDENTITY((subgroup_local_id), min((subgroup_local_id), _GLF_IDENTITY((subgroup_local_id), 1u * ((subgroup_local_id))))) << 0u))))) / 1u));
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))), (false ? _GLF_FUZZED(atomicMin(subgroup_base, workgroup_id)) : _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))), clamp(_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup))))))), uint(_GLF_IDENTITY(uint((_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))))), min(uint((_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))))), uint((_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (_GLF_IDENTITY(workgroup_base, (true ? workgroup_base : _GLF_FUZZED(num_workgroup)))))))))))), (~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))) / 1u), ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base)))), ~ (_GLF_IDENTITY(~ (workgroup_base), min(~ (workgroup_base), ~ (workgroup_base))))))))) + subgroup_base + _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id), ((subgroup_local_id)) << 0u) / _GLF_IDENTITY(1u, (1u) | 0u)), ~ (~ (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) | 0u), uint(uvec2(_GLF_IDENTITY(1u, (1u) | 0u), 1u)))) * 1u))))), subgroup_local_id), (max(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) / 1u), subgroup_local_id)) / 1u)) + 1) % subgroup_size), (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) | 0), 0u | (subgroup_local_id + 1))) | (_GLF_IDENTITY(subgroup_local_id + 1, min(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)) * 1u) + 1, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | 0u) : subgroup_local_id + 1, (true ? false ? _GLF_IDENTITY(_GLF_FUZZED(virtual_gid), (_GLF_FUZZED(virtual_gid)) | 0u) : subgroup_local_id + 1 : _GLF_FUZZED(subgroup_local_id))))), subgroup_local_id + 1))))) % subgroup_size), max((_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ ((subgroup_local_id + _GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(1, 0), clamp(ivec2(1, 0), ivec2(1, 0), ivec2(1, 0))))))), max(~ ((subgroup_local_id + 1)), ~ ((_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) - 0u))))))) % subgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)), 0u | (_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), subgroup_local_id)))) + 1), ((_GLF_IDENTITY(subgroup_local_id, max(subgroup_local_id, subgroup_local_id)) + 1)) | ((_GLF_IDENTITY(subgroup_local_id, max(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), subgroup_local_id)) + 1))) % subgroup_size)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if((subgroup_local_id % 2) == _GLF_IDENTITY(0, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(0, max(0, 0))), (~ (0)) / _GLF_IDENTITY(1, min(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, max(1, 1)))), _GLF_IDENTITY(1, (_GLF_IDENTITY(0, (0) / 1) << _GLF_IDENTITY(int(7), int(7))) | (1))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec4(injectionSwitch.x, cos(length(0.0)), tan(0.0), 1.0))) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), ~ (~ (_GLF_IDENTITY(1, (1) << 0))))) / 1), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << 0), (false ? _GLF_FUZZED(findMSB(-61197)) : _GLF_IDENTITY(1, (1) << 0)))) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec2(_GLF_IDENTITY((1), int(int((1)))), 0)), clamp(int(ivec2(_GLF_IDENTITY((1), int(int((1)))), 0)), int(ivec2(_GLF_IDENTITY((1), int(int((1)))), 0)), int(ivec2(_GLF_IDENTITY((1), int(int((1)))), 0))))) << _GLF_IDENTITY(0, max(0, 0)))), ((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0))))) ^ 0) / 1), 0 ^ _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))) / 1)), ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))) / 1))) ^ 0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))), ((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0))))) ^ 0) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, (1) * 1), 1))) ^ 0)), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))), ((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0))))) ^ 0) / 1), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))) / 1))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))), ((_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0))))) ^ 0) / 1), 0 ^ (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, max(0, 0)))) / 1)))))) / 1)) / _GLF_IDENTITY(1, 0 ^ (1))), _GLF_IDENTITY(_GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((1) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0)))))) - _GLF_IDENTITY(0, (0) - ((-53352 % 87650) & 0))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((1) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0)))))) - _GLF_IDENTITY(0, (0) - ((-53352 % 87650) & 0))), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((1) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0)))))) - _GLF_IDENTITY(0, (0) - ((-53352 % 87650) & 0))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, int(int(_GLF_IDENTITY(1, clamp(1, 1, 1)))))) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0))))), ((_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, min(_GLF_IDENTITY((1) << 0, ((1) << 0) >> (0 << _GLF_IDENTITY(int(8), int(8)))), _GLF_IDENTITY((1) << 0, ((1) << 0) | 0)))))) - _GLF_IDENTITY(0, (0) - ((-53352 % 87650) & 0))))) / 1)))), 0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1)) * 1)) * 1), clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << 0)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-35823) : (1))), _GLF_IDENTITY((1), (_GLF_IDENTITY((1), min(_GLF_IDENTITY((1), ~ (~ ((1)))), (1)))) * 1))) << 0, (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-35823) : (1))), _GLF_IDENTITY((1), _GLF_IDENTITY(((1)), ~ (~ _GLF_IDENTITY((((1))), max((((1))), (((1))))))) * 1))) << 0) | (_GLF_IDENTITY((1), clamp((1), _GLF_IDENTITY((1), (false ? _GLF_FUZZED(-35823) : (1))), _GLF_IDENTITY((1), ((1)) * 1))) << 0)))) / 1), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, int(int(1)))) << 0), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) - 0)), (_GLF_IDENTITY(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) - 0)), (false ? _GLF_FUZZED(96504) : _GLF_IDENTITY(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) - 0)), max(_GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) - 0)), _GLF_IDENTITY(1, (1) << _GLF_IDENTITY(0, (0) - 0))))))) | 0)) / 1)) / 1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), ~ (~ (1))), (_GLF_IDENTITY(_GLF_IDENTITY(1, ~ _GLF_IDENTITY((~ (1)), int(int((~ (1)))))), _GLF_IDENTITY(int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (~ (1))), (_GLF_IDENTITY(1, ~ (~ (1)))) | (_GLF_IDENTITY(1, ~ (~ (1))))), 1, 0)), (int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, ~ (_GLF_IDENTITY(~ (1), (~ (1)) - 0))), (_GLF_IDENTITY(1, _GLF_IDENTITY(~ (~ (1)), 0 ^ (~ (~ (1)))))) | (_GLF_IDENTITY(1, ~ (~ (1))))), _GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(int(1)))))), 0))) | 0))) >> 0), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (1), (true ? ~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_GLF_IDENTITY(-95247, (_GLF_IDENTITY(-95247, (-95247) >> 0)) - ((0 >> _GLF_IDENTITY(_GLF_IDENTITY(int(5), (false ? _GLF_FUZZED(58829) : int(5))), int(5))) << _GLF_IDENTITY(int(5), int(5))))) : 1)), 1)), (false ? _GLF_FUZZED(45154) : 1)), 1, 1))) : _GLF_FUZZED(-49363))), (_GLF_IDENTITY(~ (1), (true ? ~ (_GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(45154) : 1, (false ? _GLF_FUZZED(45154) : 1) | _GLF_IDENTITY((false ? _GLF_FUZZED(45154) : 1), _GLF_IDENTITY(max((false ? _GLF_FUZZED(45154) : 1), (false ? _GLF_FUZZED(45154) : 1)), (max((false ? _GLF_FUZZED(45154) : 1), (_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) ? _GLF_FUZZED(45154) : 1))) + 0))))), 1, 1))) : _GLF_FUZZED(-49363)))) ^ (0 << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) ^ 0)))))), _GLF_IDENTITY((1), ~ (~ (_GLF_IDENTITY((1), ((1)) + (0 ^ 0))))) >> 0), (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), _GLF_IDENTITY(((1)), _GLF_IDENTITY((((1))) | (((1))), ((((1))) | (((1)))) ^ 0)) ^ 0), int(ivec3(_GLF_IDENTITY((1), ((1)) ^ 0), 1, 0))) << 0)) / _GLF_IDENTITY(1, int(ivec4(1, 1, 0, 0))))))))), _GLF_IDENTITY(4, _GLF_IDENTITY(0, _GLF_IDENTITY((_GLF_IDENTITY(0, (0) ^ 0)), 0 | ((0))) | (0)) | _GLF_IDENTITY((4), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(31838)))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(31838))), max(_GLF_IDENTITY(_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(31838))), (_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(31838)))) + 0), _GLF_IDENTITY(_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(31838))), (_GLF_IDENTITY(~ ((4)), (true ? ~ ((4)) : _GLF_FUZZED(31838)))) >> 0))))) - 0))), 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), true, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), max(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), clamp(_GLF_IDENTITY(64, min(64, 64)), _GLF_IDENTITY(_GLF_IDENTITY(64, min(64, 64)), int(_GLF_IDENTITY(ivec3(_GLF_IDENTITY(64, min(64, 64)), 1, 0), (ivec3(_GLF_IDENTITY(64, min(64, 64)), 1, 0)) | (ivec3(_GLF_IDENTITY(64, min(64, 64)), 1, 0))))), _GLF_IDENTITY(64, min(64, 64)))))), 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)))), injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, false || (true)) && (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)) : _GLF_FUZZED(exp(vec2(2.2, -87.87)))))) * vec2(1.0, 1.0)).y, mix(float(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y), float(_GLF_FUZZED(4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false))), bool(bvec4(_GLF_IDENTITY((false), bool(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))) && true)))), false, false))))))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(false, ! (! (false))))), true)), ! (! (bool(bvec2(! ((_GLF_IDENTITY(false, ! (! (false))))), true))))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), true && (! (false))))))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(false, ! (! (false))))), true)), ! (! (bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && true))))), true))))))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), true))), true), true, true))))))))), false || ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), true))), true), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), bool(bvec2(_GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true)))), true))), true), true, true)))))))))))), true))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true))))))))), true)))) && true))))), false || (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))), false, false)))))), (! (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))), _GLF_IDENTITY(! (! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true && (! (! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))))))))))), bool(bvec3(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (false) || false), false))))))), false, false))))))) && true)))), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), false || (! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))), _GLF_IDENTITY(bool(bvec2(! _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), (((_GLF_IDENTITY(false, ! (! (false)))))) && true), true)), ! (! (bool(bvec2(! ((_GLF_IDENTITY(false, ! (! (false))))), true))))))), ! (! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(false || (! (_GLF_IDENTITY(! (false), true && (! (false))))), (false || (! (_GLF_IDENTITY(! (false), true && (! (false)))))) || false))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(false, ! (! (false))))), true)), ! (! (bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), false || (((_GLF_IDENTITY(false, ! (! (false))))))))))) && true) && true))))), true))))))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true))))))))), true))), (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (false), true)), false || (bool(bvec2(! (false), true))))))))), true)))) && true))))))))), bool(bvec3((false), true, false))), bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), _GLF_IDENTITY(true, true && (true)), false), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((false), _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, ! (! (true))))), false))), false)))))), true, false, true)))) && true), (_GLF_IDENTITY(true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, false))), bool(bvec4(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), _GLF_IDENTITY(! (! ((false))), bool(bvec2(! (! (_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), true, false)), ! _GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false)))), true && (_GLF_IDENTITY((! (bool(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false)))), ((! (bool(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false))))) || false))))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), false || ((false))), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))), (! ((_GLF_IDENTITY(false, ! (! (false)))))) && true), true))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, (false) && true), true))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), false)))))))), true, true)))))))))), true)), (bool(bvec2(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, (false) && true), true))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), false)))))))), true, true)))))))))), true))) || false)))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, (false) && true), true))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), false)))))))), true, true)))))))))), true)), (bool(bvec2(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, (false) && true), true))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), false)))))))), true, true)))))))))), true))) || false)))), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) || false)))))))), _GLF_IDENTITY(bool(bvec2(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, (false) && true), true))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), false)))))))), true, true)))))))))), true)), (bool(bvec2(! ((_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! _GLF_IDENTITY((! ((! (false)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), (! (! (false))) || false))))), true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, _GLF_IDENTITY(false, (false) && true), true))), true, false), false))))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((_GLF_IDENTITY(! (false), (! (false)) || false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))))))), bool(bvec3(! (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), true && ((! (false))))))))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY((! ((! (false)))), bool(bvec4((! ((! (false)))), false, false, true))), true, false), false)))))))), true, true)))))))))), true))) || false)))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), _GLF_IDENTITY(bool(bvec3((false), true, false)), (bool(bvec3((false), true, false))) && true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, false))), false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, false))), false)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, false))), false)))), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3((false), true, false), bvec3(bvec3(bvec3((false), true, false)))), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, false))), false)))), true)), true)))))), true, false, true))))))) && true), ! (! (true && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((false), bool(bvec3((false), true, false))), bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), _GLF_IDENTITY(true, false || (true)), false), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false), true)), true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! (! ((false))))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), ! _GLF_IDENTITY((! ((false))), ! (_GLF_IDENTITY(! ((! ((false)))), (! ((! ((false))))) || false))))))), true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true))))))))), true, false, true))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), bool(bvec2(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, _GLF_IDENTITY(false, ! (! (false))), false))))))))), true)))), ! (! ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))))), bool(bvec2(! ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), (! (false)) || false), false, _GLF_IDENTITY(false, ! (! (false))), false))))))))), true)))))))), _GLF_IDENTITY(true, (true) && true) && (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(((_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))), ! (! (_GLF_IDENTITY(((_GLF_IDENTITY(false, ! (! (false))))), bool(bvec4(((_GLF_IDENTITY(false, ! (! (false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ((_GLF_IDENTITY(false, ! (! (false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bool(! (true)))))))), (bool(bvec2(! ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))), true))) && true)))))))), bool(bvec3((false), true, false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, false))), false)))))), true, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, false), _GLF_IDENTITY(bvec3(bvec3(bvec3((false), true, false))), bvec3(bvec4(bvec3(bvec3(bvec3((false), true, false))), false)))))), true, false, true))))))) && true))))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, (1u ^ 1u) ^ (virtual_gid))], read, 4, 64, 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
