#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_23 {
 ivec3 _f0;
 uint workgroup_base;
} ;

struct _GLF_struct_20 {
 float _f0;
 bvec3 _f1;
 mat3 _f2;
} ;

struct _GLF_struct_19 {
 ivec4 _f0;
 vec4 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_19 _f0;
 _GLF_struct_20 _f1;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_16 {
 mat3 _f0;
 vec2 _f1;
 mat3x2 _f2;
 mat3x4 _f3;
 uvec3 _f4;
 mat2x3 _f5;
 uint _f6;
} ;

struct _GLF_struct_18 {
 ivec2 _f0;
 _GLF_struct_16 _f1;
 mat4x2 _f2;
 vec4 _f3;
 bvec4 _f4;
 uvec3 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_14 {
 uvec2 _f0;
 ivec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_13 {
 bvec2 _f0;
 vec2 _f1;
 float _f2;
 uvec2 _f3;
 int _f4;
 mat2x3 _f5;
 mat2 _f6;
} ;

struct _GLF_struct_15 {
 _GLF_struct_13 _f0;
 bvec3 _f1;
 _GLF_struct_14 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_22 {
 _GLF_struct_15 _f0;
 uint subgroup_base;
 _GLF_struct_18 _f1;
 _GLF_struct_21 _f2;
} ;

struct _GLF_struct_10 {
 vec4 _f0;
 bvec3 _f1;
 uvec4 _f2;
 bool _f3;
 mat3 _f4;
} ;

struct _GLF_struct_9 {
 uvec2 _f0;
 mat3x4 _f1;
 mat3x4 _f2;
 vec2 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_8 {
 mat2x3 _f0;
 bvec3 _f1;
 ivec4 _f2;
 mat2x4 _f3;
 mat2x3 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_7 {
 vec3 _f0;
 uvec3 _f1;
 bool _f2;
 mat3 _f3;
 float _f4;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 bvec2 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_8 _f3;
 _GLF_struct_9 _f4;
 _GLF_struct_10 _f5;
} ;

struct _GLF_struct_5 {
 mat2x3 _f0;
 uvec3 _f1;
 mat4x3 _f2;
 vec2 _f3;
} ;

struct _GLF_struct_4 {
 mat3 _f0;
 mat4x3 _f1;
 int _f2;
} ;

struct _GLF_struct_3 {
 uvec2 _f0;
 mat3 _f1;
 uvec4 _f2;
} ;

struct _GLF_struct_2 {
 bvec4 _f0;
 mat2x4 _f1;
 bvec2 _f2;
 int _f3;
 mat3x4 _f4;
 int _f5;
 vec4 _f6;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat2 _f1;
 uint _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_6 {
 _GLF_struct_1 _f0;
 _GLF_struct_2 _f1;
 mat3x2 _f2;
 _GLF_struct_3 _f3;
 mat2x3 _f4;
 _GLF_struct_4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_0 {
 bool _f0;
 mat2 _f1;
} ;

struct _GLF_struct_12 {
 _GLF_struct_0 _f0;
 _GLF_struct_6 _f1;
 uint subgroup_id;
 vec2 _f2;
 vec3 _f3;
 _GLF_struct_11 _f4;
 vec2 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 _GLF_struct_12 _GLF_struct_replacement_12 = _GLF_struct_12(_GLF_struct_0(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true) && _GLF_IDENTITY(true, bool(bool(true))), bool(bvec2((true) && true, false))))))), true))), mat2(1.0)), _GLF_struct_6(_GLF_struct_1(bvec3(true), mat2(1.0), 1u, mat4x2(1.0)), _GLF_struct_2(bvec4(true), mat2x4(1.0), bvec2(true), 1, mat3x4(1.0), 1, _GLF_IDENTITY(vec4(1.0), (_GLF_IDENTITY(vec4(1.0), min(vec4(1.0), _GLF_IDENTITY(vec4(1.0), (vec4(1.0)) / vec4(1.0, 1.0, 1.0, 1.0))))) * mat4(1.0))), mat3x2(1.0), _GLF_struct_3(uvec2(1u), mat3(1.0), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(1u, uint(uvec2(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(1u, ~ (~ (1u))))))), ~ (~ (uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), _GLF_IDENTITY(max(_GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(115967u))), min(1u, 1u)), (false ? _GLF_FUZZED(76196u) : max(_GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(115967u))), max(_GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(115967u))), _GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(115967u))))), min(1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY(min(1u, 1u), max(_GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(115967u))), min(1u, 1u)))) / 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((_GLF_IDENTITY(_GLF_IDENTITY(min(1u, 1u), clamp(min(1u, 1u), min(1u, 1u), min(1u, 1u))), max(_GLF_IDENTITY(min(1u, 1u), (true ? min(1u, 1u) : _GLF_FUZZED(115967u))), min(1u, 1u)))) / 1u)))), _GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), min(_GLF_IDENTITY((~ (1u)), (_GLF_IDENTITY((~ (1u)), ((~ (1u))) | ((~ (1u))))) - 0u), (~ _GLF_IDENTITY((1u), ~ (_GLF_IDENTITY(~ ((1u)), min(~ ((1u)), ~ ((1u)))))))))))), 0u | (uint(uvec2(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), max(_GLF_IDENTITY(min(1u, _GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, max(_GLF_IDENTITY(1u, (1u) ^ 0u), _GLF_IDENTITY(1u, (1u) - 0u)))))))), (true ? min(1u, 1u) : _GLF_FUZZED(115967u))), min(1u, 1u)))), _GLF_IDENTITY(1u, ~ (~ (1u))))))))))))), mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(5950.1263, -946.681).t)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-6162.7381)))), bool(true)), (mix(float(_GLF_FUZZED(vec2(5950.1263, -946.681).t)), float(_GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, min(1.0, 1.0)) : _GLF_FUZZED(-6162.7381)))), bool(true))) - 0.0))), _GLF_struct_4(mat3(1.0), mat4x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1)))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1))))))))))) + 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), (true ? _GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))) : _GLF_FUZZED(bitCount(97986))))) + 0), min(1, 1)))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(true, true && (true))) || false) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), (_GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), (true ? _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)) : _GLF_FUZZED(83614)))) ^ 0), 1, 0, 1)), (false ? _GLF_FUZZED(46746) : _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), (_GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), (true ? _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)) : _GLF_FUZZED(83614)))) ^ 0), 1, 0, 1)), ~ (~ (int(ivec4(_GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), (_GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), (true ? _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)) : _GLF_FUZZED(83614)))) ^ 0), 1, 0, 1)))))))))), min(_GLF_IDENTITY(1, max(1, 1)), 1))))))))))) + 0)))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1)))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, true && (true))), (! (_GLF_IDENTITY(true, true && (true)))) && true))) && (true)), (_GLF_IDENTITY(true, true && (true))) || false) ? 1 : _GLF_IDENTITY(_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)), (_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982))) | (_GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))))), min(1, 1))))))))))) + 0), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1)))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ _GLF_IDENTITY((~ (_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), int(ivec4(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), 0, 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true)))), (_GLF_IDENTITY(true, true && (true))) || false) ? 1 : _GLF_FUZZED(atomicLoad(_GLF_IDENTITY(-99370, (_GLF_IDENTITY(-99370, (-99370) + 0)) * 1), -3534, -61201, 53982)))), min(1, 1))))), min((~ (_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), int(ivec4(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), 0, 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true)))), (_GLF_IDENTITY(true, true && (true))) || false) ? 1 : _GLF_FUZZED(atomicLoad(_GLF_IDENTITY(-99370, (_GLF_IDENTITY(-99370, (-99370) + 0)) * 1), -3534, -61201, 53982)))), min(1, 1))))), _GLF_IDENTITY((~ (_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), int(ivec4(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), 0, 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true)))), (_GLF_IDENTITY(true, true && (true))) || false) ? 1 : _GLF_FUZZED(atomicLoad(_GLF_IDENTITY(-99370, (_GLF_IDENTITY(-99370, (-99370) + 0)) * 1), -3534, -61201, 53982)))), min(1, 1))))), ((~ (_GLF_IDENTITY((1), _GLF_IDENTITY(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), int(ivec4(int(_GLF_IDENTITY(ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1), (false ? _GLF_FUZZED(ivec4(916, 2507, 98472, -49060)) : ivec4((1), (0 >> _GLF_IDENTITY(int(3), int(3))), 1, 1)))), 0, 0, 0)))) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), true && (true && (true)))), (_GLF_IDENTITY(true, true && (true))) || false) ? 1 : _GLF_FUZZED(atomicLoad(_GLF_IDENTITY(-99370, (_GLF_IDENTITY(-99370, (-99370) + 0)) * 1), -3534, -61201, 53982)))), min(1, 1)))))) | 0))))))))) + 0)))), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (_GLF_IDENTITY(~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1)))), (true ? _GLF_IDENTITY(~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (true)) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1)))), ~ (~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, (true) || false))) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1))))))) : _GLF_FUZZED(-54767))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ (_GLF_IDENTITY((1) | (_GLF_IDENTITY(1, min(1, 1))), ~ (~ ((1) | (_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true)))))))) || false) ? 1 : _GLF_FUZZED(atomicLoad(-99370, -3534, -61201, 53982)))), min(1, 1))))))))))) + 0)))), _GLF_struct_5(mat2x3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), uvec3(1u), mat4x3(1.0), vec2(1.0))), gl_SubgroupID, vec2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, sin(0.0), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, sin(0.0), 1.0)))), min(vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, sin(0.0), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, sin(0.0), 1.0)))), vec4(1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, sin(0.0), 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, sin(0.0), 1.0))))))))), vec3(1.0), _GLF_struct_11(mat3x2(1.0), bvec2(true), _GLF_struct_7(vec3(1.0), uvec3(1u), _GLF_IDENTITY(true, _GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) || (true)), mat3(1.0), 1.0), _GLF_struct_8(mat2x3(_GLF_IDENTITY(1.0, _GLF_IDENTITY((1.0), (_GLF_IDENTITY((1.0), float(mat2x4((1.0), 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)))) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))) / _GLF_ONE(1.0, injectionSwitch.y))), bvec3(true), _GLF_IDENTITY(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) << int(_GLF_ZERO(0.0, injectionSwitch.x)))) << 0)), 0 ^ ((1))) | (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((_GLF_IDENTITY(1, min(1, 1)))), (0 ^ ((1))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1)), (_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1))))) >> 0))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (1)))), 0 ^ ((1))) | _GLF_IDENTITY((1), ((1)) << 0))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) - 0)), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), 0 ^ ((1))) | (1), (_GLF_IDENTITY((1), 0 ^ _GLF_IDENTITY(((1)), 0 ^ (((1))))) | (1)) + (0 >> _GLF_IDENTITY(int(3), _GLF_IDENTITY(int(3), (int(3)) | (int(3))))))))))))))), max(ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | _GLF_IDENTITY((1), ((1)) << 0))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ (_GLF_IDENTITY((1), ((1)) << 0))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1)))))))))), ivec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)), clamp(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)), _GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)), max(_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)))), _GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, (1) << 0)), 0 ^ ((1))) | (1)))) : _GLF_FUZZED(64726))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (_GLF_IDENTITY(0 ^ ((1)), int(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) | (0 ^ ((1)))), 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (ivec4(_GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) | (0 ^ ((1)))), 0, 0, ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))) | (ivec4(0, 0, 0, 0) | ivec4(0, 0, 0, 0)))))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), max(0 ^ ((1)), 0 ^ ((1))))) | (1)))))), ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | _GLF_IDENTITY((1), ((1)) << 0))))))) | ((_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) << 0)) | (1))), 0 ^ (~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (_GLF_IDENTITY(1, _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY(1, (1) / 1), (0 | 0), 0, 1)), max(int(ivec4(_GLF_IDENTITY(1, (1) / 1), (0 | 0), 0, 1)), int(ivec4(_GLF_IDENTITY(1, (1) / 1), (0 | 0), 0, 1))))))))))))))))), ivec4(0, _GLF_IDENTITY(0, ~ (~ (0))), _GLF_IDENTITY(0, _GLF_IDENTITY((0), _GLF_IDENTITY(int(ivec4((0), 0, 0, 0)), (int(ivec4((0), 0, 0, 0))) | (int(ivec4((0), 0, 0, 0))))) / 1), 0) | (ivec4(_GLF_IDENTITY(_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | _GLF_IDENTITY((1), ((1)) | (_GLF_IDENTITY((1), 0 | ((1)))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(1, _GLF_IDENTITY((1), 0 ^ ((1))) | (1))), 0 ^ (~ _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) * (1 ^ 0))) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))))))), min((_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) * (1 ^ 0))) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1))))))))), (_GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(0 ^ ((1)), (0 ^ ((1))) * (1 ^ 0))) | (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))))))))))))))), mat2x4(1.0), mat2x3(1.0), bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true))))))), _GLF_struct_9(uvec2(_GLF_IDENTITY(1u, (_GLF_TRUE(_GLF_IDENTITY(true, (true) || false), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(27.00)), bool(false))), injectionSwitch.x)) < injectionSwitch.y)) ? 1u : _GLF_FUZZED(_GLF_IDENTITY(153009u, (153009u) * 1u))))), mat3x4(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0))), mat3x4(1.0), _GLF_IDENTITY(vec2(1.0), mat2(1.0) * (vec2(1.0))), mat2x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-77.69)), bool(false))))), _GLF_struct_10(vec4(1.0), bvec3(true), uvec4(1u), true, mat3(1.0))), vec2(1.0));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-71.27)), float(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))), bool(true)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, exp(0.0), 0.0), transpose(transpose(_GLF_IDENTITY(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, exp(0.0), 0.0), mat2x4(mat4(mat2x4(injectionSwitch.x, 1.0, _GLF_IDENTITY(dot(vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0), vec3(0.0, 1.0, 0.0))), 1.0, 0.0, 1.0, exp(0.0), 0.0))))))))) > injectionSwitch.y))))
        return;
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), (false ? _GLF_FUZZED(_GLF_IDENTITY(-4.6, (-4.6) + 0.0)) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))), injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true)))))), true && (true && (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_DEAD(false))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) && true), true && (_GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))), false || (_GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))), bool(bvec3((_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, true, false), bvec3(bvec4(bvec3(false, true, false), false))))))), true, true)))))), (! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))))))) && _GLF_IDENTITY(true, (true) || false))))))) || false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), true && (! (! (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(false, (false) || false)))), bool(bool(true && (! (! (_GLF_IDENTITY(false, (false) || false))))))), ! (_GLF_IDENTITY(! (true && (! (! (_GLF_IDENTITY(false, (false) || false))))), false || (! (true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (false) || false)))))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), true && (! (! (_GLF_IDENTITY(false, (false) || false))))))), true)))) && true)), true && (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), true && (! (! (_GLF_IDENTITY(false, (false) || false))))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY(_GLF_IDENTITY(true && (! (! (_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))))), bool(bool(true && (! (! (_GLF_IDENTITY(false, (false) || false))))))), ! (_GLF_IDENTITY(! (true && (! (! (_GLF_IDENTITY(false, (false) || false))))), false || (! (true && (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, true, false))), (false) || false)))))))))))), bool(bvec2(bool(bool(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, (false) || false))), true && (! (! (_GLF_IDENTITY(false, (false) || false))))))), true)))) && true)))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, false || (false))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), true && (bool(bool(_GLF_DEAD(false))))), ! (! (_GLF_IDENTITY(bool(bool(_GLF_DEAD(false))), _GLF_IDENTITY(true && (bool(bool(_GLF_DEAD(false)))), false || (true && (bool(bool(_GLF_DEAD(false))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))) && true), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), true, _GLF_IDENTITY(true, false || (true))))) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || ((false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), true && (_GLF_IDENTITY(! (! (false)), false || (! (! (false))))))), false, false)), true && (bool(bvec3(_GLF_IDENTITY(false, ! (! (false))), false, false))))))), (injectionSwitch.x > injectionSwitch.y)))))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, (true) && true), false, false)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, false)), bool(bvec4(bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), true, false)), true, true, true)))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   return;
  }
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(ivec3(1), workgroup_size * workgroup_id);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y) - 0.0)))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! _GLF_IDENTITY((! (! (false))), ! (! ((! (! (false))))))))), (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))), true, false)), ! (! (bool(bvec3(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true, false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, ! (! (true))), false), true, true))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0), transpose(transpose(mat4(injectionSwitch.x, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-7.1, 6433.5408)) : injectionSwitch)).y))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 _GLF_struct_22 _GLF_struct_replacement_22 = _GLF_struct_22(_GLF_struct_15(_GLF_struct_13(bvec2(true), vec2(1.0), 1.0, _GLF_IDENTITY(uvec2(1u), (_GLF_IDENTITY(uvec2(1u), _GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((uvec2(30989u, 189592u) % workgroup_id)) : _GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (_GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), clamp(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), clamp(uvec2(1u), uvec2(1u), uvec2(1u)), clamp(uvec2(1u), uvec2(1u), uvec2(1u))))) | (_GLF_IDENTITY(clamp(uvec2(1u), uvec2(1u), uvec2(1u)), (clamp(uvec2(1u), uvec2(1u), uvec2(1u))) ^ uvec2(0u, 0u)))))))) - uvec2(0u, 0u)), _GLF_IDENTITY(1, 0 | (1)), mat2x3(1.0), mat2(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(true), bvec3(bvec3(bvec3(true)))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), bvec3(bvec4(bvec3(bvec3(true)), false)))))))), true)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(true), bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec3(bvec3(bvec3(true)))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(true)), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec3(true)), true)), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec4(bvec3(bvec3(true)), true))), bvec3(bvec3(bvec3(bvec3(bvec4(bvec3(bvec3(true)), true))))))))))), true)))))), true)))))), _GLF_struct_14(uvec2(1u), _GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (1) * _GLF_IDENTITY(1, (false ? _GLF_FUZZED(11259) : 1)))), min(_GLF_IDENTITY(ivec4(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) ^ 0)) * 1)), (false ? _GLF_FUZZED(ivec4(-86750, -51140, -56493, -53732)) : ivec4(_GLF_IDENTITY(1, (1) * 1)))), ivec4(_GLF_IDENTITY(1, (1) * 1)))), vec2(1.0)), mat4(1.0)), _GLF_struct_replacement_12.subgroup_id * subgroup_size, _GLF_struct_18(_GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(0, 0), max(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) ^ 0))), 0), (ivec2(0, 0)) | ivec2(0, 0)), (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(0, min(_GLF_IDENTITY(0, (0) * 1), _GLF_IDENTITY(_GLF_IDENTITY(0, (0) / 1), (_GLF_IDENTITY(0, (0) / 1)) ^ 0))), 0), (ivec2(0, 0)) | ivec2(0, 0))) >> ivec2(0, 0)), ivec2(0, 0))) ^ (_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(8357) : 1))), (ivec2(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(16263) : 1))) | (1)))) | (ivec2(1))))), _GLF_struct_16(mat3(1.0), vec2(1.0), mat3x2(1.0), mat3x4(1.0), uvec3(1u), mat2x3(1.0), 1u), mat4x2(1.0), vec4(1.0), bvec4(true), uvec3(1u), _GLF_struct_17(mat2x3(1.0), mat3x4(1.0))), _GLF_struct_21(_GLF_struct_19(ivec4(_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), ~ (~ (max(1, 1))))), 1))), vec4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2x4(1.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0))))), min(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0))))), (_GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0)))))) + 0.0))), 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3x4(1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(sqrt(0.0)))), mix(float(_GLF_FUZZED(-8.1)), float(float(mat3x4(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, sqrt(sqrt(0.0))))), bool(true)))), 0.0, 0.0, 0.0, 1.0), (mat2x4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0)))), dot(vec2(0.0, 1.0), vec2(1.0, length(vec2(0.0, 0.0))))), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0)))), _GLF_struct_20(_GLF_IDENTITY(1.0, _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(43.98)), bool(false)), max(mix(float(1.0), float(_GLF_FUZZED(43.98)), bool(false)), _GLF_IDENTITY(mix(float(1.0), float(_GLF_FUZZED(43.98)), bool(false)), mix(float(_GLF_FUZZED(6296.5776)), float(mix(float(1.0), float(_GLF_FUZZED(43.98)), bool(false))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), bvec3(true), mat3(1.0))));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (false) || false)))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-65.90)), float(injectionSwitch.y), bool(true)))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false)))), bool(bvec3(! (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), bool(bvec2(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)), false)))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(! (false), true && (! (false)))))))))
      barrier();
    }
   barrier();
  }
 uint virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base + _GLF_IDENTITY(_GLF_struct_replacement_22.subgroup_base, ~ (~ (_GLF_struct_replacement_22.subgroup_base))) + _GLF_IDENTITY(subgroup_local_id, uint(uint(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id))) - 0u)))), (_GLF_IDENTITY(_GLF_struct_replacement_23.workgroup_base + _GLF_struct_replacement_22.subgroup_base, (_GLF_struct_replacement_23.workgroup_base + _GLF_struct_replacement_22.subgroup_base) ^ uint(_GLF_ZERO(_GLF_IDENTITY(0.0, (0.0) * _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-18.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), min(mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-18.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY(mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-18.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-18.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true ? mix(float(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))), float(_GLF_FUZZED(-18.19)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) : _GLF_FUZZED(-476.389)))) - 0.0)))))), _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(5.0), _GLF_FUZZED((-84.72 - -75.66))), bvec2(false, false)))) / vec2(1.0, 1.0)).x))) + subgroup_local_id) / uint(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0))))), injectionSwitch)).y, injectionSwitch.y)))));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), max(float(float(injectionSwitch.x)), float(float(injectionSwitch.x))))), injectionSwitch.x)) > injectionSwitch.y))))))) && true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec3(true && (_GLF_DEAD(false)), true, true)), bool(bvec3(bool(bvec3(true && (_GLF_DEAD(false)), true, true)), true, false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))) && (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))) && (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))) && (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) && true))) && (injectionSwitch.x > injectionSwitch.y)))))), false, true, false))))), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)))) || false))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_struct_replacement_23.workgroup_base + _GLF_struct_replacement_22.subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint read = atomicLoad(_GLF_IDENTITY(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], uint(_GLF_IDENTITY(uvec2(buf[virtual_gid], 0u), (uvec2(buf[virtual_gid], 0u)) << uvec2(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | 0u)))) - 0u), 0u)))), buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(virtual_gid, (false ? _GLF_FUZZED(next_virtual_gid) : virtual_gid))) ^ (0u ^ 0u)), 0u | (_GLF_IDENTITY(virtual_gid, (virtual_gid) / ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (_GLF_IDENTITY(uint(4u), (uint(4u)) / 1u)) ^ 0u))))))])), uint(uint(_GLF_IDENTITY(buf[virtual_gid], 1u * _GLF_IDENTITY((buf[virtual_gid]), min(_GLF_IDENTITY((buf[virtual_gid]), (false ? _GLF_FUZZED(73764u) : (buf[virtual_gid]))), (buf[virtual_gid]))))))), 4, 64, 2);
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), _GLF_IDENTITY(vec3(mat4(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0)), (vec3(mat4(_GLF_IDENTITY(vec3(injectionSwitch, 1.0), (vec3(injectionSwitch, 1.0)) - vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0)), 0.0))), 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, sqrt(1.0), 1.0, 0.0, exp(0.0), 0.0, 0.0, 0.0, 0.0, 1.0))) * mat3(1.0))))).y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false), false || (injectionSwitch.x > injectionSwitch.y))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))) && true))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, true, true))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) && true))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))), true && (! (_GLF_DEAD(false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(false), (bool(false)) || false)), bool(bvec2(! (_GLF_IDENTITY(bool(false), (bool(false)) || false)), true)))))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))[0], _GLF_FUZZED((false ? -54.57 : 22.19))), vec2(_GLF_FUZZED(-8.1), (injectionSwitch)[_GLF_IDENTITY(1, (1) + 0)]), bvec2(false, true))).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))), false, false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) / 1u), 4, 64, 4);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), bool(bvec4(_GLF_IDENTITY(false || (_GLF_IDENTITY(false, (false) || false)), (false || (_GLF_IDENTITY(false, (false) || false))) || false), true, true, _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))), (true ? (_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))) : _GLF_FUZZED((num_workgroup * subgroup_local_id)))), max(~ (_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid)))), ~ (_GLF_IDENTITY(next_virtual_gid, uint(uint(next_virtual_gid))))))))], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat4x2((injectionSwitch) * mat2(1.0), 1.0, 0.0, 0.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! ((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))))) - vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))).x > injectionSwitch.y) && true)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     return;
    }
  }
 subgroupBarrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))) || false))))
  barrier();
 atomicStore(checker[virtual_gid], read, 4, _GLF_IDENTITY(64, _GLF_IDENTITY(max(64, 64), (max(64, _GLF_IDENTITY(64, int(_GLF_IDENTITY(ivec4(64, (1 ^ 1), 0, 0), (ivec4(64, (1 ^ 1), 0, 0)) + ivec4(0, 0, 0, 0)))))) << 0)), 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), min(clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y), clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.7))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
