#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), true))), false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), true))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), true))), false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec2(! (_GLF_IDENTITY(false, (false) && true)), true)), ! (! _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), false || (_GLF_IDENTITY(true, true && (true))))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(bvec2(bvec2(! (false), true)), true, false))))))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), bool(_GLF_IDENTITY(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), bvec2(bvec4(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), true, true))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true))), true))))), true, false)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && ((false))), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), true))), true))))), true, false)))))), true, true))), false, false))))))), true), _GLF_IDENTITY(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(true)))))), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(bvec3(bvec2(! (false), true), true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), _GLF_IDENTITY(bvec2(bvec4(bvec2(bvec2(! (false), true)), false, false)), bvec2(bvec3(bvec2(bvec4(bvec2(bvec2(! (false), true)), false, false)), true)))), false))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), _GLF_IDENTITY(bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), bvec2(bvec3(bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, bool(bvec4(true, false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), false))))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) && true)), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) && true)), false || ((_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) || false), (! (false)) && true)))))) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, false)))))), false, false))))))), _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))), bvec2(bvec3(bvec2(bvec2(bvec2((bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec3(bvec2(! (false), true), true)), bvec2(bvec4(bvec2(_GLF_IDENTITY(bvec3(bvec2(! (false), true), true), bvec3(bvec4(bvec3(bvec2(! (false), true), true), true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (! (false)) || false), true)), bvec2(bvec2(bvec2(bvec2(! (false), _GLF_IDENTITY(true, true && (true))))))), true, false)))), _GLF_IDENTITY(bvec2(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec3(bvec2(! (false), true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec3(bvec2(bvec2(! (false), true)), false))), false)))))), true, false))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (false), true), _GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec4(bvec2(bvec2(bvec2(! (false), true))), false, true)))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec2(bvec2(bvec2(! (false), true))))), true, false)))))), true, true)))))), bvec2(bvec4(bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec2(bvec2(! (false), true)), bvec2(bvec4(_GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), (! (false)) && true)) || false), true)), bvec2(_GLF_IDENTITY(bvec2(bvec2(bvec2(! (false), true))), bvec2(bvec3(bvec2(bvec2(bvec2(! (false), true))), true))))), true, _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))))))))), false, false))))))), true))), false))))))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (_GLF_IDENTITY(true, ! (! (true))))), ! (! (! (! (true)))))), false)))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x4(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-230.456)), float(0.0), bool(true))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 0.0)), max(vec2(mat3x4(injectionSwitch, length(vec4(0.0, 0.0, 0.0, 0.0)), 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED((_GLF_IDENTITY(-72.16, (-72.16) - 0.0) / 5.9))), bool(false))), 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))), 1.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_ZERO(_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (0.0) + 0.0))), injectionSwitch.x), _GLF_IDENTITY(0.0, _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0), min(clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0), _GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0), (_GLF_IDENTITY(clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0), clamp(clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0), clamp(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)))) - 0.0)))), 1.0, 0.0)), vec2(mat3x4(injectionSwitch, length(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 1.0, _GLF_IDENTITY(0.0, (0.0) / abs(1.0)), 0.0, _GLF_ZERO(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), injectionSwitch.x), 0.0, 1.0, 0.0))))).y))))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-35.03))) > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bvec2(bool(bvec2(false, false)), false))))))))))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), bool(bool(! ((false))))))))) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, false || (true)))))) && true))) || false))) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true, true)))))))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec3(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true)))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true))))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true)), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true)))))))))))), (! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), _GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true)), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true && (_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(true, bool(bool(true))) && ((! (false)) && true)))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true)))))), _GLF_IDENTITY(false, ! (! (false))) || ((! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true && (_GLF_IDENTITY((! (false)) && true, _GLF_IDENTITY(true, bool(bool(true))) && ((! (false)) && true)))), true, true, true)), false || (bool(bvec4(_GLF_IDENTITY((! (false)) && true, true && ((! (false)) && true)), true, true, true))))))))))))))) || false))), ! (! (_GLF_IDENTITY(false, (false) || false)))), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && _GLF_IDENTITY((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), ((false)) || false)))), ! (! ((! (_GLF_IDENTITY(false, ! (! (false)))))))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(3.7))) > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3072.6993)), float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).y, 1.0 * (injectionSwitch.y))), bool(true)))))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false)))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if((subgroup_local_id % 2) == 0)
  {
   atomicStore(buf[next_virtual_gid], uint(1), 4, _GLF_IDENTITY(64, (64) << 0), 4);
  }
 else
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).x > injectionSwitch.y))))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_FUZZED(-2.7), _GLF_FUZZED((- 3850.4645))), vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-308.609), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(833.864)), bvec2(true, false)))) * mat2(1.0))[1], 1.0 * (((_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-308.609), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(_GLF_IDENTITY(833.864, mix(float(_GLF_IDENTITY(833.864, mix(float(_GLF_FUZZED(-1.8)), float(833.864), bool(true)))), float(_GLF_FUZZED(-95.04)), bool(false))))), bvec2(true, false)))) * mat2(1.0))[1]))), bvec2(true, true)))).y))))
    return;
   atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))) || false), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)), false)))) || false))))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 subgroupBarrier();
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, _GLF_IDENTITY((read) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, min(0u, 0u)))), (_GLF_IDENTITY((read) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, min(0u, 0u)))), max((read) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, min(0u, 0u)))), (read) - _GLF_IDENTITY(_GLF_IDENTITY(0u, (0u) - 0u), (_GLF_IDENTITY(0u, clamp(0u, 0u, 0u))) | (_GLF_IDENTITY(0u, min(0u, 0u))))))) / 1u)), 4, _GLF_IDENTITY(64, (64) >> (1 ^ 1)), 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 0

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
