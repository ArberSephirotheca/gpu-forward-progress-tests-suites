#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-9.2), _GLF_FUZZED(522.157)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)) && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true)))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), ! (! (bool(false)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(398.263)), _GLF_IDENTITY(bool(false), (bool(false)) || false))), (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) : _GLF_FUZZED(-24.14))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(398.263)), bool(false))), (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))), _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) : _GLF_FUZZED(-24.14))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(398.263)), bool(false))), (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))))), (true ? float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), mix(float(_GLF_FUZZED(-6.4)), float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)), (true ? _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * abs(1.0)) : _GLF_FUZZED(-24.14))))), mix(float(injectionSwitch.x), float(_GLF_FUZZED(398.263)), bool(false))), (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0))), dot(vec2(1.0, 0.0), vec2(1.0, tan(0.0)))))) : _GLF_FUZZED(0.1)))) > injectionSwitch.y)), true), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) - _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(fma(-5.1, abs(-0.5), -8.2)) : 0.0)), 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))) > injectionSwitch.y, true), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) - _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / round(length(normalize(vec2(1.0, 1.0))))), 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 0.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0)))))) - 0.0), min(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), mat3(1.0) * (vec3(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))) > injectionSwitch.y, _GLF_IDENTITY(true, true && (true))), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, ~ (~ (0)))], injectionSwitch[1])).x), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) - _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(_GLF_IDENTITY(0.0, float(vec2(0.0, sqrt(0.0)))), 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(-0.5, 3783.4063, -240.758)) : vec3(_GLF_IDENTITY(0.0, float(vec2(0.0, sqrt(0.0)))), 0.0, 0.0)))), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))) > injectionSwitch.y, true), false), true)))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) - _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, _GLF_IDENTITY(-2432.1637, (false ? _GLF_FUZZED(-6.4) : _GLF_IDENTITY(-2432.1637, 1.0 * (-2432.1637))))))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0)), 0.0)), (_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-8.7) : _GLF_IDENTITY(0.0, float(mat4x2(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))))))), 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0)), 0.0)), (length(vec3(0.0, 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))) > injectionSwitch.y, true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), clamp((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x), (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x))) - _GLF_IDENTITY(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), float(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), clamp(_GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)))))), _GLF_IDENTITY(length(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (true ? vec3(0.0, 0.0, 0.0) : _GLF_FUZZED(vec3(33.73, 2.2, -2432.1637))))), clamp(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), max(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), min(_GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), (length(vec3(0.0, 0.0, 0.0))) - 0.0)))))), float(_GLF_FUZZED(-300.221)), bool(false))), length(vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(length(vec3(0.0, 0.0, 0.0)), max(length(vec3(0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0))))))))) - 0.0), 0.0, tan(0.0), 1.0, 0.0, 0.0, 1.0, 0.0)))) > injectionSwitch.y, true), false), true)))))))), true), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y, true), true), true)))))))), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - length(vec3(0.0, 0.0, 0.0))) > injectionSwitch.y)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (true))))), bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), true && (true))))), false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0))), injectionSwitch.y)), injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_IDENTITY(true, _GLF_IDENTITY(false, ! (! (false))) || _GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), (_GLF_IDENTITY(! (_GLF_IDENTITY(true, false || (true))), ! (! (! (_GLF_IDENTITY(true, false || (true))))))) && true)))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), (false || (true)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 0.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(_GLF_IDENTITY(1.0, 1.0 * (1.0)), 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(exp(0.0), cos(0.0) * (exp(0.0)))))), injectionSwitch.x)) < injectionSwitch.y)))))) && true), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(true, false || (true))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, false || (true)))), ! (! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, false || (true)))), bool(bvec2(_GLF_IDENTITY(! ((_GLF_IDENTITY(true, false || (true)))), ! (_GLF_IDENTITY(! (! ((_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || (true))))), _GLF_IDENTITY((! (! ((_GLF_IDENTITY(true, false || (true)))))) || false, true && ((! (! ((_GLF_IDENTITY(true, false || (true)))))) || false))))), false)))))))), ((_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (! (false)))))), false)), (bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), true && ((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), false || (! (false)))) || false)))))), false))) && true))) || (true)))) && true)) || false)), true && (bool(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, false || (true))), (bool(_GLF_IDENTITY(true, false || (true)))) || false)))), _GLF_IDENTITY(((_GLF_IDENTITY(true, false || (true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (((_GLF_IDENTITY(true, false || (true)))))) && true))))))), false, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(false, true)), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, false)))), ! (! (_GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) || false)))))), (bool(bvec2(false, true))) || false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_IDENTITY(false, ! (! (false))))), ! (! (false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y, clamp(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y, _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))[0], injectionSwitch[1])).y)) || false), false)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch))) + sqrt(vec2(0.0, 0.0))).x : _GLF_FUZZED(-0.9)), min(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x : _GLF_FUZZED(-0.9)), mix(float(_GLF_FUZZED(-2.3)), float((true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x : _GLF_FUZZED(-0.9))), bool(true))), (true ? _GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(0.0, 0.0))).x : _GLF_FUZZED(-0.9))))) > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > injectionSwitch.y), ! (! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0))), 0.0)), min(float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0))), 0.0)), float(vec2(_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 0.0, 1.0, 0.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))), 1.0))), 0.0))))) > injectionSwitch.y))))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))))), true && (bool(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))))) || false)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, false))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true))))), false)))), true)))), false))), false)))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), sqrt(1.0), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(0.0), 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), 1.0, 1.0, abs(1.0), 0.0))) > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(5.4)), vec2(_GLF_FUZZED((+ 8.2)), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))).y), ! _GLF_IDENTITY((! ((injectionSwitch.x > injectionSwitch.y))), ((! ((injectionSwitch.x > injectionSwitch.y)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), true, true), bvec3(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), true))), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))))))), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))))))))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(((injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || ((injectionSwitch.x > injectionSwitch.y))))), true, true), false))), _GLF_IDENTITY(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), false)), bvec3(bvec3(bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), true, true), false))), false))))))))))))))), false)))), _GLF_IDENTITY(true, false || (true)) && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(9081.1852)), bool(false)))))), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))), true, true), false))), false)))))), false)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, ! (! (false)))) || false) || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(false, (false) && true)) || _GLF_IDENTITY(false, ! (! (false))))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-78.52) : _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), true && (false))) || false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bool(bool(bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false))))))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bool(bool(bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false)))))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))))), bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))))), true))))))), _GLF_IDENTITY(false, true && (false)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), bool(bool(bool(bvec3(true, false, false))))))), bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, bool(bool(false))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, bool(bool(false)))))))))))))), true)))))))))), true), bvec3(bvec3(bvec3(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bool(bool(bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false))))))), (bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true)))))))), bool(bool(bool(bvec3(true, _GLF_IDENTITY(false, ! (! (false))), false)))))))) && true), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))))), bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))))), true))))))), _GLF_IDENTITY(false, true && (false)) || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(bool(bvec3(true, false, false))))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(true, bool(bvec2(true, true))), false, false)), bool(bool(bool(bvec3(true, false, false))))))), bool(bvec2(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, bool(bool(false))))))), false || (bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), _GLF_IDENTITY(false, bool(bool(false)))))))))))))), true)))))))))), true))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((- -199.761))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), _GLF_IDENTITY(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true)), bool(bool(bool(bvec2((_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))), true))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) && true), true, true))))), false)))))))), _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! (_GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! ((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))))))))) && true))))))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), _GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(_GLF_IDENTITY(true, (true) && true)), true, true))))), bool(bvec2(! (! (_GLF_IDENTITY(bool(true), bool(bvec3(_GLF_IDENTITY(bool(true), (bool(true)) && true), true, true))))), false)))))))), _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))))))))), (_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))))))))), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))))))))))) || false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! ((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))))))), true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! ((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))))))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))))))))) && true))))))), ! (! (((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(true), true && (bool(true))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! ((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))))))), true && ((_GLF_IDENTITY((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true))))), ! (! ((! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, true)))))))))))))))) && _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))), 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)))))))))) && true)))))))))) && true)))))))), false || (bool(_GLF_IDENTITY(bool(false), _GLF_IDENTITY((bool(false)), (_GLF_IDENTITY((bool(false)), bool(bvec4((bool(false)), true, true, false)))) && true) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(true), true, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))))))), (bool(_GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), bool(bvec3(bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (true), true && (! (true))), false || (_GLF_IDENTITY(! (true), _GLF_IDENTITY(true && (! (true)), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true && (! (true)), true && (true && (! (true)))), true), bvec2(bvec2(bvec2(_GLF_IDENTITY(true && (! (true)), true && (true && (! (true)))), true))))))))))), bool(bvec2(true, false)))), true, true)))))))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)).y))))))))))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) + vec2(0.0, 0.0)).y, true && (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))), (true ? (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) : _GLF_FUZZED(vec2(5.5, 8035.2909)))) + vec2(0.0, 0.0)).y)))))) && true)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec4(! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-5.0) : injectionSwitch.y)))), mix(float(_GLF_FUZZED(65.50)), float(injectionSwitch.y), bool(true)))))))
    return;
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))), false, true, true)))) || false)), _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec2(false, true))), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), mat4(1.0) * (normalize(vec4(1.0, 1.0, 1.0, 1.0)))))), _GLF_IDENTITY(0.0, 0.0 + (0.0)), determinant(mat4(1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-9.9))))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), float(_GLF_IDENTITY(_GLF_FUZZED(2.6), float(vec3(_GLF_FUZZED(2.6), 0.0, 1.0)))), bool(false))), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, _GLF_ZERO(0.0, injectionSwitch.x) + (0.0)), 1.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 1.0, _GLF_IDENTITY(round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0)))), (round(length(_GLF_IDENTITY(normalize(vec4(1.0, 1.0, 1.0, 1.0)), (normalize(vec4(1.0, 1.0, 1.0, 1.0))) - vec4(0.0, 0.0, 0.0, 0.0))))) + 0.0), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, min(1.0, 1.0))))))), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-40.61))), 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))), 0.0 + (float(_GLF_IDENTITY(mat3x2(0.0, length(vec4(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(133.996)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)), min(float(mat2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 1.0, 1.0)), float(mat3x4(float(vec3(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1.1))), 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 1.0, determinant(mat3(1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, sqrt(1.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 0.0), vec4(0.0, 0.0, 1.0, 0.0))))), 1.0, 1.0, 0.0)))), 0.0, 0.0, 1.0)), float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))))), (_GLF_IDENTITY(0.0, _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2250.3510))), float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0), _GLF_IDENTITY(mat2(mat3x2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2250.3510))), float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))), (true ? mat2(mat3x2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(2250.3510), (_GLF_FUZZED(2250.3510)) * 1.0))), float(vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-6201.2660)), float(0.0), bool(true))), 0.0, 1.0))) : _GLF_FUZZED(mat2(-60.87, -4.3, 2.8, 4.6)))))), (float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true) ? 0.0 : _GLF_FUZZED(2250.3510))), float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0), _GLF_IDENTITY(mat2(mat3x2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2250.3510))), float(vec3(0.0, 1.0, 1.0))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(0.0), max(float(0.0), float(0.0))))))), 0.0, 1.0))), (true ? mat2(mat3x2(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0.0 : _GLF_FUZZED(2250.3510))), float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))) : _GLF_FUZZED(mat2(-60.87, -4.3, 2.8, 4.6))))))) / 1.0), min(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) / 1.0)) - 0.0), 1.0))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0)), float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)))))) * 1.0), 1.0, 0.0, exp(0.0), 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2457.0440), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(-4.7), min(_GLF_FUZZED(-4.7), _GLF_FUZZED(-4.7))), (_GLF_FUZZED(-4.7)) - 0.0)) - 0.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)), false))).y)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true)))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true)) || false), false, true), _GLF_IDENTITY(false, bool(bvec4(false, false, true, true))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), false, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, true, false))))), (false) && _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))) || false), false, true), false))))))))))))), ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(26.43) : 1.0)), 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)))), _GLF_IDENTITY(0.0, (0.0) - 0.0), determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))), 0.0 + (float(_GLF_IDENTITY(mat3x2(0.0, length(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(_GLF_IDENTITY(vec4(0.0, 0.0, 0.0, 0.0), max(vec4(0.0, 0.0, 0.0, 0.0), vec4(0.0, 0.0, 0.0, 0.0))), vec4(0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)), min(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(((false ? true : false) ? 206.553 : -3.8))), float(float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), (false ? _GLF_FUZZED(-0.1) : _GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))))), 0.0, 0.0, 1.0))), bool(true))), float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2457.0440), (injectionSwitch)[1]), vec2((_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))[0], _GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_FUZZED(-4.7)) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0))) - 0.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0))), 0.0) + (injectionSwitch)).y)), false))).y)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(26.43) : 1.0)), 1.0)), 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))), 1.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-70.79))), 1.0, 0.0, exp(0.0), _GLF_IDENTITY(1.0, (1.0) - sqrt(0.0)))), float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 1.0, 1.0, 1.0)))), (true ? float(_GLF_IDENTITY(mat2(0.0, 1.0, 1.0, 1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(0.0, 1.0, 1.0, 1.0)))) : _GLF_FUZZED(-1790.5230)))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-7.4) : _GLF_IDENTITY(0.0, 1.0 * (0.0)))), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))), 0.0 + (float(_GLF_IDENTITY(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)))), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0), (mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)) * mat2(1.0))), min(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(((false ? true : false) ? 206.553 : -3.8))), float(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))), bool(true))), float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2457.0440), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_FUZZED(-4.7)) - _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0))) - 0.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 1.0))), 0.0) + (injectionSwitch)).y)), false))).y)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true))))), false || (! ((_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), clamp(float(mat4x2(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x3(injectionSwitch.x, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(26.43) : 1.0)), 1.0)), _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), 0.0, 0.0, 0.0, 1.0)), 1.0), mat3(1.0) * (mat2x3(injectionSwitch.x, 1.0, round(length(normalize(vec4(_GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0)))), 0.0, determinant(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0))))), 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0)), float(mat4x2(injectionSwitch.x, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0))))), 0.0 + (float(_GLF_IDENTITY(mat3x2(0.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, float(mat3(0.0, 0.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, cos(0.0), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)))) * cos(0.0)), length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 1.0)))))))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0), (false ? _GLF_FUZZED(mat2(-170.479, 613.080, 440.255, -42.51)) : mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)))), min(_GLF_IDENTITY(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0)), mix(float(_GLF_FUZZED(((false ? true : false) ? 206.553 : -3.8))), float(float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))), bool(true))), float(mat2(_GLF_IDENTITY(0.0, float(vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))))), 1.0, 0.0, _GLF_IDENTITY(exp(0.0), (exp(0.0)) - 0.0), 1.0)), float(mat4x2(injectionSwitch.x, 1.0, 0.0, 0.0, 1.0, 0.0, exp(0.0), 1.0))))) > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-2457.0440), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_IDENTITY(_GLF_FUZZED(-4.7), (_GLF_FUZZED(-4.7)) - _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) - 0.0))) - 0.0)), bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(0.0, float(mat2x3(_GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0)), 1.0))), 0.0) + (injectionSwitch)).y)), false))).y)), _GLF_IDENTITY(false, bool(bvec3(false, false, false))), true, true))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), true && ((_GLF_IDENTITY(false, (false) && true)))), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec4(_GLF_IDENTITY(false, (false) && true), true, false, false)))), true && ((_GLF_IDENTITY(false, (false) && true)))), false, _GLF_IDENTITY(false, (false) && true)))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))) || false), false, true), false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false), _GLF_IDENTITY(false, (false) || false), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, true && (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(bool(bvec3(true, true, true)), bool(bvec3(bool(bvec3(true, true, true)), false, false))))))), ! (! (_GLF_IDENTITY(false, (false) && true))))) || false), false, true), false))), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(bvec4((false) && true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec4((false) && true, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false), false, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))) || false), false, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, false)), bool(bool(bool(bvec4(true, false, false, false))))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))))) || false) || _GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((373.574 * -9.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y))), ((_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((373.574 * -9.0))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)))) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(workgroup_size * workgroup_id, min(workgroup_size * workgroup_id, workgroup_size * workgroup_id));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, (subgroup_id) ^ _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(subgroup_local_id))), uint(_GLF_ZERO(0.0, injectionSwitch.x))))))) * subgroup_size;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base + subgroup_base, min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)), 0u ^ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, min(workgroup_base, _GLF_IDENTITY(workgroup_base, uint(uvec4(workgroup_base, 0u, 1u, 1u))))) + subgroup_base), ((workgroup_base + subgroup_base)) | ((workgroup_base + subgroup_base)))) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), clamp(_GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), ~ (~ (((subgroup_local_id + 1) % subgroup_size)))), ((subgroup_local_id + 1) % subgroup_size), _GLF_IDENTITY(((subgroup_local_id + 1) % subgroup_size), (true ? ((subgroup_local_id + 1) % subgroup_size) : _GLF_FUZZED(subgroup_local_id)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], uint(_GLF_IDENTITY(1, (_GLF_IDENTITY(false, bool(bvec2(false, false))) ? _GLF_FUZZED(80601) : 1))), _GLF_IDENTITY(4, _GLF_IDENTITY(int(ivec4(4, 0, 0, 1)), clamp(int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1)), int(ivec4(4, 0, 0, 1))))), 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)) << 0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(uint(2), clamp(_GLF_IDENTITY(uint(2), (0u >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ (uint(2))), _GLF_IDENTITY(uint(2), _GLF_IDENTITY(uint(uint(uint(2))), 0u ^ (uint(uint(uint(2)))))), _GLF_IDENTITY(uint(2), max(uint(2), uint(2)))))) << 0u : _GLF_FUZZED(num_workgroup)))), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))))))), ! (! ((_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))))))))))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))), false || ((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))), false || (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), true && (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))))))), _GLF_IDENTITY(false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(false))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))), (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(false)))), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(false)))), false, false, false)), ! (! (bool(bvec4((_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(false)))), false, false, false))))))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))) || _GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true))))), ! (! (false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(false))))), (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(bool(false)))))) && true))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))))), (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bool(false)))), _GLF_IDENTITY(bool(bvec2(true && (_GLF_IDENTITY(false, bool(bool(false)))), false)), bool(bvec2(bool(bvec2(true && (_GLF_IDENTITY(false, bool(bool(false)))), false)), false)))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))) || false))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))), true && (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true))))))), ! (! ((_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), bool(_GLF_IDENTITY(bool(false), (bool(false)) && true)))))))))), _GLF_IDENTITY(false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false)))))))), bool(bool(false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(false))))))))))))))) && true)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
