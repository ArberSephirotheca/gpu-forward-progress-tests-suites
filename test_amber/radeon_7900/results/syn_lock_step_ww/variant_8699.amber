#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     do
      {
       if(_GLF_DEAD(false))
        break;
       switch(_GLF_SWITCH(0))
        {
         case 67:
         do
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                }
               else
                {
                 return;
                }
              }
             return;
            }
          }
         while(_GLF_WRAPPED_LOOP(false));
         if(true)
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(false))
            {
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(false));
            }
           {
            if(_GLF_DEAD(false))
             return;
            if(_GLF_DEAD(false))
             continue;
            switch(_GLF_SWITCH(_GLF_IDENTITY(0, clamp(0, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(-75567) : 0)), 0))))
             {
              case 0:
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_WRAPPED_IF_FALSE(false))
               {
               }
              else
               {
                while(true)
                 {
                  switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                   {
                    case 0:
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     continue;
                    break;
                    case 22:
                    ivec4(-48122, 98307, -17312, 37918);
                    default:
                    1;
                   }
                 }
               }
              case 47:
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               break;
              for(mat2x3 _GLF_SWITCH_0_0v, _GLF_SWITCH_0_1v; false; ivec3(-38993, 45400, -24035))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    return;
                   }
                 }
                mat4x2(1.9, 4112.2711, 3946.2707, 7.4, -4.5, -1139.2321, -72.13, 28.55);
                do
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  if(_GLF_DEAD(false))
                   continue;
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     return;
                    continue;
                   }
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    return;
                   }
                 }
                uint _GLF_SWITCH_0_2v[96], _GLF_SWITCH_0_3v, _GLF_SWITCH_0_4v;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                mat4x2 _GLF_SWITCH_0_5v[65], _GLF_SWITCH_0_6v, _GLF_SWITCH_0_7v;
               }
              if(_GLF_DEAD(false))
               break;
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                switch(_GLF_SWITCH(0))
                 {
                  case 60:
                  uvec2 _GLF_SWITCH_4_0v;
                  case 84:
                  if(_GLF_DEAD(false))
                   return;
                  bvec2 _GLF_SWITCH_4_1v[59];
                  case 0:
                  case 14:
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  for(mat2x3 _GLF_SWITCH_0_8v[30], _GLF_SWITCH_0_9v; (mat4x2(958.221, 938.959, 1212.1125, -4.9, 9924.9505, 2779.0996, -2767.5624, -9.6) != mat4x2(7854.3315, 9.9, 20.37, 966.356, 6.6, -3979.8734, 887.697, 7.8)); vec2(543.619, -9.8))
                   {
                    cos(mix(vec2(-1.2, 3.1), vec2(5.9, -6.5), bvec2(true, true)));
                    mat4 _GLF_SWITCH_0_10v[17], _GLF_SWITCH_0_11v;
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                       {
                        (-50604 & ivec3(72255, 93694, 98207)).sts;
                       }
                      if(_GLF_DEAD(false))
                       continue;
                     }
                    ivec3 _GLF_SWITCH_0_12v, _GLF_SWITCH_0_13v;
                    for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      ;
                     }
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      break;
                     }
                   }
                  break;
                  if(_GLF_DEAD(false))
                   break;
                  case 85:
                  mat4 _GLF_SWITCH_4_2v[72], _GLF_SWITCH_4_3v[45], _GLF_SWITCH_4_4v;
                  case 29:
                  uvec2 _GLF_SWITCH_4_5v[6], _GLF_SWITCH_4_6v;
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              break;
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              default:
              if(_GLF_DEAD(false))
               return;
              1;
              if(_GLF_DEAD(false))
               return;
             }
           }
           if((-85.75 != 104.800))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                }
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
               do
                {
                 if(_GLF_DEAD(false))
                  break;
                 return;
                }
               while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
               if(_GLF_DEAD(false))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             do
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                  {
                   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                    break;
                   break;
                  }
                 break;
                }
               -55050;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(false))
              continue;
             bvec2(false, true).yxyy;
             if(_GLF_DEAD(false))
              break;
            }
           else
            {
             if(_GLF_DEAD(false))
              continue;
             (vec4(-376.342, 9.9, -6.4, -9.9) , bvec3(false, true, true));
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                continue;
               if(_GLF_DEAD(false))
                return;
               break;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                break;
              }
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             uvec3 _GLF_SWITCH_0_14v;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             {
              mat4(1.2, 3.7, 2.0, 3.9, 4.9, -3204.6056, -80.63, 82.12, -6414.8128, 1506.4470, 969.188, 2.5, 49.64, -407.185, -95.37, 444.669);
              atanh(vec2(731.674, -634.271));
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(false))
                 break;
                return;
               }
              ivec2 _GLF_SWITCH_0_15v[89], _GLF_SWITCH_0_16v, _GLF_SWITCH_0_17v;
              do
               {
                switch(_GLF_SWITCH(((0 & 67699) >> _GLF_IDENTITY(int(5), int(5)))))
                 {
                  case 58:
                  bvec4 _GLF_SWITCH_6_0v;
                  case 57:
                  bvec3(true, false, false);
                  case 0:
                  case 22:
                  case 23:
                  case 12:
                  if(_GLF_DEAD(false))
                   return;
                  break;
                  default:
                  1;
                 }
               }
              while(_GLF_WRAPPED_LOOP(false));
              uvec3 _GLF_SWITCH_0_18v, _GLF_SWITCH_0_19v[63], _GLF_SWITCH_0_20v;
              bvec4 _GLF_SWITCH_0_21v;
              mat4x3 _GLF_SWITCH_0_22v[89];
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               continue;
              if(_GLF_DEAD(false))
               break;
              bvec4(true, true, true, false);
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 return;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      continue;
                     }
                    break;
                   }
                  return;
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                   break;
                 }
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               continue;
              156778u;
              if(_GLF_DEAD(false))
               continue;
             }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              return;
             for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
              {
               if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                {
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 return;
                }
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              break;
             if(_GLF_DEAD(false))
              return;
             if(_GLF_DEAD(false))
              continue;
             if(_GLF_DEAD(false))
              return;
             {
              if(_GLF_DEAD(false))
               break;
              (mat3x2(-9135.1447, 9.7, 10.31, -82.57, 21.55, -76.23) + 72.83);
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               return;
              ;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_DEAD(false))
               return;
              if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
               }
              else
               {
                if(_GLF_DEAD(false))
                 continue;
                ;
               }
              if(_GLF_DEAD(false))
               break;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               break;
              uvec2(40210u, 7441u);
              if(_GLF_DEAD(false))
               break;
              for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(3), int(3))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
               {
                if(_GLF_DEAD(false))
                 return;
               }
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 return;
                do
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        return;
                       }
                     }
                    break;
                   }
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    bvec3(true, true, true);
                   }
                 }
                while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  break;
                 }
                do
                 {
                  if(_GLF_DEAD(false))
                   return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               return;
             }
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               continue;
              }
             if(_GLF_DEAD(false))
              return;
             transpose((mat3(961.435, 663.698, -9.2, 673.134, -5.0, -8.8, 28.09, 8.5, 8.1) - mat3(-28.93, -9.5, -9.8, 5.3, -1.0, 4017.8425, -6.9, -802.173, 254.114)));
             if((93.76 != -4.1))
              {
               switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(int(4), int(4)))))
                {
                 case 35:
                 if(_GLF_WRAPPED_IF_TRUE(true))
                  {
                   switch(_GLF_SWITCH((0 & 96194)))
                    {
                     case 0:
                     case 18:
                     case 43:
                     do
                      {
                       if(_GLF_DEAD(false))
                        break;
                       do
                        {
                         switch(_GLF_SWITCH(0))
                          {
                           case 96:
                           (-40.98 - (mat3(-7.5, -6.9, -2593.0639, -9.6, 8.6, 95.37, -11.25, 5135.2216, 6095.8880) + mat3(-6106.8088, -5.8, -4.9, -8834.0403, -202.065, -786.221, 8.2, 60.30, 1.3)));
                           case 39:
                           mat4x3(298.591, -189.919, -6792.9592, -7311.8910, -1970.3936, 5727.4588, -7.3, 9650.6924, -84.34, 241.051, -8617.1943, 6332.8284);
                           case 0:
                           case 42:
                           ;
                           break;
                           default:
                           1;
                          }
                        }
                       while(_GLF_WRAPPED_LOOP(false));
                      }
                     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                     break;
                     case 25:
                     bvec3 _GLF_SWITCH_5_0v;
                     default:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     1;
                     if(_GLF_DEAD(false))
                      continue;
                    }
                  }
                 else
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     break;
                    }
                  }
                 case 0:
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 switch(_GLF_SWITCH((int(_GLF_ZERO(0.0, injectionSwitch.x)) & 89711)))
                  {
                   case 0:
                   (bvec3(true, true, false) != bvec3(true, false, true));
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
                      break;
                     continue;
                    }
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_TRUE(true))
                        {
                         return;
                        }
                       else
                        {
                        }
                      }
                     if(_GLF_DEAD(false))
                      break;
                     if(_GLF_WRAPPED_IF_TRUE(true))
                      {
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        continue;
                       return;
                      }
                     else
                      {
                       if(_GLF_DEAD(false))
                        break;
                      }
                    }
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      continue;
                     break;
                    }
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                   if(_GLF_DEAD(false))
                    break;
                   ;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      {
                       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        {
                        }
                       else
                        {
                         return;
                        }
                      }
                     do
                      {
                       return;
                      }
                     while(_GLF_WRAPPED_LOOP(false));
                    }
                   if(_GLF_DEAD(false))
                    break;
                   mat3 _GLF_SWITCH_0_23v, _GLF_SWITCH_0_24v[84];
                   mat2x4 _GLF_SWITCH_0_25v, _GLF_SWITCH_0_26v;
                   mat4 _GLF_SWITCH_0_27v, _GLF_SWITCH_0_28v, _GLF_SWITCH_0_29v;
                   if(_GLF_DEAD(false))
                    break;
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                      return;
                     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                      break;
                     return;
                    }
                   mat3 _GLF_SWITCH_0_30v, _GLF_SWITCH_0_31v[3], _GLF_SWITCH_0_32v;
                   case 12:
                   ;
                   if(_GLF_DEAD(false))
                    return;
                   do
                    {
                     _GLF_SWITCH_0_27v;
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, (false) && true)))))
                    return;
                   break;
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(false))
                    continue;
                   case 29:
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_WRAPPED_IF_FALSE(false))
                    {
                    }
                   else
                    {
                     mat2x3(5.3, 120.954, 99.65, -29.47, 178.961, -87.93);
                    }
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   case 62:
                   if(_GLF_DEAD(false))
                    {
                     if(_GLF_DEAD(false))
                      break;
                     switch(_GLF_SWITCH(0))
                      {
                       case 26:
                       mat3 _GLF_SWITCH_4_0v[7];
                       if(_GLF_DEAD(false))
                        continue;
                       case 50:
                       ivec4 _GLF_SWITCH_4_1v;
                       case 0:
                       case 39:
                       case 41:
                       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                        return;
                       if(_GLF_DEAD(false))
                        return;
                       case 77:
                       continue;
                       break;
                       case 28:
                       ivec4(59666, 41498, 37348, 69042).qtq;
                       case 63:
                       ivec3 _GLF_SWITCH_4_2v, _GLF_SWITCH_4_3v[68], _GLF_SWITCH_4_4v;
                       if(_GLF_DEAD(false))
                        continue;
                       default:
                       1;
                      }
                    }
                   if(_GLF_DEAD(false))
                    return;
                   mat3x2 _GLF_SWITCH_2_0v, _GLF_SWITCH_2_1v;
                   default:
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    {
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      break;
                     for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, 1 * (0))))); _injected_loop_counter --)
                      {
                       return;
                      }
                    }
                   do
                    {
                     switch(_GLF_SWITCH((0 | 0)))
                      {
                       case 0:
                       case 25:
                       case 21:
                       case 12:
                       case 67:
                       case 6:
                       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
                        {
                         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                          break;
                         switch(_GLF_SWITCH(0))
                          {
                           case 0:
                           1;
                           break;
                           default:
                           1;
                           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                            break;
                          }
                        }
                       break;
                       default:
                       1;
                      }
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                   if(_GLF_DEAD(false))
                    continue;
                   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                    continue;
                   if(_GLF_DEAD(false))
                    return;
                  }
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  continue;
                 break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 case 39:
                 uvec2(170239u, 86887u);
                 default:
                 1;
                }
              }
             else
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_WRAPPED_IF_TRUE(true))
                    {
                     if(_GLF_DEAD(false))
                      return;
                    }
                   else
                    {
                    }
                   return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                 continue;
                }
               if(_GLF_WRAPPED_IF_TRUE(true))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                 if(_GLF_DEAD(false))
                  return;
                 mat2x3(35.84, -4577.2552, -216.591, -7.7, -4.0, 1298.6811);
                 if(_GLF_DEAD(false))
                  break;
                }
               else
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(false))
                  return;
                 if(_GLF_DEAD(false))
                  return;
                }
               ivec3 _GLF_SWITCH_0_33v[71];
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
               bvec4 _GLF_SWITCH_0_34v, _GLF_SWITCH_0_35v, _GLF_SWITCH_0_36v;
               ivec4 _GLF_SWITCH_0_37v[10], _GLF_SWITCH_0_38v;
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                continue;
               if(_GLF_DEAD(false))
                continue;
               ;
               if(_GLF_DEAD(false))
                break;
               do
                {
                 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                  }
                 else
                  {
                   -27510;
                  }
                }
               while(_GLF_WRAPPED_LOOP(false));
               bvec3(false, false, false).gg;
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  continue;
                 continue;
                 if(_GLF_DEAD(false))
                  return;
                }
               if(_GLF_DEAD(false))
                break;
               if(_GLF_DEAD(false))
                return;
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                {
                 if(_GLF_WRAPPED_IF_FALSE(false))
                  {
                  }
                 else
                  {
                   switch(_GLF_SWITCH(int(_GLF_ZERO(0.0, injectionSwitch.x))))
                    {
                     case 75:
                     dot(-32.02, (864.815 + -55.84));
                     case 0:
                     case 45:
                     case 41:
                     case 94:
                     case 23:
                     case 91:
                     case 96:
                     case 24:
                     case 34:
                     case 40:
                     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                      return;
                     break;
                     case 85:
                     vec2 _GLF_SWITCH_6_0v, _GLF_SWITCH_6_1v, _GLF_SWITCH_6_2v[78];
                     case 54:
                     mat3x2 _GLF_SWITCH_6_3v[25], _GLF_SWITCH_6_4v;
                     default:
                     1;
                    }
                  }
                 if(_GLF_DEAD(false))
                  break;
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   ;
                  }
                 else
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(false))
                    break;
                  }
                }
              }
             if(_GLF_DEAD(false))
              continue;
             uvec2 _GLF_SWITCH_0_39v;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                {
                 if(_GLF_DEAD(false))
                  break;
                 continue;
                }
               do
                {
                 return;
                }
               while(_GLF_WRAPPED_LOOP(false));
              }
             mat2 _GLF_SWITCH_0_40v, _GLF_SWITCH_0_41v;
             if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
              {
               _GLF_SWITCH_0_41v;
              }
             else
              {
               if(_GLF_DEAD(false))
                return;
              }
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false)))))))
              break;
            }
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             (uvec2(41470u, 5019u) ^ uvec2(121460u, 3640u));
            }
          }
         case 20:
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            continue;
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
          }
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         {
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
           {
            mat2x3(727.978, -7.7, 0.0, 416.565, -378.097, -9.7);
            if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false, false)))) && true)))
             continue;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true, false)))))
           return;
          if(_GLF_DEAD(false))
           break;
          if(_GLF_WRAPPED_IF_FALSE(false))
           {
           }
          else
           {
            for(mat3x2 _GLF_SWITCH_0_42v[76], _GLF_SWITCH_0_43v, _GLF_SWITCH_0_44v; (uvec4(140224u, 64477u, 107747u, 35295u) != uvec4(167809u, 154998u, 67892u, 134334u)); (ivec4(32828, 25352, -14537, -36382) | ivec4(ivec3(38896, -97860, -82682), 68469)))
             {
              if(_GLF_DEAD(false))
               break;
              switch(_GLF_SWITCH(0))
               {
                case 0:
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  do
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                     continue;
                    mat3x4 _GLF_SWITCH_0_45v;
                    if(_GLF_DEAD(false))
                     return;
                    do
                     {
                      subgroup_id;
                      if(_GLF_DEAD(false))
                       return;
                     }
                    while(_GLF_WRAPPED_LOOP(false));
                    mat4x2(756.882, 3.8, 62.87, 5.3, -27.51, -6027.9562, 24.56, -3.5);
                    mat4x2(mat4(-6420.5717, 495.678, -166.627, -477.117, -920.427, -39.37, -56.37, 7.0, -4.5, -0.3, 17.50, -35.79, -9.3, -3.9, 5.7, 9.3));
                    mat2x3(234.894, 7.3, -99.91, -776.811, 1572.0537, -1.3);
                    if(_GLF_DEAD(false))
                     break;
                   }
                  while(false);
                 }
                else
                 {
                 }
                for(                -6.2;
 false; ivec3(-70296, -99596, -27223))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  vec3(9.1, 59.13, -1.7);
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    break;
                   }
                  mat4(349.787, 63.28, -2.5, -9163.9536, -1.1, 4030.3540, 2.0, -3534.0367, -14.18, -4.5, -2.1, 8.9, -9.1, -8.9, -2.1, 1.6);
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     return;
                    return;
                   }
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    ;
                   }
                  float _GLF_SWITCH_0_46v;
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    mat2x4(69.04, -21.91, 777.072, -171.695, -1.1, 35.07, -7.3, -20.86);
                   }
                 }
                if(_GLF_DEAD(false))
                 break;
                case 59:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(false))
                   return;
                  break;
                 }
                if(_GLF_DEAD(false))
                 continue;
                case 34:
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 continue;
                {
                 if(_GLF_DEAD(false))
                  continue;
                 ivec3 _GLF_SWITCH_0_47v, _GLF_SWITCH_0_48v[95], _GLF_SWITCH_0_49v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  continue;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  break;
                }
                if(_GLF_DEAD(false))
                 break;
                mat3 _GLF_SWITCH_0_50v[26], _GLF_SWITCH_0_51v;
                bvec3 _GLF_SWITCH_0_52v;
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    continue;
                   }
                  return;
                  if(_GLF_DEAD(false))
                   continue;
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                 break;
                if(_GLF_DEAD(false))
                 return;
                if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, true, false)))))
                 break;
                if(true)
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    break;
                   }
                  mat2 _GLF_SWITCH_0_53v;
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                   {
                    switch(_GLF_SWITCH((0 | (0 ^ 0))))
                     {
                      case 94:
                      bvec3 _GLF_SWITCH_3_0v;
                      case 0:
                      case 79:
                      case 81:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      ;
                      break;
                      default:
                      1;
                     }
                   }
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     continue;
                    return;
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   break;
                  mat2 _GLF_SWITCH_0_54v;
                  do
                   {
                    mat4x3(19.53, -64.17, 6246.7601, -3.5, 8.3, -4263.9508, 5067.3928, -395.583, -73.57, 4.9, 567.974, 7.0);
                   }
                  while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                  if(_GLF_DEAD(false))
                   break;
                  for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                   {
                    if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                     {
                      switch(_GLF_SWITCH((0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), min(_GLF_IDENTITY(int(6), ~ (~ (int(6)))), int(6)))))))
                       {
                        case 0:
                        case 36:
                        case 73:
                        case 97:
                        if(_GLF_DEAD(false))
                         return;
                        if(_GLF_WRAPPED_IF_TRUE(true))
                         {
                          all(bvec4(true, true, false, true));
                         }
                        else
                         {
                         }
                        break;
                        case 46:
                        bvec4(true, true, true, true);
                        case 67:
                        bvec4 _GLF_SWITCH_4_0v[38], _GLF_SWITCH_4_1v;
                        default:
                        1;
                       }
                     }
                    else
                     {
                     }
                   }
                  uvec3(uvec2(145457u, 179509u), atomicCompSwap(subgroup_id, 163950u, subgroup_id));
                  bvec2 _GLF_SWITCH_0_55v, _GLF_SWITCH_0_56v, _GLF_SWITCH_0_57v[24];
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    break;
                   }
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(false))
                     continue;
                    findLSB(56729);
                   }
                  else
                   {
                   }
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                   break;
                 }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 break;
                case 39:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                   return;
                  return;
                 }
                for(                (82283u & (uvec4(14667u, 12872u, 73827u, 22051u) % uvec4(146454u, 173133u, 55168u, 142449u)));
 false; bvec2(bvec4(false, true, true, true)))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        return;
                       }
                      if(_GLF_DEAD(false))
                       break;
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    bvec2 _GLF_SWITCH_0_58v[79], _GLF_SWITCH_0_59v, _GLF_SWITCH_0_60v[92];
                    for(int _injected_loop_counter = _GLF_IDENTITY(1, (false ? _GLF_FUZZED(38035) : 1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                     {
                      if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                       {
                        do
                         {
                          return;
                         }
                        while(_GLF_WRAPPED_LOOP(false));
                       }
                     }
                    bvec4 _GLF_SWITCH_0_61v[49], _GLF_SWITCH_0_62v[11];
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                       }
                      else
                       {
                        return;
                       }
                     }
                    if(_GLF_DEAD(false))
                     return;
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        do
                         {
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             return;
                            return;
                           }
                         }
                        while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        continue;
                       }
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    case 44:
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     return;
                    case 57:
                    if(_GLF_DEAD(false))
                     continue;
                    bool _GLF_SWITCH_0_63v[37], _GLF_SWITCH_0_64v, _GLF_SWITCH_0_65v[60];
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_DEAD(false))
                     continue;
                    if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                     }
                    else
                     {
                      do
                       {
                        uvec3(34047u, 152191u, 57325u);
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    if(_GLF_WRAPPED_IF_TRUE(true))
                     {
                      if(_GLF_DEAD(false))
                       return;
                     }
                    else
                     {
                     }
                    break;
                    if(_GLF_DEAD(false))
                     continue;
                    for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(0), int(0))) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), min(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                     }
                    if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                     continue;
                    case 15:
                    _GLF_SWITCH_0_59v;
                    default:
                    1;
                   }
                 }
                case 55:
                if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                 continue;
                if(_GLF_DEAD(false))
                 return;
                {
                 vec4 _GLF_SWITCH_0_66v;
                 vec2 _GLF_SWITCH_0_67v, _GLF_SWITCH_0_68v;
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  {
                   if(_GLF_DEAD(false))
                    break;
                   return;
                   if(_GLF_DEAD(false))
                    continue;
                  }
                 uvec4(11183u, 58522u, 42481u, 94508u);
                 float _GLF_SWITCH_0_69v[45], _GLF_SWITCH_0_70v;
                 do
                  {
                   if(_GLF_DEAD(false))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                  }
                 while(_GLF_WRAPPED_LOOP(false));
                 if(_GLF_DEAD(false))
                  continue;
                }
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  continue;
                 }
                if(_GLF_DEAD(false))
                 return;
                case 1:
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                  continue;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  return;
                 }
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  break;
                 }
                uvec2 _GLF_SWITCH_0_71v[28], _GLF_SWITCH_0_72v, _GLF_SWITCH_0_73v;
                break;
                case 52:
                bvec2 _GLF_SWITCH_1_0v[44], _GLF_SWITCH_1_1v[38];
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                case 31:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
                uvec3(47111u, 147660u, 175882u);
                do
                 {
                  if(_GLF_DEAD(false))
                   return;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                while(_GLF_WRAPPED_LOOP(false));
                if(_GLF_WRAPPED_IF_FALSE(false))
                 {
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     continue;
                    break;
                   }
                 }
                else
                 {
                  if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
                   return;
                  if(_GLF_DEAD(false))
                   return;
                 }
                default:
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   continue;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   break;
                  return;
                 }
                if(_GLF_DEAD(false))
                 break;
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_DEAD(false))
                 break;
                for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (int(_GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(int(4), _GLF_IDENTITY(int(4), (int(4)) | (int(4)))))); _injected_loop_counter --)
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                  1;
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    if(_GLF_DEAD(false))
                     break;
                    break;
                   }
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true)), true && (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false))), true)))))))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  break;
                 }
                if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                 break;
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 continue;
               }
              if(_GLF_DEAD(false))
               continue;
              if(_GLF_DEAD(false))
               {
                for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 0:
                    if(_GLF_DEAD(false))
                     return;
                    break;
                    case 86:
                    mat2 _GLF_SWITCH_6_0v[68], _GLF_SWITCH_6_1v;
                    case 79:
                    subgroup_id;
                    default:
                    1;
                   }
                 }
                if(_GLF_DEAD(false))
                 continue;
                return;
               }
             }
           }
          uvec2(37241u, 143603u);
          if(_GLF_DEAD(false))
           {
            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
             {
              return;
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                if(_GLF_DEAD(false))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  return;
                 }
               }
              else
               {
               }
              if(_GLF_DEAD(false))
               {
                if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
                 continue;
                if(_GLF_DEAD(false))
                 return;
                return;
               }
             }
           }
          if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           {
           }
          else
           {
            if(_GLF_DEAD(false))
             {
              do
               {
                return;
               }
              while(_GLF_WRAPPED_LOOP(false));
             }
           }
          for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
           {
            mat4(617.342, -713.556, 0.1, -82.78, -94.92, 0.5, -93.23, -6.7, -0.7, -3.5, 9.4, -9334.8343, -84.28, -4.1, 5596.1244, -942.076);
            if(_GLF_DEAD(false))
             {
              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
               break;
              break;
             }
           }
          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
           break;
          for(int _injected_loop_counter = (1 & 1); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
           {
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_DEAD(false))
             continue;
            if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, false, false, true)), bool(bvec3(bool(bvec4(true, false, false, true)), false, true))))))
             {
              if(_GLF_WRAPPED_IF_TRUE(true))
               {
                while(all(bvec4(false, true, true, false)))
                 {
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_WRAPPED_IF_TRUE(true))
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                  else
                   {
                   }
                  {
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    break;
                   if(_GLF_DEAD(false))
                    continue;
                   uvec2(32210u, 41690u);
                   mat2x3 _GLF_SWITCH_0_74v[61];
                   mat3x4(806.084, 4.5, -5469.5042, 8.0, -1152.6581, -7.1, 368.646, -8.3, -6242.5398, 5.0, 484.633, 7.3);
                   do
                    {
                     greaterThanEqual(vec2(-3695.9717, 2134.3067), vec2(6.9, 9.2));
                    }
                   while(_GLF_WRAPPED_LOOP(false));
                  }
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 87:
                      (+ vec4(59.27, 803.169, -1.2, 3.0));
                      case 82:
                      ;
                      case 0:
                      if(_GLF_DEAD(false))
                       continue;
                      case 97:
                      case 79:
                      for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
                       {
                        return;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                       }
                      break;
                      case 91:
                      mat3(mat2(-73.04, -1567.4114, -2811.8352, -0.7));
                      default:
                      1;
                     }
                   }
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                  mat4 _GLF_SWITCH_0_75v[2], _GLF_SWITCH_0_76v;
                  for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
                   {
                    if(_GLF_DEAD(false))
                     {
                      do
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          case 10:
                          case 28:
                          case 21:
                          return;
                          break;
                          case 3:
                          (mat3x4(2918.9080, -3.2, 40.18, 60.58, -4864.6235, 8371.5481, 5.4, -1.9, -2466.7777, -47.43, 6.1, -2.4) * mat3(-4391.4764, 36.81, -80.58, 956.550, 81.46, -847.292, 133.294, -8773.0901, -7.4));
                          default:
                          1;
                         }
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                     }
                    for(                    mat3x4(-9.6, -0.1, 836.560, 17.32, 9196.9282, 469.294, 8882.7958, 893.386, -9354.1091, -83.50, 728.775, -9631.2205);
 (96214 != 94687); mat3x2(4.5, -652.702, 41.14, -29.12, -64.61, 225.102))
                     {
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       break;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                   }
                  {
                   bvec3 _GLF_SWITCH_0_77v, _GLF_SWITCH_0_78v;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    return;
                   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                    continue;
                  }
                  if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   continue;
                  if(_GLF_DEAD(false))
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      return;
                     }
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    continue;
                   }
                  (1.7 - mat2x3(-427.570, -697.636, 7940.8620, 6.3, -8.0, -3.9));
                  if((mat4x3(281.044, 742.036, -1.5, 7265.3985, 1.2, 2.0, -6.2, -582.899, 255.094, 6876.2060, 719.719, -31.08) != mat4x3(-986.274, 28.96, -87.36, (-98.75 / 480.223), -772.340, -845.841, -417.553, 666.221, -174.632, 3.4, 8.2, 9841.7111)))
                   {
                    switch(_GLF_SWITCH(0))
                     {
                      case 17:
                      ;
                      case 89:
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      mat4 _GLF_SWITCH_1_0v, _GLF_SWITCH_1_1v, _GLF_SWITCH_1_2v;
                      case 0:
                      if(_GLF_DEAD(false))
                       continue;
                      case 42:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       return;
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        mat2(-2906.4316, -7.4, 4125.7993, -379.881);
                       }
                      else
                       {
                       }
                      mat2x3(6.0, -5668.1341, -57.39, -375.316, 75.02, 721.081);
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        true;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                       }
                      if(_GLF_DEAD(false))
                       break;
                      mat3(mat3x4(-59.03, -9107.7605, 271.908, 6.5, 777.104, 8.9, 86.41, -41.56, 4.1, 1.6, 7.6, 7.1));
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         continue;
                        break;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 98:
                          int _GLF_SWITCH_5_0v;
                          case 0:
                          case 13:
                          if(_GLF_DEAD(false))
                           continue;
                          if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                           break;
                          continue;
                          break;
                          case 14:
                          mat2x3(355.789, -2705.2650, -0.5, 92.16, -9.7, -8.5);
                          case 23:
                          mat2x3 _GLF_SWITCH_5_1v, _GLF_SWITCH_5_2v[90];
                          default:
                          1;
                         }
                       }
                      if(_GLF_DEAD(false))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      case 91:
                      if(_GLF_DEAD(false))
                       continue;
                      float _GLF_SWITCH_0_79v, _GLF_SWITCH_0_80v[27];
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         {
                          do
                           {
                            if(_GLF_WRAPPED_IF_FALSE(false))
                             {
                             }
                            else
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               return;
                              return;
                             }
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        break;
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         continue;
                       }
                      if(_GLF_DEAD(false))
                       continue;
                      case 83:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      if(_GLF_DEAD(false))
                       break;
                      case 69:
                      if(_GLF_DEAD(false))
                       return;
                      mat3x4((_GLF_SWITCH_0_79v / mat4(-675.420, -0.4, 548.194, 2.2, -1.4, -81.05, -9536.8960, 3.0, 135.908, 9.2, -70.96, -3702.3719, -848.323, -315.349, -5634.6132, 56.96)));
                      case 62:
                      mat2(mat3x2(4.6, 5259.2466, -5.6, -1057.8236, 9184.5118, -35.18));
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         {
                          do
                           {
                            return;
                           }
                          while(_GLF_WRAPPED_LOOP(false));
                         }
                        return;
                       }
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        return;
                       }
                      mat4x3 _GLF_SWITCH_0_81v[30];
                      case 55:
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      uvec4 _GLF_SWITCH_0_82v[55];
                      break;
                      if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                       break;
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        break;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(false))
                       continue;
                      case 53:
                      mat3(-2210.8662, 409.119, -9.0, 67.78, -27.55, -2134.6815, 2.1, -3.5, -8.6);
                      default:
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        1;
                       }
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         return;
                        return;
                       }
                      if(_GLF_DEAD(false))
                       continue;
                     }
                   }
                  else
                   {
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       return;
                      break;
                     }
                    vec2(34.42, 78.98).tts;
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     {
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          case 30:
                          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
                           {
                            if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                             return;
                            continue;
                           }
                          case 14:
                          case 41:
                          case 54:
                          continue;
                          break;
                          case 93:
                          mat2(-3.8, -313.576, -3049.5758, -19.97);
                          default:
                          1;
                         }
                       }
                      switch(_GLF_SWITCH(0))
                       {
                        case 0:
                        if(_GLF_DEAD(false))
                         continue;
                        for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                         {
                          if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
                           continue;
                          if(_GLF_DEAD(false))
                           return;
                          switch(_GLF_SWITCH(0))
                           {
                            case 9:
                            if(_GLF_DEAD(false))
                             continue;
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               return;
                              continue;
                             }
                            do
                             {
                              vec4(5.7, -80.03, -3014.0714, 845.066);
                              if(_GLF_DEAD(false))
                               continue;
                              if(_GLF_DEAD(false))
                               {
                                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                                 break;
                                break;
                               }
                             }
                            while(_GLF_WRAPPED_LOOP(false));
                            case 0:
                            case 74:
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               return;
                              return;
                             }
                            if(_GLF_DEAD(false))
                             return;
                            if(_GLF_DEAD(false))
                             break;
                            case 95:
                            if(_GLF_DEAD(false))
                             break;
                            case 84:
                            if(_GLF_DEAD(false))
                             return;
                            case 60:
                            case 8:
                            return;
                            break;
                            case 21:
                            mat2x3(-1.5, -0.0, 54.99, -5.1, 0.8, -9091.7830);
                            case 48:
                            ;
                            if(_GLF_DEAD(false))
                             return;
                            if(_GLF_DEAD(false))
                             {
                              if(_GLF_DEAD(false))
                               return;
                              break;
                             }
                            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                             return;
                            default:
                            if(_GLF_DEAD(false))
                             return;
                            1;
                            if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                             {
                              if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                               return;
                             }
                            else
                             {
                             }
                           }
                          if(_GLF_DEAD(false))
                           break;
                         }
                        if(_GLF_DEAD(false))
                         break;
                        break;
                        default:
                        1;
                       }
                     }
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     {
                      if(_GLF_DEAD(false))
                       break;
                      return;
                     }
                    if(_GLF_DEAD(false))
                     {
                      for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                       {
                        if(_GLF_DEAD(false))
                         break;
                        switch(_GLF_SWITCH(0))
                         {
                          case 0:
                          case 40:
                          case 47:
                          case 32:
                          case 33:
                          case 39:
                          case 23:
                          case 69:
                          case 19:
                          if(_GLF_DEAD(false))
                           continue;
                          return;
                          break;
                          if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                           break;
                          case 38:
                          subgroup_id;
                          default:
                          1;
                         }
                       }
                     }
                    for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < ((1 << _GLF_IDENTITY(int(3), int(3))) >> _GLF_IDENTITY(int(3), int(3)))); _injected_loop_counter ++)
                     {
                      for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(6), _GLF_IDENTITY(int(6), clamp(int(6), int(6), int(6))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
                       {
                        ;
                       }
                     }
                    if(_GLF_DEAD(false))
                     continue;
                    mat2x4(-8.5, 325.249, -103.835, 9.1, 9.8, 1.7, 8.2, 8.9);
                    ;
                    if(_GLF_DEAD(false))
                     break;
                    if(_GLF_DEAD(false))
                     continue;
                   }
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(false))
                   break;
                  if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, true, true, true)), (bool(bvec4(false, true, true, true))) || false))))
                   return;
                 }
               }
              else
               {
               }
             }
            else
             {
             }
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
           break;
          if(_GLF_DEAD(false))
           return;
          if(_GLF_DEAD(false))
           {
            if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
             return;
            break;
           }
          if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
           continue;
          if(_GLF_WRAPPED_IF_TRUE(true))
           {
            if(_GLF_DEAD(false))
             break;
            if(_GLF_WRAPPED_IF_FALSE(false))
             {
             }
            else
             {
              do
               {
                if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                 {
                  if(_GLF_DEAD(false))
                   return;
                  break;
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_WRAPPED_IF_TRUE(true))
                 {
                  if(_GLF_DEAD(false))
                   break;
                  do
                   {
                    while(false)
                     {
                      (mat2(554.112, 3605.9729, -0.2, -0.6));
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      mat3x4 _GLF_SWITCH_0_83v[79], _GLF_SWITCH_0_84v[99];
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(false))
                         break;
                        break;
                       }
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(2), int(2)))))
                         {
                          case 4:
                          mat4x3 _GLF_SWITCH_6_0v[67];
                          case 34:
                          mat3x4(mat4x3(-2021.1767, -9.2, -193.899, 6.3, 5.0, -6.0, 469.878, 3.3, -6.9, -3.4, -2.5, 9.4));
                          case 0:
                          case 42:
                          (uvec2(65729u, 142073u) / uvec2(136189u, 163600u));
                          break;
                          default:
                          1;
                         }
                       }
                      else
                       {
                        switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(0), int(0)))))))
                         {
                          case 76:
                          uvec4 _GLF_SWITCH_7_0v;
                          case 69:
                          matrixCompMult(mat4x2(28.76, -2310.2840, -54.21, 1.8, -7.6, -64.37, -8.6, 8.7), mat4x2(6.4, -6.4, -4.0, -22.72, -71.30, -631.448, 88.85, 0.7));
                          case 0:
                          case 2:
                          case 87:
                          if(_GLF_DEAD(false))
                           continue;
                          break;
                          case 12:
                          uvec3(117251u, 24993u, 113859u);
                          default:
                          1;
                         }
                       }
                      mat4x2 _GLF_SWITCH_0_85v, _GLF_SWITCH_0_86v, _GLF_SWITCH_0_87v;
                      bvec3 _GLF_SWITCH_0_88v;
                      if(_GLF_WRAPPED_IF_FALSE(false))
                       {
                       }
                      else
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         {
                          switch(_GLF_SWITCH(0))
                           {
                            case 42:
                            mat3x2 _GLF_SWITCH_6_0v[17], _GLF_SWITCH_6_1v;
                            case 15:
                            (mat4(-7.0, 8.0, 4.7, 58.92, -4.1, -106.843, -6.0, 6.5, -699.424, 4.9, -5.6, -6481.7990, -8.9, 798.130, 87.67, 6.2) + mat4(mat2x3(-22.86, 6839.7854, -199.985, -10.60, 2453.1118, 1.6)));
                            case 0:
                            case 64:
                            case 13:
                            case 85:
                            for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
                             {
                              return;
                              if(_GLF_DEAD(false))
                               break;
                             }
                            break;
                            case 94:
                            bvec4(true, true, false, true);
                            default:
                            1;
                           }
                         }
                       }
                      mat4x2 _GLF_SWITCH_0_89v, _GLF_SWITCH_0_90v, _GLF_SWITCH_0_91v;
                      mat2x4 _GLF_SWITCH_0_92v, _GLF_SWITCH_0_93v[62], _GLF_SWITCH_0_94v[9];
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        if(_GLF_DEAD(false))
                         {
                          if(_GLF_DEAD(false))
                           break;
                          if(_GLF_DEAD(false))
                           {
                            if(_GLF_DEAD(false))
                             return;
                            return;
                           }
                          return;
                         }
                        if(_GLF_WRAPPED_IF_FALSE(false))
                         {
                          if(_GLF_DEAD(false))
                           return;
                         }
                        else
                         {
                          return;
                         }
                        if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
                         continue;
                       }
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        equal(vec4(-9.4, 32.61, 688.166, 5.9), vec4(-814.560, 8815.3930, -872.797, 361.161));
                       }
                      else
                       {
                       }
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        ivec3(99003, -81390, 6791);
                       }
                      else
                       {
                       }
                      if(_GLF_WRAPPED_IF_TRUE(true))
                       {
                        if(_GLF_DEAD(false))
                         return;
                       }
                      else
                       {
                       }
                     }
                   }
                  while(_GLF_WRAPPED_LOOP(false));
                  if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                   return;
                 }
                else
                 {
                 }
                if(_GLF_DEAD(false))
                 continue;
                if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                 {
                  switch(_GLF_SWITCH(0))
                   {
                    case 94:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     break;
                    (145266u | uvec2(159573u, 49245u));
                    case 0:
                    case 46:
                    case 49:
                    case 99:
                    if(_GLF_DEAD(false))
                     break;
                    switch(_GLF_SWITCH(0))
                     {
                      case 0:
                      case 75:
                      case 90:
                      case 32:
                      mat3x4 _GLF_SWITCH_0_95v, _GLF_SWITCH_0_96v;
                      case 64:
                      if(_GLF_DEAD(false))
                       return;
                      if(_GLF_DEAD(false))
                       break;
                      if(_GLF_DEAD(false))
                       break;
                      ;
                      if(_GLF_DEAD(false))
                       break;
                      case 68:
                      case 60:
                      case 94:
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       break;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       continue;
                      if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                       {
                        if(_GLF_DEAD(false))
                         break;
                        return;
                       }
                      uvec3 _GLF_SWITCH_0_97v;
                      (- mat4x2(-5.9, -9.6, -0.2, 2.6, 25.83, 855.673, 691.455, -616.705));
                      if(_GLF_DEAD(false))
                       {
                        if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
                         return;
                        return;
                       }
                      break;
                      case 87:
                      do
                       {
                        if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                         break;
                        greaterThanEqual(ivec3(-23380, 83238, -84705), max((-42983 / ivec3(-691, 76922, 20399)), ivec3(62294, 76412, 83859)));
                        if(_GLF_DEAD(false))
                         continue;
                       }
                      while(_GLF_WRAPPED_LOOP(false));
                      if(_GLF_DEAD(false))
                       break;
                      default:
                      if(_GLF_DEAD(false))
                       break;
                      1;
                     }
                    case 76:
                    for(int _injected_loop_counter = (0 << _GLF_IDENTITY(int(7), int(7))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | (1 & ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), int(7)))))); _injected_loop_counter ++)
                     {
                      switch(_GLF_SWITCH((0 >> _GLF_IDENTITY(int(3), int(3)))))
                       {
                        case 52:
                        mat4x2(-113.740, 6.5, 27.88, 732.780, -7.4, -1873.0133, 13.11, 407.791);
                        case 79:
                        ((mat3x4(439.880, 7758.0582, 1.9, -4.0, 7.2, -1501.5558, -5.6, -6566.1781, -12.65, 17.88, -1.1, 6276.8458) - 1431.6489) - 843.872);
                        case 0:
                        case 40:
                        case 39:
                        case 7:
                        if(_GLF_DEAD(false))
                         return;
                        break;
                        default:
                        1;
                       }
                     }
                    case 66:
                    case 20:
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                    break;
                    case 16:
                    mat2x4 _GLF_SWITCH_5_0v[20], _GLF_SWITCH_5_1v[74], _GLF_SWITCH_5_2v;
                    case 10:
                    mat3x4(-7.2, -106.019, -3.0, -0.4, -69.04, -9.4, 54.80, -66.61, -900.397, -14.28, 7.7, 8.8);
                    default:
                    for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
                     {
                      1;
                     }
                   }
                  if(_GLF_WRAPPED_IF_FALSE(false))
                   {
                   }
                  else
                   {
                    if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                     return;
                   }
                 }
                else
                 {
                 }
                mat3 _GLF_SWITCH_0_98v, _GLF_SWITCH_0_99v, _GLF_SWITCH_0_100v;
               }
              while((ivec4(634, -49405, -62645, -89682) == ivec4(79521, 89115, -45376, -24008)));
             }
            if(_GLF_DEAD(false))
             break;
           }
          else
           {
           }
         }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           continue;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         if(_GLF_DEAD(false))
          continue;
         case 0:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           break;
          }
         case 32:
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
            {
             if(_GLF_DEAD(false))
              break;
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                continue;
               break;
              }
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         break;
         if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            break;
           if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                break;
               break;
              }
             do
              {
               return;
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              continue;
            }
          }
         default:
         if(_GLF_DEAD(false))
          return;
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
          }
         else
          {
           if(_GLF_DEAD(false))
            return;
           do
            {
             if(_GLF_DEAD(false))
              break;
             for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < _GLF_IDENTITY(1, min(1, 1))); _injected_loop_counter ++)
              {
               1;
              }
             do
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  return;
                 return;
                }
              }
             while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
            }
           while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
          }
        }
       if(_GLF_DEAD(false))
        {
         switch(_GLF_SWITCH((42292 & 0)))
          {
           case 0:
           case 19:
           case 75:
           case 74:
           case 66:
           case 56:
           case 36:
           if(_GLF_DEAD(false))
            continue;
           case 6:
           case 13:
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
           return;
           break;
           default:
           1;
          }
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)))));
     if(_GLF_DEAD(false))
      return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
    }
   else
    {
     return;
    }
  }
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != (1 ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = (0 ^ 0); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 | 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, true && (false))))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
