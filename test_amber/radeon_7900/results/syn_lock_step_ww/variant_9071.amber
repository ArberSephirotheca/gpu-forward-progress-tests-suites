#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_24 {
 bvec2 _f0;
} ;

struct _GLF_struct_23 {
 ivec2 _f0;
 float _f1;
 float _f2;
 uint _f3;
 uint _f4;
} ;

struct _GLF_struct_22 {
 mat3x2 _f0;
} ;

struct _GLF_struct_25 {
 mat4x3 _f0;
 _GLF_struct_22 _f1;
 int _f2;
 float _f3;
 mat2x4 _f4;
 _GLF_struct_23 _f5;
 _GLF_struct_24 _f6;
} ;

struct _GLF_struct_26 {
 uint subgroup_id;
 mat4x2 _f0;
 _GLF_struct_25 _f1;
 uint _f2;
 vec2 _f3;
 ivec4 _f4;
 mat3x4 _f5;
} ;

struct _GLF_struct_19 {
 mat2x3 _f0;
} ;

struct _GLF_struct_18 {
 vec2 _f0;
 ivec2 _f1;
} ;

struct _GLF_struct_17 {
 bvec4 _f0;
 float _f1;
 bvec4 _f2;
 mat4 _f3;
 vec3 _f4;
} ;

struct _GLF_struct_16 {
 bool _f0;
 mat3 _f1;
 ivec3 _f2;
 ivec3 _f3;
} ;

struct _GLF_struct_15 {
 uvec4 _f0;
 ivec4 _f1;
 mat2x4 _f2;
 vec2 _f3;
 bvec2 _f4;
 mat2x4 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_20 {
 _GLF_struct_15 _f0;
 mat2x4 _f1;
 _GLF_struct_16 _f2;
 _GLF_struct_17 _f3;
 _GLF_struct_18 _f4;
 _GLF_struct_19 _f5;
} ;

struct _GLF_struct_13 {
 bvec3 _f0;
 mat2x3 _f1;
 uvec3 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_12 {
 ivec2 _f0;
 uvec4 _f1;
 mat4 _f2;
 int _f3;
 bvec2 _f4;
} ;

struct _GLF_struct_14 {
 uvec2 _f0;
 ivec3 _f1;
 mat2x4 _f2;
 mat3 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
 ivec4 _f6;
} ;

struct _GLF_struct_10 {
 mat3x4 _f0;
 uvec4 _f1;
 mat2x4 _f2;
 vec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_9 {
 bvec3 _f0;
 int _f1;
 int _f2;
 ivec4 _f3;
 ivec3 _f4;
 mat2 _f5;
 vec3 _f6;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
 vec3 _f1;
 vec2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_7 {
 mat2x3 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
} ;

struct _GLF_struct_11 {
 _GLF_struct_7 _f0;
 mat2x3 _f1;
 vec4 _f2;
 _GLF_struct_8 _f3;
 mat3 _f4;
 _GLF_struct_9 _f5;
 _GLF_struct_10 _f6;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
 mat3x4 _f1;
 bvec2 _f2;
 bvec3 _f3;
 float _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_4 {
 mat4x2 _f0;
 int _f1;
 mat3x4 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_3 {
 vec2 _f0;
 mat2x3 _f1;
 bvec4 _f2;
 mat4x2 _f3;
 bvec3 _f4;
} ;

struct _GLF_struct_6 {
 _GLF_struct_3 _f0;
 _GLF_struct_4 _f1;
 _GLF_struct_5 _f2;
 bvec2 _f3;
 mat4x3 _f4;
} ;

struct _GLF_struct_1 {
 uint next_virtual_gid;
 uint _f0;
} ;

struct _GLF_struct_0 {
 ivec2 _f0;
 int _f1;
 mat3x4 _f2;
 bool _f3;
 vec4 _f4;
 bvec2 _f5;
 ivec2 _f6;
} ;

struct _GLF_struct_2 {
 _GLF_struct_0 _f0;
 vec2 _f1;
 _GLF_struct_1 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_21 {
 _GLF_struct_2 _f0;
 _GLF_struct_6 _f1;
 ivec4 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_14 _f4;
 mat4x2 _f5;
 _GLF_struct_20 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (false)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), ! (! (! (false)))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), true, true, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(0.5, -3.2)))).y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))), (bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))) || false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 1.0, 1.0, 1.0, sqrt(1.0), 1.0, sin(0.0), 1.0, 1.0)))))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, (false) && true)), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false))))), false)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, true)))) && true), false, false), bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, true)))) && true), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((false) || false, (_GLF_IDENTITY((false) || false, bool(bvec3((false) || false, false, true)))) && true), false, false)))))))))), (injectionSwitch.x > injectionSwitch.y))), bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false))) && true)) && true)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(gl_SubgroupID, mat4x2(1.0), _GLF_struct_25(mat4x3(1.0), _GLF_struct_22(mat3x2(1.0)), 1, 1.0, mat2x4(1.0), _GLF_struct_23(ivec2(1), 1.0, 1.0, 1u, _GLF_IDENTITY(1u, (1u) >> 0u)), _GLF_struct_24(bvec2(true))), _GLF_IDENTITY(1u, uint(uvec4(_GLF_IDENTITY(1u, _GLF_IDENTITY(max(1u, _GLF_IDENTITY(1u, (1u) ^ 0u)), (max(1u, _GLF_IDENTITY(1u, (1u) ^ 0u))) ^ 0u)), _GLF_IDENTITY(1u, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false))) ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(116315u, 0u + (116315u))), (true ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(116315u, 0u + (116315u)), (_GLF_IDENTITY(116315u, 0u + (116315u))) >> 0u), 0u ^ (_GLF_IDENTITY(116315u, 0u + _GLF_IDENTITY((116315u), clamp((116315u), (116315u), (116315u))))))) : _GLF_FUZZED(_GLF_IDENTITY(19599u, max(19599u, _GLF_IDENTITY(19599u, _GLF_IDENTITY((19599u), 0u | ((19599u))) << 0u)))))) : 1u), ((false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(116315u, 0u + (116315u))), (true ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(116315u, (116315u) >> 0u), 0u + (116315u)), 0u ^ (_GLF_IDENTITY(116315u, 0u + (116315u))))) : _GLF_FUZZED(_GLF_IDENTITY(19599u, max(19599u, _GLF_IDENTITY(19599u, (19599u) << _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), min(~ (0u), _GLF_IDENTITY(~ (0u), 0u | (~ (0u))))))))))))) : 1u)) | 0u)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))), vec2(1.0), ivec4(1), mat3x4(1.0));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(1.6) : injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && _GLF_IDENTITY(true, (true) && true)))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(true, (true) || false) && (false))), ((_GLF_IDENTITY(false, true && (false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), true, true)))), ! (! ((_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), true, true))))))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, ! (! (false)))), false || (! (_GLF_IDENTITY(false, ! (! (false))))))))))), true, true)))), (true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), true, true))))) && true)))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), (bool(_GLF_IDENTITY(! (false), (! (false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))))), false || ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), (bool(_GLF_IDENTITY(! (false), (! (false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))))))))))), ! (! (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (false), (! (false)) && true)), (bool(_GLF_IDENTITY(! (false), (! (false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true))))))), false || ((_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (false), (! (false)) && true), (_GLF_IDENTITY(! (false), (! (false)) && true)) && true)), (bool(_GLF_IDENTITY(! (false), (! (false)) && true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), true, true)))))))))))))))))), bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), true && (bool((false)))))), _GLF_IDENTITY(bool(bool(! (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), true, true))), ! (! (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), false || (! (false)))))))), true, true))))))))))))))))))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), true, true)))), _GLF_IDENTITY(false, false || (false)) || (true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), true, true)))))))))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), true && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), true, true))))))))))))), bool(bool(! (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(true, ! (! (true))) && (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), bool(bvec4(bool(bvec2(false, true)), true, true, true)))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), _GLF_IDENTITY(true, true && (true)) && (_GLF_IDENTITY(bool(bool(! (false))), bool(bvec3(bool(bool(! (false))), true, true)))))))))))))))))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, false)), false || (bool(bvec3(_GLF_DEAD(false), false, false)))))) && true))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), (float(float(injectionSwitch.x))) - 0.0)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, true && (true)), false)), _GLF_IDENTITY(bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false)))), ! (! _GLF_IDENTITY((bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), true && (! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, 1.0, log(1.0))), mix(vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(8.7)), vec2((vec2(mat2x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, 1.0, log(1.0))))[0], (vec2(mat2x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, 1.0, log(1.0))))[1]), bvec2(true, true)))).y))), true, false))))), true && ((bool(bool(bool(bvec3(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))), true && (! (_GLF_IDENTITY((false), bool(bvec4((false), false, true, true)))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat2x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, 1.0, log(1.0))), mix(vec2(_GLF_FUZZED(-2.1), _GLF_FUZZED(8.7)), vec2((vec2(mat2x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, 1.0, log(1.0))))[0], (vec2(mat2x4(injectionSwitch, 0.0, 0.0, log(1.0), 0.0, 1.0, log(1.0))))[1]), bvec2(true, true)))).y))), true, false))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(false))
          return;
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))) || false))
        barrier();
       barrier();
      }
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat4(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), _GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(1.0, 1.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(0.0, abs(0.0), 1.0), vec3(1.0, 1.0, 0.0)), max(dot(vec3(0.0, abs(0.0), 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), dot(vec3(0.0, _GLF_IDENTITY(abs(0.0), mix(float(_GLF_FUZZED(-464.146)), float(abs(0.0)), bool(true))), 1.0), vec3(1.0, 1.0, 0.0)))), float(mat2x3(dot(_GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), _GLF_IDENTITY(vec3(vec4(_GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), min(vec3(0.0, abs(0.0), 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0)), vec3(mat4x2(vec3(vec4(_GLF_IDENTITY(vec3(0.0, abs(0.0), 1.0), min(vec3(0.0, abs(0.0), 1.0), vec3(0.0, abs(0.0), 1.0))), 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0)))), vec3(1.0, 1.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0)))), 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 0.0))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, false))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(false, true && (false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)))).x > injectionSwitch.y)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 1.0))), injectionSwitch.x)) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y, clamp(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, float(float(injectionSwitch.y))))) : _GLF_FUZZED(-5.7))))), injectionSwitch.y)), ! (! (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)) || false, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)) || false, (_GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) && true)), ! (! ((_GLF_IDENTITY((false), ((false)) && true))))) || false) || false)))))) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, true)))) && true)))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), mat2(1.0) * (injectionSwitch)))).y)))), ! (! (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false))))), (bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)) || false)))))) && true), ! (! (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) && true)))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-437.878)), bool(false))))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, max(gl_NumWorkGroups, gl_NumWorkGroups)).x;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (gl_WorkGroupSize))).x;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_id = _GLF_IDENTITY(gl_WorkGroupID.x, max(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x)))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true)), false || (bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), true))))))))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (workgroup_size)), workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), max(_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))))), (clamp(workgroup_size, _GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(min(workgroup_size, workgroup_size), (min(workgroup_size, workgroup_size)) >> 0u)))) - (((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(_GLF_IDENTITY(5u, clamp(5u, 5u, 5u))), _GLF_IDENTITY(uint(5u), max(_GLF_IDENTITY(uint(5u), (_GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))) / 1u), _GLF_IDENTITY(uint(5u), (true ? uint(5u) : _GLF_FUZZED(subgroup_size))))))) ^ 1u))), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), max(~ (workgroup_size), ~ (workgroup_size))), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u)))), _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))))) << 0u)))), ((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), max(~ (workgroup_size), ~ (workgroup_size))), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u)))), _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))))) << 0u))))) | ((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), max(~ (workgroup_size), ~ (workgroup_size))), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((_GLF_IDENTITY(workgroup_size, uint(uvec2(workgroup_size, 0u)))), _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size))))))) << 0u))))))) * _GLF_IDENTITY(workgroup_id, (_GLF_IDENTITY(workgroup_id, uint(uint(_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id)))))) << 0u), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (1u ^ 0u) * (workgroup_size)), clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 1u * (workgroup_size)), min(workgroup_size, workgroup_size)))), ~ (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), ((workgroup_size)) | 0u)) | _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), uint(_GLF_IDENTITY(uvec2((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u), (uvec2((0u >> _GLF_IDENTITY(uint(7u), uint(7u))), 0u)) ^ uvec2(0u, 0u))))), min(~ (workgroup_size), ~ _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), min(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), clamp(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), _GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))))))) - 0u)), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), 0u ^ (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))) | ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))))), max(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))) | ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))))), clamp((_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))) | ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))) | ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))) | ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))))))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))) | ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))))))) ^ 0u))) << 0u))))) * _GLF_IDENTITY(workgroup_id, _GLF_IDENTITY((workgroup_id), (true ? (workgroup_id) : _GLF_FUZZED(subgroup_size))) << 0u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (workgroup_size), min(~ _GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (workgroup_size)))))), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) - 0u)) >> 0u)) << 0u)))), (~ (_GLF_IDENTITY(~ (workgroup_size), min(~ _GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(workgroup_id) : (workgroup_size)))))), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) - 0u)) >> 0u)) << 0u))))) * 1u)) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, min(workgroup_id, workgroup_id)), (workgroup_id) << 0u), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) + 0u)) | (workgroup_size)), workgroup_size, workgroup_size)), clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))))) : _GLF_FUZZED(workgroup_id))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), max(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(atomicExchange(workgroup_size, num_workgroup)) : (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))))))) << _GLF_IDENTITY(0u, 1u * (0u)))) - 0u) << 0u)))), max((_GLF_IDENTITY(~ (workgroup_size), min(~ _GLF_IDENTITY((workgroup_size), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY((workgroup_size), 0u ^ ((workgroup_size))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size)))), clamp(_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size)))), _GLF_IDENTITY(uint(uvec3((_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size)))), 1u, 1u)), max(uint(uvec3((_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size)))), 1u, 1u)), uint(uvec3((_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size)))), 1u, 1u))))), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size)))), ((_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size))))) - 0u), (_GLF_IDENTITY((workgroup_size), clamp((workgroup_size), (workgroup_size), (workgroup_size))))))), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) | _GLF_IDENTITY(((workgroup_size)), 1u * (((workgroup_size))))), max((workgroup_size), (workgroup_size)))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), min(_GLF_IDENTITY(~ (workgroup_size), max(_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), ~ (~ ((workgroup_size)))), ~ (~ (~ (workgroup_size)))), ~ (workgroup_size))), ~ _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u, (true ? _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u, ~ (~ ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << _GLF_IDENTITY(0u, ~ (~ (0u)))))) : _GLF_FUZZED(packHalf2x16(injectionSwitch)))))))), (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))), (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))) << 0u)), clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))), (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))) << 0u)), _GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))), (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))) << 0u)), max(false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))), (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))) << 0u)), false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))), (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))) << 0u)))), false ? _GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), clamp(_GLF_IDENTITY(_GLF_FUZZED(subgroup_local_id), max(_GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))), _GLF_FUZZED(subgroup_local_id), _GLF_FUZZED(subgroup_local_id))) : (_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))), (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))) << 0u))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size)), min(_GLF_IDENTITY(workgroup_size, (workgroup_size) >> 0u), workgroup_size)))), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))), max((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), ((workgroup_size)) ^ 0u), max((workgroup_size), (workgroup_size)))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))), (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec3(_GLF_IDENTITY(bvec2(bvec4(bvec2(false, false), true, false)), bvec2(bvec2(bvec2(bvec4(bvec2(false, false), true, false))))), true)))))) ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u, ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u) | 0u))))))))))) | _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), (clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) / 1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), _GLF_IDENTITY(min(~ (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)), _GLF_IDENTITY(max(min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))), (max(min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))) | (max(min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))))))), max((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), workgroup_size, workgroup_size))))), max((workgroup_size), (workgroup_size)))) << 0u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), workgroup_size, workgroup_size))))), max((workgroup_size), (workgroup_size)))) << 0u), 0u ^ (~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), workgroup_size, workgroup_size))))), max((workgroup_size), (workgroup_size)))) << 0u))) : _GLF_FUZZED(workgroup_id)))))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), (true ? (workgroup_size) : _GLF_FUZZED(((workgroup_id) --)))), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (workgroup_size) - (0u << _GLF_IDENTITY(uint(5u), uint(5u))))) / 1u)), ~ (_GLF_IDENTITY(~ ((workgroup_size)), clamp(~ ((workgroup_size)), ~ ((workgroup_size)), ~ ((workgroup_size))))))))) << 0u)))))))))), uint(uvec4((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))), (clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))) / 1u)), ~ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) * 1u), _GLF_IDENTITY(min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)), max(min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, workgroup_size))), max((workgroup_size), (workgroup_size)))) << 0u)), min(~ (workgroup_size), ~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u), max(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u), _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))))))))), max((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u)))), _GLF_IDENTITY((_GLF_IDENTITY(~ (workgroup_size), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u ^ (_GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(subgroup_size) : workgroup_size)), workgroup_size, workgroup_size))))), max((workgroup_size), (workgroup_size)))) << 0u)))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(~ _GLF_IDENTITY((workgroup_size), ~ (~ (_GLF_IDENTITY((workgroup_size), 0u | ((workgroup_size)))))), min(~ (workgroup_size), ~ _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), max((workgroup_size), _GLF_IDENTITY((workgroup_size), ~ (_GLF_IDENTITY(~ ((workgroup_size)), clamp(~ ((workgroup_size)), _GLF_IDENTITY(~ ((workgroup_size)), max(_GLF_IDENTITY(~ ((workgroup_size)), min(~ ((workgroup_size)), ~ ((workgroup_size)))), _GLF_IDENTITY(~ ((workgroup_size)), uint(_GLF_IDENTITY(uvec4(~ ((workgroup_size)), 0u, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))), (uvec4(~ ((workgroup_size)), 0u, 0u, (0u >> _GLF_IDENTITY(uint(8u), uint(8u))))) >> uvec4(0u, 0u, 0u, 0u)))))), ~ ((workgroup_size))))))))) << 0u)))))))))), (0u << _GLF_IDENTITY(uint(0u), _GLF_IDENTITY(uint(0u), 0u | (uint(0u))))), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)))) * _GLF_IDENTITY(_GLF_IDENTITY(workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_id, clamp(workgroup_id, workgroup_id, workgroup_id))))), (workgroup_id) << 0u)) | 0u), _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, clamp(workgroup_size, workgroup_size, _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)))), ~ (_GLF_IDENTITY(~ (workgroup_size), min(_GLF_IDENTITY(~ (workgroup_size), _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (~ (workgroup_size)), clamp(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), _GLF_IDENTITY(~ (~ (workgroup_size)), max(~ (~ (workgroup_size)), ~ (~ (workgroup_size)))), ~ (~ (workgroup_size))))), (false ? _GLF_FUZZED(subgroup_size) : ~ (_GLF_IDENTITY(~ (~ (workgroup_size)), clamp(_GLF_IDENTITY(~ (~ (workgroup_size)), (~ (~ (workgroup_size))) | (~ (~ (workgroup_size)))), _GLF_IDENTITY(~ (~ (workgroup_size)), max(~ (_GLF_IDENTITY(~ (workgroup_size), (~ (workgroup_size)) | (~ (workgroup_size)))), ~ (~ (workgroup_size)))), ~ (~ (workgroup_size)))))))), ~ _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u, (_GLF_IDENTITY((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u, 0u ^ ((_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))) << 0u))) * 1u)), min(_GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY((workgroup_size), _GLF_IDENTITY(max((workgroup_size), (workgroup_size)), min(max((workgroup_size), (workgroup_size)), max((workgroup_size), (workgroup_size)))))) << 0u), _GLF_IDENTITY((workgroup_size), (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size))), uint(uint(_GLF_IDENTITY((workgroup_size), max((workgroup_size), (workgroup_size)))))), 0u, 0u)))) << 0u))))))) * _GLF_IDENTITY(workgroup_id, (workgroup_id) << 0u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))) || false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, true && _GLF_IDENTITY((false), ((false)) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, (false ? _GLF_FUZZED((workgroup_size - workgroup_base)) : _GLF_struct_replacement_26.subgroup_id)))) * subgroup_size) | (_GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size, min(_GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size, _GLF_IDENTITY(_GLF_struct_replacement_26.subgroup_id, max(_GLF_struct_replacement_26.subgroup_id, _GLF_struct_replacement_26.subgroup_id)) * subgroup_size))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), true, true, false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false)))), bool(_GLF_IDENTITY(bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))), true && (bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))))))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, (false) && true), false, false))))) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) || false))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x, (injectionSwitch.x) + 0.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))), (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, bool(bvec2(false, true))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))) || false), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ((_GLF_IDENTITY(false, true && (false))) || false) || false))), ! (_GLF_IDENTITY(! (bool(bool(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ((_GLF_IDENTITY(false, true && (false))) || false) || false)))), (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ((_GLF_IDENTITY(false, true && (false))) || false) || false), bool(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(false, true && (false))) || false, ((_GLF_IDENTITY(false, true && (false))) || false) || false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))) || false)))))))
    barrier();
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(subgroup_base, (subgroup_base) - 0u), min(workgroup_base + subgroup_base, workgroup_base + subgroup_base)) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_2(_GLF_struct_0(ivec2(1), _GLF_IDENTITY(1, _GLF_IDENTITY((1) | (1), ((1) | _GLF_IDENTITY((1), (true ? _GLF_IDENTITY((1), min((1), (1))) : _GLF_FUZZED(39067)))) | 0)), mat3x4(1.0), true, vec4(1.0), bvec2(true), ivec2(1)), vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-4195.5870)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! (false)), false, false, true))))), bool(bvec2(bool(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ((! (false))) || false))), false)))))), _GLF_struct_1(workgroup_base + subgroup_base + ((subgroup_local_id + 1) % subgroup_size), 1u), mat2x4(1.0)), _GLF_struct_6(_GLF_struct_3(_GLF_IDENTITY(vec2(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2((vec2(1.0))[0], _GLF_FUZZED(4335.6183)), vec2(_GLF_FUZZED(6.1), (vec2(1.0))[1]), bvec2(false, true))), mix(vec2(_GLF_FUZZED(-31.75), _GLF_FUZZED(2087.2641)), vec2(_GLF_IDENTITY((vec2(1.0)), (false ? _GLF_FUZZED(vec2(2.4, -87.79)) : (vec2(1.0))))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.5)), bool(false)))))[1]), _GLF_IDENTITY(bvec2(true, true), bvec2(bvec4(_GLF_IDENTITY(bvec2(true, true), bvec2(bvec3(bvec2(true, true), false))), true, false))))), clamp(_GLF_IDENTITY(vec2(1.0), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-31.75), _GLF_FUZZED(2087.2641)), vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.5)), bool(false)))))[1]), bvec2(true, true)), vec2(vec3(mix(vec2(_GLF_FUZZED(-31.75), _GLF_FUZZED(2087.2641)), vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.5)), bool(false)))))[1]), bvec2(true, true)), _GLF_ONE(1.0, injectionSwitch.y))))), _GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-31.75), _GLF_FUZZED(2087.2641)), vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.5)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-31.75), _GLF_FUZZED(2087.2641)), vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(2.5)), bool(false)))))[1]), bvec2(true, true))), vec2(mat4x2(_GLF_IDENTITY(vec2(1.0), mix(vec2(_GLF_FUZZED(-31.75), _GLF_FUZZED(2087.2641)), vec2((vec2(1.0))[0], (vec2(_GLF_IDENTITY(1.0, mix(float(1.0), _GLF_IDENTITY(float(_GLF_FUZZED(2.5)), float(mat4(float(_GLF_FUZZED(2.5)), 0.0, abs(0.0), tan(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0))), bool(false)))))[1]), bvec2(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(true && (true), ! (! (true && (_GLF_IDENTITY(true, bool(bvec4(true, true, false, true))))))))))), true))), _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(79.03))))), 0.0, 1.0, 1.0, 0.0)))))) + vec2(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) / 1.0)), float(_GLF_FUZZED(8.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), mat2x3(1.0), bvec4(true), mat4x2(1.0), bvec3(true)), _GLF_struct_4(mat4x2(1.0), _GLF_IDENTITY(1, max(1, 1)), mat3x4(1.0), mat3x2(1.0)), _GLF_struct_5(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(1, max(1, _GLF_IDENTITY(1, int(int(1))))), min(1, _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), _GLF_IDENTITY(1, (1) >> 0), _GLF_IDENTITY(_GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, _GLF_IDENTITY((1), _GLF_IDENTITY(int(ivec4(_GLF_IDENTITY((1), ((1)) | 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), 0)), ~ (~ (int(ivec4(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), ((1)) | 0), 0, int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, (0) / 1))))))))) | _GLF_IDENTITY(0, max(0, 0))))), _GLF_IDENTITY(int(int(1)), (int(int(1))) * 1))))))), mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5505.8474)), bool(false))), 1.0, 1.0))))), bvec2(true), bvec3(true), 1.0, ivec2(1)), bvec2(true), mat4x3(1.0)), ivec4(1), _GLF_struct_11(_GLF_struct_7(mat2x3(1.0), mat2x3(1.0), mat4x3(1.0)), mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1.7) : _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-3337.9858)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-1.9))))), 1.0)), (true ? _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)) : _GLF_FUZZED(exp(-2656.2604)))), 1.0))), vec4(1.0), _GLF_struct_8(bvec4(_GLF_IDENTITY(true, false || (true))), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), mix(vec3(_GLF_FUZZED(3329.9910), _GLF_FUZZED(-9.8), _GLF_FUZZED(-3.9)), vec3((vec3(1.0))[0], _GLF_IDENTITY((vec3(1.0))[1], clamp((vec3(1.0))[1], (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), min(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))), vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0))))))[1], (vec3(1.0))[1])), (vec3(1.0))[2]), bvec3(true, _GLF_IDENTITY(true, false || (true)), true))), _GLF_IDENTITY((vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - vec3(0.0, 0.0, 0.0), (true ? (vec3(_GLF_IDENTITY(1.0, max(1.0, 1.0)))) - vec3(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0) : _GLF_FUZZED(vec3(-8.8, -500.056, 2.5))))), vec2(1.0), mat4(1.0)), mat3(1.0), _GLF_struct_9(bvec3(true), 1, 1, ivec4(1), ivec3(_GLF_IDENTITY(1, min(_GLF_IDENTITY(1, (1) / 1), 1))), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x4(_GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, 0.0 + (1.0)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(1.0, 0.0 + (1.0))), float(_GLF_FUZZED(-6.4)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), mix(_GLF_IDENTITY(float(mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(tan(0.0)), exp(0.0), 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-66.05) : float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(tan(0.0)), exp(0.0), 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))))) + (1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.4, mix(float(-6.4), float(_GLF_FUZZED(5030.4850)), bool(false))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), mix(float(float(mix(float(_GLF_IDENTITY(1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(tan(0.0)), exp(0.0), 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0)), (false ? _GLF_FUZZED(-66.05) : float(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 1.0, sin(tan(0.0)), exp(0.0), 1.0, 0.0, 1.0, length(vec3(0.0, 0.0, 0.0)), 1.0, 0.0, 1.0, 0.0))))) + (1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-6.4, mix(float(-6.4), float(_GLF_FUZZED(5030.4850)), bool(false))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), float(_GLF_FUZZED(4.2)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), float(_GLF_FUZZED(float(_GLF_IDENTITY(_GLF_IDENTITY(73825, (73825) - 0), ~ (~ (_GLF_IDENTITY(73825, (73825) - 0))))))), bool(false))))), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(9717.3758, -5174.9854, 257.164, -41.94)) : mat2(1.0))) : _GLF_FUZZED(mat2(2914.0555, -15.32, 5.1, -2.8)))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(44.59, -79.09)))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(9717.3758, -5174.9854, 257.164, -41.94)) : mat2(1.0))), (_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(9717.3758, -5174.9854, 257.164, -41.94)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x3(mat2(1.0))), (true ? mat2(mat2x3(mat2(1.0))) : _GLF_FUZZED(mat2(-72.05, 85.26, 8540.0373, -9716.6607)))))))) - _GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (true)) ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(6488.7946, -7.3, -873.973, -8.3))))) : _GLF_FUZZED(mat2(2914.0555, -15.32, 5.1, -2.8)))), (_GLF_IDENTITY(mat2(1.0), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED(vec2(44.59, -79.09)))).y)) ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(9717.3758, -5174.9854, 257.164, -41.94)) : mat2(1.0))), (_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(1.0))), (false ? _GLF_FUZZED(mat2(9717.3758, -5174.9854, 257.164, -41.94)) : _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(mat2(mat2x3(mat2(1.0))), (true ? mat2(mat2x3(mat2(1.0))) : _GLF_FUZZED(mat2(-72.05, 85.26, 8540.0373, -9716.6607)))))))) - _GLF_IDENTITY(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (true)) ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(6488.7946, -7.3, -873.973, -8.3)))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (true)) ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(6488.7946, -7.3, -873.973, -8.3))))), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (true)) ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(6488.7946, -7.3, -873.973, -8.3))))))))), transpose(transpose(mat2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (true)) ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(6488.7946, -7.3, -873.973, -8.3))))), mat3x2(mat4x3(mat3x2(_GLF_IDENTITY(mat2(0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(true, true && (true)) ? mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(6488.7946, -7.3, -873.973, -8.3)))))))))))))) : _GLF_FUZZED(mat2(2914.0555, -15.32, 5.1, -2.8))))) / mat2(1.0, 1.0, 1.0, 1.0)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))), (_GLF_TRUE(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (! ((true)))) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), true && ((injectionSwitch.x < injectionSwitch.y)))))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5413.6116), _GLF_FUZZED(-9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5413.6116), _GLF_FUZZED(-9.3)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false))))), (false) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5413.6116), _GLF_FUZZED(_GLF_IDENTITY(-9.3, max(-9.3, -9.3)))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))) && true)) || false)), _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y), true, true))))), false || (bool(_GLF_IDENTITY(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y), true, true), bvec3(bvec3(bvec3((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mat2(1.0) * ((injectionSwitch) * mat2(1.0)))).y), true, true))))))))) ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(9717.3758, -5174.9854, 257.164, -41.94)) : mat2(1.0))) : _GLF_FUZZED(mat2(2914.0555, -15.32, 5.1, _GLF_IDENTITY(-2.8, mix(float(-2.8), float(_GLF_FUZZED((4.7 + -68.44))), bool(false))))))) : _GLF_FUZZED(_GLF_IDENTITY((mat2(7.6, 1.4, -49.40, -9280.6620)), mat2(mat4x3(_GLF_IDENTITY((_GLF_IDENTITY(mat2(7.6, 1.4, -49.40, -9280.6620), (_GLF_IDENTITY(mat2(7.6, 1.4, -49.40, -9280.6620), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (mat2(7.6, 1.4, -49.40, -9280.6620)))) / mat2(1.0, 1.0, 1.0, 1.0))), mat2(1.0) * ((_GLF_IDENTITY(mat2(7.6, 1.4, -49.40, -9280.6620), (_GLF_IDENTITY(mat2(7.6, 1.4, -49.40, -9280.6620), mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), 0.0 + (_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (true ? _GLF_ZERO(0.0, injectionSwitch.x) : _GLF_FUZZED(1741.0464)))))) + (mat2(7.6, 1.4, -49.40, -9280.6620)))) / mat2(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) + 0.0)), float(_GLF_FUZZED(89.81)), bool(false))), 1.0, 1.0, 1.0))))))))))) : _GLF_FUZZED(mat2(99.73, _GLF_IDENTITY(4913.2205, clamp(4913.2205, _GLF_IDENTITY(4913.2205, min(4913.2205, 4913.2205)), 4913.2205)), 21.82, 718.036))))), _GLF_IDENTITY((transpose(mat2(1.0))), mat2(1.0) * ((_GLF_IDENTITY(transpose(mat2(1.0)), mat2(0.0, 0.0, 0.0, 0.0) + (transpose(mat2(1.0))))))) + _GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? 0.0 : _GLF_FUZZED(182.841))), 0.0)), 0.0, 0.0, 0.0), (true ? _GLF_IDENTITY(mat2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) - 0.0), _GLF_IDENTITY(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(182.841), (_GLF_IDENTITY(_GLF_FUZZED(182.841), max(_GLF_FUZZED(182.841), _GLF_FUZZED(182.841)))) * 1.0))), 0.0), float(vec4(min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(182.841), (_GLF_IDENTITY(_GLF_FUZZED(182.841), max(_GLF_FUZZED(182.841), _GLF_FUZZED(182.841)))) * 1.0))), 0.0), 1.0, 1.0, 1.0)))), 0.0, 0.0, 0.0), transpose(transpose(mat2(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(182.841, clamp(_GLF_IDENTITY(182.841, min(182.841, 182.841)), 182.841, 182.841))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (true ? 0.0 : _GLF_FUZZED(_GLF_IDENTITY(182.841, clamp(_GLF_IDENTITY(182.841, min(182.841, 182.841)), 182.841, 182.841)))))), float(_GLF_FUZZED(3.6)), bool(false))), 0.0)), 0.0, 0.0, 0.0)))) : _GLF_FUZZED((mat2(-12.09, 9.9, 7.1, -7.9) / mat2(-7.5, 5.5, -85.21, _GLF_IDENTITY(-95.79, clamp(-95.79, -95.79, -95.79)))))))))))), _GLF_IDENTITY(transpose(transpose(mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * (_GLF_IDENTITY(mat2(1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0)), mat2(mat2(transpose(mat2(1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))), (true ? transpose(_GLF_IDENTITY(transpose(mat2(1.0)), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2(-655.875, 68.54, 71.98, -7937.0959)))), _GLF_IDENTITY((transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0), (true ? (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-8189.2232, -913.578, 7421.4218, -3384.1010))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(73.71)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), mat2(1.0) * ((transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(1.0))) + mat2(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-332.673) : 0.0)), 0.0), (true ? (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9.8) : _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(26.09)))))) : _GLF_FUZZED(mat2(-8189.2232, -913.578, 7421.4218, -3384.1010))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(73.71)), vec2((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))[0], (injectionSwitch)[1]), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))))), mat2(1.0) * (transpose(_GLF_IDENTITY(transpose(mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), ((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))) + mat2(0.0, 0.0, 0.0, 0.0), (true ? (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-8189.2232, -913.578, 7421.4218, -3384.1010))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(73.71)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), max(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), (true ? _GLF_IDENTITY(transpose(mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), ((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))) + mat2(0.0, 0.0, 0.0, 0.0), (true ? (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-8189.2232, -913.578, 7421.4218, -3384.1010))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(73.71)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), max(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))), mat2(_GLF_IDENTITY(mat2x3(transpose(mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), ((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))) + mat2(0.0, 0.0, 0.0, 0.0), (true ? (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-8189.2232, -913.578, 7421.4218, -3384.1010))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(73.71)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), max(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))))), transpose(transpose(mat2x3(transpose(mat2(mat2x4(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), mat2(1.0) * _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), (_GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))), ((_GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0)))))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0)))), (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0))), (transpose(_GLF_IDENTITY(transpose(mat2(1.0)), _GLF_IDENTITY((transpose(mat2(_GLF_IDENTITY(1.0, max(1.0, 1.0))))) + mat2(0.0, 0.0, 0.0, 0.0), (true ? (transpose(mat2(1.0))) + mat2(0.0, 0.0, 0.0, 0.0) : _GLF_FUZZED(mat2(-8189.2232, -913.578, 7421.4218, -3384.1010))))))) - mat2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-3.2), _GLF_FUZZED(73.71)), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), clamp(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), _GLF_IDENTITY(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), max(vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), vec2((injectionSwitch)[0], (injectionSwitch)[_GLF_IDENTITY(1, (1) ^ (0 | 0))]))), bvec2(true, true))).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))))))))) : _GLF_FUZZED(mat2(2821.5702, -469.048, -5.4, 838.793))))))))), vec3(1.0)), _GLF_struct_10(mat3x4(1.0), _GLF_IDENTITY(uvec4(1u), ~ (~ (uvec4(1u)))), mat2x4(1.0), vec4(1.0), ivec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (1)))) >> 0), (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) | (1)))))) >> 0)) ^ _GLF_IDENTITY((0 ^ 0), clamp((0 ^ 0), _GLF_IDENTITY((0 ^ 0), ((0 ^ 0)) ^ 0), (0 ^ 0)))), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) | 0) << (72114 & 0), ~ (~ (_GLF_IDENTITY((_GLF_IDENTITY(1, max(1, 1))), ((_GLF_IDENTITY(1, max(1, 1)))) | 0) << (72114 & 0)))))))), _GLF_struct_14(uvec2(_GLF_IDENTITY(1u, (1u) << uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ivec3(1), mat2x4(1.0), mat3(1.0), _GLF_struct_12(ivec2(1), _GLF_IDENTITY(uvec4(1u), uvec4(0u, 0u, 0u, 0u) | (uvec4(1u))), mat4(1.0), 1, bvec2(true)), _GLF_struct_13(bvec3(_GLF_IDENTITY(true, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))) || (_GLF_IDENTITY(true, ! (! (true)))))), mat2x3(1.0), uvec3(1u), uvec4(1u)), ivec4(_GLF_IDENTITY(1, _GLF_IDENTITY((1) << 0, max((1) << 0, _GLF_IDENTITY((1) << 0, ((1) << 0) * 1)))))), mat4x2(1.0), _GLF_struct_20(_GLF_struct_15(_GLF_IDENTITY(uvec4(1u), clamp(uvec4(1u), uvec4(1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u))), clamp(_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u))), _GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u))))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u), (((uvec4(1u))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, (0u) ^ 0u), 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u)))), max(~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, _GLF_IDENTITY(0u, (0u) ^ (1u ^ 1u)), 0u, 0u)))), ~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), max(uvec4(1u), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 0u + (0u)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(((uvec4(1u))) << uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) - 0u))), 0u), (((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)) * uvec4(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((vec2(-4.4, -0.1) - vec2(69.85, -690.829))))).y)))), (uvec4(1u))))), _GLF_IDENTITY(((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u), (((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u)) | (((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u)))))), max(~ (_GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY(~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u)), (~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u))) - uvec4(0u, 0u, 0u, 0u)))), ~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((_GLF_IDENTITY(uvec4(1u), (true ? uvec4(1u) : _GLF_FUZZED(uvec4(117800u, 119424u, 33872u, 120458u))))), ((_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)), min(_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))))))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u)))))), (_GLF_IDENTITY(~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY(_GLF_IDENTITY((uvec4(1u)), clamp((uvec4(1u)), _GLF_IDENTITY((uvec4(1u)), uvec4(1u, 1u, 1u, 1u) * ((uvec4(1u)))), (uvec4(1u)))), _GLF_IDENTITY(((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u), (((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)) * uvec4(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), min(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_ONE(1.0, injectionSwitch.y))), _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), 1.0 * (_GLF_ONE(1.0, injectionSwitch.y))))), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y)))), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, 0u, 0u, 0u)))), max(~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u, 0u, 0u)), (uvec4(1u))))), ((~ (uvec4(1u)))) + uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u | (0u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))) * 1u), 0u, 0u)))), ~ (_GLF_IDENTITY(uvec4(1u), ~ _GLF_IDENTITY((_GLF_IDENTITY(~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u)))), clamp(~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u)))), ~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u)))), ~ _GLF_IDENTITY((uvec4(1u)), min(_GLF_IDENTITY((uvec4(1u)), ((_GLF_IDENTITY(uvec4(1u), uvec4(1u, 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(1u), (uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u)))))) << uvec4(0u, 0u, 0u, 0u)), (uvec4(1u))))))), ((~ (uvec4(1u)))) + uvec4(_GLF_IDENTITY(0u, (0u) - 0u), 0u, 0u, 0u))))))) >> uvec4(0u, 0u, 0u, 0u))) ^ (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (false ? _GLF_FUZZED(uvec4(52433u, 46984u, 78668u, 62956u)) : uvec4(0u, 0u, 0u, 0u)))) ^ uvec4(0u, 0u, 0u, 0u)) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u)))))))), ivec4(_GLF_IDENTITY(1, 1 * (1))), mat2x4(1.0), vec2(1.0), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, _GLF_IDENTITY(true, (true) || false), _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))), true && (bool(bvec4(true, true, true, true))))), bool(bvec4(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, true)), true && (bool(bvec4(_GLF_IDENTITY(true, bool(bvec2(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, (true) && true))), true))), true, true, true))))), false, true, _GLF_IDENTITY(true, ! (! (true))))))), mat2x4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, max(1.0, 1.0))) - 0.0)), vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat4(1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 0.0, 0.0, 1.0, 1.0)), mix(float(float(mat4(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x2(1.0, tan(0.0), 1.0, 0.0, round(length(normalize(1.0))), 0.0))), 0.0, 1.0, 0.0, log(1.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0))), float(_GLF_FUZZED(8.9)), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true))), false || (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bool(bvec2(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true)))))))))), mat2x4(1.0), _GLF_struct_16(true, mat3(1.0), _GLF_IDENTITY(ivec3(1), (false ? _GLF_FUZZED(ivec3(14300, 42312, -42939)) : ivec3(1))), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(false ? _GLF_FUZZED(20372) : 1, _GLF_IDENTITY(~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(20372) : 1, (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((false) || false)))) ? _GLF_FUZZED(20372) : 1, 0 | (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) || false)))) ? _GLF_FUZZED(20372) : 1, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))))) || false)))) ? _GLF_FUZZED(20372) : 1) - (0 << _GLF_IDENTITY(int(3), int(3))))))) - 0))), (_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(20372, (20372) - 0), ~ (~ (20372)))) : 1, (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(false, (false) || false))) ? _GLF_FUZZED(20372) : 1) - 0))), min(~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(20372) : _GLF_IDENTITY(1, 0 | (1)), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) || false) ? _GLF_FUZZED(20372) : 1) - 0))), ~ (~ (_GLF_IDENTITY(false ? _GLF_FUZZED(20372) : 1, (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(20372) : 1) - 0)))))) - 0))))) << int(_GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_17(bvec4(_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, true && (true)), true, false, false)))), 1.0, bvec4(_GLF_IDENTITY(true, (true) || false)), mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), vec3(1.0)), _GLF_struct_18(vec2(1.0), ivec2(1)), _GLF_struct_19(mat2x3(1.0))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))), bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y), true && (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), injectionSwitch)), max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-736.798), _GLF_FUZZED(9.9)), (_GLF_IDENTITY(vec2(_GLF_FUZZED(-736.798), _GLF_FUZZED(9.9)), min(vec2(_GLF_FUZZED(-736.798), _GLF_FUZZED(9.9)), vec2(_GLF_FUZZED(-736.798), _GLF_FUZZED(9.9))))) * vec2(1.0, 1.0)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y), ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0), mix(vec2(_GLF_FUZZED(303.972), ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[1]), vec2(((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) * mat2(1.0))[0], _GLF_FUZZED(3278.6972)), bvec2(true, false)))).x > injectionSwitch.y)) && true))))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, false || ((false) && true)))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, clamp(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, _GLF_struct_replacement_21._f0._f2.next_virtual_gid, _GLF_struct_replacement_21._f0._f2.next_virtual_gid)), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) * 1u), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, max(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_struct_replacement_21._f0._f2.next_virtual_gid)))))))), ((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, max(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, _GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, uint(_GLF_IDENTITY(uint(_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (false ? _GLF_FUZZED(virtual_gid) : uint(_GLF_struct_replacement_21._f0._f2.next_virtual_gid))))))))) * 1u), min(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), max((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), _GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), clamp((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, _GLF_IDENTITY(uint(uvec3(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, 1u, 0u)), (uint(uvec3(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, 1u, 0u))) / _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (1u) | (1u))) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))))) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), 0u ^ (_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, ~ (~ (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)))) | (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, 0u + (_GLF_struct_replacement_21._f0._f2.next_virtual_gid))) << 0u)))), clamp(_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), ((_GLF_struct_replacement_21._f0._f2.next_virtual_gid)) | 0u) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) - 0u)) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid))))), _GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), 0u | ((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), _GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), min((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)))), (_GLF_IDENTITY(0u ^ (_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), min((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)))), (true ? 0u ^ (_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), min((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)))) : _GLF_FUZZED(workgroup_id)))) ^ 0u)) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), min(_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), 0u ^ (_GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), ((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)) >> 0u))), _GLF_IDENTITY(clamp((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)), ~ (~ (_GLF_IDENTITY(clamp((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)), max(clamp((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)), clamp((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), (_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, (1u ^ 1u) ^ (_GLF_struct_replacement_21._f0._f2.next_virtual_gid)))))))))))), _GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | (_GLF_struct_replacement_21._f0._f2.next_virtual_gid), 0u | ((_GLF_struct_replacement_21._f0._f2.next_virtual_gid) | _GLF_IDENTITY((_GLF_struct_replacement_21._f0._f2.next_virtual_gid), ((_GLF_IDENTITY(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, min(_GLF_struct_replacement_21._f0._f2.next_virtual_gid, _GLF_struct_replacement_21._f0._f2.next_virtual_gid)))) ^ 0u)))))) ^ (_GLF_IDENTITY(0u, uint(uvec3(0u, (0u | 1u), (0u | (1u ^ 0u))))) << _GLF_IDENTITY(uint(4u), uint(4u)))))], uint(2), 4, _GLF_IDENTITY(64, min(64, 64)), 4);
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
