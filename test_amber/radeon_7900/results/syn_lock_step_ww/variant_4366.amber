#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size;
 uvec4 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))), ! (! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))))))))))
  return;
 uvec4 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy = GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_size;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uvec4 GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base;
 uvec4 GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uvec3 GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz = GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_id;
 if(_GLF_DEAD(false))
  return;
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_IDENTITY(GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw = GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid, (GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw = GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid) - uvec2(0u, 0u));
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_TRUE(true), (_GLF_WRAPPED_IF_TRUE(true)) && true))
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_IDENTITY(_GLF_WRAPPED_LOOP(_injected_loop_counter != _GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, int(ivec3(1, 0, 1)))))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(dot(vec4(-1.5, 87.92, 4.9, 589.466), vec4(21.01, 41.86, -7.7, 349.194))) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)))))) || (_GLF_WRAPPED_LOOP(_injected_loop_counter != 1))); _injected_loop_counter ++)
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))), _GLF_IDENTITY(false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (false || ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))) && true)))))
      {
       _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.xy = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw, (uvec2(0u, 0u) ^ uvec2(0u, 0u)) | (GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.xy = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.zw));
      }
     else
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            continue;
          }
         else
          {
           return;
          }
        }
      }
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 else
  {
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
    return;
   for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), clamp(int(_GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(int(_GLF_ZERO(0.0, injectionSwitch.x)), min(int(_GLF_ZERO(0.0, injectionSwitch.x)), int(_GLF_ZERO(0.0, injectionSwitch.x)))), int(_GLF_ZERO(0.0, injectionSwitch.x)))); _GLF_WRAPPED_LOOP(_injected_loop_counter < (1 ^ 0)); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.x = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))));
    }
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, int(_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, 0, 0), ivec4(0, 0, 0, 0) | (_GLF_IDENTITY(ivec4(_injected_loop_counter, 1, _GLF_IDENTITY(0, 0 ^ (0)), 0), (false ? _GLF_FUZZED(ivec4(-19572, -346, -40824, 30130)) : ivec4(_injected_loop_counter, 1, 0, 0))))))) != 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-0.7), _GLF_FUZZED(4.1)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y))))
      {
       if(_GLF_DEAD(false))
        break;
       break;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))), true, false)))))))
        {
        }
       else
        {
         if(_GLF_DEAD(false))
          continue;
         if(_GLF_DEAD(false))
          continue;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false)))), (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || (_GLF_IDENTITY((! (false)), ! (! (_GLF_IDENTITY((! (false)), ! (! ((! _GLF_IDENTITY((false), ((false)) && true)))))))))))) || false)))
      continue;
    }
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz.x = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y = subgroup_size;
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.y = GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.y;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, true, false))))), true)))))
      {
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(false));
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
      {
       return;
      }
     else
      {
      }
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
  }
 do
  {
   do
    {
     GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.z = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)), ~ (~ (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u), min((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u), (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u))))))).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u)), (uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) << 0u))) - uvec4(0u, 0u, 0u, 0u))).y, 0u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), uvec4(_GLF_IDENTITY(1u, (1u) | (1u)), 1u, 1u, 1u) * (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))))) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))) | uvec4(0u, 0u, 0u, 0u)).y, clamp(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))) | uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))) | uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))) | uvec4(0u, 0u, 0u, 0u)).y, (_GLF_IDENTITY(false ? _GLF_FUZZED(packSnorm2x16(vec2(243.472, -98.95))) : _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))) | uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u)))))) + 0u), 0u, 0u, 0u)).y, (false ? _GLF_FUZZED(packSnorm2x16(vec2(243.472, -98.95))) : _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, clamp(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))) | uvec4(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u)))))) + 0u), 0u, 0u, 0u)).y) / 1u))))), 0u, 1u, 1u)) >> _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), ~ (~ (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), clamp(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), _GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u), (uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u)) ^ uvec4(0u, 0u, 0u, 0u)), uvec4(_GLF_IDENTITY(0u, min(0u, 0u)), 0u, 0u, 0u)))))))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, _GLF_IDENTITY(1u, (false ? _GLF_FUZZED(94154u) : 1u))), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, _GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, min(1u, 1u)), 1u)), 1u)) >> uvec4(_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(packUnorm2x16(vec2(84.31, 91.28))))), 0u, 0u, 0u))))), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 0u | (_GLF_IDENTITY(0u, uint(_GLF_IDENTITY(uvec2(0u, 1u), (true ? uvec2(0u, 1u) : _GLF_FUZZED(uvec2(9351u, 80844u)))))))))).y, 0u, 1u, 1u), uvec4(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)), 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u)))), (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u)) >> _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))), uvec4(0u, 0u, 0u, 0u))))))) / uvec4(1u, 1u, 1u, 1u))))), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), uvec4(0u, 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY(0u, min(0u, 0u)), 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))))), clamp(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (uvec4(0u, 0u, 0u, 0u) ^ uvec4(0u, 0u, 0u, 0u)) | (uvec4(0u, 0u, 0u, 0u)))).y, 0u, 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), min(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))) << uvec4(_GLF_IDENTITY(0u, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 1u, 1u)), (uint(uvec3(_GLF_IDENTITY(0u, (0u) / 1u), 1u, 1u))) / 1u)), 0u, 0u, 0u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (true ? _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), clamp(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u))) : _GLF_FUZZED((subgroup_size | GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id)))))) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) + uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u), ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)) | ((GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)))).y, 0u, 1u, 1u)) >> uvec4(0u, 0u, 0u, 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, _GLF_IDENTITY(0u, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), 0u), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY((_GLF_IDENTITY(uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(6u), ~ (~ (uint(6u)))) : _GLF_FUZZED(subgroup_id))), uint(6u))) ^ 0u), 0u), max(uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(_GLF_IDENTITY(6u, 0u ^ (6u))), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), 0u), uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, (1u & 1u), 0u)))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ _GLF_IDENTITY(0u, (0u) ^ 0u)), 0u)))), max((_GLF_IDENTITY(uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), 0u), max(uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), 0u), uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, (_GLF_IDENTITY(1u & 1u, ~ (~ (_GLF_IDENTITY(1u & 1u, clamp(_GLF_IDENTITY(1u & 1u, (1u & 1u) ^ 0u), 1u & 1u, 1u & 1u)))))), 0u)))))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), 0u)))), (_GLF_IDENTITY(uvec4(0u, 0u, (_GLF_IDENTITY(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), min(_GLF_IDENTITY(uint(6u), uint(6u)), _GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 1u * (_GLF_IDENTITY(uint(6u), uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) >> uint(_GLF_ZERO(0.0, injectionSwitch.x)))))))) ^ 0u), 0u), max(uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), 0u), uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, uint(uvec4(6u, 0u, (_GLF_IDENTITY(_GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, 1u & 1u)), (true ? _GLF_IDENTITY(1u & 1u, clamp(1u & 1u, 1u & 1u, 1u & 1u)) : _GLF_FUZZED(90975u)))), 0u)))))) >> _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), (uint(6u)) << (0u & 130332u)))) ^ 0u), 0u)))))))), uint(uvec4(uint(_GLF_IDENTITY(uvec4(0u, 0u, (((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) * (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), min(1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) * (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))))), 1u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) * (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))))))))) >> _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (false ? _GLF_FUZZED(subgroup_id) : 6u))))) ^ 0u), 0u), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(0u, 0u + (0u)), 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(uint(6u), 0u, (1u ^ 1u), 1u), min(uvec4(uint(6u), 0u, (1u ^ 1u), 1u), _GLF_IDENTITY(uvec4(uint(6u), 0u, (1u ^ 1u), 1u), (uvec4(uint(6u), 0u, (1u ^ 1u), 1u)) | (uvec4(uint(6u), 0u, (1u ^ 1u), 1u))))), (uvec4(uint(6u), 0u, (1u ^ 1u), 1u)) ^ uvec4(0u, 0u, 0u, 0u)))), uint(6u))) ^ 0u), 0u), max(uvec4(0u, 0u, (_GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u) + 0u)), 0u), uvec4(0u, 0u, (((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))) ^ 0u), 0u)))))), 1u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u)), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(_GLF_IDENTITY(1u, ~ (~ (1u)))), (uint(1u)) ^ 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), 1u, 1u), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), (_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), ~ (_GLF_IDENTITY(~ (uvec4(0u, 0u, 0u, 0u)), _GLF_IDENTITY((~ (uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u), 0u), ((~ (uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u), 0u)) | ((~ (uvec4(0u, 0u, 0u, 0u))) ^ uvec4(0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) + 0u), 0u))))))) / uvec4(1u, 1u, 1u, 1u)) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, 0u | (0u)))).y, 0u, 1u, 1u), (uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, ((uvec4(_GLF_IDENTITY(0u, min(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (true ? 0u : _GLF_FUZZED(subgroup_size)))) / 1u))), 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) << _GLF_IDENTITY(uvec4(7u), uvec4(7u))) + (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id))) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u)) >> uvec4(0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(true, true && (true)) ? 0u : _GLF_FUZZED(subgroup_size))), 0u, 0u))))), uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), uvec4(_GLF_IDENTITY(0u, 0u ^ (0u)), 0u, 0u, 0u) + (_GLF_IDENTITY(uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | uvec4(0u, 0u, 0u, 0u)).y, 0u, 1u, 1u), _GLF_IDENTITY((uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))).y, 0u, 1u, 1u)), (true ? (uvec4(_GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id) | _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u), max(uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u)))).y, 0u, 1u, 1u)) : _GLF_FUZZED(GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base))) >> uvec4(0u, 0u, 0u, 0u))))))))));
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), (! (false)) || false)), true && (! (_GLF_IDENTITY(! (false), (! (false)) || false)))))))
    return;
  }
 else
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], _GLF_FUZZED(-71.74)), vec2(_GLF_FUZZED(7.0), ((injectionSwitch) * mat2(1.0))[1]), bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), ! (! (false))), true)))).y))))
      return;
    }
   else
    {
     GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.w = GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.z;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), ! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), false || (! (_GLF_WRAPPED_IF_FALSE(false))))) || false))))
        {
        }
       else
        {
         if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
          {
           do
            {
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            {
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                return;
              }
             if(_GLF_DEAD(false))
              return;
             return;
            }
          }
        }
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          return;
        }
       else
        {
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(false))
        {
        }
       else
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))))
          return;
        }
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))
          return;
         return;
        }
      }
     else
      {
      }
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), true && (false))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       else
        {
         return;
        }
       if(_GLF_DEAD(false))
        return;
      }
    }
   else
    {
    }
   return;
  }
 do
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_DEAD(false))
    return;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        continue;
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), bool(bool(_GLF_IDENTITY(false, bool(bool(false))))))))
    return;
   return;
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > _GLF_IDENTITY(0, (0) - 0)); _injected_loop_counter --)
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       continue;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  {
  }
 else
  {
   _GLF_IDENTITY(GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x = subgroup_local_id, (GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x = subgroup_local_id) | 0u);
  }
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.z = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 do
  {
   for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < (0 ^ 1)); _injected_loop_counter ++)
    {
     GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x = num_workgroup;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      continue;
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))
    return;
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
        {
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            continue;
          }
         else
          {
          }
         if(_GLF_DEAD(false))
          continue;
        }
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        return;
      }
    }
   if(_GLF_DEAD(false))
    return;
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    return;
  }
 do
  {
   GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.xy.x = _GLF_IDENTITY(GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x, (GLF_merged2_0_1_13_1_1_13num_workgroupsubgroup_size.x) << 0u);
  }
 while(_GLF_WRAPPED_LOOP(false));
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.y = workgroup_size;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   _GLF_IDENTITY(GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.w = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.y, (GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.w = GLF_merged2_0_2_50_2_2_49GLF_merged2_0_1_11_1_1_14subgroup_idworkgroup_sizeGLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gid.xy.y) - 0u);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bvec3(false, true, true))))))), _GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false)))))))))), false)), false, false, false)), ! (! (_GLF_IDENTITY(bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false)))))))))), false)), false, false, false)), ! (! (bool(bvec4(bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))))), bool(bvec3(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), bool(bool(_GLF_IDENTITY(true && (_GLF_IDENTITY(false, ! (! (false)))), false || (true && (_GLF_IDENTITY(false, ! (! (false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), false)), false, false, false))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.w = workgroup_id;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz.z = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.w;
 uint workgroup_base = GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.w * GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz.z;
 GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.w = workgroup_base;
 GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz.y = GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.w;
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
          break;
         return;
        }
       return;
      }
     return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 uint subgroup_base = GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz.x * GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.w;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))), true)), false || (bool(bvec2(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) && true))), true)))), ! (! (bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), true)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 do
  {
   GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y = subgroup_base;
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)));
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, float(vec3(injectionSwitch.x, 1.0, 0.0))))) > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec3(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              return;
             return;
            }
           continue;
          }
         if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
          continue;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            continue;
           do
            {
             if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))
              break;
             return;
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            break;
           return;
           if(_GLF_DEAD(false))
            return;
          }
         if(_GLF_WRAPPED_IF_TRUE(true))
          {
           return;
          }
         else
          {
          }
        }
       if(_GLF_DEAD(false))
        break;
      }
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(false))
        break;
      }
     else
      {
       for(int _injected_loop_counter = _GLF_IDENTITY(0, _GLF_IDENTITY(_GLF_IDENTITY((0), ((0)) + 0) | (0), _GLF_IDENTITY(int(int((0) | (0))), 0 + (int(int(_GLF_IDENTITY((0) | (0), ~ (~ ((0) | (0)))))))))); _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) | (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, 1 ^ 0)))), (_GLF_IDENTITY(_injected_loop_counter < (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) | (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, 1 ^ 0)))), true && (_injected_loop_counter < (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(_injected_loop_counter) : 1)) | (_GLF_IDENTITY(1 ^ 0, min(1 ^ 0, 1 ^ 0))))))) && true)); _injected_loop_counter ++)
        {
         return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          break;
        }
       if(_GLF_DEAD(false))
        {
         do
          {
           return;
          }
         while(_GLF_WRAPPED_LOOP(false));
        }
       if(_GLF_DEAD(false))
        continue;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          break;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      return;
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), false))), false, true))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), false))), false, true))))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), bool(bvec3(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), (bool(_GLF_IDENTITY(false, bool(bvec3(false, true, false))))) && true)), false))), false, true)))))) || false))) && true)));
 if(_GLF_DEAD(false))
  return;
 uint virtual_gid = GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz.y + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y + GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.z;
 GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z = _GLF_IDENTITY(virtual_gid, (_GLF_IDENTITY(false, true && (false)) ? _GLF_FUZZED(num_workgroup) : virtual_gid));
 GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.xy.y = GLF_merged4_0_1_17_1_1_13_2_1_11_3_1_12subgroup_local_idsubgroup_sizevirtual_gidworkgroup_id.z;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   do
    {
     return;
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
  }
 uint next_virtual_gid = GLF_merged2_0_3_69_3_1_14GLF_merged3_0_1_11_1_1_14_2_1_12subgroup_idworkgroup_baseworkgroup_idworkgroup_base.xyz.y + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y, uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y) | (0u << _GLF_IDENTITY(_GLF_IDENTITY(uint(_GLF_IDENTITY(6u, (6u) - 0u)), uint(6u)), (_GLF_IDENTITY(_GLF_IDENTITY(uint(6u), uint(6u)), 0u ^ (_GLF_IDENTITY(uint(6u), uint(6u))))) | (_GLF_IDENTITY(uint(6u), uint(6u))))))), (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size, uvec4(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size[0], clamp(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size[0])), GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size[1], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size[2], GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size[3])).y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y, 0u + (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y))) - 0u)) << 0u), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.y) ^ 0u)) | (0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (1u ^ uint(_GLF_ZERO(0.0, injectionSwitch.x))) * (_GLF_IDENTITY(_GLF_IDENTITY(6u, 1u * (6u)), (_GLF_IDENTITY(6u, 1u * (6u))) | (_GLF_IDENTITY(6u, _GLF_IDENTITY(1u * (6u), (true ? _GLF_IDENTITY(1u * (6u), (_GLF_IDENTITY(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u ^ (1u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))) * (6u), (1u * (6u)) | (1u * (6u)))) - 0u) : _GLF_FUZZED(subgroup_base)))))))))))))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))))) + ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.z + 1, (GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.z + 1) << 0u)) % GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.w);
 GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), bool(bvec4(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), true && (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(false), _GLF_IDENTITY(! (! (_GLF_WRAPPED_IF_FALSE(false))), _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_IF_FALSE(false)))), false || (! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))), true && (! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_IF_FALSE(false)))), false || (! (! (! (_GLF_WRAPPED_IF_FALSE(false))))))))), (! (_GLF_IDENTITY(! (! (! (_GLF_WRAPPED_IF_FALSE(false)))), false || (! (! (_GLF_IDENTITY(! (_GLF_WRAPPED_IF_FALSE(false)), true && (! _GLF_IDENTITY((_GLF_WRAPPED_IF_FALSE(false)), ! (! ((_GLF_WRAPPED_IF_FALSE(false))))))))))))) && true))))), _GLF_IDENTITY(false, bool(bvec3(false, false, true))), _GLF_IDENTITY(true, (_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false), false || (true))) || false), false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   else
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)) && (injectionSwitch.x > injectionSwitch.y)))))))))
      {
       for(int _injected_loop_counter = _GLF_IDENTITY((0 << _GLF_IDENTITY(int(5), int(5))), _GLF_IDENTITY(((0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ 0)))) - 0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(92525) : ((0 << _GLF_IDENTITY(_GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ 0)), (false ? _GLF_FUZZED(-46794) : _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), (int(5)) ^ 0)))))) - 0))); _GLF_WRAPPED_LOOP(_injected_loop_counter != (_GLF_IDENTITY(1, _GLF_IDENTITY(0, max(0, 0)) | (1)) | 1)); _injected_loop_counter ++)
        {
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[GLF_merged3_0_2_49_2_1_13_3_1_14GLF_merged2_0_1_13_1_1_11num_workgroupvirtual_gidsubgroup_sizeworkgroup_size.xy.y], uint(1), _GLF_IDENTITY(4, (4) / (_GLF_IDENTITY(_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))) & 1, ~ (~ (_GLF_IDENTITY(1, min(1, _GLF_IDENTITY(1, (1) | (1)))) & 1))))), 64, 4);
    }
  }
 else
  {
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(false, true && (false))) && true)) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_WRAPPED_IF_TRUE(true))
      {
       return;
      }
     else
      {
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
    }
   do
    {
     if(_GLF_DEAD(false))
      return;
     atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_17_3_1_13next_virtual_gidsubgroup_basesubgroup_local_idsubgroup_size.x], uint(2), 4, 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
