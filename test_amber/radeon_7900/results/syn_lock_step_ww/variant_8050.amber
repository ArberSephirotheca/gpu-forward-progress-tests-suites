#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), clamp(vec2(injectionSwitch[0], injectionSwitch[1]), _GLF_IDENTITY(vec2(injectionSwitch[0], injectionSwitch[1]), vec2(_GLF_IDENTITY(vec2(vec2(injectionSwitch[0], injectionSwitch[1])), (vec2(vec2(injectionSwitch[0], injectionSwitch[1]))) * mat2(1.0)))), vec2(injectionSwitch[0], injectionSwitch[1])))).x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8372.0818), _GLF_FUZZED((false ? (-69.58 - 0.1) : 1.0))), _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)), vec2(0.0, 0.0) + (mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))))[1]) - 0.0), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_IDENTITY(_GLF_FUZZED(-1.4), (_GLF_FUZZED(-1.4)) + 0.0), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (true ? (injectionSwitch) : _GLF_FUZZED(vec2(-489.166, -34.99)))) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(_GLF_IDENTITY(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY(max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]), float(float(_GLF_IDENTITY(max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]), mix(float(max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1])), float(_GLF_FUZZED(vec2(315.867, 3.4).t)), bool(false)))))))), (false ? _GLF_FUZZED(injectionSwitch) : vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], _GLF_IDENTITY(max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]), float(float(_GLF_IDENTITY(max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]), mix(float(max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1])), float(_GLF_FUZZED(vec2(315.867, 3.4).t)), bool(false)))))))))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-9665.8171)))) - 0.0))))), clamp(_GLF_IDENTITY(vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), min(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0), (true ? mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), float(mat4x3(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), 1.0, 1.0, 1.0, 0.0, sqrt(0.0), 1.0, exp(0.0), 0.0, 1.0, 1.0, 1.0))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0) : _GLF_FUZZED(mat3(-9.1, 7.4, -79.08, 7.4, 399.515, -36.09, -190.603, 99.13, -14.20))))))), mix(vec2((vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.4, _GLF_IDENTITY(float(float(-1.4)), mix(float(_GLF_FUZZED(-899.280)), float(float(float(-1.4))), bool(true))))), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1], max(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.4, _GLF_IDENTITY(float(float(-1.4)), mix(float(_GLF_FUZZED(-899.280)), float(float(float(-1.4))), bool(true))))), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1], _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), (_GLF_IDENTITY((injectionSwitch), vec2(0.0, 0.0) + ((injectionSwitch)))) - vec2(0.0, 0.0)), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(-1.4, _GLF_IDENTITY(float(float(-1.4)), mix(float(_GLF_FUZZED(-899.280)), float(float(float(-1.4))), bool(true))))), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]))) - 0.0), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))[0], (vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - _GLF_IDENTITY(0.0, (0.0) * 1.0)), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(((mat4x2(-99.34, -0.6, -9.6, -911.052, -46.36, 2.6, -0.1, 4.7) , -99583) - -52019)) : 1))], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))[1]), vec2(_GLF_FUZZED(-5.0), _GLF_FUZZED(-594.478)), bvec2(false, false))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 0.0)))), vec2((injectionSwitch)[0], _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(vec3(vec2(1.0, 1.0), 1.0)))), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])), ((injectionSwitch))[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-74582) : _GLF_IDENTITY(1, clamp(1, 1, _GLF_IDENTITY(1, int(ivec4(1, 0, 1, 1)))))))]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), float(mat3(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)))[1], (_GLF_IDENTITY((injectionSwitch), mix(vec2(_GLF_FUZZED(-1.4), _GLF_IDENTITY(((injectionSwitch))[1], max(_GLF_IDENTITY(_GLF_IDENTITY(((injectionSwitch)), max(((injectionSwitch)), _GLF_IDENTITY(((injectionSwitch)), min(((injectionSwitch)), ((injectionSwitch))))))[1], max(((injectionSwitch))[1], _GLF_IDENTITY(((injectionSwitch))[1], max(((injectionSwitch))[1], ((injectionSwitch))[1])))), ((injectionSwitch))[1]))), vec2(((injectionSwitch))[0], _GLF_FUZZED(7.5)), bvec2(true, false)))[1]) - 0.0), 0.0, round(length(normalize(1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)))))) : _GLF_FUZZED(step(injectionSwitch, injectionSwitch)))), bvec2(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))), _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, true && (true))))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false)), (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true, false))) || false))) || false)))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(false, false || (false)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), true)), false || (bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))) || false)), true)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-5.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))) && true), (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), (false ? _GLF_FUZZED(mod(vec2(454.036, 3.3), vec2(970.324, 4060.0796))) : (injectionSwitch) * mat2(1.0)))).x > injectionSwitch.y)) || (bool(bvec2((injectionSwitch.x > injectionSwitch.y), true)))))))), true))), false, true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), ! (! ((! (false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && _GLF_IDENTITY((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (_GLF_IDENTITY(! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (! ((! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((true ? injectionSwitch.x : _GLF_FUZZED(-5.2)), min((true ? injectionSwitch.x : _GLF_FUZZED(-5.2)), (true ? injectionSwitch.x : _GLF_FUZZED(-5.2))))) > injectionSwitch.y)), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.2))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-5.2), (_GLF_FUZZED(-5.2)) - _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(95.13)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-5.2), (_GLF_FUZZED(-5.2)) - _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, round(length(_GLF_IDENTITY(normalize(vec2(1.0, 1.0)), max(normalize(vec2(1.0, 1.0)), normalize(vec2(1.0, 1.0)))))), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.3)), float(0.0), bool(true)))) / 1.0))), mix(float(_GLF_FUZZED(95.13)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y)))))))), false || (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(_GLF_IDENTITY(-5.2, min(-5.2, -5.2))))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-5.2), (_GLF_FUZZED(-5.2)) - _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(95.13)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0, 0.0)), 0.0 + (float(mat4x3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(95.13)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0, 0.0)))))))) > injectionSwitch.y)))))), true && ((_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.2))) > injectionSwitch.y), bool(bool((_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_IDENTITY(_GLF_FUZZED(-5.2), (_GLF_FUZZED(-5.2)) - _GLF_IDENTITY(0.0, float(mat4x3(_GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, sqrt(0.0), 0.0))))), 1.0)))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(95.13)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true))), 1.0, 0.0, 1.0, 0.0)))))) > injectionSwitch.y)))))))))), (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-5.2))) > injectionSwitch.y)))) || false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false))))), false || _GLF_IDENTITY((false), (_GLF_IDENTITY((false), (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), true && (_GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), bool(bvec3(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))), false, true))))))), false)), ! (! (_GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))))), ! (! (bool(_GLF_IDENTITY(bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), ! (! (bool(bvec3((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))))))))))))))), bool(bvec4((false), false, true, false)))) && true)) && true))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), ~ (~ (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u))))))), uint(uint(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u))))))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_size) : (~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), ~ (~ (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)))), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), ~ (~ (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u))))))))), uint(uint(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u)))))))))))), (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_base, ~ _GLF_IDENTITY((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)))), uint(uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u))), clamp(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u))), _GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u))), _GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u)))))), (uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u))))) << 0u)) >> 0u)))))), _GLF_IDENTITY(((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)))), uint(uint(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u), _GLF_IDENTITY((_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)), clamp((_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)), _GLF_IDENTITY((_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)), ((_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u))) >> 0u))) >> 0u)))))))))) - 0u, (((~ _GLF_IDENTITY((workgroup_base), _GLF_IDENTITY(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)))), uint(uint(uint(_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) | (_GLF_IDENTITY(_GLF_IDENTITY(uint((_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, _GLF_IDENTITY(workgroup_base, (189411u & 0u) ^ (workgroup_base)))))), (uint((workgroup_base))) << 0u), (_GLF_IDENTITY(uint((workgroup_base)), (uint((workgroup_base))) << 0u)) >> 0u)))))))))) - 0u) * 1u))))), ~ _GLF_IDENTITY((~ (workgroup_base)), 0u | (_GLF_IDENTITY((~ (workgroup_base)), ((~ (workgroup_base))) >> 0u)))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), (187232u & 0u) ^ (_GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), min(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), _GLF_IDENTITY(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), max(((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size))))))), (false ? _GLF_FUZZED(subgroup_size) : (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size, 0u | ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) << 0u) + 1) % subgroup_size)))));
 atomicStore(buf[_GLF_IDENTITY(virtual_gid, 0u ^ (_GLF_IDENTITY(virtual_gid, uint(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(virtual_gid, 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(87166u, 52988u, 46097u, 96928u)) : uvec4(virtual_gid, 0u, 0u, 1u))), (_GLF_IDENTITY(uvec4(virtual_gid, 0u, 0u, 1u), (false ? _GLF_FUZZED(uvec4(87166u, 52988u, 46097u, 96928u)) : uvec4(virtual_gid, 0u, 0u, 1u)))) << (uvec4(0u, 0u, 0u, 0u) & uvec4(97610u, 129661u, 116408u, 153752u)))))))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), _GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true, true, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))), true)), true)))))))), (bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec4(bvec3(true, false, false), true))), true)), true))))))))) && true)), _GLF_IDENTITY(true, true && (true)))), bool(_GLF_IDENTITY(bvec2(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, false), true)), true))))))))), _GLF_IDENTITY(true, true && (true)))), true), bvec2(bvec3(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, false), true)), true))))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, false), true)), true))))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))), true && (bool(bvec4(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false), true, _GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(false, (false) && true), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(true, false, false), true)), bvec3(bvec4(bvec3(bvec4(bvec3(true, false, false), true)), true))))))))), _GLF_IDENTITY(true, true && _GLF_IDENTITY((true), ((true)) && true)))))))), true), true))))), true, false, true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 atomicStore(buf[next_virtual_gid], uint(_GLF_IDENTITY(2, _GLF_IDENTITY(_GLF_IDENTITY((2), ((2)) / (_GLF_IDENTITY((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(39213) : int(1))), (true ? int(1) : _GLF_FUZZED(78068))), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(39213) : int(1))), (true ? int(1) : _GLF_FUZZED(78068))), int(_GLF_ONE(1.0, injectionSwitch.y)), 0))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(39213) : int(1)), ((false ? _GLF_FUZZED(39213) : int(1))) ^ 0)), (true ? int(1) : _GLF_FUZZED(78068)))))), _GLF_IDENTITY(int(ivec2((1 << _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), max(_GLF_IDENTITY(int(1), (int(1)) | (0 >> _GLF_IDENTITY(int(2), int(2)))), int(1))))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(39213) : int(1))), (true ? int(1) : _GLF_FUZZED(78068))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY((false ? _GLF_FUZZED(39213) : int(1)), ((false ? _GLF_FUZZED(39213) : int(1))) ^ 0), (_GLF_IDENTITY((false ? _GLF_FUZZED(39213) : int(1)), ((false ? _GLF_FUZZED(39213) : int(1))) ^ 0)) ^ 0)), (true ? int(1) : _GLF_FUZZED(78068)))))), 1)), max(int(ivec2((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(39213) : int(1))), (true ? int(1) : _GLF_FUZZED(78068))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(39213) : int(1)), ((false ? _GLF_FUZZED(39213) : int(1))) ^ 0)), (true ? int(1) : _GLF_FUZZED(78068)))))), 1)), int(ivec2((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), (false ? _GLF_FUZZED(39213) : int(1))), (true ? int(1) : _GLF_FUZZED(78068))), 1 * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(39213) : int(1)), ((false ? _GLF_FUZZED(39213) : int(1))) ^ 0)), (true ? int(1) : _GLF_FUZZED(78068))), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(int(1), _GLF_IDENTITY((false ? _GLF_FUZZED(39213) : int(1)), ((false ? _GLF_FUZZED(39213) : int(1))) ^ 0)), (_GLF_IDENTITY(true, true && (true)) ? int(1) : _GLF_FUZZED(78068))))))))), 1))))))), _GLF_IDENTITY((_GLF_IDENTITY((2), ((2)) / ((1 << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(1), _GLF_IDENTITY(int(1), _GLF_IDENTITY((true ? _GLF_IDENTITY(int(1), (int(1)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))) : _GLF_FUZZED(78068)), (true ? (true ? int(1) : _GLF_FUZZED(78068)) : _GLF_FUZZED(int(true))))))))) | (_GLF_IDENTITY((2), ((_GLF_IDENTITY(2, ~ (~ (2))))) / ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-56810) : 1))) - (0 & 71392)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(78068))))))), 1 * ((_GLF_IDENTITY((2), ((2)) / ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(1), int(1)), (1 << _GLF_IDENTITY(int(1), int(1))) ^ _GLF_IDENTITY(0, (false ? _GLF_FUZZED(86987) : 0)))) >> _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) | (int(1))), _GLF_IDENTITY(int(1), _GLF_IDENTITY((true ? _GLF_IDENTITY(_GLF_IDENTITY(int(1), (int(1)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))), (_GLF_IDENTITY(int(1), (int(1)) * ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))))) ^ 0) : _GLF_FUZZED(78068)), (true ? (true ? int(1) : _GLF_FUZZED(78068)) : _GLF_FUZZED(int(true))))))))) | (_GLF_IDENTITY((2), ((_GLF_IDENTITY(2, ~ (~ (2))))) / ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-56810) : 1))) - (0 & 71392)) << _GLF_IDENTITY(int(1), int(1))) >> _GLF_IDENTITY(int(_GLF_IDENTITY(1, 0 | (1))), _GLF_IDENTITY(int(1), (true ? int(1) : _GLF_FUZZED(78068)))))))))) | (2))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, false || (true)), bool(bvec2((false) && true, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
