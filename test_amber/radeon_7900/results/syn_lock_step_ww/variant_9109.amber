#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_5 {
 mat4x3 _f0;
 uvec2 _f1;
 vec2 _f2;
 mat3 _f3;
} ;

struct _GLF_struct_4 {
 ivec2 _f0;
 uvec4 _f1;
 mat3x4 _f2;
 vec4 _f3;
 mat3x2 _f4;
 mat4x3 _f5;
} ;

struct _GLF_struct_6 {
 ivec2 _f0;
 uint subgroup_size;
 _GLF_struct_4 _f1;
 vec4 _f2;
 uvec3 _f3;
 _GLF_struct_5 _f4;
 mat4 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_1 {
 mat3x4 _f0;
 bool _f1;
 vec2 _f2;
 int _f3;
 mat4 _f4;
 bool _f5;
} ;

struct _GLF_struct_0 {
 bvec4 _f0;
 mat4x2 _f1;
 bvec4 _f2;
 float _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 vec4 _f2;
 _GLF_struct_2 _f3;
} ;

struct _GLF_struct_7 {
 mat4x2 _f0;
 _GLF_struct_3 _f1;
 _GLF_struct_6 _f2;
 mat3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 for(int _injected_loop_counter = int(_GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter > int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-3.7)), float(injectionSwitch.y), bool(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(bool(_GLF_IDENTITY(true, (true) || false)), false || (bool(_GLF_IDENTITY(true, (true) || false)))))), ! (! (bool(true))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))).y) || false), true && (injectionSwitch.x > injectionSwitch.y)))), true)))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) && true, _GLF_IDENTITY(bool(bool((injectionSwitch.x < injectionSwitch.y) && true)), (bool(bool((injectionSwitch.x < injectionSwitch.y) && true))) && true))))), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true && (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, bool(bvec2(true, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), bool(bool((! (true))))))))), (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(31099u)) : injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(unpackSnorm2x16(31099u)) : injectionSwitch)) : _GLF_FUZZED(injectionSwitch))).x, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(3700.0793), max(_GLF_FUZZED(3700.0793), _GLF_FUZZED(3700.0793))) : injectionSwitch.x, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(3700.0793), max(_GLF_FUZZED(3700.0793), _GLF_FUZZED(3700.0793))) : injectionSwitch.x, 1.0 * (false ? _GLF_IDENTITY(_GLF_FUZZED(3700.0793), max(_GLF_FUZZED(3700.0793), _GLF_FUZZED(3700.0793))) : injectionSwitch.x))) - 0.0))) < injectionSwitch.y)), false))))) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)))).y))))), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), false || (! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) && true)) || false), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), (bool(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8414.4603) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), (injectionSwitch.y) * 1.0)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(bool((((injectionSwitch.x > injectionSwitch.y)))))) && true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))) < injectionSwitch.y)))) || false))), ! (! (bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (! (_GLF_IDENTITY(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0), ! (! (injectionSwitch.x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-8414.4603) : _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), (injectionSwitch.y) * 1.0)))))))))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((((injectionSwitch.x > injectionSwitch.y))), bool(bool((((injectionSwitch.x > injectionSwitch.y)))))) && true)))))) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(injectionSwitch.x), max(float(injectionSwitch.x), float(injectionSwitch.x))))) < injectionSwitch.y)))) || false))))))))), ! (! (_GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0)), dot(vec2(1.0, 1.0), vec2(length(vec4(0.0, 0.0, 0.0, 0.0)), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0))))), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x, injectionSwitch.x)) < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x3(injectionSwitch.y, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(1.0, 1.0), vec2(length(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(0.0, float(float(0.0)))), bool(true))))), 0.0)), dot(vec2(1.0, 1.0), vec2(length(vec4(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.0)), float(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))), bool(true))), 0.0, 0.0)), 0.0))), 1.0, 0.0, 0.0, 0.0, 0.0, log(1.0))))), _GLF_IDENTITY(((_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-731.153), _GLF_FUZZED(76.91)), bvec2(false, false))), _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x)) < injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x, injectionSwitch.x)) < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (((injectionSwitch.x > injectionSwitch.y)) && _GLF_IDENTITY(_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x, injectionSwitch.x)) < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y))))), (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) / cos(vec2(0.0, 0.0)))) - vec2(0.0, 0.0)).x, injectionSwitch.x)) < injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) || false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), injectionSwitch)).y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0))), injectionSwitch, injectionSwitch)).x < injectionSwitch.y)))) && true)) || false)))))), ! (! ((_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, tan(0.0), sin(0.0), 0.0, exp(0.0), 1.0, sin(sqrt(0.0)), 0.0), mat3(mat3x4(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, tan(0.0), sin(0.0), 0.0, exp(0.0), 1.0, sin(sqrt(0.0)), 0.0)))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 0.0, tan(0.0), sin(_GLF_IDENTITY(0.0, max(0.0, 0.0))), 0.0, exp(0.0), 1.0, sin(sqrt(0.0)), 0.0), _GLF_IDENTITY(mat3(mat3x4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1.9))), 1.0, sin(sqrt(0.0)), 0.0))), _GLF_IDENTITY(mat3(mat3x4(mat3(mat3x4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1.9))), 1.0, sin(sqrt(0.0)), 0.0))))), (mat3(mat3x4(mat3(mat3x4(mat3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), max(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), 0.0, tan(0.0), sin(0.0), 0.0, _GLF_IDENTITY(exp(0.0), (true ? exp(0.0) : _GLF_FUZZED(-1.9))), 1.0, sin(sqrt(0.0)), 0.0)))))) / mat3(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))))) - 0.0) < injectionSwitch.y)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), bool(bool((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))) || false)))), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false)))))))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_WRAPPED_IF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
      }
     else
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))), false, true))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bool(! (injectionSwitch.x > injectionSwitch.y))), ! (! (bool(bool(! (injectionSwitch.x > injectionSwitch.y)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)), false || (bool(bvec4((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true), false, false)))))) || false))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)), min(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)))))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)), min(_GLF_IDENTITY(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)), min(vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)))), vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(9.9)), float(injectionSwitch.x), bool(true)))), _GLF_ZERO(0.0, injectionSwitch.x)))))).y)) && true))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))), injectionSwitch, injectionSwitch)), injectionSwitch, injectionSwitch)).x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), _GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), clamp(_GLF_IDENTITY(vec2(mat4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), mix(vec2((vec2(mat4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))[0], _GLF_FUZZED(4.4)), vec2(_GLF_FUZZED(6186.8554), (vec2(mat4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))[1]), bvec2(false, true))), vec2(mat4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), vec2(mat4(_GLF_IDENTITY((injectionSwitch), max((injectionSwitch), _GLF_IDENTITY((injectionSwitch), max((injectionSwitch), (injectionSwitch))))), 1.0, length(vec2(0.0, 0.0)), 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0))))) / exp(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).y))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) || false))), ((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))).y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / exp(vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), clamp(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) * 1.0), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_ZERO(0.0, injectionSwitch.x)))).y)) || false)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat4x2(1.0), _GLF_struct_3(_GLF_struct_0(bvec4(true), mat4x2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(8.9) : 1.0)), 1.0, 0.0)))) * 1.0)), bvec4(true), 1.0, uvec4(1u)), _GLF_struct_1(mat3x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), true && (true)), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), false || ((true))) && true), true && (true))) || false)))), vec2(1.0), 1, _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY(_GLF_IDENTITY((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), ((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 1.0 * (0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)) * mat4(1.0)), (_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), _GLF_IDENTITY(mix(float(_GLF_FUZZED(3572.5100)), float(float(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), bool(true)), (mix(float(_GLF_FUZZED(3572.5100)), float(float(_GLF_IDENTITY(0.0, min(0.0, 0.0)))), bool(true))) - 0.0)))), 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, float(float(0.0))), 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-849.322, -3.2, -5.5, 0.1, -2.1, -1.2, -57.92, -52.68, -0.5, 86.49, 4.4, -2.0, 2528.2994, 176.887, -958.523, -3.3)) : _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-7.8)))), _GLF_IDENTITY(float(_GLF_FUZZED(-680.871)), (false ? _GLF_FUZZED(648.315) : float(_GLF_FUZZED(-680.871)))), bool(false))), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4161.2444)), float(0.0), bool(true))), _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, 0.0 + (0.0))) - abs(0.0)), 0.0, 0.0)), _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-8.7))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), ((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-4.1))), 0.0, 0.0, 0.0, 0.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0)), 1.0)), 0.0, 1.0)), _GLF_IDENTITY(mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)), min(mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, 1.0), clamp(min(1.0, 1.0), min(1.0, 1.0), _GLF_IDENTITY(min(1.0, 1.0), max(min(1.0, 1.0), min(1.0, 1.0)))))), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(9.5) : 1.0)), 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), _GLF_IDENTITY(mix(float(_GLF_FUZZED(251.706)), float(float(vec4(0.0, 1.0, 1.0, 0.0))), bool(true)), float(mat3(mix(float(_GLF_FUZZED(251.706)), float(float(vec4(0.0, 1.0, 1.0, 0.0))), bool(true)), 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), (_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0)))) * exp(0.0)))), mix(float(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0)))), float(_GLF_FUZZED(19.80)), bool(false))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), max(float(vec4(0.0, 1.0, 1.0, 0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), (float(vec4(0.0, 1.0, 1.0, 0.0))) - 0.0), 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(acosh(-919.398)), (false ? _GLF_FUZZED(4173.6515) : _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), max(float(vec4(0.0, 1.0, 1.0, 0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), (float(vec4(0.0, 1.0, 1.0, 0.0))) - 0.0), 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(acosh(-919.398)), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), max(float(vec4(0.0, 1.0, 1.0, 0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), (float(vec4(0.0, 1.0, 1.0, 0.0))) - 0.0), 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(acosh(-919.398)), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), max(float(vec4(0.0, 1.0, 1.0, 0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), (float(vec4(0.0, 1.0, 1.0, 0.0))) - 0.0), 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(acosh(-919.398)), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), max(float(vec4(0.0, 1.0, 1.0, 0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), (float(vec4(0.0, 1.0, 1.0, 0.0))) - 0.0), 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(acosh(-919.398)), true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), max(float(vec4(0.0, 1.0, 1.0, 0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))))), min(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), (float(vec4(0.0, 1.0, 1.0, 0.0))) - 0.0), 0.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(acosh(-919.398)))))))))), _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (1.0) + 0.0), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0)), (_GLF_IDENTITY(mat4(1.0), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0))))), transpose(transpose(transpose(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))))))))), _GLF_IDENTITY((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat4(1.0)), ((mat4(1.0))) / _GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0), transpose(transpose(mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(vec3(1.0, 0.0, 1.0))), 1.0, 1.0))))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-7574.9243)), bool(false))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (false ? _GLF_FUZZED(-91.74) : _GLF_IDENTITY(min(0.0, 0.0), float(vec2(min(0.0, 0.0), 1.0))))))), mix(float(_GLF_FUZZED(3572.5100)), float(float(_GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), 0.0)))), bool(true))))), 0.0, _GLF_IDENTITY(0.0, 1.0 * (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-6319.7944))))), 0.0)) / mat4(1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, float(float(0.0))), 1.0))), float(_GLF_IDENTITY(_GLF_FUZZED(-38.56), (false ? _GLF_FUZZED(-704.216) : _GLF_FUZZED(-38.56)))), bool(false)))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) * 1.0), clamp(1.0, 1.0, 1.0))), float(_GLF_FUZZED(-3.2)), bool(false))), _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))) / 1.0), 1.0, 1.0, 1.0, 1.0, 1.0))), (false ? _GLF_FUZZED(mat4(-849.322, -3.2, -5.5, 0.1, -2.1, -1.2, -57.92, -52.68, -0.5, 86.49, 4.4, -2.0, 2528.2994, 176.887, -958.523, -3.3)) : _GLF_IDENTITY(mat4(1.0), _GLF_IDENTITY((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-7.8), (false ? _GLF_FUZZED(-379.159) : _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-7.8), (true ? _GLF_IDENTITY(true ? 0.0 : _GLF_FUZZED(-7.8), max(true ? 0.0 : _GLF_FUZZED(-7.8), true ? 0.0 : _GLF_FUZZED(-7.8))) : _GLF_FUZZED(-902.735)))))))), float(_GLF_FUZZED(-680.871)), bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false))))), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, _GLF_IDENTITY((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - abs(0.0), min((_GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(0.0, log(1.0), cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(float(mat4(0.0, log(1.0), cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y))), (float(mat3x2(float(mat4(0.0, log(1.0), cos(sin(0.0)), 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0), 0.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0)), 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0))), _GLF_ONE(1.0, injectionSwitch.y)))) / 1.0)))))) - abs(0.0), _GLF_IDENTITY((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - abs(0.0), mix(float((_GLF_IDENTITY(0.0, 0.0 + (0.0))) - abs(0.0)), _GLF_IDENTITY(float(_GLF_FUZZED(-46.34)), max(float(_GLF_FUZZED(-46.34)), float(_GLF_FUZZED(-46.34)))), bool(false)))))), 0.0, 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(7.9)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (true ? 0.0 : _GLF_FUZZED(-8.7))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.1), (false ? _GLF_FUZZED(1508.6336) : _GLF_FUZZED(-4.1))))), 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.1), (false ? _GLF_FUZZED(1508.6336) : _GLF_FUZZED(-4.1))))), 0.0, 0.0, 0.0, 0.0), ((mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_IDENTITY(_GLF_FUZZED(-4.1), (false ? _GLF_FUZZED(1508.6336) : _GLF_FUZZED(-4.1))))), 0.0, 0.0, 0.0, 0.0)) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))))))), mix(float(_GLF_FUZZED(7.2)), float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(_GLF_IDENTITY(-38.56, 1.0 * (-38.56)))), bool(false)))), max(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-706.662)), bool(false))), 1.0, 1.0)), 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false)))), _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0)), mix(float(float(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))), float(_GLF_FUZZED(-38.56)), bool(false))), (false ? _GLF_FUZZED(acos(155.707)) : _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0), mix(vec3(_GLF_FUZZED((false ? -9.6 : -5.6)), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))[1], _GLF_FUZZED(8.7)), vec3((vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))[0], _GLF_FUZZED(-9.5), (vec3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0))[2]), bvec3(true, false, true)))), mix(float(_GLF_IDENTITY(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-6079.1037 - 229.775)) : 1.0)), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(916.807)), bool(false))))), min(float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-6079.1037 - 229.775)) : 1.0)), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(916.807)), bool(false))))), float(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-6079.1037 - 229.775)) : 1.0)), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))), 0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(916.807)), bool(false)))))))), float(_GLF_FUZZED(-38.56)), bool(false))))))))), bool(true))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), 1.0, 1.0, 1.0, 1.0, 1.0)))))) + mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), mix(float(_GLF_FUZZED(251.706)), float(float(vec4(0.0, 1.0, 1.0, 0.0))), bool(true)))), 1.0 * (_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0))), 0.0, 0.0, 0.0, cos(_GLF_IDENTITY(dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(1.0, 1.0, 1.0, 0.0), vec4(0.0, 0.0, 0.0, 1.0)))), 0.0, 1.0))), 1.0, 0.0)), mix(float(_GLF_FUZZED(251.706)), float(float(vec4(0.0, 1.0, 1.0, 0.0))), bool(true)))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(37.12))), 0.0))), mix(float(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0)))), float(_GLF_IDENTITY(_GLF_FUZZED(19.80), clamp(_GLF_FUZZED(19.80), _GLF_FUZZED(19.80), _GLF_FUZZED(19.80)))), bool(false))), (true ? _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, 1.0, 0.0))), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 0.0 + (0.0)), float(vec4(0.0, 1.0, 1.0, 0.0))), _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec4(0.0, 1.0, 1.0, 0.0)), float(mat4x3(_GLF_IDENTITY(float(vec4(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(vec2(0.0, 0.0)), min(float(vec2(0.0, 0.0)), float(vec2(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0))))), 1.0, 1.0, 0.0)), _GLF_IDENTITY((float(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 0.0))), 1.0 * (_GLF_IDENTITY((float(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 0.0))), ((float(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))) * 1.0), 0.0)))) - 0.0))) - 0.0), 0.0, exp(0.0), 0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0)), dot(vec3(1.0, 0.0, 0.0), vec3(1.0, 0.0, 0.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(acosh(-919.398)))), _GLF_IDENTITY(0.0, float(vec4(0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)), true), vec4(1.0), _GLF_struct_2(uvec3(_GLF_IDENTITY(1u, (1u) - 0u)), bvec2(true))), _GLF_struct_6(ivec2(1), gl_SubgroupSize, _GLF_struct_4(_GLF_IDENTITY(ivec2(1), (ivec2(1)) >> ivec2(0, 0)), uvec4(1u), mat3x4(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(float(-93668))), float(1.0), bool(true))), _GLF_IDENTITY(1.0, float(mat2(_GLF_IDENTITY(1.0, float(vec4(1.0, abs(0.0), 1.0, 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), sin(0.0), _GLF_IDENTITY(dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(tan(0.0), 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)))))), 1.0))), vec4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1.9)), float(0.0), bool(true))), min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat2x3(mat4(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(_GLF_IDENTITY(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-471.420) : 0.0)), float(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-471.420) : 0.0)), 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0), (mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-471.420) : 0.0)), float(vec4(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-471.420) : 0.0)), 0.0, 0.0, 0.0))), 1.0, 0.0, 0.0, 0.0, 1.0)) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) - 0.0)) - _GLF_IDENTITY(dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 0.0, 1.0, 1.0), vec4(1.0, 1.0, 0.0, 0.0))))), (false ? _GLF_FUZZED(mat2x3(2903.4880, _GLF_IDENTITY(-4.1, max(-4.1, -4.1)), 3.9, -6.4, 4.6, 9.8)) : mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))))), (true ? float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat2x3(mat4(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(2903.4880, -4.1, 3.9, -6.4, 4.6, 9.8)) : mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))))) : _GLF_FUZZED(0.8)))), 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), (false ? _GLF_FUZZED(825.819) : _GLF_IDENTITY(0.0, min(0.0, 0.0)))), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat2x3(mat4(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat3(1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-471.420) : 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(2903.4880, -4.1, 3.9, _GLF_IDENTITY(-6.4, (-6.4) - 0.0), 4.6, 9.8)) : mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0))))))), (true ? float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat2x3(mat4(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-38.40) : _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-72.48)), float(1.0), bool(true))), 0.0), (false ? _GLF_FUZZED(mat2x3(2903.4880, -4.1, _GLF_IDENTITY(3.9, min(3.9, 3.9)), -6.4, 4.6, 9.8)) : mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 1.0, 0.0))))))) : _GLF_FUZZED(0.8)))), 0.0 + (_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(8751.3107)), float(1.0), bool(true))))), 1.0, 0.0), mat2x3(mat4(_GLF_IDENTITY(mat2x3(1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, determinant(mat3(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-471.420) : 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(2903.4880, -4.1, 3.9, -6.4, 4.6, _GLF_IDENTITY(9.8, (9.8) - 0.0))) : mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0)))), 1.0)), 1.0, 0.0))))))), (true ? float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0), mat2x3(mat4(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-384.942)), float(1.0), bool(true))), 1.0, 0.0, determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 1.0)), 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(2903.4880, -4.1, 3.9, -6.4, 4.6, 9.8)) : mat2x3(1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), determinant(mat3(1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(false, (false) && true) ? _GLF_FUZZED(3.7) : _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))))))) : _GLF_FUZZED(0.8))))))))), mat3x2(1.0), mat4x3(1.0)), _GLF_IDENTITY(vec4(1.0), _GLF_IDENTITY((_GLF_IDENTITY(vec4(1.0), (vec4(1.0)) * mat4(1.0))) * mat4(1.0), mix(vec4(((vec4(1.0)) * mat4(1.0))[0], _GLF_FUZZED(-85.94), ((vec4(1.0)) * mat4(1.0))[2], _GLF_FUZZED(7.5)), vec4(_GLF_FUZZED(6.3), ((vec4(1.0)) * mat4(_GLF_IDENTITY(1.0, 1.0 * (_GLF_IDENTITY(1.0, (1.0) / 1.0)))))[1], _GLF_FUZZED(-9.8), _GLF_IDENTITY(((vec4(1.0)) * mat4(1.0)), (((vec4(1.0)) * mat4(1.0))) * mat4(1.0))[3]), bvec4(false, true, _GLF_IDENTITY(false, ! (! (false))), true)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, (true) || false) ? 1u : _GLF_FUZZED(114975u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))), 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), uint(uvec4(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), (1u ^ 0u), 1u, 0u))))))))))))))), uvec3(0u, 0u, 0u) ^ (_GLF_IDENTITY(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, (true) || false) ? 1u : _GLF_FUZZED(114975u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))), 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), uint(uvec4(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), (1u ^ 0u), 1u, 0u))))))))))))))), max(uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, (true) || false) ? 1u : _GLF_FUZZED(114975u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))), 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), uint(uvec4(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), (1u ^ 0u), 1u, 0u))))))))))))))), uvec3(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (_GLF_IDENTITY(true, (true) || false) ? 1u : _GLF_FUZZED(114975u))), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) | (min(1u, 1u)))), 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), min(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)), _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u)))), _GLF_IDENTITY(1u, _GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), ~ (~ (_GLF_IDENTITY(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), uint(uvec4(min(_GLF_IDENTITY(1u, min(1u, 1u)), 1u), (1u ^ 0u), 1u, 0u))))))))))))))))))), _GLF_struct_5(mat4x3(1.0), uvec2(1u), vec2(_GLF_IDENTITY(1.0, (1.0) / _GLF_IDENTITY(1.0, max(1.0, 1.0)))), mat3(1.0)), mat4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - tan(0.0)), (true ? 1.0 : _GLF_FUZZED(-842.088)))), bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(true, ! (! (true))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false))), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(true, ! (! (true))), false, true))), false)))))), false || (true)))), _GLF_IDENTITY(mat3(1.0), (mat3(1.0)) - mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 0.0, 0.0, 0.0, 0.0)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), float(mat2x4(_GLF_IDENTITY(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), min(float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))), 1.0, 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 0.0, 0.0))))))), 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0))))))))
      barrier();
     barrier();
    }
   for(int _injected_loop_counter = (0 >> _GLF_IDENTITY(int(5), int(5))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint num_workgroup = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))), (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))), (gl_NumWorkGroups) | (gl_NumWorkGroups)).x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, ~ (_GLF_IDENTITY(~ (gl_NumWorkGroups), (~ (gl_NumWorkGroups)) >> uvec3(0u, 0u, 0u)))), (gl_NumWorkGroups) | (gl_NumWorkGroups)).x : _GLF_FUZZED(min(subgroup_local_id, subgroup_id))))) << _GLF_IDENTITY((_GLF_IDENTITY(0u & 169445u, uint(uvec2(0u & 169445u, 1u)))), (_GLF_IDENTITY((_GLF_IDENTITY(0u & 169445u, uint(uvec2(0u & 169445u, 1u)))), clamp((_GLF_IDENTITY(0u & 169445u, uint(uvec2(0u & 169445u, 1u)))), _GLF_IDENTITY((_GLF_IDENTITY(0u & 169445u, uint(uvec2(0u & 169445u, 1u)))), ((_GLF_IDENTITY(0u & 169445u, uint(uvec2(0u & 169445u, 1u))))) | ((_GLF_IDENTITY(0u & 169445u, uint(uvec2(0u & 169445u, 1u)))))), (_GLF_IDENTITY(0u & 169445u, uint(uvec2(0u & 169445u, 1u))))))) * 1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec2(false, true)))));
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_IDENTITY((injectionSwitch)[1], clamp((injectionSwitch)[1], (injectionSwitch)[1], (injectionSwitch)[1]))), vec2(_GLF_FUZZED(-3.0), _GLF_FUZZED(7.8)), bvec2(false, false))), injectionSwitch)).x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + sqrt(vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))).x > injectionSwitch.y)))), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(656.136) : injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))))))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, uvec3(uvec3(gl_WorkGroupSize))))).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_base = subgroup_id * _GLF_struct_replacement_7._f2.subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 1u * (_GLF_IDENTITY(subgroup_local_id, uint(uvec4(subgroup_local_id, 0u, 0u, 1u))))), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id)), clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), uint(uvec3(_GLF_IDENTITY(subgroup_local_id, clamp(subgroup_local_id, subgroup_local_id, subgroup_local_id)), 1u, 0u))) : _GLF_FUZZED(subgroup_id)));
 for(int _injected_loop_counter = 1; _GLF_IDENTITY(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), (int(0)) / 1)))) : _GLF_FUZZED(_injected_loop_counter))) > (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(min(int(2), int(2)), max(min(int(2), int(2)), _GLF_IDENTITY(min(int(2), int(2)), min(min(int(2), int(2)), min(int(2), int(2)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))) && true), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))) && true)))) && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) / 1)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(min(int(2), int(2)), max(min(int(2), int(2)), min(int(2), int(2)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(min(int(2), int(2)), max(min(int(2), int(2)), min(int(2), int(2)))))))))))), ! (! (_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (0 >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), _GLF_IDENTITY((int(0)) / 1, (true ? (int(0)) / 1 : _GLF_FUZZED(-71923))))))) : _GLF_FUZZED(_injected_loop_counter))) > (0 >> _GLF_IDENTITY(int(2), _GLF_IDENTITY(int(2), _GLF_IDENTITY(min(int(2), int(2)), max(min(int(2), int(2)), _GLF_IDENTITY(min(int(2), int(2)), min(min(int(2), int(2)), min(_GLF_IDENTITY(int(2), (int(2)) + 0), int(2)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, bool(bvec3(injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, true, true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true && (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false)))) || false))), true)), (bool(bvec2(_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y) || false, ((injectionSwitch.x < injectionSwitch.y) || false) && true)), true))) && true), (bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-4.1, -136.185)) : injectionSwitch)).x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false), true))) && true)))) && (_GLF_WRAPPED_LOOP(_injected_loop_counter > (_GLF_IDENTITY(0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (_GLF_IDENTITY(2, (2) - 0)) / 1)), _GLF_IDENTITY(int(2), _GLF_IDENTITY(min(int(2), int(_GLF_IDENTITY(2, (2) + 0))), max(min(int(_GLF_IDENTITY(2, clamp(2, _GLF_IDENTITY(2, (2) - 0), 2))), int(2)), _GLF_IDENTITY(min(int(2), int(2)), (_GLF_IDENTITY(min(int(2), int(2)), (_GLF_IDENTITY(min(int(2), int(2)), (min(int(2), int(2))) | (min(int(2), int(2))))) << 0)) ^ (0 & -50789)))))), (false ? _GLF_FUZZED(_injected_loop_counter) : 0 >> _GLF_IDENTITY(int(_GLF_IDENTITY(2, (true ? _GLF_IDENTITY(2, ~ (~ (2))) : _GLF_FUZZED(ivec4(-92002, -14997, 63815, -47597)[1])))), _GLF_IDENTITY(int(2), _GLF_IDENTITY(min(int(2), int(2)), max(min(_GLF_IDENTITY(int(2), (int(2)) - 0), int(2)), min(int(2), int(2))))))))))))))); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))));
    }
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(float(true)), _GLF_FUZZED(vec2(vec3(972.043, 784.030, -50.42)).t)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).y)))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(7), int(7)))); _injected_loop_counter --)
          {
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _GLF_IDENTITY(_injected_loop_counter --, (_injected_loop_counter --) | 0))
        {
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & 38203)); _injected_loop_counter --)
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
            {
             if(_GLF_DEAD(false))
              barrier();
             barrier();
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
            }
           else
            {
            }
          }
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     for(int _injected_loop_counter = ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 do
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
 do
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     for(int _injected_loop_counter = int(_GLF_ONE(1.0, injectionSwitch.y)); _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 << _GLF_IDENTITY(int(5), _GLF_IDENTITY(int(5), 0 | (int(5)))))); _injected_loop_counter --)
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  barrier();
 for(int _injected_loop_counter = int(_GLF_ZERO(0.0, injectionSwitch.x)); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != int(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(injectionSwitch.y, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 1.0, 1.0)))))); _injected_loop_counter ++)
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), false || ((! (false)))))))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (subgroup_local_id)) + 1)) | 0u)))) % _GLF_struct_replacement_7._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | (_GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (true ? uint(_GLF_ZERO(0.0, injectionSwitch.x)) : _GLF_FUZZED(subgroup_local_id))) ^ 0u)), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(((subgroup_local_id + 1)) | 0u, (((subgroup_local_id + 1)) | 0u) - 0u))))) % _GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_size, (_GLF_IDENTITY(_GLF_struct_replacement_7._f2.subgroup_size, clamp(_GLF_struct_replacement_7._f2.subgroup_size, _GLF_struct_replacement_7._f2.subgroup_size, _GLF_struct_replacement_7._f2.subgroup_size))) | 0u)) | (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(_GLF_IDENTITY(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 1u)))) + 1)) | _GLF_IDENTITY(0u, (true ? 0u : _GLF_IDENTITY(_GLF_FUZZED(subgroup_id), (_GLF_FUZZED(subgroup_id)) >> 0u))))), (uint(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 1u)), (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) - (_GLF_IDENTITY(1u, ~ (_GLF_IDENTITY(~ (1u), (_GLF_IDENTITY(~ (1u), 0u | (~ (1u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))) ^ 1u))) ^ (((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))) ^ 1u)))) + 1)) | _GLF_IDENTITY(_GLF_IDENTITY(0u, ~ (~ (0u))), (true ? 0u : _GLF_FUZZED(subgroup_id)))))) | (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))))) % _GLF_struct_replacement_7._f2.subgroup_size, 0u ^ (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)) + 1), _GLF_IDENTITY((true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id))) + 0u) + 1) : _GLF_FUZZED(packUnorm4x8(vec4(-922.143, -47.19, -2.4, -837.670)))), _GLF_IDENTITY(uint(uvec2((true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id))) + 0u) + 1) : _GLF_FUZZED(packUnorm4x8(vec4(-922.143, -47.19, -2.4, -837.670)))), 1u)), 0u | (uint(uvec2((true ? (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id)), (_GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED(workgroup_size) : subgroup_local_id))) + 0u) + 1) : _GLF_FUZZED(packUnorm4x8(vec4(-922.143, -47.19, -2.4, -837.670)))), 1u)))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1)))), (~ (_GLF_IDENTITY((subgroup_local_id + 1), clamp((subgroup_local_id + 1), (subgroup_local_id + 1), (subgroup_local_id + 1))))) ^ 0u))), ((_GLF_IDENTITY(subgroup_local_id, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(workgroup_base) : subgroup_local_id)) + 1)) >> (_GLF_IDENTITY(50462u, (50462u) ^ 0u) & uint(_GLF_ZERO(0.0, injectionSwitch.x))))), min((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))), (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> (50462u & _GLF_IDENTITY(uint(_GLF_ZERO(0.0, injectionSwitch.x)), (uint(_GLF_ZERO(0.0, injectionSwitch.x))) - (0u >> _GLF_IDENTITY(uint(3u), _GLF_IDENTITY(uint(3u), uint(uint(uint(3u))))))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 ^ (1))) >> 0)), ((subgroup_local_id + 1)) >> (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))) - 0u), 0u)), 0u + (uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), max(_GLF_IDENTITY((subgroup_local_id + 1), (false ? _GLF_FUZZED(workgroup_id) : (subgroup_local_id + 1))), (subgroup_local_id + 1))), ((subgroup_local_id + 1)) >> (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x)))), (_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) >> _GLF_IDENTITY((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u), uvec3(0u, 0u, 0u) ^ (uvec3(_GLF_IDENTITY((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), min((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), clamp((50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))), (50462u & uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), 0u, 0u))))))) - 0u), 0u)))))))) | 0u)))) % _GLF_struct_replacement_7._f2.subgroup_size))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false))))), ! (! (_GLF_IDENTITY(false, false || (false))))) ? _GLF_FUZZED(_GLF_IDENTITY((_GLF_IDENTITY(-- virtual_gid, (-- virtual_gid) + (0u >> _GLF_IDENTITY(uint(2u), _GLF_IDENTITY(uint(2u), (uint(2u)) / 1u))))), (true ? _GLF_IDENTITY((-- virtual_gid), ((-- virtual_gid)) << 0u) : _GLF_FUZZED(workgroup_id)))) : _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)))) % _GLF_struct_replacement_7._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, max(1, 1)), 1, 1))), (false ? _GLF_FUZZED(workgroup_base) : (_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) | 0u) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, _GLF_IDENTITY(max(1, 1), min(max(1, 1), max(1, 1)))), 1, 1))))), ((subgroup_local_id + _GLF_IDENTITY(1, max(1, 1)))) | 0u)))) % _GLF_struct_replacement_7._f2.subgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) * 1u)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))).x)))), ((subgroup_local_id + 1)) | 0u)))), ~ (~ (_GLF_IDENTITY((subgroup_local_id + 1), uint(uint(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u), (_GLF_IDENTITY(subgroup_local_id + 1, (subgroup_local_id + 1) >> 0u)) * 1u)) | uint(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, vec2(mat2x4(injectionSwitch, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))).x)))), ((subgroup_local_id + 1)) | _GLF_IDENTITY(0u, (0u) | 0u)))))))) % _GLF_struct_replacement_7._f2.subgroup_size) - 0u)) ^ uint(_GLF_ZERO(0.0, injectionSwitch.x)))), ~ (~ ((_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (subgroup_local_id)) + 1, (_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (subgroup_local_id))) | (subgroup_local_id)) + 1) >> 0u)), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) | 0u)))) % _GLF_struct_replacement_7._f2.subgroup_size, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id, (_GLF_IDENTITY(subgroup_local_id, 0u | (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id), max(_GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id), 0u | ((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id))), _GLF_IDENTITY((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id), max((false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id), (false ? _GLF_FUZZED(workgroup_id) : subgroup_local_id))))))))) | (subgroup_local_id)) + _GLF_IDENTITY(1, clamp(_GLF_IDENTITY(1, (1) * 1), 1, 1))), uint(uint(_GLF_IDENTITY((subgroup_local_id + 1), ((_GLF_IDENTITY(subgroup_local_id + 1, max(subgroup_local_id + 1, subgroup_local_id + 1)))) | 0u)))) % _GLF_struct_replacement_7._f2.subgroup_size : _GLF_FUZZED(53043u)))))))));
 if(_GLF_WRAPPED_IF_FALSE(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > 0); _injected_loop_counter --)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
        }
       else
        {
        }
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
    }
  }
 else
  {
   do
    {
     do
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_WRAPPED_IF_FALSE(false))
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
           do
            {
             barrier();
             for(int _injected_loop_counter = ((_GLF_IDENTITY(0, ~ (~ (0))) ^ 1) ^ ((_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), (_GLF_IDENTITY(1 << _GLF_IDENTITY(int(0), int(0)), ~ (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(0), int(0))), (_GLF_IDENTITY(~ (1 << _GLF_IDENTITY(int(0), int(0))), 1 * (~ (1 << _GLF_IDENTITY(int(0), int(0)))))) / 1)))) ^ 0)) >> _GLF_IDENTITY(int(0), _GLF_IDENTITY(int(0), clamp(int(0), int(_GLF_IDENTITY(0, (0) + 0)), int(0)))))); _GLF_WRAPPED_LOOP(_injected_loop_counter < 1); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                barrier();
               if(_GLF_DEAD(false))
                {
                 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
                  {
                   barrier();
                  }
                 else
                  {
                  }
                }
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 barrier();
                }
               if(_GLF_DEAD(false))
                barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(false))
                barrier();
               if(_GLF_WRAPPED_IF_FALSE(false))
                {
                 if(_GLF_DEAD(false))
                  barrier();
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                }
               else
                {
                 barrier();
                }
              }
            }
           while(_GLF_WRAPPED_LOOP(false));
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0])), injectionSwitch[1])), max(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0])), injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))[0], 0.0 + (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))[0])), injectionSwitch[1])))).x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.y), bool(true))), min(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.y), bool(true))))))), float(mat4(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(2.5)), float(injectionSwitch.y), bool(true))))), sin(0.0), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, determinant(mat3(length(0.0), 1.0, 0.0, log(1.0), 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, length(0.0), 0.0, 1.0, 1.0)))))))
            {
             if(_GLF_DEAD(false))
              {
               if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
                barrier();
               barrier();
              }
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             if(_GLF_WRAPPED_IF_FALSE(false))
              {
              }
             else
              {
               barrier();
              }
            }
          }
         else
          {
           if(_GLF_DEAD(false))
            barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
  }
 else
  {
   do
    {
     atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(1, 0 | (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY((1) - 0, ~ (~ ((1) - 0))), min((1) - 0, (1) - 0))) | 0), _GLF_IDENTITY(0 | ((1) - 0), (_GLF_IDENTITY(0 | ((1) - 0), min(_GLF_IDENTITY(0 | ((1) - 0), ~ (~ (_GLF_IDENTITY(0 | ((1) - 0), min(0 | ((1) - 0), 0 | ((1) - 0)))))), 0 | ((1) - 0)))) / 1)))), (true ? (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1) - _GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) | (0))) + 0), (_GLF_IDENTITY(_GLF_IDENTITY((1) - 0, ~ (~ ((1) - 0))), min((1) - 0, (1) - 0))) | 0), _GLF_IDENTITY(0 | ((1) - 0), (_GLF_IDENTITY(0 | ((1) - 0), min(_GLF_IDENTITY(0 | ((1) - 0), ~ (~ (_GLF_IDENTITY(0 | ((1) - 0), min(0 | ((1) - 0), 0 | ((1) - 0)))))), 0 | ((1) - 0)))) / 1)))) : _GLF_FUZZED(-82127))) << 0)))), (uint(_GLF_IDENTITY(1, 0 | _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(0 | ((1) - 0), (0 | ((_GLF_IDENTITY(1, _GLF_IDENTITY(min(1, 1), int(int(_GLF_IDENTITY(min(1, 1), (min(1, 1)) - (0 | 0))))))) - 0)) / 1)))) << 0), (_GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, true && (true))) ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | ((1) - 0), (0 | ((1) - 0)) >> 0), (0 | ((_GLF_IDENTITY(1, min(1, 1))) - 0)) / 1)))) << 0) : _GLF_FUZZED(-64783)))), 0 ^ ((_GLF_IDENTITY(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(0 | ((1) - 0), _GLF_IDENTITY((0 | ((_GLF_IDENTITY(1, min(1, 1))) - 0)) / 1, ((0 | ((_GLF_IDENTITY(1, min(1, 1))) - 0)) / 1) / int(_GLF_ONE(1.0, injectionSwitch.y))))))) << 0), (_GLF_IDENTITY(true, (true) && true) ? _GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | ((1) - 0), (0 | ((1) - 0)) >> 0), (0 | ((_GLF_IDENTITY(1, min(1, 1))) - 0)) / 1)))) << 0) : _GLF_FUZZED(-64783)))))), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY(_GLF_IDENTITY((1), ~ (_GLF_IDENTITY(~ ((1)), 0 + (_GLF_IDENTITY(~ ((1)), clamp(~ ((1)), ~ ((1)), ~ ((1)))))))) - 0, _GLF_IDENTITY(0 | ((1) - 0), (0 | ((_GLF_IDENTITY(1, min(1, 1))) - _GLF_IDENTITY(0, (0) >> 0))) / 1)))) << 0)), (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(0 | ((1) - 0), (0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))), (true ? (_GLF_IDENTITY(1, min(1, 1))) : _GLF_FUZZED(-89611))) - 0)) / 1)))) << 0)), 0 ^ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(0 | ((1) - 0), (_GLF_IDENTITY(0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) - 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) - 0, clamp((_GLF_IDENTITY(1, min(1, 1))) - 0, (_GLF_IDENTITY(1, min(1, 1))) - 0, (_GLF_IDENTITY(1, min(1, 1))) - 0)), (_GLF_IDENTITY(1, min(1, 1))) - 0))), ~ (_GLF_IDENTITY(~ (0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) - 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) - 0, clamp((_GLF_IDENTITY(1, min(1, 1))) - 0, (_GLF_IDENTITY(1, min(1, 1))) - 0, (_GLF_IDENTITY(1, min(1, 1))) - 0)), (_GLF_IDENTITY(1, min(1, 1))) - 0)))), int(ivec3(~ (0 | (_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) - 0, min(_GLF_IDENTITY((_GLF_IDENTITY(1, min(1, 1))) - 0, clamp((_GLF_IDENTITY(1, min(1, 1))) - 0, (_GLF_IDENTITY(1, min(1, 1))) - 0, (_GLF_IDENTITY(1, min(1, 1))) - 0)), (_GLF_IDENTITY(1, min(1, 1))) - 0)))), 1, 1)))))) / 1)))) << 0))))) ^ 0)) | (_GLF_IDENTITY((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, (1) ^ 0))))) - 0, _GLF_IDENTITY(_GLF_IDENTITY(0 | ((1) - 0), (_GLF_IDENTITY(0 | ((1) - 0), (0 | ((1) - 0)) - 0)) | (0 | ((1) - 0))), (0 | ((_GLF_IDENTITY(1, min(1, 1))) - 0)) / 1)))) << 0)), ~ (~ ((_GLF_IDENTITY(1, (_GLF_IDENTITY(1, _GLF_IDENTITY((1) - 0, _GLF_IDENTITY(0 | ((1) - 0), (0 | ((_GLF_IDENTITY(1, min(1, 1))) - 0)) / 1)))) << 0)))))))))) / ((1u << _GLF_IDENTITY(uint(0u), uint(0u))) >> _GLF_IDENTITY(uint(0u), uint(0u)))), _GLF_IDENTITY(4, min(4, 4)), 64, 4);
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))
      barrier();
     do
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
  }
 do
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   else
    {
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(2), _GLF_IDENTITY((uint(2)), ((uint(2))) << 0u) << 0u), 4, 64, 4);
  }
 while(_GLF_IDENTITY(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))), false || (_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, bool(bvec4(false, false, false, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) || false))), ! (! (bool(bvec4(true, true, true, _GLF_IDENTITY(true, (true) || false))))))))))), bool(bvec4(! (_GLF_IDENTITY(true, bool(bool(true)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / _GLF_ONE(1.0, injectionSwitch.y)) : _GLF_FUZZED(-1.9))))), true, false))))))))))));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
