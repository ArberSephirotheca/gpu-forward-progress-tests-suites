#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 0.0, 1.0, 1.0, 0.0, exp(0.0), 1.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), max(vec2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(min(0.0, 0.0), (true ? min(0.0, 0.0) : _GLF_FUZZED(243.245)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), mix(float(_GLF_IDENTITY(0.0, (0.0) + 0.0)), float(_GLF_FUZZED(8.5)), bool(false)))), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)))), (float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0), _GLF_IDENTITY(max(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), min(_GLF_IDENTITY(max(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), (_GLF_IDENTITY(max(vec2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(3972.8586)), bool(false))))), _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, tan(0.0), determinant(mat4(determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), clamp(dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0)), dot(vec2(0.0, 1.0), vec2(1.0, 0.0))))), 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 1.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), (true ? vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0) : _GLF_FUZZED(vec2(50.23, 7.2))))), max(max(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0)), max(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))) / vec2(1.0, 1.0)), max(vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec2(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0))))))) / 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))), (_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), ! _GLF_IDENTITY((_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))), false || ((_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))))), 0.0 + (_GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false))))))), _GLF_IDENTITY((mix(float(0.0), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))), min((mix(float(0.0), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))), (mix(float(0.0), float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), false || (! (bool(false)))))))))) * _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat4x2(1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0))))))))) - 0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false)), exp(0.0), 0.0), (vec3(mix(_GLF_IDENTITY(float(0.0), clamp(float(0.0), _GLF_IDENTITY(float(0.0), (true ? float(0.0) : _GLF_FUZZED(-57.99))), float(0.0))), float(_GLF_FUZZED(-0.1)), bool(false)), exp(0.0), 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(vec3(mix(_GLF_IDENTITY(float(0.0), (float(0.0)) - 0.0), float(_GLF_FUZZED(_GLF_IDENTITY(-0.1, min(-0.1, -0.1)))), bool(false)), exp(0.0), 0.0), (vec3(mix(float(0.0), _GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), clamp(_GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), min(float(_GLF_FUZZED(-0.1)), _GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), mix(float(float(_GLF_FUZZED(-0.1))), float(_GLF_FUZZED(0.7)), bool(false))), float(_GLF_FUZZED(-0.1)))))), _GLF_IDENTITY(_GLF_IDENTITY(float(_GLF_FUZZED(-0.1)), clamp(float(_GLF_FUZZED(-0.1)), float(_GLF_FUZZED(-0.1)), float(_GLF_FUZZED(-0.1)))), sin(0.0) + (float(_GLF_FUZZED(-0.1)))), float(_GLF_FUZZED(-0.1)))), bool(_GLF_IDENTITY(false, ! (! (false))))), exp(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), 0.0)) * mat3(1.0)))) * 1.0))), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, length(0.0), tan(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-3.7)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0))), max(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)), (_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat4x2(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(-3.7)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? mix(float(_GLF_FUZZED(-3.7)), float(0.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) : _GLF_FUZZED(-8.5)))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, 1.0 * (0.0)), _GLF_IDENTITY((0.0), 0.0 + ((0.0))) - 0.0), 0.0))) - 0.0))), vec4(1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(_GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), clamp(_GLF_IDENTITY(clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), clamp(clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))), clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0), clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.46))), _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0))), (min(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0)), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-51.46))), 1.0, 1.0)))) - 0.0)), 1.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), length(0.0), tan(0.0)), vec4(1.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-3.3)), bool(false))), log(1.0), 1.0, exp(0.0), 1.0), (mat3x2(1.0, 0.0, log(1.0), 1.0, exp(0.0), 1.0)) + mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), 1.0)))), max(vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(_GLF_IDENTITY(false, bool(bool(false)))))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, length(0.0), tan(0.0)), vec4(1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-9631.4085) : 0.0)), 1.0, 1.0)), dot(vec4(0.0, 1.0, length(0.0), tan(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(mat3(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(exp(0.0), mix(float(_GLF_FUZZED(928.174)), float(_GLF_IDENTITY(exp(0.0), (false ? _GLF_FUZZED(-3.0) : exp(0.0)))), bool(true))))), dot(vec4(0.0, 0.0, _GLF_IDENTITY(0.0, float(float(0.0))), 1.0), vec4(0.0, 0.0, 0.0, exp(0.0)))), 0.0, 1.0, 1.0, abs(1.0), 1.0, 1.0))), clamp(0.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(32.57) : _GLF_IDENTITY(0.0, max(0.0, 0.0)))))))), vec4(_GLF_IDENTITY(1.0, (1.0) / 1.0), 0.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(mat2x4(1.0, 1.0, 1.0, abs(0.0), 0.0, 0.0, 1.0, 0.0))))))))), vec3(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), min(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false)), min(mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false))))), (_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-0.1)), bool(false)))) - 0.0))), _GLF_IDENTITY(1.0, max(1.0, 1.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, length(0.0), tan(0.0)), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-2.1)), float(1.0), bool(true))), length(0.0), tan(0.0)), vec4(1.0, 0.0, 1.0, 1.0)))))))), 1.0, 1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0)))), _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat3x2(injectionSwitch, 1.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), ((injectionSwitch)) - vec2(0.0, 0.0)) * vec2(1.0, 1.0)).y), 0.0), (false ? _GLF_FUZZED(mat3x2(800.657, _GLF_IDENTITY(_GLF_IDENTITY(36.45, min(36.45, 36.45)), min(36.45, _GLF_IDENTITY(36.45, mix(_GLF_IDENTITY(_GLF_IDENTITY(float(36.45), mix(float(_GLF_FUZZED(float(91504u))), float(_GLF_IDENTITY(float(36.45), clamp(float(36.45), float(36.45), float(36.45)))), bool(true))), min(float(36.45), float(36.45))), float(_GLF_FUZZED(6.6)), bool(false))))), -21.35, 8.2, 4.7, 5781.8623)) : mat3x2(injectionSwitch, 1.0, 0.0, _GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y), 0.0))))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (injectionSwitch.x > injectionSwitch.y))), ! (! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, false || (true)))), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), clamp(_GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), clamp(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), (true ? min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))) : _GLF_FUZZED(-9390.6590))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), (min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)))) / 1.0))), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), max(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(-409.476), (_GLF_IDENTITY(_GLF_FUZZED(-409.476), max(_GLF_FUZZED(-409.476), _GLF_FUZZED(-409.476)))) * 1.0)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), true && (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, false || (true)))), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), clamp(_GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), clamp(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), (true ? min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))) : _GLF_FUZZED(-9390.6590))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), (min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)))) / 1.0))), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), max(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(-409.476), (_GLF_IDENTITY(_GLF_FUZZED(-409.476), max(_GLF_FUZZED(-409.476), _GLF_FUZZED(-409.476)))) * 1.0)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), _GLF_IDENTITY(bool(false), (bool(false)) && _GLF_IDENTITY(true, false || (true)))), clamp(_GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), (mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))) / 1.0), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), clamp(_GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), clamp(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), (true ? min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))) : _GLF_FUZZED(-9390.6590))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), (min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)))) / 1.0))), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), _GLF_IDENTITY(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), max(min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false))), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)))))))), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), min(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-409.476)), bool(false)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_IDENTITY(_GLF_FUZZED(-409.476), (_GLF_IDENTITY(_GLF_FUZZED(-409.476), max(_GLF_FUZZED(-409.476), _GLF_FUZZED(-409.476)))) * 1.0)), bool(false))))))) > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, 1.0 * (injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))))))))))), bool(bvec2((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))), _GLF_IDENTITY(true, false || (true))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
        return;
       barrier();
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, _GLF_IDENTITY(true, _GLF_IDENTITY((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false))))), (! ((_GLF_IDENTITY(true, bool(bvec4(true, false, true, false)))))) && true))) && true)))))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), _GLF_IDENTITY((! (_GLF_DEAD(false))) && true, bool(bool((! (_GLF_DEAD(false))) && true)))))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch[1]), bool(true))))).y)))), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false)))))), (bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch[1]), bool(true))))).y)))), bool(_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec2(bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false))))))) || false))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, 0u | _GLF_IDENTITY((gl_NumWorkGroups.x), ((gl_NumWorkGroups.x)) ^ 0u));
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) << uvec3(_GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) | (0u)), 0u, 0u)), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / ((uvec3(1u, 1u, 1u) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, _GLF_IDENTITY((0u) | (0u), ((0u) | (0u)) | ((0u) | (0u)))), 0u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_IDENTITY(gl_WorkGroupSize, uvec3(0u, 0u, 0u) | (gl_WorkGroupSize))) << uvec3(0u, 0u, _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 0u))))), _GLF_IDENTITY((gl_WorkGroupSize), ((gl_WorkGroupSize)) / ((_GLF_IDENTITY(uvec3(1u, 1u, 1u), _GLF_IDENTITY(clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)), max(clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u)), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u))))) << _GLF_IDENTITY(uvec3(4u), uvec3(4u))) >> _GLF_IDENTITY(uvec3(4u), uvec3(4u)))) ^ uvec3(0u, _GLF_IDENTITY(0u, (0u) | (0u)), 0u))))).x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true)))), (bool(_GLF_IDENTITY(bool(false), bool(bvec2(bool(false), true))))) && true))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x) * 1.0) > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x) * 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x) * 1.0) > injectionSwitch.y))), false, false), bvec3(bvec3(bvec3(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x) * 1.0) > injectionSwitch.y), true && ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / abs(vec2(1.0, 1.0))).x) * 1.0) > injectionSwitch.y))), false, false)))))))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true)))), (bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec4(bvec2(false, true), true, true))))) && true)), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - length(vec4(0.0, 0.0, 0.0, 0.0))), 0.0, 1.0, tan(0.0), length(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), length(0.0), 1.0), (false ? _GLF_FUZZED(mat4x3(5.2, -0.7, -7902.3576, -8.1, -51.71, -63.05, 70.92, _GLF_IDENTITY(-936.283, (_GLF_IDENTITY(-936.283, mix(float(_GLF_IDENTITY(_GLF_FUZZED(-1908.3868), clamp(_GLF_FUZZED(-1908.3868), _GLF_FUZZED(-1908.3868), _GLF_IDENTITY(_GLF_FUZZED(-1908.3868), float(_GLF_IDENTITY(vec2(_GLF_FUZZED(-1908.3868), 0.0), vec2(0.0, 0.0) + (vec2(_GLF_FUZZED(-1908.3868), 0.0)))))))), float(-936.283), bool(true)))) - 0.0), 5103.9061, -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (true ? 1.0 : _GLF_FUZZED(786.284))), tan(0.0), length(0.0), 1.0, 1.0, 1.0, length(0.0), 1.0)))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0, 1.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(length(0.0), float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(length(0.0), max(length(0.0), length(0.0))), 1.0, 0.0, 1.0, abs(0.0), 1.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0), (true ? mat4x3(_GLF_IDENTITY(length(0.0), max(length(0.0), length(0.0))), 1.0, 0.0, 1.0, abs(0.0), 1.0, abs(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, 0.0) : _GLF_FUZZED(matrixCompMult(mat4x3(4.9, 1.3, 3.7, -2.6, 709.097, -438.819, -9.4, -2.1, -32.23, -2.3, -6155.5206, 8235.6073), mat4x3(-261.941, -6.9, 629.848, -73.10, 5.6, 2060.4908, -8242.8735, 552.478, -51.80, -47.40, 83.66, -7.2))))))), clamp(length(0.0), length(0.0), length(0.0))), (length(0.0)) / 1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), (length(0.0)) / 1.0), 1.0), (false ? _GLF_FUZZED(mat4x3(5.2, -0.7, -7902.3576, -8.1, -51.71, -63.05, 70.92, _GLF_IDENTITY(-936.283, min(-936.283, -936.283)), 5103.9061, -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.2)), float(0.0), bool(true))), 0.0, 1.0, tan(0.0), length(0.0), 1.0, 1.0, 1.0, length(0.0), 1.0))))) - vec2(0.0, 0.0))), clamp(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, tan(0.0), length(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))), max(_GLF_IDENTITY(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), max(_GLF_IDENTITY(max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)), (max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))) - sqrt(0.0)), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0))))), _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))))), length(0.0), 1.0), (false ? _GLF_FUZZED(mat4x3(5.2, -0.7, -7902.3576, -8.1, -51.71, -63.05, _GLF_IDENTITY(70.92, clamp(_GLF_IDENTITY(70.92, (70.92) * 1.0), 70.92, 70.92)), _GLF_IDENTITY(-936.283, (_GLF_IDENTITY(-936.283, mix(float(_GLF_FUZZED(-1908.3868)), float(-936.283), bool(true)))) - 0.0), 5103.9061, -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (true ? 1.0 : _GLF_FUZZED(786.284))), tan(0.0), length(0.0), 1.0, 1.0, 1.0, length(0.0), 1.0)))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))), min(_GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))), _GLF_IDENTITY(length(0.0), clamp(length(0.0), length(0.0), length(0.0))))), (length(0.0)) / 1.0), 1.0, 1.0, 1.0, length(0.0), 1.0), (false ? _GLF_FUZZED(mat4x3(_GLF_IDENTITY(5.2, min(_GLF_IDENTITY(5.2, clamp(5.2, 5.2, 5.2)), 5.2)), -0.7, -7902.3576, -8.1, -51.71, -63.05, 70.92, _GLF_IDENTITY(-936.283, min(-936.283, -936.283)), 5103.9061, -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), clamp(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), _GLF_IDENTITY(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), max(mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0))))), mat2(1.0) * (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)))))))))), (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))), injectionSwitch))) / vec2(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0), transpose(transpose(mat4(1.0, 1.0, 1.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, sqrt(1.0), 1.0, 0.0, 1.0, 1.0, exp(0.0), 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0, 0.0)))))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.2)), float(0.0), bool(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), (bool(bool(true))) && true))))), 0.0, 1.0, tan(0.0), length(0.0), 1.0, 1.0, 1.0, length(0.0), 1.0))))) - vec2(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 0.0))))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, 1.0, tan(0.0), length(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(_GLF_IDENTITY(1.0, (1.0) / 1.0), 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), _GLF_IDENTITY(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(93.21)), float(1.0), bool(true)))), max(clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(93.21)), float(1.0), bool(true)))), clamp(1.0, 1.0, _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(93.21)), float(1.0), bool(true))))))))), length(0.0), 1.0), (false ? _GLF_FUZZED(mat4x3(5.2, -0.7, -7902.3576, -8.1, -51.71, -63.05, 70.92, _GLF_IDENTITY(-936.283, (_GLF_IDENTITY(-936.283, mix(float(_GLF_FUZZED(-1908.3868)), float(-936.283), bool(true)))) - 0.0), 5103.9061, -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0))), (true ? 1.0 : _GLF_FUZZED(786.284))), tan(0.0), length(0.0), 1.0, 1.0, 1.0, length(0.0), 1.0)))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), tan(0.0), _GLF_IDENTITY(_GLF_IDENTITY(length(0.0), clamp(length(0.0), _GLF_IDENTITY(length(0.0), (length(0.0)) + 0.0), length(0.0))), (length(0.0)) / 1.0), 1.0, 1.0, 1.0, length(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4(0.0, cos(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(sqrt(0.0))), (mat4(0.0, cos(0.0), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0)), dot(vec3(0.0, 1.0, 1.0), vec3(1.0, 0.0, 0.0))), 0.0, 1.0)), 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), log(1.0), 1.0, length(vec2(0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, sin(sqrt(0.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), 1.0), (false ? _GLF_FUZZED(mat4x3(5.2, -0.7, -7902.3576, -8.1, -51.71, -63.05, 70.92, _GLF_IDENTITY(-936.283, min(-936.283, -936.283)), 5103.9061, -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY((vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), clamp((vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), (vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)), (vec2(1.0, 1.0)) * _GLF_IDENTITY(mat2(1.0), (mat2(1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.2)), float(0.0), bool(true))), 0.0, 1.0, tan(0.0), length(0.0), 1.0, 1.0, 1.0, length(0.0), 1.0))))) - vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / _GLF_IDENTITY(vec2(1.0, 1.0), vec2(mat2x4(vec2(1.0, 1.0), 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y))))), 0.0, 0.0, 1.0, tan(0.0), length(0.0), 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(clamp(1.0, 1.0, 1.0), max(clamp(1.0, 1.0, 1.0), clamp(1.0, 1.0, 1.0)))), length(0.0), 1.0), (false ? _GLF_FUZZED(mat4x3(5.2, -0.7, -7902.3576, -8.1, -51.71, -63.05, 70.92, _GLF_IDENTITY(-936.283, (_GLF_IDENTITY(-936.283, mix(float(_GLF_FUZZED(-1908.3868)), float(-936.283), bool(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true, true)), (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (! (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))), true, true))) && true)))))) - 0.0), _GLF_IDENTITY(5103.9061, min(5103.9061, 5103.9061)), -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, sin(0.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(atan(-75.86)))), 0.0))), (true ? 1.0 : _GLF_FUZZED(786.284))), tan(0.0), length(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, _GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), log(_GLF_IDENTITY(1.0, (1.0) - 0.0)), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0), (mat4x3(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0, 0.0)), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0)) - mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), 1.0, 1.0, 1.0, length(0.0), _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))), (vec2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), 0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, tan(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))), _GLF_IDENTITY(_GLF_IDENTITY(length(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-4.3) : 0.0))) - 0.0)), clamp(length(0.0), length(0.0), length(0.0))), (length(0.0)) / 1.0), 1.0, 1.0, 1.0, _GLF_IDENTITY(length(0.0), _GLF_IDENTITY(float(_GLF_IDENTITY(vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), clamp(vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))))), 1.0 * (float(_GLF_IDENTITY(vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), clamp(vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))), vec3(length(0.0), 1.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)))))))))), 1.0), (false ? _GLF_FUZZED(mat4x3(5.2, -0.7, -7902.3576, -8.1, -51.71, -63.05, 70.92, _GLF_IDENTITY(-936.283, min(-936.283, -936.283)), 5103.9061, -558.578, 9832.7519, 6.2)) : mat4x3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), (injectionSwitch) * _GLF_IDENTITY(vec2(1.0, 1.0), clamp(vec2(1.0, 1.0), vec2(1.0, 1.0), vec2(1.0, 1.0)))), (injectionSwitch) / vec2(1.0, 1.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-4.2)), float(0.0), bool(true))), 0.0, 1.0, _GLF_IDENTITY(tan(0.0), float(_GLF_IDENTITY(vec4(tan(0.0), 1.0, 1.0, tan(0.0)), max(_GLF_IDENTITY(vec4(tan(0.0), 1.0, 1.0, tan(0.0)), (true ? vec4(tan(0.0), 1.0, 1.0, tan(0.0)) : _GLF_FUZZED(vec4(-4443.8282, 5038.3494, 5.5, 217.846)))), vec4(tan(0.0), 1.0, 1.0, tan(0.0)))))), length(0.0), 1.0, 1.0, 1.0, length(0.0), 1.0))))) - vec2(0.0, 0.0))))).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(0, clamp(0, 0, 0)), _GLF_IDENTITY(min(0, 0), min(_GLF_IDENTITY(min(0, 0), 0 | (min(0, 0))), min(0, 0)))); _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       continue;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false, true, true)))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, ! (! (_GLF_IDENTITY((false) || false, ((false) || false) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))))), (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_IDENTITY(_GLF_FUZZED(-338.744), (false ? _GLF_FUZZED(-16.27) : _GLF_FUZZED(-338.744))) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), true && _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3((_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, false)))))
  barrier();
 uint subgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (_GLF_IDENTITY(subgroup_id, (subgroup_id) >> 0u)) - 0u), (subgroup_id) | (subgroup_id)), ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), max(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), ~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) - (0u << _GLF_IDENTITY(uint(5u), uint(5u)))))))), 1u * _GLF_IDENTITY((~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))))), (false ? _GLF_FUZZED(subgroup_id) : (~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), (_GLF_IDENTITY(min(subgroup_size, subgroup_size), (min(subgroup_size, _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / 1u))) * 1u)) | (_GLF_IDENTITY(min(subgroup_size, subgroup_size), min(min(subgroup_size, subgroup_size), min(subgroup_size, subgroup_size)))))), _GLF_IDENTITY(uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), 1u * (~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) - 0u), _GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_id)))))), min(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (subgroup_id)), _GLF_IDENTITY(((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_id))))), (_GLF_IDENTITY(((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_id))))), uint(uint(((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_id))))))))) | (_GLF_IDENTITY(((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_id))))), (((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ (subgroup_id)))))) >> 0u)))), (true ? ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) - (28247u & 0u))))))) : _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, ~ (~ (workgroup_size)))))))), ~ _GLF_IDENTITY((~ (subgroup_id)), ((~ (subgroup_id))) | (_GLF_IDENTITY((~ (subgroup_id)), (false ? _GLF_FUZZED(workgroup_id) : (_GLF_IDENTITY(~ (subgroup_id), min(~ (subgroup_id), ~ (subgroup_id)))))))))))))))) * _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(workgroup_id) : 0u)) ^ 1u))), (uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))), _GLF_IDENTITY(1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u)))), ((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u))))) ^ 0u)), (_GLF_IDENTITY(1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u)))), ((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u))))) ^ 0u)), (_GLF_IDENTITY(1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u)))), ((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u))))) ^ 0u)), max(1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u)))), ((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u))))) ^ 0u)), 1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u)))), ((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u))))) ^ 0u))))) | (1u * (~ _GLF_IDENTITY((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u)))), ((_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), (_GLF_IDENTITY((subgroup_id), clamp((subgroup_id), (subgroup_id), _GLF_IDENTITY((subgroup_id), uint(uvec2(_GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u))))), (uint(_GLF_IDENTITY(uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u), ~ (~ (uvec4(_GLF_IDENTITY((subgroup_id), ~ (~ ((subgroup_id)))), (0u | 1u), 1u, 0u)))))) / 1u)), 0u)))))) - 0u))))) ^ 0u))))) * 1u)), uint(uvec4(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), uint(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id))), (_GLF_IDENTITY(subgroup_id, ~ (~ (subgroup_id)))) | 0u), 0u, 0u)))))), _GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec4(1u, _GLF_IDENTITY(0u, (0u) | (0u)), _GLF_IDENTITY(1u, (1u) / 1u), 1u)), max(uint(_GLF_IDENTITY(uvec4(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), min(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), 1u, 1u), ~ (~ (uvec4(1u, _GLF_IDENTITY(0u, uint(uvec4(0u, 1u, 0u, _GLF_IDENTITY(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), min(((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u))), ((1u << _GLF_IDENTITY(uint(6u), uint(6u))) >> _GLF_IDENTITY(uint(6u), uint(6u)))))))), 1u, 1u))))), uint(uvec4(1u, 0u, 1u, 1u))))) * (~ (_GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(~ (~ (subgroup_id)), min(_GLF_IDENTITY(~ (~ (subgroup_id)), max(~ (~ (subgroup_id)), ~ (~ (subgroup_id)))), _GLF_IDENTITY(~ (~ (subgroup_id)), (~ (~ (subgroup_id))) ^ 0u))))))), 0u, 1u, 0u))))) * _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) ^ 0u), (0u ^ _GLF_IDENTITY(1u, ~ (~ (1u))))))) | (uint(uvec2(_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, ~ _GLF_IDENTITY((~ (subgroup_id)), max((~ (subgroup_id)), (~ (subgroup_id))))), max(_GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), _GLF_IDENTITY(((subgroup_id)), (((_GLF_IDENTITY(subgroup_id, 0u ^ (_GLF_IDENTITY(subgroup_id, clamp(subgroup_id, subgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_id, (subgroup_id) ^ 0u), clamp(subgroup_id, subgroup_id, subgroup_id))))))))) << (0u << _GLF_IDENTITY(uint(0u), uint(0u)))) << 0u))), _GLF_IDENTITY(subgroup_id, ~ (~ _GLF_IDENTITY((subgroup_id), ((subgroup_id)) / 1u)))))), 1u * (~ (_GLF_IDENTITY(subgroup_id, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id))), (false ? _GLF_FUZZED(92667u) : ~ (_GLF_IDENTITY(subgroup_id, min(subgroup_id, subgroup_id)))))))))))) * _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(min(subgroup_size, subgroup_size), (0u ^ 0u) + (min(subgroup_size, subgroup_size))), max(min(subgroup_size, subgroup_size), min(_GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) << 0u), subgroup_size)), _GLF_IDENTITY(subgroup_size, (subgroup_size) * _GLF_IDENTITY(1u, (1u) - 0u)))))), (_GLF_IDENTITY(0u, clamp(0u, _GLF_IDENTITY(0u, 0u | (0u)), 0u)) ^ 1u))))));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))), true, false, false))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | _GLF_IDENTITY((subgroup_base), ((subgroup_base)) >> 0u)))), (_GLF_IDENTITY(subgroup_base, max(subgroup_base, _GLF_IDENTITY(subgroup_base, (subgroup_base) | (subgroup_base))))) / 1u), subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, uint(uvec3(subgroup_local_id, 1u, 1u)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, (0u | 0u) ^ (workgroup_base)) + subgroup_base + ((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, min(subgroup_local_id + 1, subgroup_local_id + 1)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), uint(uint(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))))))))))))) ^ 0u)), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), uint(uint(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))))))))))))) ^ 0u)))), subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 0u)), uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (uint(uvec3(_GLF_IDENTITY(subgroup_local_id + 1, clamp(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), uint(uint(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))))))))))))) ^ 0u)), 0u ^ (_GLF_IDENTITY(subgroup_local_id + 1, _GLF_IDENTITY(uint(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), (uint(_GLF_IDENTITY(uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))), ~ (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), 0u | (_GLF_IDENTITY(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1)))), uint(uint(~ (uint(_GLF_IDENTITY(subgroup_local_id + 1, (false ? _GLF_FUZZED(subgroup_local_id) : subgroup_local_id + 1))))))))))))) ^ 0u)))), subgroup_local_id + 1, subgroup_local_id + 1)), 1u, 0u)))))) % subgroup_size);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), bool(bvec2(_GLF_DEAD(false), true))))
      barrier();
     barrier();
    }
   barrier();
  }
 atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(uint(1), (uint(1)) + 0u)) | 0u), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
  }
 uint read = _GLF_IDENTITY(atomicLoad(buf[virtual_gid], 4, 64, 2), 0u + (atomicLoad(buf[_GLF_IDENTITY(_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid)), (1u | 1u) * (_GLF_IDENTITY(virtual_gid, max(virtual_gid, virtual_gid))))], 4, 64, 2)));
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false))))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(8336.3143), _GLF_FUZZED(2.9)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x, (injectionSwitch.x) / sqrt(1.0)) : _GLF_FUZZED(-6787.3733))) > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-462.167, 1.0 * (_GLF_IDENTITY(-462.167, clamp(-462.167, _GLF_IDENTITY(-462.167, max(-462.167, -462.167)), -462.167)))))), bool(false))), injectionSwitch[1], injectionSwitch[1]), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])))), 1.0 * (_GLF_IDENTITY((_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])))), mix(float((_GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]), clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]))))), float(_GLF_FUZZED(-3316.4407)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) - 0.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(36.39), (_GLF_FUZZED(36.39)) + 0.0) : _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED(-52061) : 1))], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[_GLF_IDENTITY(1, 0 | (1))])) - 0.0, _GLF_IDENTITY(mix(float(_GLF_FUZZED(vec2(-7.1, 7.0).s)), float((clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true)), mix(float(mix(float(_GLF_FUZZED(vec2(-7.1, 7.0).s)), float((clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])) - _GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), float(_GLF_FUZZED(4443.2808)), bool(false))))))))), _GLF_IDENTITY((vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], mix(float(injectionSwitch[1]), _GLF_IDENTITY(float(_GLF_FUZZED(-462.167)), min(float(_GLF_FUZZED(-462.167)), float(_GLF_IDENTITY(_GLF_FUZZED(-462.167), tan(0.0) + (_GLF_IDENTITY(_GLF_FUZZED(-462.167), (_GLF_FUZZED(-462.167)) - 0.0)))))), bool(false))), injectionSwitch[1], injectionSwitch[1]), (clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), _GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, false || (false)))))), (bool(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, false || (false))))))) || false))), injectionSwitch[1], injectionSwitch[1])) - 0.0)))) * mat2(1.0), mix(vec2(((vec2(_GLF_IDENTITY(injectionSwitch[0], clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0])), (_GLF_IDENTITY(injectionSwitch[0], min(injectionSwitch[0], injectionSwitch[0]))) + 0.0), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[_GLF_IDENTITY(0, (_GLF_IDENTITY(0, (0) / 1)) * ((1 << _GLF_IDENTITY(int(7), int(7))) >> _GLF_IDENTITY(int(7), _GLF_IDENTITY(int(7), (true ? int(7) : _GLF_FUZZED(38263))))))], injectionSwitch[0], injectionSwitch[0])), injectionSwitch[0])), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) / 1.0)), float(_GLF_IDENTITY(_GLF_FUZZED(-462.167), max(_GLF_FUZZED(-462.167), _GLF_IDENTITY(_GLF_FUZZED(-462.167), (_GLF_FUZZED(-462.167)) * 1.0)))), bool(false))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[_GLF_IDENTITY(1, (1) >> 0)]) * round(length(normalize(vec2(1.0, 1.0))))), injectionSwitch[1]), (clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])) - 0.0)), clamp(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_IDENTITY(_GLF_FUZZED(-462.167), max(_GLF_FUZZED(-462.167), _GLF_FUZZED(-462.167)))), bool(false))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * round(length(normalize(vec2(1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch))[1]), (clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, max(_GLF_IDENTITY(1, min(1, 1)), 1))]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), bool(bvec4(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])) - 0.0)), _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(-462.167, min(_GLF_IDENTITY(-462.167, (true ? -462.167 : _GLF_FUZZED(43.76))), -462.167))), max(_GLF_FUZZED(-462.167), _GLF_FUZZED(-462.167)))), bool(false))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * round(length(normalize(vec2(1.0, 1.0))))), injectionSwitch[1]), (clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])) - 0.0)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) | (1))) >> 0)], mix(float(injectionSwitch[1]), float(_GLF_IDENTITY(_GLF_FUZZED(-462.167), max(_GLF_FUZZED(-462.167), _GLF_FUZZED(-462.167)))), bool(false))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * round(length(normalize(vec2(1.0, 1.0))))), injectionSwitch[1]), (clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])) - 0.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))[1], mix(float(injectionSwitch[1]), float(_GLF_IDENTITY(_GLF_FUZZED(-462.167), max(_GLF_FUZZED(-462.167), _GLF_FUZZED(-462.167)))), bool(false))), _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) * round(length(normalize(vec2(1.0, 1.0))))), injectionSwitch[1]), (clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5.3) : injectionSwitch.x)))) > injectionSwitch.y)), true, false)))))), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[1], injectionSwitch[1])) - 0.0)) : _GLF_FUZZED(-351.044))))))) * mat2(1.0))[0], ((vec2(injectionSwitch[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(false))), injectionSwitch[1], injectionSwitch[1]), _GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-462.167, 0.0 + (-462.167)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])), mix(float(_GLF_IDENTITY((clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-462.167, 0.0 + (-462.167)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1])), mix(float((clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(_GLF_IDENTITY(-462.167, 0.0 + (-462.167)))), bool(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false)))))), injectionSwitch[1], injectionSwitch[1]))), float(_GLF_FUZZED(9.8)), bool(false)))), float(_GLF_FUZZED(-37.90)), bool(false))) - 0.0)), mix(float(_GLF_IDENTITY(injectionSwitch[1], _GLF_IDENTITY(clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(false))), injectionSwitch[1], injectionSwitch[1]), (clamp(_GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(-462.167)), bool(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))), true, false))))))))), injectionSwitch[1], injectionSwitch[1])) - 0.0))), float(_GLF_FUZZED(2513.0409)), bool(false))))) * mat2(1.0))[1]), vec2(_GLF_FUZZED(73.62), _GLF_FUZZED(4809.9745)), bvec2(false, false))))).y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, min(_GLF_IDENTITY(read, ~ (~ (read))), _GLF_IDENTITY(read, 0u ^ (read)))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))) / 1), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))) / 1)), max(~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))) / 1)), ~ (_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)), min(_GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)), (true ? clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)) : _GLF_FUZZED(83750))), clamp(4, 4, _GLF_IDENTITY(4, (4) << 0)))))) / 1)))))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
