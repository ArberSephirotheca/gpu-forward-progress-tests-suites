#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_27 {
 float _f0;
 bvec3 _f1;
 bvec2 _f2;
 bvec4 _f3;
} ;

struct _GLF_struct_26 {
 mat2x3 _f0;
 vec3 _f1;
 ivec3 _f2;
 uvec4 _f3;
 uvec3 _f4;
 vec3 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_28 {
 vec2 _f0;
 _GLF_struct_26 _f1;
 _GLF_struct_27 _f2;
 float _f3;
} ;

struct _GLF_struct_24 {
 uint _f0;
 mat4x2 _f1;
 ivec4 _f2;
 uvec4 _f3;
 mat3x4 _f4;
 bvec4 _f5;
} ;

struct _GLF_struct_23 {
 mat2 _f0;
 bvec3 _f1;
 vec2 _f2;
 uint read;
} ;

struct _GLF_struct_22 {
 ivec4 _f0;
} ;

struct _GLF_struct_25 {
 uint _f0;
 ivec4 _f1;
 _GLF_struct_22 _f2;
 _GLF_struct_23 _f3;
 _GLF_struct_24 _f4;
} ;

struct _GLF_struct_20 {
 bvec4 _f0;
 bvec2 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_19 {
 uint _f0;
 vec4 _f1;
 mat3x2 _f2;
 int _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_18 {
 bool _f0;
 bvec4 _f1;
 mat4 _f2;
 int _f3;
} ;

struct _GLF_struct_17 {
 uvec3 _f0;
 ivec2 _f1;
 bool _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_16 {
 int _f0;
 float _f1;
 vec2 _f2;
 mat3x4 _f3;
 uint _f4;
} ;

struct _GLF_struct_15 {
 mat4x2 _f0;
 vec3 _f1;
 vec4 _f2;
} ;

struct _GLF_struct_21 {
 _GLF_struct_15 _f0;
 _GLF_struct_16 _f1;
 _GLF_struct_17 _f2;
 _GLF_struct_18 _f3;
 mat3x4 _f4;
 _GLF_struct_19 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_13 {
 float _f0;
 ivec4 _f1;
 vec2 _f2;
} ;

struct _GLF_struct_14 {
 bool _f0;
 mat3x2 _f1;
 _GLF_struct_13 _f2;
} ;

struct _GLF_struct_12 {
 ivec3 _f0;
} ;

struct _GLF_struct_29 {
 _GLF_struct_12 _f0;
 _GLF_struct_14 _f1;
 uvec4 _f2;
 _GLF_struct_21 _f3;
 _GLF_struct_25 _f4;
 _GLF_struct_28 _f5;
} ;

struct _GLF_struct_9 {
 mat4 _f0;
 uvec2 _f1;
 uvec3 _f2;
 uvec2 _f3;
} ;

struct _GLF_struct_10 {
 _GLF_struct_9 _f0;
 mat2 _f1;
 mat2 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
 mat2x4 _f1;
 int _f2;
 ivec4 _f3;
 uvec3 _f4;
} ;

struct _GLF_struct_6 {
 bvec4 _f0;
 bvec4 _f1;
 vec3 _f2;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 ivec3 _f1;
 vec4 _f2;
 mat4x3 _f3;
 int _f4;
 vec2 _f5;
} ;

struct _GLF_struct_4 {
 uvec4 _f0;
 float _f1;
 uint _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_8 {
 _GLF_struct_4 _f0;
 uint _f1;
 _GLF_struct_5 _f2;
 _GLF_struct_6 _f3;
 _GLF_struct_7 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_2 {
 uvec3 _f0;
 bool _f1;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 float _f1;
 mat4x2 _f2;
} ;

struct _GLF_struct_0 {
 mat4 _f0;
 uint _f1;
 uint _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_1 {
 vec3 _f0;
 mat2 _f1;
 ivec3 _f2;
 _GLF_struct_0 _f3;
 uvec4 _f4;
 uvec4 _f5;
 mat4 _f6;
} ;

struct _GLF_struct_11 {
 uint next_virtual_gid;
 _GLF_struct_1 _f0;
 uvec4 _f1;
 _GLF_struct_3 _f2;
 ivec3 _f3;
 _GLF_struct_8 _f4;
 _GLF_struct_10 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), mix(vec2(_GLF_FUZZED(0.7), (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))[1]), vec2((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))[0], _GLF_FUZZED(-4.7)), bvec2(true, false))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(float(72326u)) : _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))), injectionSwitch.y, injectionSwitch.y))), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)), ((injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))) / vec2(1.0, 1.0))))).y), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))), mix(vec2(_GLF_FUZZED(213.654), _GLF_FUZZED(-517.586)), vec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))))[0], (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))))[1]), bvec2(true, true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y))), min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 0.0, 1.0))), injectionSwitch.y))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(_GLF_IDENTITY(1.0, float(vec4(1.0, 0.0, 0.0, 1.0))), injectionSwitch.y)))))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))).y), false, true))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, 1.0, 0.0, determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 1.0)), 0.0))).x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), true && (bool(bvec3(false, false, true)))))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false)))) || false, ((_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))) || false) || false)), _GLF_IDENTITY(false, false || (false)), true, false)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))) && (bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), false))), bool(bvec4(true && (bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), false || (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, ! (! (true))))))))))), false))), false, true, true))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, false, false), bvec3(bvec3(bvec3(true, false, false))))))))), false))), bool(bvec4(_GLF_IDENTITY(true && (bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! (true))), false))), (_GLF_IDENTITY(true, false || (true)) && (bool(bvec4(false, false, _GLF_IDENTITY(true, ! (! _GLF_IDENTITY((true), bool(bvec3(_GLF_IDENTITY((true), bool(bvec2((true), true))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))), false)))) && true), false, true, true))), false || (_GLF_IDENTITY(true && (bool(bvec4(false, false, _GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true)))))), false || (_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! (! (! (true))))))))) && true)))), false))), bool(bvec4(true && (bool(bvec4(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), true && ((false)))), false, _GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), ((! (true))) || false)), false))), false, _GLF_IDENTITY(true, ! (! (true))), true)))))) && true)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_size = gl_SubgroupSize;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups, min(_GLF_IDENTITY(gl_NumWorkGroups, clamp(_GLF_IDENTITY(gl_NumWorkGroups, uvec3(0u, 0u, 0u) | (gl_NumWorkGroups)), gl_NumWorkGroups, _GLF_IDENTITY(gl_NumWorkGroups, uvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, 0u, 0u)), (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, 0u, 0u))) + uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) * uvec4(1u, 1u, 1u, 1u)), min(_GLF_IDENTITY(_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, 0u, 0u)), ((_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u)), (_GLF_IDENTITY(uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u)), (true ? uvec4(1u, 1u, 1u, 1u) << _GLF_IDENTITY(uvec4(7u), uvec4(7u)) : _GLF_FUZZED(uvec4(148082u, 136622u, 156391u, 50133u))))) ^ uvec4(0u, 0u, 0u, 0u))) >> _GLF_IDENTITY(uvec4(7u), uvec4(7u))) * (_GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, 0u, 0u)))), _GLF_IDENTITY(uvec4(gl_NumWorkGroups, 1u), (uvec4(gl_NumWorkGroups, 1u)) << uvec4(0u, 0u, 0u, 0u)))))))), gl_NumWorkGroups)).x;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(bool(bool(! ((injectionSwitch.x > injectionSwitch.y)))), false, true)))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u)) : _GLF_FUZZED(subgroup_size)), (_GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u)) : _GLF_FUZZED(subgroup_size)), min((true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u)) : _GLF_FUZZED(subgroup_size)), (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, (0u) | (0u))) >> 0u)) : _GLF_FUZZED(subgroup_size))))) << 0u))) | 0u) * workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) | 0u) * workgroup_id)), _GLF_IDENTITY(uint(uvec3(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))), (true ? _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) : _GLF_FUZZED(atomicCompSwap(workgroup_id, num_workgroup, workgroup_size)))) | 0u) * workgroup_id)), 1u, 0u)), ~ (_GLF_IDENTITY(~ (uint(uvec3(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))), (true ? _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) : _GLF_FUZZED(atomicCompSwap(workgroup_id, num_workgroup, workgroup_size)))) | 0u) * workgroup_id)), 1u, 0u))), 0u ^ (~ (uint(uvec3(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(_GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))), (true ? _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) : _GLF_FUZZED(atomicCompSwap(workgroup_id, num_workgroup, workgroup_size)))) | 0u) * workgroup_id)), 1u, 0u)))))))), _GLF_IDENTITY((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) | 0u) * workgroup_id)), uint(uvec3(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) | 0u) * workgroup_id)), 1u, 0u)))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u))), ((_GLF_IDENTITY(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) | 0u) * workgroup_id)), uint(uvec3(~ (~ (_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size), uint(_GLF_ONE(1.0, injectionSwitch.y)) * ((workgroup_size))) | 0u) * workgroup_id)), 1u, 0u)))) >> (0u >> _GLF_IDENTITY(uint(8u), uint(8u)))) - 0u)));
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, 0u | _GLF_IDENTITY((workgroup_base), min(_GLF_IDENTITY((workgroup_base), max((workgroup_base), (workgroup_base))), _GLF_IDENTITY((workgroup_base), 0u | (_GLF_IDENTITY((workgroup_base), ~ (~ ((workgroup_base))))))))), (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base))) | (_GLF_IDENTITY(workgroup_base, 0u | (workgroup_base)))) + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false))))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(5.0, 7.5)) : injectionSwitch)).y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_11 _GLF_struct_replacement_11 = _GLF_struct_11(workgroup_base + subgroup_base + _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(subgroup_local_id + 1, ~ (~ (subgroup_local_id + 1)))) % _GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u), ~ (~ ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, max((subgroup_size) * 1u, (subgroup_size) * 1u))))))), uint(uint((_GLF_IDENTITY((subgroup_local_id + 1), ((subgroup_local_id + 1)) * 1u) % subgroup_size)))), _GLF_struct_1(_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), clamp(vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)), vec3(_GLF_IDENTITY(1.0, (1.0) + 0.0)))), _GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))), (mat4x2(_GLF_IDENTITY(mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))), (true ? mat2(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0))), (mat4x2(_GLF_IDENTITY(mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0))), (mat2(mat4x3((_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(1.4, 587.593, 617.073, 9179.0138)) : _GLF_IDENTITY(mat2(1.0), transpose(transpose(mat2(1.0))))))) / mat2(1.0, 1.0, 1.0, 1.0)))) * mat2(1.0)))) - mat4x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) : _GLF_FUZZED(mat2(2.6, -792.800, -14.34, 851.572))))))), ivec3(1), _GLF_struct_0(mat4(1.0), _GLF_IDENTITY(1u, _GLF_IDENTITY((0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | 0u)))), ((0u << _GLF_IDENTITY(uint(6u), uint(_GLF_IDENTITY(6u, (6u) | 0u))))) ^ 0u) | _GLF_IDENTITY((1u), max((1u), (1u)))), 1u, mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), min(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9)))) - 0.0), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))))), float(_GLF_IDENTITY(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(! (! (true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (true)), true), bvec2(bvec4(bvec2(! (! (true)), true), true, true))))))))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_FUZZED(9.9)) - 0.0), float(mat2x3(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), bool(_GLF_IDENTITY(bvec2(! (! (true)), true), bvec2(bvec2(_GLF_IDENTITY(bvec2(! (! (true)), true), bvec2(bvec4(bvec2(! (! (true)), true), true, true))))))))) ? 1.0 : _GLF_IDENTITY(_GLF_FUZZED(9.9), (_GLF_FUZZED(9.9)) - 0.0), 0.0, 1.0, 1.0, 1.0, 1.0))))), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((! (true)), false || ((! (true)))), false, true, false)), bool(bool(bool(bvec4(_GLF_IDENTITY((! (true)), false || ((! (true)))), false, true, false))))))) ? 1.0 : _GLF_FUZZED(9.9))))), sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0), _GLF_IDENTITY(mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec2(true, true)))) || false), ! _GLF_IDENTITY((! (true)), _GLF_IDENTITY(false, ! (! (false))) || ((! (true))))) ? 1.0 : _GLF_FUZZED(9.9))))), _GLF_IDENTITY(sqrt(0.0), min(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), (_GLF_IDENTITY(sqrt(0.0), float(vec4(sqrt(0.0), 0.0, 0.0, 0.0)))) / 1.0))), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0))), transpose(transpose(mat4x2(mat4x3(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), min(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, ! (! (true))) ? 1.0 : _GLF_FUZZED(9.9))))), sqrt(0.0), 0.0, 1.0, abs(1.0), 0.0, 0.0, 0.0))))))))))), _GLF_IDENTITY(uvec4(1u), (uvec4(1u)) - uvec4(0u, 0u, 0u, 0u)), uvec4(_GLF_IDENTITY(1u, ~ _GLF_IDENTITY((~ (1u)), uint(_GLF_IDENTITY(uint((~ (1u))), max(uint((~ (1u))), uint((~ (1u))))))))), mat4(1.0)), uvec4(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uvec2(1u, 0u), (uvec2(1u, 0u)) ^ uvec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(876.874, -7979.3024)) : _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x)))))), _GLF_struct_3(_GLF_struct_2(uvec3(1u), true), 1.0, mat4x2(1.0)), ivec3(_GLF_IDENTITY(1, (_GLF_IDENTITY(1, 0 | (1))) + (0 | 0))), _GLF_struct_8(_GLF_struct_4(uvec4(1u), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), (! (! (true))) || false)), true && (true)), false, false, false))) ? 1.0 : _GLF_FUZZED(-8.8))), 1u, uvec4(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, (1u) | 0u), 1u)), 0u ^ (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)))))), 1u, _GLF_struct_5(mat3x2(1.0), ivec3(1), vec4(1.0), mat4x3(1.0), 1, vec2(1.0)), _GLF_struct_6(bvec4(_GLF_IDENTITY(true, bool(bvec4(true, true, _GLF_IDENTITY(false, bool(bvec4(false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))), true)))), bvec4(true), vec3(1.0)), _GLF_struct_7(bvec3(true), mat2x4(1.0), 1, ivec4(1), uvec3(1u)), _GLF_IDENTITY(_GLF_IDENTITY(ivec3(1), ivec3(1, 1, 1) * (ivec3(_GLF_IDENTITY(1, int(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), _GLF_IDENTITY(ivec2(ivec4(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), (ivec2(_GLF_IDENTITY(1, (1) - 0), 0)) - ivec2(0, 0)), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1)), (ivec2(ivec4(ivec2(_GLF_IDENTITY(1, (1) - 0), 0), int(_GLF_ZERO(0.0, injectionSwitch.x)), 1))) >> ivec2(_GLF_IDENTITY(0, clamp(0, 0, 0)), 0)))))))), (_GLF_IDENTITY(ivec3(1), clamp(ivec3(_GLF_IDENTITY(1, _GLF_IDENTITY((1), max(_GLF_IDENTITY((1), ((1)) | 0), (1))) | 0)), ivec3(1), ivec3(1)))) << ivec3(0, 0, _GLF_IDENTITY(0, clamp(0, 0, _GLF_IDENTITY(0, (0) << _GLF_IDENTITY(0, _GLF_IDENTITY((0) / 1, ~ (_GLF_IDENTITY(~ ((0) / 1), 0 ^ (~ ((0) / 1)))))))))))), _GLF_struct_10(_GLF_struct_9(_GLF_IDENTITY(mat4(1.0), transpose(transpose(mat4(1.0)))), _GLF_IDENTITY(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))), uint(uvec4(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), (0u | 0u), 0u))), _GLF_IDENTITY((1u) / 1u, min((1u) / 1u, _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, (1u) / 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), mix(float(_GLF_FUZZED(2.8)), float(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)), bool(true)))) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, _GLF_IDENTITY(0u, clamp(0u, 0u, 0u))))))), (_GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), 0u | ((1u)))) - 0u) / 1u, min((1u) / 1u, _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, (1u) / 1u))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) << 0u)), (min(_GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) | (0u)), 0u))) << 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((1u) / 1u, min((1u) / _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) / 1u, max(_GLF_IDENTITY((1u) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(virtual_gid) : uint(1u)))))), ~ (~ ((_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(uint(1u), (false ? _GLF_FUZZED(virtual_gid) : uint(1u))))))))) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, clamp(1u, _GLF_IDENTITY(1u, 0u ^ (1u)), _GLF_IDENTITY(1u, (1u) << 0u)))) / 1u)))))))), uvec2(0u, 0u) ^ (uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) / 1.0)) | _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), ((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))) - (uint(_GLF_ZERO(0.0, injectionSwitch.x)) >> _GLF_IDENTITY(uint(7u), uint(7u))))), _GLF_IDENTITY((1u) / 1u, min((1u) / 1u, _GLF_IDENTITY((1u) / 1u, max((1u) / _GLF_IDENTITY(1u, (1u) >> 0u), (1u) / 1u))))), min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)) | _GLF_IDENTITY((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), max((_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))), (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u))))))), (_GLF_IDENTITY(1u, uint(_GLF_IDENTITY(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), min(_GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x), _GLF_ZERO(_GLF_IDENTITY(0.0, min(0.0, 0.0)), injectionSwitch.x)))) | (_GLF_IDENTITY(1u, uint(uvec3(1u, 0u, 0u)))))) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), _GLF_IDENTITY(_GLF_IDENTITY((1u), (_GLF_IDENTITY((1u), 0u | (_GLF_IDENTITY((1u), ((1u)) / 1u)))) - 0u) / 1u, min((1u) / 1u, _GLF_IDENTITY((1u) / 1u, max((1u) / 1u, _GLF_IDENTITY((1u) / 1u, ((1u) / 1u) * 1u)))))), _GLF_IDENTITY(_GLF_IDENTITY(1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) | (_GLF_IDENTITY(1u, _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), _GLF_IDENTITY(min(_GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, 0u ^ (1u)), 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) << 0u)), (min(_GLF_IDENTITY(uint(uvec3(1u, 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) << 0u), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(1u, uint(uvec3(_GLF_IDENTITY(1u, max(1u, 1u)), 0u, 0u))), 0u, 0u)), (uint(uvec3(1u, 0u, 0u))) << 0u))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))))))), _GLF_IDENTITY((1u) / 1u, min((1u) / _GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) / 1u, (_GLF_IDENTITY((_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) / 1u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, (1u) ^ 0u)))) / 1u : _GLF_FUZZED(subgroup_base)))) ^ 0u), max(_GLF_IDENTITY((1u) / 1u, ((1u) / 1u) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), (_GLF_IDENTITY(1u, (1u) >> 0u)) / 1u)))))))))), uvec3(1u), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(1u, clamp(1u, 1u, 1u)), (_GLF_IDENTITY(1u, max(1u, 1u))) | (1u)))), _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0), (vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), max(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0)) + vec4(0.0, 0.0, 0.0, 0.0))))), transpose(transpose(mat2(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0), vec4(1.0, 0.0, 0.0, 0.0))), 1.0), (vec4(1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(_GLF_IDENTITY(vec4(1.0, 0.0, 0.0, 0.0), max(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))), vec4(1.0, 0.0, 0.0, 0.0))), 1.0)) + vec4(0.0, 0.0, 0.0, 0.0)))))))), mat2(_GLF_IDENTITY(1.0, (1.0) / 1.0)), uvec4(_GLF_IDENTITY(1u, (1u) << (_GLF_IDENTITY(170027u, clamp(170027u, _GLF_IDENTITY(170027u, (170027u) / (1u & 1u)), 170027u)) & 0u)))));
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))), true && (true && (_GLF_IDENTITY(false, bool(bvec3(false, true, false))))))), (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), true && (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y), ! (! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch, injectionSwitch)).y)))))))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), ! (! (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true && (! ((injectionSwitch.x > injectionSwitch.y))))))), true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))) && true))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))) && true))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))) && true))))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) && true)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))) : _GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), vec4(mat3x4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 0.0, 0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))))))).y))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 1.0, 0.0)), min(float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 1.0, 0.0)))))))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.7, 29.10)) : injectionSwitch)).y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))) : _GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))))).y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), vec4(mat3x4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 0.0, 0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))))))).y)))))), false || (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(-9.6)), bool(false))), injectionSwitch.x, injectionSwitch.x))) - 0.0) > injectionSwitch.y, false || _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))) : _GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))))).y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0))))), vec2(mat3x4(vec2(_GLF_IDENTITY(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0), mat3x2(mat3x4(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0))))), 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 1.0, determinant(mat2(1.0, 0.0, 0.0, 1.0)), 0.0, 0.0, 1.0, 0.0)))) : _GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))))).y) || false)), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), vec4(mat3x4(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0), max(vec4(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(acos(vec2(-7666.0942, 8063.1989))) : injectionSwitch))) * vec2(1.0, 1.0)), 1.0, 0.0), vec4(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)), 1.0, 0.0))), 0.0, 1.0, length(vec4(_GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, min(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat2(0.0, 1.0, 0.0, sqrt(0.0))), 0.0, 0.0))))) : _GLF_IDENTITY(_GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(_GLF_IDENTITY(-4.1, float(mat2x4(_GLF_IDENTITY(-4.1, min(-4.1, _GLF_IDENTITY(-4.1, (-4.1) / 1.0))), 0.0, 1.0, sqrt(0.0), 1.0, 1.0, 1.0, 0.0))), (-4.1) / _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(3.7)), float(1.0), bool(true)))))), (false ? _GLF_FUZZED(injectionSwitch) : _GLF_FUZZED(vec2(7445.2434, _GLF_IDENTITY(_GLF_IDENTITY(-4.1, (-4.1) / 1.0), (-4.1) / 1.0))))))).y))))))))), _GLF_IDENTITY(false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 1.0, 0.0)), min(float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 1.0, 0.0)), float(vec4(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 1.0))), 1.0, 1.0, 0.0)))))))))))) && true)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(7.7, 29.10)) : injectionSwitch)).y)))))))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)), false, false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), 0.0))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0)), (vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), 1.0, 0.0, 1.0, 1.0))) * vec2(1.0, 1.0))).y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))))), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0)))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) && true)))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))) || false)), _GLF_IDENTITY(true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), bool(bvec2(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), false)))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))), bool(bvec2(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)), ! (! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && true)))))), true))))), false, false))))), ! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))), false || _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), _GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))), false || (false || (_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false), (injectionSwitch.x > injectionSwitch.y))))), false, false)))))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, true, true))))) || false)), (true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), _GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), false || (! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (_GLF_IDENTITY(! (! (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (! (! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (! (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))))))))) || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || _GLF_IDENTITY(false, (false) || false))), _GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-71.99 - -76.04))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) || false))))))))), ! (! (_GLF_IDENTITY((false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-71.99 - -76.04))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) || false))))))))), ! (! ((false || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED((-71.99 - -76.04))), float(injectionSwitch.x), bool(true))) > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y) || false, ! (! ((_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > injectionSwitch.y) || false))))))))))))))) || false))))), false || _GLF_IDENTITY(_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (false ? _GLF_FUZZED(991.544) : _GLF_IDENTITY(clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y), (true ? clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y) : _GLF_FUZZED(-7672.1345)))))))))), false || ((_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)))))))), bool(bvec4((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(vec2(-0.3, 351.574).g)), vec2(_GLF_FUZZED(-5.1), (injectionSwitch)[1]), bvec2(false, true)))) / vec2(1.0, 1.0)).y)))), false, true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), ! _GLF_IDENTITY((_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)), false || ((_GLF_IDENTITY(! (! (true)), (! (! (true))) && true)))))))))))) || false))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true)), false, false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0)))), (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))) || false), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(((mat4(9.3, -7588.7019, -5.6, -98.28, 1.7, 9020.6401, -7364.8448, 7132.9760, -3670.2584, -62.23, 6.6, -9.1, -93.92, 12.52, 5.2, 4.1) == mat4(7221.4350, 5879.5595, -2.8, -2.5, -789.860, -1.3, 7.3, -74.07, 727.144, 1.1, 68.96, 87.67, 60.52, -8.8, 4.4, -7.1)) ? 5.8 : 4288.0213))), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))) && true)))))) || false), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) || false))), false, _GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) || false)), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (false), (! (false)) || false)), ((_GLF_IDENTITY(! (false), (! (false)) || false))) || false)), (injectionSwitch.x > injectionSwitch.y)), true, true), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true)), false, false), false)), true))))), _GLF_IDENTITY(bool(bvec2(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), (mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))))))), true, false)))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))))), false, false)), true)), ! (_GLF_IDENTITY(! (bool(bvec2(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), (mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))))))), true, false)))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))))), false, false)), true))), false || (! (bool(bvec2(bool(bvec3(bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)), true && (bool(bvec3(injectionSwitch.x > injectionSwitch.y, true, false)))))))), false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), (_GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false || ((_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) || false), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), (mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))) / mat2(1.0, 1.0, 1.0, 1.0)) * (injectionSwitch)), injectionSwitch)).y)))))))))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)))), false || (_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 1.0, 1.0, 1.0)))))))))), true, false)))) || false), _GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (false)) || (false)), _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))), bool(bool((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(true, _GLF_IDENTITY(! (! (true)), false || (! _GLF_IDENTITY((! (true)), ! (! (_GLF_IDENTITY((! (true)), bool(bool((! (true))))))))))))), false, false)), true)))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-82.18) : injectionSwitch.y))))))
  barrier();
 atomicStore(buf[_GLF_IDENTITY(_GLF_struct_replacement_11.next_virtual_gid, max(_GLF_struct_replacement_11.next_virtual_gid, _GLF_struct_replacement_11.next_virtual_gid))], uint(_GLF_IDENTITY(1, (1) / _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) / 1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_29 _GLF_struct_replacement_29 = _GLF_struct_29(_GLF_struct_12(_GLF_IDENTITY(ivec3(1), (ivec3(1)) / ivec3(1, 1, 1))), _GLF_struct_14(true, mat3x2(1.0), _GLF_struct_13(1.0, ivec4(_GLF_IDENTITY(1, (1) ^ 0)), _GLF_IDENTITY(vec2(1.0), max(vec2(1.0), vec2(_GLF_IDENTITY(1.0, 1.0 * (1.0))))))), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, max(1u, 1u))) - 0u)), _GLF_struct_21(_GLF_struct_15(mat4x2(1.0), vec3(1.0), vec4(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), cos(0.0), 0.0))))))), _GLF_struct_16(1, 1.0, vec2(1.0), mat3x4(1.0), 1u), _GLF_struct_17(uvec3(1u), _GLF_IDENTITY(ivec2(1), (ivec2(1)) / ivec2(1, 1)), true, mat4x2(_GLF_IDENTITY(1.0, (1.0) / sqrt(1.0)))), _GLF_struct_18(true, bvec4(_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(true, (true) && true), false), bvec2(bvec3(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY((true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bvec4((true), true, true, false)))))), (! (_GLF_IDENTITY((true), false || (_GLF_IDENTITY((true), bool(bvec4((true), true, true, false))))))) || false))) && true)))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(true, (true) && true), false), false, false))), true))))))))), mat4(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0), _GLF_IDENTITY(1.0, max(1.0, 1.0))))), 1), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(1.0, 1.0)), (_GLF_IDENTITY(false ? _GLF_FUZZED(415.996) : 1.0, float(vec3(false ? _GLF_FUZZED(415.996) : 1.0, sqrt(0.0), 0.0)))))), _GLF_struct_19(1u, vec4(1.0), mat3x2(1.0), 1, ivec2(1)), _GLF_struct_20(bvec4(true), bvec2(true), mat4(1.0))), _GLF_struct_25(1u, ivec4(1), _GLF_struct_22(ivec4(1)), _GLF_struct_23(mat2(1.0), bvec3(true), vec2(1.0), atomicLoad(_GLF_IDENTITY(buf[virtual_gid], min(_GLF_IDENTITY(buf[virtual_gid], (buf[virtual_gid]) << 0u), buf[virtual_gid])), 4, 64, 2)), _GLF_struct_24(1u, mat4x2(1.0), ivec4(1), uvec4(1u), mat3x4(1.0), bvec4(true))), _GLF_struct_28(vec2(1.0), _GLF_struct_26(mat2x3(1.0), _GLF_IDENTITY(_GLF_IDENTITY(vec3(1.0), (false ? _GLF_FUZZED(vec3(-282.224, 2.5, -5.8)) : _GLF_IDENTITY(vec3(1.0), vec3(vec3(vec3(1.0)))))), _GLF_IDENTITY((vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(min(6.8, 240.087)) : 1.0))))))))) + mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(vec3(852.580, -288.252, -2743.2678).y)), bool(false))))), clamp((vec3(1.0)) * mat3(1.0), _GLF_IDENTITY((vec3(1.0)) * mat3(1.0), clamp((vec3(1.0)) * _GLF_IDENTITY(mat3(1.0), (_GLF_IDENTITY(mat3(1.0), transpose(_GLF_IDENTITY(transpose(_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(1.0))))), (transpose(_GLF_IDENTITY(mat3(1.0), mat3(mat3(mat3(_GLF_IDENTITY(1.0, (1.0) - 0.0))))))) - mat3(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))) - _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0), mat3(_GLF_IDENTITY(mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), (mat4(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0))))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atanh(6.2)) : 1.0))), (vec3(1.0)) * mat3(1.0))) * mat3(1.0), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(cos(0.0)))))), (_GLF_IDENTITY(vec3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(cos(0.0)))))), clamp(vec3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(cos(0.0)))))), vec3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(cos(0.0)))))), vec3(_GLF_IDENTITY(1.0, float(mat4x3(1.0, 1.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), tan(0.0), 0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), sin(0.0), 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0, sqrt(cos(0.0))))))))) - vec3(0.0, 0.0, 0.0))) * mat3(1.0))), (vec3(1.0)) * mat3(1.0)))), ivec3(1), uvec4(1u), uvec3(1u), _GLF_IDENTITY(vec3(1.0), (vec3(1.0)) / vec3(1.0, 1.0, 1.0)), uvec3(1u)), _GLF_struct_27(1.0, bvec3(true), bvec2(true), bvec4(true)), 1.0));
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(checker[virtual_gid], _GLF_struct_replacement_29._f4._f3.read, 4, _GLF_IDENTITY(64, (_GLF_IDENTITY(64, (64) ^ _GLF_IDENTITY(0, _GLF_IDENTITY((0) ^ 0, 0 ^ ((0) ^ 0))))) << 0), 4);
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
