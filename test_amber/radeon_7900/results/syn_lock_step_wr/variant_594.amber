#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))))) || false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) || false)), false), false))), true), false)))))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), false)))))))))), ((_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), false)))))), ! (! (bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), bvec3(bvec4(bvec3(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec3(bvec2(_GLF_DEAD(false), false), false))), true), false))))))))))) && true)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))) || false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) || false)), bool(bool(! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (_GLF_IDENTITY(false, (false) || false)))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))), (_GLF_IDENTITY(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))), bool(bvec3(! _GLF_IDENTITY((false), true && (_GLF_IDENTITY((false), bool(bvec2((false), true))))), false, false)))) && true)), true && ((! _GLF_IDENTITY((false), _GLF_IDENTITY(true && (_GLF_IDENTITY((false), bool(bvec2((false), true)))), ! (! (true && (_GLF_IDENTITY((false), bool(bvec2((false), true)))))))))))))))))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), ! (! (! (false))))) || false)))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (bool(bvec4(false, false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true, true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y), true && ((injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(float(false)), _GLF_FUZZED(13.41)), bvec2(false, false))).x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, true, true))))), false, true, true))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y, mix(float(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), float(_GLF_FUZZED((- -1.0))), bool(false)))), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), true, true)))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))), _GLF_IDENTITY(_GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(920.469)), float(injectionSwitch.y), bool(true))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), max(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), clamp(_GLF_IDENTITY((true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), (true ? (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)) : _GLF_FUZZED(trunc(injectionSwitch)))), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)), (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y) || false)))))), bvec3(bvec4(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(true && (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(true && (_GLF_DEAD(false)), true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(920.469)), float(injectionSwitch.y), bool(true))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), min((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y) || false)))), _GLF_IDENTITY(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(true && (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(true && (_GLF_DEAD(false)), true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(920.469)), float(injectionSwitch.y), bool(true))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), min((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y) || false)))), false)), bvec3(bvec4(bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(true && (_GLF_DEAD(false)), true)), ! (! (bool(bvec2(true && (_GLF_DEAD(false)), true))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), max(mat2(1.0) * (injectionSwitch), _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0))))).x > _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(920.469)), float(injectionSwitch.y), bool(true))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), min((_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch)))), (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))))).x > injectionSwitch.y))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y) || false)))), false)), true)))))), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false))))), (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), min(_GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat2x4(_GLF_ZERO(0.0, injectionSwitch.x), 1.0, cos(0.0), 0.0, 0.0, cos(0.0), 1.0, 0.0))), _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), (_GLF_ZERO(0.0, injectionSwitch.x)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y))))), false))))), bool(bool(_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), min(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), max(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))) : _GLF_FUZZED(injectionSwitch))), mat2(_GLF_IDENTITY(1.0, abs(0.0) + (1.0))) * (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0))))))))).x > injectionSwitch.y)))), false || (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && (_GLF_DEAD(false)), ! (! (true && (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 1.0))))))) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 1.0))))))) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 1.0))))))) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 1.0))))))) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)) || false)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 1.0))))))) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), float(vec2(float(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0)), 1.0))))))) + (_GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(injectionSwitch))))).x > injectionSwitch.y)) || false))))))))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5))), 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0))), vec2(vec2(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0))))))).y)))), (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)) : _GLF_FUZZED(-0.5))), 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0))), vec2(vec2(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0))))))).y))))) || false)), bool(bvec3(_GLF_IDENTITY(true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, 0.0)))))), vec2(vec2(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0))))))).y))))), ! (! (_GLF_IDENTITY(true && (bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-760.039)), float(0.0), bool(true))), 1.0, _GLF_IDENTITY(0.0, (0.0) + 0.0), 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(7.2) : 0.0)))), 0.0, 0.0, 1.0, 0.0)), log(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(5.7, 494.882, -84.77, -2.9, -93.64, -3.4)) : _GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (true ? mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(8957.8799, -84.90, -9.5, -195.197, -5.1, 1725.6253))))))), max(float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(5.7, 494.882, -84.77, -2.9, -93.64, -3.4)) : _GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (true ? mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(8957.8799, -84.90, -9.5, -195.197, -5.1, 1725.6253))))))), float(_GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (false ? _GLF_FUZZED(mat2x3(5.7, 494.882, -84.77, -2.9, -93.64, -3.4)) : _GLF_IDENTITY(mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0), (true ? mat2x3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0) : _GLF_FUZZED(mat2x3(8957.8799, -84.90, -9.5, -195.197, -5.1, 1725.6253))))))))))))), vec2(vec2(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0))))))).y))))), ! (! (true && (bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))), ! (! (! (_GLF_IDENTITY(_GLF_DEAD(false), true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec4((_GLF_DEAD(false)), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch))) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) / vec2(1.0, 1.0))).x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3(injectionSwitch, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(1.0, 0.0 + (1.0)), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)), log(1.0))), vec2(vec2(vec2(mat3(injectionSwitch, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), 0.0)), 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6076.2906)), bool(false))), 1.0, 0.0)), log(1.0))))))).y))))))))))), false, true))), (true && (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true) && (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, false || (true)) && (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch))), mat2(1.0) * (_GLF_IDENTITY(min(injectionSwitch, injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))).y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(_GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY(true, bool(bvec4(true, false, false, false)))) && true) && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(true, bool(bvec4(true, _GLF_IDENTITY(false, (false) && true), false, false))) && (_GLF_DEAD(false))))), _GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], 1.0 * (injectionSwitch[1]))) / 1.0))).x, (false ? _GLF_FUZZED(-5049.0292) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (_GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) ^ 0)], 1.0 * (injectionSwitch[1]))) / 1.0))).x)) > injectionSwitch.y)), _GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), _GLF_IDENTITY(min(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(4.5), _GLF_FUZZED(float(48031u))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), injectionSwitch), clamp(min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch), min(injectionSwitch, injectionSwitch)))))).y))))))))) && _GLF_IDENTITY(true, _GLF_IDENTITY((true) || false, ! (! (_GLF_IDENTITY((true), ((true)) && true) || false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false))))))), bool(bool(! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), false || (! (false)))))))))), _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), true && (_GLF_IDENTITY(false, false || (false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, false)))))), false || (! (false)))))))), ((! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))), false || (! (false))), false || (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))), false || (! (false))))))))))) || _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (false)), false, false)))))), false || (! (false)))))))), ((! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))), true && (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))), true && (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))))))), false || (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false)), bool(bvec2(_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), _GLF_IDENTITY(true, false || (true)) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))))), false || (_GLF_IDENTITY(! (false), ! (! _GLF_IDENTITY((! (false)), true && ((! (false))))))))))))), ((! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false, false), bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false, false)), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) || false), false || (false)), false, false)))))))))))), false || (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), false)), (bool(bvec2(_GLF_IDENTITY((! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false)))))), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true)))) || (false), true && (false || (false)))), false, false)))))), false || (! (false)))))))), ((! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, false, false)), bool(bvec4(bool(bvec3(true, false, false)), false, true, true)))) && (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), ! (! ((false))))), false, false)))))), false || (! (false))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))) || false), false)))) || false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))), (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))), bool(bvec4(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(1835.5184)), bool(false))))) || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), (! (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))), true, true))))) || false))) || false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, sqrt(vec2(1.0, 1.0)) * (injectionSwitch)).y) && true)))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  barrier();
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(smoothstep(-0.3, -11.38, _GLF_IDENTITY(-2.6, float(float(-2.6))))))) > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((_GLF_IDENTITY(false, ! (! (false)))), ! (! ((_GLF_IDENTITY(false, ! (! (false))))))) || false)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), min((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), 0u ^ ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))))))))), min(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u)))))), _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))))))))) | (workgroup_size)))) << _GLF_IDENTITY(0u, (0u) << 0u))) * workgroup_id, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), min((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), 0u ^ ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))))))))), min(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u)))))), _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))))))))) | (workgroup_size)))) << _GLF_IDENTITY(0u, (0u) << 0u))) * workgroup_id, (_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), min((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), 0u ^ ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))))))))), min(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u)))))), _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))))))))) | (workgroup_size)))) << _GLF_IDENTITY(0u, (0u) << 0u))) * workgroup_id) | (_GLF_IDENTITY(workgroup_size, 0u + _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, 0u | (workgroup_size))), ((_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(0u, _GLF_IDENTITY(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), min((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), _GLF_IDENTITY((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u)))))), 0u ^ ((_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), _GLF_IDENTITY(uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u)), (uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))), uint(_GLF_ZERO(0.0, injectionSwitch.x)), uint(_GLF_ZERO(0.0, injectionSwitch.x)), 0u))) | (0u | 0u))))), 0u ^ (uint(uint(_GLF_IDENTITY(0u, (0u) ^ 0u))))))))))), min(_GLF_IDENTITY(uint(uint(0u)), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u)))))), _GLF_IDENTITY(uint(uint(0u)), _GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), max((0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))), (0u >> _GLF_IDENTITY(uint(8u), uint(8u))) | (_GLF_IDENTITY(uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), min(_GLF_IDENTITY(0u, _GLF_IDENTITY(min(0u, 0u), clamp(min(0u, 0u), min(0u, 0u), min(0u, 0u)))), _GLF_IDENTITY(0u, min(_GLF_IDENTITY(0u, ~ (~ (0u))), 0u)))))), 0u ^ (uint(uint(0u))))))))))) | (workgroup_size)))) << _GLF_IDENTITY(0u, (0u) << 0u))) * workgroup_id))) | 0u);
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) && true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)), bool(_GLF_IDENTITY(bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true))), (bool((_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && true)))) || false)))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, true)), (bool(bvec2(false, true))) && true))))
          barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, (false) && true))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec3(true, true, true)), (bool(bvec3(true, true, true))) && true))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, true)))))), ! (! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-513.694))))), injectionSwitch.x)) > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)), true, true), false))), true)))))))), (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ((false)) && true) && true, false || _GLF_IDENTITY(((false) && true), bool(_GLF_IDENTITY(bvec2(((false) && true), false), bvec2(bvec4(bvec2(((false) && true), false), false, true)))))))))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0))))) / exp(vec2(0.0, 0.0))).x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, 1.0 * (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, float(mat3x4(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)), injectionSwitch)), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).y, log(1.0), 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, exp(0.0), 1.0, 0.0))))))), ! _GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, float(mat4x3(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0, 0.0, 1.0))) > injectionSwitch.y), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(mat3x4(injectionSwitch, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec2(1.0, 0.0), vec2(1.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 1.0, 1.0, 0.0, determinant(mat2(0.0, 1.0, 0.0, 0.0))))).x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))), true, true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (false) && true))) || false))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bvec4(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))) ? _GLF_FUZZED(vec2(-0.2, _GLF_IDENTITY(9634.4282, mix(float(9634.4282), float(_GLF_FUZZED((4421.5554 - -104.196))), bool(false))))) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) && true), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, true)))) && true)) || false))))), _GLF_IDENTITY(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(true, ! (! (true))))), true))))), _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true))), false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || _GLF_IDENTITY((bool(bool(false))), ((bool(bool(false)))) && true)))), ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) || false))) || (bool(bool(false))))))) || false)), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)) || false))))), true, true))))), true, false))))), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), (bool(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))) && true))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch), (true ? (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch) : _GLF_FUZZED(injectionSwitch)))).y)), _GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(false), true && (bool(false)))), false || (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, ! (! (false))), false), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))))))), (_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)) : _GLF_FUZZED(vec2(-870.722, 22.17)))).x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, true && ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))))), true, true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), _GLF_IDENTITY(bool(bvec4(bool(false), true, true, false)), ! (! (bool(bvec4(bool(false), true, true, false)))))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))))))), (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, true)), (_GLF_IDENTITY(bool(bvec4(false, false, false, true)), false || (bool(bvec4(false, false, false, true))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).y), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), true && (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))))), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)) && true, ! (! (((injectionSwitch.x > injectionSwitch.y)) && true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) || false))))))), true, true)), false), bvec2(bvec2(bvec2(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))))))), (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)))), false || _GLF_IDENTITY((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), true, true)), bvec3(bvec3(bvec3(bvec3((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), true, true)))))))), true && (bool(_GLF_IDENTITY(bvec3((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), true, true), bvec3(_GLF_IDENTITY(bvec3(bvec3((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), true, true)), bvec3(bvec3(bvec3(bvec3((bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), false || (bool(false))), ! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))))))), true, true)))))))))))))))) && true), (false) && _GLF_IDENTITY(true, bool(bool(true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))) || false))) && true)) || false, _GLF_IDENTITY(true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false), (true && ((_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))) || false)) || false))))))), true, true)), false))))), true && (bool(_GLF_IDENTITY(bvec2(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (bool(false)), bool(bvec2(! (bool(false)), true)))), ! (! (! (_GLF_IDENTITY(! (bool(false)), _GLF_IDENTITY(bool(bvec2(! (bool(false)), true)), ! (! (bool(bvec2(! (bool(false)), true)))))))))))))))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, true && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))))), _GLF_IDENTITY(true, bool(bvec3(true, false, true))), _GLF_IDENTITY(true, (true) && true))), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(bvec3(bool(bool(false)), true, true))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(! (bool(false)), true))))))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -39.89))), vec2(_GLF_FUZZED(-14.42), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -39.89))), vec2(_GLF_FUZZED(-14.42), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))), false, false)))))), true, true)), ! (! (_GLF_IDENTITY(bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(! (bool(false)), true))))))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -39.89))), vec2(_GLF_FUZZED(-14.42), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -39.89))), vec2(_GLF_FUZZED(-14.42), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))), false, false)))))), true, true)), ! (! (bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(_GLF_IDENTITY(bool(false), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(false, bool(bool(false))))), bool(bvec2(! (bool(false)), true))))))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -39.89))), vec2(_GLF_FUZZED(-14.42), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))), bool(bvec3((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED((- -39.89))), vec2(_GLF_FUZZED(-14.42), (injectionSwitch)[1]), bvec2(false, true))).y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false, _GLF_IDENTITY(true, ! (! (true))) && ((_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)))), false, false)))))), true, true)))))))), false))))))))))), true, false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), max(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))))))), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), max(float(mat2(injectionSwitch.y, _GLF_IDENTITY(0.0, (0.0) / 1.0), 0.0, 0.0)), float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))))))), true, false)), false || (bool(bvec3(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0)), max(float(mat2(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), 0.0, 0.0, 0.0)), float(mat2(injectionSwitch.y, 0.0, 0.0, 0.0))))))), true, false))))) && true)) || false))))), true, true))))), true, false))))), (bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))), true, true))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, _GLF_IDENTITY(true, false || (true))), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, _GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, false || (true))))))))))))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), false)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), false)))), (bool(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), bool(bvec2(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false)), false))))) || false)))))))), true, true))))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))), true, true)))), bool(_GLF_IDENTITY(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))), true, true)))), false), bvec2(bvec3(bvec2(! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(_GLF_IDENTITY(bvec3((false), true, true), bvec3(bvec3(bvec3((false), true, true))))))))) && true))))))))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y)), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true)) || false))))), true, true)))), false), false))))))) || false))), true, false), bvec3(bvec3(bvec3((! (_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))), (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y, bool(bvec4(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-0.2, 9634.4282)) : injectionSwitch)).y, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), bool(bvec3(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), bool(bvec4(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), false || (bool(bool(false))))))), false, false, true)))) || false), (false) && true), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), false || (((injectionSwitch.x > injectionSwitch.y)))))) && true)) || false))))), true, true))))), true, false)))))) && true))))))) && true)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED((+ vec3(193.219, -1.2, -8.6).y))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-7.6), _GLF_FUZZED(_GLF_IDENTITY((+ vec3(193.219, _GLF_IDENTITY(-1.2, (true ? -1.2 : _GLF_FUZZED(-210.429))), -8.6).y), (true ? _GLF_IDENTITY((+ vec3(193.219, _GLF_IDENTITY(-1.2, (true ? -1.2 : _GLF_FUZZED(-210.429))), -8.6).y), ((+ vec3(193.219, _GLF_IDENTITY(-1.2, (true ? -1.2 : _GLF_FUZZED(-210.429))), -8.6).y)) - 0.0) : _GLF_FUZZED(1.1))))), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x > injectionSwitch.y) || false)))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id * _GLF_IDENTITY(subgroup_size, max(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (subgroup_size) - (0u << _GLF_IDENTITY(uint(1u), uint(1u)))), clamp(_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, 1u * (subgroup_size))) | (subgroup_size)), subgroup_size, _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY((subgroup_size) * 1u, clamp((subgroup_size) * 1u, (subgroup_size) * 1u, (subgroup_size) * 1u))), (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u)) + 0u))), subgroup_size)), (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))) | (subgroup_id * _GLF_IDENTITY(subgroup_size, max(subgroup_size, subgroup_size))));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (_GLF_IDENTITY(! (false), _GLF_IDENTITY(false || (! (false)), true && (_GLF_IDENTITY(false || (! (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true)), (! (_GLF_IDENTITY(false || (! (false)), (false || (! (false))) && true))) && true))))))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)), (workgroup_base) ^ 0u) + _GLF_IDENTITY(subgroup_base, max(subgroup_base, subgroup_base)) + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) + 0u), ~ (~ (_GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) + 0u)))), (true ? workgroup_base : _GLF_IDENTITY(_GLF_FUZZED(workgroup_id), (_GLF_FUZZED(workgroup_id)) + 0u)) + 0u))), min(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))), uint(_GLF_IDENTITY(uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))), (min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | _GLF_IDENTITY(0u, (0u) | (0u))))))) / 1u), 0u), (uvec2(_GLF_IDENTITY(min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u)))), (min(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, max(workgroup_base, _GLF_IDENTITY(workgroup_base, clamp(workgroup_base, workgroup_base, workgroup_base)))))), _GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (workgroup_base) | 0u))))) / 1u), 0u)) - uvec2(0u, 0u))))), workgroup_base)) + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), max(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base)))), false ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> 0u)) << 0u), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> 0u)) << 0u)) << 0u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), clamp(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_IDENTITY(_GLF_FUZZED(191957u), (0u >> _GLF_IDENTITY(uint(3u), uint(3u))) ^ (_GLF_FUZZED(191957u)))))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), max(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, _GLF_IDENTITY(subgroup_base, max(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), subgroup_base))), min(subgroup_base, _GLF_IDENTITY(subgroup_base, min(_GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(subgroup_base, (subgroup_base) / 1u))))))), false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> 0u)) << 0u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), max(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base)))), false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> 0u)) << 0u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(191957u)), ((true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(191957u))) | ((true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(191957u)))))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), max(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base)))), false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) * 1u)) >> 0u)) << 0u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), max(_GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), max(false ? _GLF_FUZZED(workgroup_size) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, _GLF_IDENTITY(subgroup_base, clamp(subgroup_base, subgroup_base, subgroup_base))), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base)))), false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), clamp(_GLF_FUZZED(workgroup_size), _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) << 0u), _GLF_FUZZED(workgroup_size)))) >> 0u)) << 0u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))), _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | ((workgroup_size) - 0u))) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | ((workgroup_size) - 0u))) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | ((workgroup_size) - 0u))) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) >> 0u), 0u, 1u)), (uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | ((workgroup_size) - 0u))) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | ((workgroup_size) - 0u))) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) >> 0u), 0u, 1u))) | (uint(uvec3(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | ((workgroup_size) - 0u))) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)), (false ? _GLF_FUZZED(_GLF_IDENTITY(workgroup_size, (true ? _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((workgroup_size) - 0u, 0u | ((workgroup_size) - 0u))) : _GLF_FUZZED(191957u)))) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base))) >> 0u), 0u, 1u))))), max(false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (false ? _GLF_FUZZED(subgroup_size) : _GLF_FUZZED(workgroup_size))) : _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(min(subgroup_base, subgroup_base), clamp(min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base), min(subgroup_base, subgroup_base)))), false ? _GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_IDENTITY(_GLF_FUZZED(workgroup_size), (_GLF_FUZZED(workgroup_size)) >> 0u)) << 0u) : _GLF_IDENTITY(subgroup_base, min(subgroup_base, subgroup_base)))))))))) + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, min(_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, ((_GLF_IDENTITY(subgroup_local_id + 1, (_GLF_IDENTITY(false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)), ~ (_GLF_IDENTITY(~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1))), (~ (false ? _GLF_FUZZED(virtual_gid) : _GLF_IDENTITY(subgroup_local_id + _GLF_IDENTITY(1, (1) / 1), clamp(subgroup_local_id + 1, subgroup_local_id + 1, subgroup_local_id + 1)))) ^ 0u)))))) % subgroup_size) - 0u), (_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY(uint(uvec2(subgroup_local_id, (0u >> _GLF_IDENTITY(_GLF_IDENTITY(uint(5u), min(_GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(uint(_GLF_IDENTITY(5u, (_GLF_IDENTITY(5u, (5u) | (5u))) - (0u | 0u))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))), (uvec4(_GLF_IDENTITY(uint(5u), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), (_GLF_IDENTITY(uint(1u), uint(1u))) | 0u)) >> _GLF_IDENTITY(uint(1u), uint(_GLF_IDENTITY(1u, 0u ^ (1u))))))) | (uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (uint(1u)) | 0u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))), 0u + (uint(_GLF_IDENTITY(uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(1u), uint(1u)), min(_GLF_IDENTITY(uint(1u), uint(1u)), _GLF_IDENTITY(uint(1u), uint(1u)))))), _GLF_IDENTITY((uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (_GLF_IDENTITY(~ ((uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), max(~ ((uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u)))))), ~ ((uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))) | (uvec4(uint(5u), 1u, uint(_GLF_ONE(1.0, injectionSwitch.y)), ((1u << _GLF_IDENTITY(uint(1u), uint(1u))) >> _GLF_IDENTITY(uint(1u), uint(1u))))))))))))))), uint(5u))), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u))))))), 0u | (uint(uvec2(subgroup_local_id, (_GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), max(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), _GLF_IDENTITY(_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u)))), (_GLF_IDENTITY(0u, max(0u, _GLF_IDENTITY(0u, (0u) | (0u))))) / 1u))) >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), (uint(5u)) | (uint(5u)))))))))) + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))), true, true), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))), true, true), true))))), (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), false || (_GLF_IDENTITY(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, false, true)))))))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) | (next_virtual_gid))], uint(1), 4, 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, 1 * _GLF_IDENTITY((4), (_GLF_IDENTITY((4), (false ? _GLF_FUZZED(-27744) : (4)))) >> 0))) << 0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), true))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(5.4) : _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-6.4)), float(injectionSwitch.y), bool(true))))))))), (bool(bvec3(_GLF_DEAD(false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || false)))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true), bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), true, true))))))) && true))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(buf[virtual_gid], 4, _GLF_IDENTITY(_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, (64) ^ 0)))))))), ~ (~ (_GLF_IDENTITY(64, max(64, _GLF_IDENTITY(64, clamp(64, 64, _GLF_IDENTITY(64, ~ (~ (_GLF_IDENTITY(64, _GLF_IDENTITY((64), (_GLF_IDENTITY((64), ((64)) ^ 0)) | ((64))) ^ 0))))))))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), (_GLF_IDENTITY(2, 0 ^ (2))) >> 0), 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), min(_GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), max(_GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(_GLF_IDENTITY(2, 0 ^ (2)), min(_GLF_IDENTITY(2, 0 ^ (2)), _GLF_IDENTITY(2, 0 ^ (2)))))))), (_GLF_IDENTITY(2, _GLF_IDENTITY(0, (false ? _GLF_FUZZED(41662) : 0)) ^ (2))) >> 0), int(ivec3(_GLF_IDENTITY(_GLF_IDENTITY(2, _GLF_IDENTITY(0, (0) >> 0) ^ (2)), (_GLF_IDENTITY(2, 0 ^ (2))) >> 0), 1, 0))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (false)))), false || _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))))))))), false || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)), false || (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true)))))), _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1])).y)) && ((false)))), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec2(true, false)), (bool(bvec2(true, false))) || false)), (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))), ! (! ((_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), bool(bool(_GLF_IDENTITY((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! _GLF_IDENTITY((false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((false))))))))))), ! (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))))))))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))), false || (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false))))))))), true, true))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), false), false))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true), false))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(vec2(injectionSwitch.y, 1.0)), mix(float(float(vec2(injectionSwitch.y, 1.0))), float(_GLF_FUZZED(1.4)), bool(false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))))) + 0.0) > injectionSwitch.y))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * 1.0)))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, true)))))) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(checker[virtual_gid], read, _GLF_IDENTITY(4, max(_GLF_IDENTITY(_GLF_IDENTITY(4, min(4, 4)), (false ? _GLF_FUZZED(-30013) : 4)), _GLF_IDENTITY(4, max(4, 4)))), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(0.3, (false ? _GLF_FUZZED(-7319.5913) : 0.3)), mix(float(_GLF_FUZZED(0.3)), float(_GLF_IDENTITY(0.3, (false ? _GLF_IDENTITY(_GLF_FUZZED(-7319.5913), clamp(_GLF_FUZZED(-7319.5913), _GLF_FUZZED(-7319.5913), _GLF_FUZZED(-7319.5913))) : 0.3))), bool(_GLF_IDENTITY(true, bool(bvec2(true, true))))))), (injectionSwitch)[1]), vec2((injectionSwitch)[0], _GLF_FUZZED(4283.2182)), bvec2(true, false))).x > injectionSwitch.y))))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), true && (! (_GLF_DEAD(false)))))), (_GLF_DEAD(false)) || false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (_GLF_IDENTITY(! (false), bool(bool(! (false))))))))), true && (_GLF_IDENTITY(false, (false) && true)))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])), injectionSwitch)))).x) / 1.0) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (! (! (false))), _GLF_IDENTITY(bool(bool(! (! (! (false))))), (bool(bool(! (! (! (false)))))) && true)))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), (_GLF_IDENTITY(! (false), ! (! (! (false))))) && true)), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, true)))), bool(bool(bool(_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), ! (! (! (false)))), false || (_GLF_IDENTITY(! (false), ! (! (! (false))))))), bool(bvec4(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), false, false, true))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec4(bvec2(false, false), false, true))), bvec2(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bvec2(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), bvec2(bvec4(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec4(bvec2(false, false), true, _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, bool(bvec3(true, true, false)))))), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))))))), true, false))), true))), true, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) || false)))))))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(_GLF_IDENTITY(25762, (25762) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), bool(false)))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2091.8020) : 1.0)), 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(_GLF_IDENTITY(25762, (25762) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))) / _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))))) * 1.0), (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(_GLF_IDENTITY(25762, (25762) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), bool(false)))) / _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(2091.8020) : 1.0)), 1.0)), ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(float(_GLF_IDENTITY(25762, (25762) - int(_GLF_ZERO(0.0, injectionSwitch.x)))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false)))))), ! (! (_GLF_IDENTITY(bool(false), bool(_GLF_IDENTITY(bool(bool(false)), true && (bool(bool(false))))))))))))))) / _GLF_IDENTITY(1.0, _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))), clamp(min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))), min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))), _GLF_IDENTITY(min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))), clamp(min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))), min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))), min(1.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(atan(-4.2, -2226.2720)) : 1.0))))))))) * 1.0)) / 1.0)) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), true && ((false))))))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))) / vec2(1.0, 1.0)).x < injectionSwitch.y)), false, true))))))), true && _GLF_IDENTITY((_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))) || false)))), false, true))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))) || false)))), false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), false, true)))))))))), ! (! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), false || (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), false, true)))))))))))))))), false || ((_GLF_IDENTITY(false || _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))) || false)))), false, true))))))), true && ((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), (_GLF_IDENTITY(bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)), ! (! (bool(bvec3(injectionSwitch.x < injectionSwitch.y, true, false)))))) || false)))), false, true))))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), false || (false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (injectionSwitch.x < injectionSwitch.y) && true))))), false, true)))))))))), ! (! (! (_GLF_IDENTITY(false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true))))))), false || (false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)), ! (! (bool(bvec4(false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false))), false, true))))))))))))))))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, false || ((false) || _GLF_IDENTITY(false, bool(bool(false))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false))) : _GLF_FUZZED(449.331), max(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false))) : _GLF_FUZZED(449.331), float(mat2x3(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0 + (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))) - length(0.0))) * 1.0)), float(_GLF_FUZZED(-58.60)), bool(false))) / 1.0)) : _GLF_FUZZED(449.331), max(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0 + (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))) - length(0.0))) * 1.0)), float(_GLF_FUZZED(-58.60)), bool(false))) / 1.0)) : _GLF_FUZZED(449.331), _GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0 + (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))) - length(0.0))) * 1.0)), float(_GLF_FUZZED(-58.60)), bool(false))) / 1.0)) : _GLF_FUZZED(449.331), min(true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0 + (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))) - length(0.0))) * 1.0)), float(_GLF_FUZZED(-58.60)), bool(false))) / 1.0)) : _GLF_FUZZED(449.331), true ? _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false)), (mix(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x)), (_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(_GLF_IDENTITY(float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))), 0.0 + (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0)))))), (float(mat2(injectionSwitch.x, 0.0, 0.0, determinant(mat2(1.0, 1.0, 0.0, 1.0))))) - 0.0)), injectionSwitch.x))) - length(0.0))) * 1.0)), float(_GLF_FUZZED(-58.60)), bool(false))) / 1.0)) : _GLF_FUZZED(449.331))))), 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0))))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0), injectionSwitch.x))), _GLF_IDENTITY(float(_GLF_FUZZED(-58.60)), min(float(_GLF_FUZZED(-58.60)), _GLF_IDENTITY(float(_GLF_FUZZED(-58.60)), max(_GLF_IDENTITY(float(_GLF_FUZZED(-58.60)), 0.0 + (float(_GLF_FUZZED(-58.60)))), float(_GLF_FUZZED(-58.60)))))), bool(false))) : _GLF_FUZZED(449.331), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false))) : _GLF_FUZZED(449.331), (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(-58.60)), bool(false))) : _GLF_FUZZED(449.331)) - 0.0)), float(_GLF_FUZZED(2.1)), bool(false))))))) > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))) / 1.0))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, length(vec3(0.0, 0.0, 0.0)) + (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x)) > injectionSwitch.y)), true, true, false))))))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
