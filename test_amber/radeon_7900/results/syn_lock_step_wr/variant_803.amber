#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_30 {
 uvec3 _f0;
 bvec3 _f1;
 mat4x2 _f2;
 mat4x3 _f3;
 int _f4;
 uint _f5;
} ;

struct _GLF_struct_29 {
 mat2 _f0;
 uvec4 _f1;
 vec2 _f2;
 uvec4 _f3;
 uvec4 _f4;
 bool _f5;
 uvec4 _f6;
} ;

struct _GLF_struct_28 {
 uvec4 _f0;
 mat4x3 _f1;
 mat4 _f2;
} ;

struct _GLF_struct_27 {
 bvec4 _f0;
 uint workgroup_id;
 bvec2 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_31 {
 _GLF_struct_27 _f0;
 bvec2 _f1;
 _GLF_struct_28 _f2;
 mat2 _f3;
 _GLF_struct_29 _f4;
 _GLF_struct_30 _f5;
} ;

struct _GLF_struct_32 {
 vec4 _f0;
 _GLF_struct_31 _f1;
 mat2 _f2;
} ;

struct _GLF_struct_24 {
 mat2x4 _f0;
 mat4 _f1;
 mat4 _f2;
 mat3x4 _f3;
 mat3x4 _f4;
} ;

struct _GLF_struct_25 {
 bvec4 _f0;
 uint num_workgroup;
 uvec2 _f1;
 _GLF_struct_24 _f2;
} ;

struct _GLF_struct_26 {
 _GLF_struct_25 _f0;
 bvec4 _f1;
} ;

struct _GLF_struct_21 {
 float _f0;
 int _f1;
} ;

struct _GLF_struct_22 {
 vec4 _f0;
 mat2 _f1;
 bvec4 _f2;
 _GLF_struct_21 _f3;
} ;

struct _GLF_struct_19 {
 float _f0;
 mat2x4 _f1;
 mat4 _f2;
 mat2x4 _f3;
 mat3 _f4;
} ;

struct _GLF_struct_18 {
 ivec3 _f0;
 mat4x3 _f1;
 ivec4 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_17 {
 uint _f0;
 vec2 _f1;
 bvec3 _f2;
 bvec3 _f3;
} ;

struct _GLF_struct_20 {
 _GLF_struct_17 _f0;
 _GLF_struct_18 _f1;
 mat2 _f2;
 ivec3 _f3;
 _GLF_struct_19 _f4;
} ;

struct _GLF_struct_15 {
 mat3 _f0;
 bool _f1;
 mat3 _f2;
 ivec3 _f3;
 mat4x2 _f4;
} ;

struct _GLF_struct_16 {
 _GLF_struct_15 _f0;
} ;

struct _GLF_struct_13 {
 mat4x3 _f0;
 bvec2 _f1;
 bvec3 _f2;
 mat4x2 _f3;
 bvec3 _f4;
 uvec2 _f5;
 bvec4 _f6;
} ;

struct _GLF_struct_14 {
 _GLF_struct_13 _f0;
} ;

struct _GLF_struct_11 {
 mat3x2 _f0;
 uint _f1;
 bvec2 _f2;
 uint _f3;
 uvec3 _f4;
 float _f5;
 mat3 _f6;
} ;

struct _GLF_struct_10 {
 ivec2 _f0;
 mat4x3 _f1;
 uint _f2;
 ivec3 _f3;
 int _f4;
 vec4 _f5;
} ;

struct _GLF_struct_9 {
 vec2 _f0;
 uvec4 _f1;
 int _f2;
 mat4x3 _f3;
 bool _f4;
} ;

struct _GLF_struct_8 {
 mat3x2 _f0;
 uvec4 _f1;
 bvec2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_12 {
 _GLF_struct_8 _f0;
 vec2 _f1;
 _GLF_struct_9 _f2;
 mat4 _f3;
 _GLF_struct_10 _f4;
 _GLF_struct_11 _f5;
 uint subgroup_id;
} ;

struct _GLF_struct_23 {
 _GLF_struct_12 _f0;
 bvec2 _f1;
 _GLF_struct_14 _f2;
 bvec4 _f3;
 _GLF_struct_16 _f4;
 _GLF_struct_20 _f5;
 _GLF_struct_22 _f6;
} ;

struct _GLF_struct_5 {
 mat3x2 _f0;
 uint _f1;
 mat4x3 _f2;
 mat4 _f3;
 mat3 _f4;
 vec3 _f5;
 mat2x4 _f6;
} ;

struct _GLF_struct_4 {
 bvec3 _f0;
 ivec4 _f1;
 mat4 _f2;
 mat3 _f3;
 uvec4 _f4;
} ;

struct _GLF_struct_3 {
 bvec4 _f0;
 mat2 _f1;
 mat2 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
 mat2x3 _f1;
 mat4x3 _f2;
 vec3 _f3;
 mat2x4 _f4;
} ;

struct _GLF_struct_1 {
 bvec3 _f0;
 mat3x2 _f1;
 mat4x2 _f2;
 uint _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_6 {
 _GLF_struct_0 _f0;
 _GLF_struct_1 _f1;
 _GLF_struct_2 _f2;
 _GLF_struct_3 _f3;
 vec3 _f4;
 uint workgroup_size;
 _GLF_struct_4 _f5;
 _GLF_struct_5 _f6;
} ;

struct _GLF_struct_7 {
 mat2x4 _f0;
 bool _f1;
 _GLF_struct_6 _f2;
 mat3 _f3;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true && _GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec2(_GLF_IDENTITY((_GLF_DEAD(false)), bool(bvec3((_GLF_DEAD(false)), false, false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ! (! (_GLF_IDENTITY(true && (_GLF_DEAD(false)), bool(_GLF_IDENTITY(bvec3(true && (_GLF_DEAD(false)), true, false), bvec3(bvec3(bvec3(true && (_GLF_DEAD(false)), true, false)))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_23 _GLF_struct_replacement_23 = _GLF_struct_23(_GLF_struct_12(_GLF_struct_8(mat3x2(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0))))), uvec4(1u), bvec2(_GLF_IDENTITY(true, ! (! (true)))), mat4x2(1.0)), vec2(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-87.19)), float(1.0), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))), _GLF_struct_9(vec2(1.0), uvec4(_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, _GLF_IDENTITY((1u), ((1u)) >> 0u) - _GLF_IDENTITY(0u, (0u) - (_GLF_IDENTITY(0u ^ 0u, 0u | (0u ^ 0u)))))) - (0u >> _GLF_IDENTITY(uint(4u), _GLF_IDENTITY(uint(4u), (uint(4u)) >> 0u))))), 1, mat4x3(1.0), _GLF_IDENTITY(true, bool(bvec3(true, true, false)))), mat4(1.0), _GLF_struct_10(ivec2(_GLF_IDENTITY(1, ~ (~ (_GLF_IDENTITY(1, max(1, 1)))))), mat4x3(1.0), 1u, ivec3(1), 1, vec4(1.0)), _GLF_struct_11(mat3x2(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(899.166))), _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, (1.0) - 0.0)))), 1u, _GLF_IDENTITY(bvec2(true), bvec2(bvec4(bvec2(true), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y))))))), 1u, _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u)))), max(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u)))), (false ? _GLF_FUZZED(uvec3(109865u, 161488u, 139076u)) : _GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(1u, 1u))) - 0u)))), (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, _GLF_IDENTITY(min(1u, 1u), (min(1u, 1u)) >> 0u))) - 0u))))) / uvec3(1u, 1u, 1u)))), uvec3(_GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), min(_GLF_IDENTITY(1u, min(1u, 1u)), _GLF_IDENTITY(_GLF_IDENTITY(1u, min(1u, 1u)), (_GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))) - 0u)))))), 1.0, mat3(_GLF_IDENTITY(1.0, mix(float(_GLF_IDENTITY(1.0, (1.0) / 1.0)), float(_GLF_FUZZED(6358.2403)), bool(false))))), gl_SubgroupID), bvec2(true), _GLF_struct_14(_GLF_struct_13(mat4x3(1.0), bvec2(true), bvec3(true), mat4x2(1.0), bvec3(true), uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(1u, max(1u, 1u)), uint(uvec2(_GLF_IDENTITY(1u, max(1u, 1u)), 1u))))), min(_GLF_IDENTITY(1u, max(1u, 1u)), _GLF_IDENTITY(1u, max(1u, 1u))))), bvec4(true))), bvec4(true), _GLF_struct_16(_GLF_struct_15(mat3(1.0), true, mat3(1.0), ivec3(1), mat4x2(1.0))), _GLF_struct_20(_GLF_struct_17(1u, vec2(1.0), _GLF_IDENTITY(bvec3(true), bvec3(bvec4(bvec3(true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), bvec3(true)), _GLF_struct_18(ivec3(1), mat4x3(1.0), ivec4(1), mat2x4(1.0)), mat2(1.0), ivec3(1), _GLF_struct_19(1.0, mat2x4(_GLF_IDENTITY(1.0, float(vec2(1.0, 1.0)))), mat4(1.0), mat2x4(1.0), mat3(1.0))), _GLF_struct_22(vec4(_GLF_IDENTITY(1.0, (1.0) * 1.0)), mat2(1.0), bvec4(true), _GLF_struct_21(1.0, 1)));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true) || (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, true)))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(0.8)))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-3.0)), vec2(_GLF_FUZZED(_GLF_IDENTITY(-5.2, clamp(-5.2, -5.2, -5.2))), (injectionSwitch)[1]), bvec2(false, true))).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)), false || (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch))) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) || false)), ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), float(mat2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - 0.0), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0))), 0.0, 0.0, 0.0))), (_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - 0.0)) - abs(0.0))) || false))) && true)) || false))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false))))))))), true && (false)), false || (_GLF_IDENTITY(false, (false) || false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) || false)), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))), false)))), _GLF_IDENTITY(((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).y))), bool(bvec3(! (_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) < injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (((_GLF_IDENTITY(! (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? injectionSwitch : _GLF_FUZZED((+ injectionSwitch)))).y))), bool(bvec3(! (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (_GLF_IDENTITY(! (false), ! (! (! (false)))))))), false))))))) || false)) && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, (_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)), injectionSwitch, injectionSwitch)).x) / 1.0) > injectionSwitch.y))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)))), true && (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false)), (bool(bvec3(_GLF_IDENTITY(false, false || (false)), false, false))) || false))))))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_26 _GLF_struct_replacement_26 = _GLF_struct_26(_GLF_struct_25(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), bool(bvec4(true, false, false, false)))), _GLF_IDENTITY(gl_NumWorkGroups, max(_GLF_IDENTITY(gl_NumWorkGroups, (gl_NumWorkGroups) | uvec3(0u, 0u, 0u)), gl_NumWorkGroups)).x, uvec2(1u), _GLF_struct_24(mat2x4(1.0), mat4(1.0), mat4(1.0), mat3x4(1.0), mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) + 0.0), mix(float(1.0), float(_GLF_FUZZED(-4.5)), bool(false)))))), bvec4(true));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), true, true, false))), false || (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), true, true, false))))))), bool(bool(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), true, true, false))), false || (_GLF_IDENTITY(! (false), bool(bvec4(_GLF_IDENTITY(! (false), bool(bvec4(! (false), false, false, false))), true, true, _GLF_IDENTITY(false, ! (! (false))))))))))))), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))), ! (! (bool(bvec3(false, true, _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true)))))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3((false), false, false), bvec3(bvec4(bvec3((false), false, false), true))))) && true), (false) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) || false))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_IDENTITY(true, true && (true)), false)), ! (! (bool(bvec4(false, false, true, false))))))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x < injectionSwitch.y)) && _GLF_IDENTITY((false), (_GLF_IDENTITY((_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false)))))), true && ((false)))) && true), true && (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x < injectionSwitch.y)) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true), (_GLF_IDENTITY(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x < injectionSwitch.y)) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), _GLF_IDENTITY(true && ((false)), bool(bvec2(true && ((false)), false))))) && true), (_GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), ((injectionSwitch) * mat2(1.0)) * _GLF_IDENTITY(vec2(1.0, 1.0), _GLF_IDENTITY(vec2(vec2(vec2(1.0, 1.0))), min(vec2(vec2(vec2(1.0, 1.0))), vec2(vec2(vec2(1.0, 1.0)))))))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch) * mat2(1.0), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(mat2x4((injectionSwitch) * mat2(1.0), 0.0, sin(0.0), 0.0, 1.0, 0.0, 0.0)))) - vec2(0.0, 0.0)), ((injectionSwitch) * mat2(1.0)) * vec2(1.0, 1.0))).x) / 1.0) < injectionSwitch.y)) && _GLF_IDENTITY((false), (_GLF_IDENTITY((false), true && ((false)))) && true)) || false)) && true)))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * cos(vec2(0.0, 0.0))).y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 _GLF_struct_7 _GLF_struct_replacement_7 = _GLF_struct_7(mat2x4(1.0), _GLF_IDENTITY(true, bool(bool(true))), _GLF_struct_6(_GLF_struct_0(1, mat3x4(1.0)), _GLF_struct_1(bvec3(true), mat3x2(1.0), mat4x2(1.0), 1u), _GLF_struct_2(mat2x3(1.0), mat2x3(1.0), mat4x3(1.0), vec3(1.0), mat2x4(1.0)), _GLF_struct_3(bvec4(true), mat2(1.0), mat2(1.0), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), transpose(transpose(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (false ? _GLF_FUZZED(mat4(599.868, -9.2, 4869.4172, 2.0, -2.6, 4.3, -8.3, -9228.9022, 97.57, 757.034, _GLF_IDENTITY(-970.443, (_GLF_IDENTITY(-970.443, 0.0 + (-970.443))) * 1.0), 73.52, 68.99, _GLF_IDENTITY(3.2, (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)).x)) > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)) ? _GLF_FUZZED(exp2(-3143.6456)) : _GLF_IDENTITY(3.2, (false ? _GLF_FUZZED(190.377) : 3.2)))), -9671.7804, -833.708)) : _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))), (true ? mat4(_GLF_IDENTITY(1.0, max(1.0, 1.0))) : _GLF_FUZZED(mat4(-7.5, 7.8, 7.7, _GLF_IDENTITY(3256.0156, mix(float(_GLF_FUZZED(-8.1)), float(3256.0156), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), -569.546, -39.22, -5.7, 0.3, -65.98, -699.571, -0.8, 5486.6683, 777.626, -1.9, -843.841, -72.93)))))))))), vec3(1.0), _GLF_IDENTITY(gl_WorkGroupSize.x, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(uvec3(186651u, 51957u, 157964u), 183711u)) : gl_WorkGroupSize)).x))), _GLF_struct_4(bvec3(true), ivec4(1), mat4(1.0), mat3(1.0), uvec4(_GLF_IDENTITY(1u, (1u) ^ 0u))), _GLF_struct_5(mat3x2(1.0), 1u, mat4x3(1.0), mat4(1.0), mat3(1.0), _GLF_IDENTITY(vec3(1.0), vec3(0.0, 0.0, 0.0) + _GLF_IDENTITY((vec3(1.0)), min((vec3(1.0)), (vec3(1.0))))), mat2x4(1.0))), _GLF_IDENTITY(mat3(1.0), transpose(transpose(_GLF_IDENTITY(mat3(1.0), mat3(_GLF_IDENTITY(mat4(mat3(1.0)), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + _GLF_IDENTITY((_GLF_IDENTITY(mat4(mat3(1.0)), (mat4(mat3(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0))), ((_GLF_IDENTITY(mat4(mat3(1.0)), (mat4(mat3(1.0))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(distance(injectionSwitch, injectionSwitch)) : 0.0))))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, min(1.0, 1.0)), 1.0)), (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0))), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) - 0.0), _GLF_IDENTITY(1.0, (1.0) - 0.0)))))), float(_GLF_FUZZED(-35.43)), bool(false))), min(1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 1.0)))) / mat4(1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat4(1.0, 1.0, 1.0, 1.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), abs(0.0), 1.0, 0.0, 0.0))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))))))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 _GLF_struct_32 _GLF_struct_replacement_32 = _GLF_struct_32(vec4(1.0), _GLF_struct_31(_GLF_struct_27(bvec4(true), _GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, uvec3(1u, 1u, 1u) * _GLF_IDENTITY((gl_WorkGroupID), ((gl_WorkGroupID)) | ((gl_WorkGroupID)))), _GLF_IDENTITY(gl_WorkGroupID, _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), clamp(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), _GLF_IDENTITY(uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]), ~ (~ (uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2]))))))), gl_WorkGroupID)).x, bvec2(true), ivec3(1)), bvec2(_GLF_IDENTITY(true, bool(bvec3(true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_struct_28(uvec4(1u), mat4x3(1.0), mat4(1.0)), _GLF_IDENTITY(mat2(1.0), (_GLF_IDENTITY(mat2(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat2(mat2x4(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.8)), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0), transpose(transpose(mat4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(5.8)), bool(false))), 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, log(1.0), 0.0))))))))))))), (true ? mat2(mat2x4(mat2(1.0))) : _GLF_FUZZED(mat2(-752.325, 63.55, 1.6, -1662.3905)))), transpose(transpose(_GLF_IDENTITY(mat2(mat2x4(mat2(1.0))), (true ? mat2(mat2x4(mat2(1.0))) : _GLF_FUZZED(mat2(-752.325, 63.55, 1.6, -1662.3905))))))))) - mat2(0.0, 0.0, 0.0, 0.0)), _GLF_struct_29(mat2(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(5.7)), float(1.0), _GLF_IDENTITY(bool(true), ! (! (_GLF_IDENTITY(bool(true), true && (bool(true))))))))) - _GLF_IDENTITY(0.0, (0.0) - 0.0))), _GLF_IDENTITY(uvec4(1u), _GLF_IDENTITY((uvec4(1u)) ^ uvec4(0u, 0u, 0u, 0u), uvec4(0u, 0u, 0u, 0u) + _GLF_IDENTITY((_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) ^ (_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)))), (uvec4(1u))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (min(_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)))), (uvec4(1u)))))))) ^ uvec4(_GLF_IDENTITY(0u, (false ? _GLF_FUZZED(uaddCarry(153486u, subgroup_local_id, subgroup_local_id)) : 0u)), 0u, 0u, 0u)), (false ? _GLF_FUZZED(uvec4(78806u, 118684u, 12756u, 10029u)) : (_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) ^ _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u))))))))), (uvec4(1u))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_IDENTITY(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), mix(float(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x)), float(_GLF_FUZZED(-3.5)), bool(false))), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (min(_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | (_GLF_IDENTITY((uvec4(1u)), ((uvec4(1u))) << uvec4(0u, 0u, 0u, 0u)))), (uvec4(1u)))))), (_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u))))))))), (uvec4(1u))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (min(_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)))), (uvec4(1u))))))) | uvec4(0u, 0u, 0u, 0u))), ~ (~ ((_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(min(_GLF_IDENTITY((uvec4(1u)), _GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u)))))))), max(_GLF_IDENTITY(uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u)))))))), clamp(uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u)))))))), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u)))))))), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u)))))))))), uvec4(0u, 0u, 0u, 0u) | _GLF_IDENTITY(((uvec4(1u))), ~ (_GLF_IDENTITY(~ (((uvec4(1u)))), min(~ (((uvec4(1u)))), ~ (((uvec4(1u))))))))))), (uvec4(1u))), uvec4(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (min(_GLF_IDENTITY((uvec4(1u)), uvec4(0u, 0u, 0u, 0u) | ((uvec4(1u)))), (uvec4(1u))))))))))) ^ uvec4(0u, 0u, 0u, 0u)))))), vec2(1.0), uvec4(1u), uvec4(1u), true, uvec4(1u)), _GLF_struct_30(uvec3(1u), bvec3(true), mat4x2(1.0), mat4x3(1.0), _GLF_IDENTITY(1, min(1, 1)), _GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), min(_GLF_IDENTITY(_GLF_IDENTITY(1u, (1u) << 0u), (_GLF_IDENTITY(1u, (1u) << 0u)) | 0u), _GLF_IDENTITY(1u, (1u) << 0u))))), mat2(1.0));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) || _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bvec3(! (false), true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(! (false), true, true)), true, false, false)), ! (! (bool(bvec4(bool(bvec3(! (false), true, true)), true, false, false)))))))))), _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, round(length(normalize(vec3(_GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(-1.9))), 1.0, 1.0)))), sqrt(1.0), abs(1.0), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), false || (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), abs(1.0), 0.0, 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y), true && ((_GLF_IDENTITY(injectionSwitch.x, float(mat4x3(injectionSwitch.x, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), sqrt(1.0), abs(1.0), _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(-0.7) : _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(61.67)), float(0.0), bool(true))))))), 0.0, 1.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0))) < _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))))), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(false, (false) && true)), true && (! ((_GLF_IDENTITY(false, (false) || false)) || _GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), _GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && _GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (! ((false))) || false)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(! ((false)), (! ((false))) || false)), ((_GLF_IDENTITY(! ((false)), (! ((false))) || false))) && true))))), ! (! (! ((false)))))), true && (! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))), ! (! (_GLF_IDENTITY((! ((false))), bool(bool((! ((false))))))))) || false))), ! (_GLF_IDENTITY(! (! ((false))), bool(bool(! (! ((false)))))))))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) && true))))), ! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))))), (_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true))))))), false || (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))))) && true))) && true)), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), true, true, false)))) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true)), bool(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), (bool(((false) || _GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))) && true), bool(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), (bool(((false) || _GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))) && true))))), ! (_GLF_IDENTITY(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), (bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (! (true))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && _GLF_IDENTITY(true, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), false, true, false)), (bool(bvec4(_GLF_IDENTITY(true, bool(bool(_GLF_IDENTITY(true, (true) || false)))), false, true, false))) && true))) && true)))))) && true))), bool(_GLF_IDENTITY(bvec2(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), (bool(((false) || _GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))) && true))), false), bvec2(bvec4(bvec2(! (bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), bool(bvec4(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), (bool(((false) || _GLF_IDENTITY(false, (false) && true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))) && true))), false), true, true))))))), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true))))))))))), (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_IDENTITY(true && (! ((false) || _GLF_IDENTITY(false, (false) && true))), false || (true && (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ((false) || _GLF_IDENTITY(false, (false) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))) || false, bool(bvec2((! ((false))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! ((false))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false), ! (! ((false)))) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! _GLF_IDENTITY((! ((false) && true)), bool(bvec2(_GLF_IDENTITY((! ((false) && true)), bool(bvec2(_GLF_IDENTITY((! ((false) && true)), ! (! ((! ((false) && true))))), true))), true))))))))) && true))) && true)), _GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))), (bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true))))) && true))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), _GLF_IDENTITY((_GLF_IDENTITY(false, (false) && true)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(false, (false) && true))), bool(bool(! ((_GLF_IDENTITY(false, (false) && true)))))))) || _GLF_FALSE(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))), (injectionSwitch.x > injectionSwitch.y)))))), (bool(bool(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, _GLF_IDENTITY(false, ! (! (false))))), ! (! (bool(bvec4(false, false, false, false))))))) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true)), bool(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY((bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((_GLF_IDENTITY(true, false || (true)))) && true) && true), true && ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))))), true && ((bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((_GLF_IDENTITY(true, false || (true)))) && true) && true), true && ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) && _GLF_IDENTITY(true, (_GLF_IDENTITY(true, false || (true))) || false))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))) && true))) && true)))))))))))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.7, 3.3)))).x < injectionSwitch.y))), bvec2(bvec4(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (_GLF_IDENTITY(bool(bool(false)), (bool(bool(false))) || false)))))) && true)), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(false, (false) && true)), true && (! ((false) || _GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), ! (! (! ((false))))))) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), bool(bvec4(! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) && true))) && _GLF_IDENTITY(true, true && (true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec4(bvec3(false, false, true), true))))))))) && true))))) && true))) && true)), bool(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), bool(bvec2(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), true))), (bool(bool(_GLF_IDENTITY(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true))), _GLF_IDENTITY(false, (false) && true) || (((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))), (bool(bool(((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! (! (_GLF_IDENTITY(false, (false) && true)))))))) && true))) && true)))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(false, (false) && true)), true && (! ((false) || _GLF_IDENTITY(false, (false) && true)))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), ! (! (! ((false))))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) && true))) && true), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), ! (! (! ((false))))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) && true))) && true), bool(bvec2(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), ! (! (! ((false))))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), ! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) && true))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))) && true) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY(false, (false) && true))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true)), bool(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), bool(bvec2(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), true))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true))))))))) && true)))), _GLF_IDENTITY((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true), ! (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true)), (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true))) || false))))))), _GLF_IDENTITY(true && (! ((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false || (true && (! ((false) || _GLF_IDENTITY(false, (false) && true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))) || false, bool(bvec2(_GLF_IDENTITY((! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! ((false))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! ((false))))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (_GLF_IDENTITY(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), bool(bvec4(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), false, false, false)))) || false))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) && true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true))) || false)))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true)), bool(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true), true && ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))) && true))) && true)))))))))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true), ! (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true)), (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true))) || false))))))), _GLF_IDENTITY(true && (! ((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false || (true && (! ((false) || _GLF_IDENTITY(false, (false) && true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))) || false, bool(bvec2(_GLF_IDENTITY((! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! ((false))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! ((false))))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (_GLF_IDENTITY(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), bool(bvec4(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), false, false, false)))) || false))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) && true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true))) || false)))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true)), bool(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true), true && ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))) && true))) && true))))))))))))), (! ((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (! _GLF_IDENTITY(((false) || _GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true), ! (! (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true), ! (_GLF_IDENTITY(! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true)), (! ((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))) || false), (false) && true))) || false))))))), _GLF_IDENTITY(true && (! ((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false)))))), false || (true && (! ((false) || _GLF_IDENTITY(false, (false) && true)))))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((false)), true && (_GLF_IDENTITY(! ((false)), _GLF_IDENTITY((! ((false))) || false, bool(bvec2(_GLF_IDENTITY((! ((false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! ((false))))) || false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ! (! (! ((false))))))) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool((_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), false || (_GLF_IDENTITY((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bool(_GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), (_GLF_IDENTITY(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), bool(bvec4(! (! ((false) || _GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true))), false, false, false)))) || false))))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! ((false) && true)))))))) && true))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) && true))))))))) && true)), ! (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) && true)))))) && true))) || false)))), (bool(_GLF_IDENTITY(bool(bool(_GLF_IDENTITY(((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (((false) || _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false)) && true)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(((_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, false, false)), ! (! (bool(bvec4(false, false, false, false))))))) || _GLF_IDENTITY(false, (false) && true))))) && true))) && true)), bool(bool(_GLF_IDENTITY(bool(((false) || _GLF_IDENTITY(false, (false) && true))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && true)))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true), true && ((false) && _GLF_IDENTITY(true, _GLF_IDENTITY((true), ((true)) && true) && true)))))))) && true)), (bool(_GLF_IDENTITY(bool(bool(((false) || _GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, (true) || false))))), (bool(bool(((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ((false) && true) || false)))))) && true))) && true)))))))))))))) || false))) || false)), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(4.7, 3.3)))).x < injectionSwitch.y))), true, false))))))))), bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY((false) || false, true && ((false) || false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (! (_GLF_IDENTITY((false) && true, bool(bvec3((false) && true, true, true)))))))), true && ((false))) || _GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! ((false) || _GLF_IDENTITY(false, (false) && true))), ! (_GLF_IDENTITY(! ((! (_GLF_IDENTITY((false) || _GLF_IDENTITY(false, (false) && true), bool(bool((false) || _GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), false || ((false)))))) && true, false)))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY((false) && true, bool(bvec2(_GLF_IDENTITY((false) && true, ! (! ((false) && true))), false)))), (! (_GLF_IDENTITY((false) && true, bool(bvec2((false) && true, false))))) || false))))))))))))), bool(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(_GLF_IDENTITY((false), (_GLF_IDENTITY((false), bool(bool((false))))) && true), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), _GLF_IDENTITY(bvec2(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(bvec2(! ((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((false)), bool(bvec2(((false)), false))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false)), bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false)), false)))) && true)) || false)) || _GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))))), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(true, bool(bool(true))) && (false || (true))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && ((false))) || _GLF_IDENTITY(false, (false) && true))) && true)))))))), false), bvec2(bvec2(bvec2(! ((! _GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && _GLF_IDENTITY(((false)), bool(bvec2(((false)), false))), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false)), (_GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false)), bool(bvec2(_GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false)), false)))) && true)) || false)) || _GLF_IDENTITY(false, (false) && true)), false || (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY((_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false || _GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! (_GLF_IDENTITY((true), ! (! ((true)))))))))), true && (false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)), ((_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), true && (false || (true)))), ! (! (_GLF_IDENTITY(true, _GLF_IDENTITY(false || (true), _GLF_IDENTITY(true, bool(bool(true))) && (false || (true))))))), _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && ((false))) || _GLF_IDENTITY(false, (false) && true))) && true)))))))), false)))), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY(_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) && true), true && (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), bvec2(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(false, false || (false)) || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (_GLF_IDENTITY(false, ! (! (false)))))), (false) && true)))), false), bvec2(bvec4(bvec2(! _GLF_IDENTITY(((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false)))) || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), bool(_GLF_IDENTITY(bvec2(((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false)))) || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), true), bvec2(bvec3(bvec2(((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, _GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(bvec4(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), false, true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))), false, false, false)))) || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), true), true))))), false), true, false))), true)), false)))))), bvec2(bvec4(bvec2(bvec2(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), _GLF_IDENTITY(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false)), ! (! (_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false)))))) || _GLF_IDENTITY(false, _GLF_IDENTITY((false), ((false)) || false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_IDENTITY(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false)), bool(bool(_GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (injectionSwitch.x < injectionSwitch.y)) && ((false)))))) || _GLF_IDENTITY(false, (false) && true)))), _GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, (false) && true), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false), bvec3(bvec4(bvec3(bvec2(_GLF_IDENTITY(false, (false) && true), true), false), true)))))))), true, false))), true)), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), false)))))), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), bvec3(bvec4(bvec3(bvec3(bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false), bvec3(_GLF_IDENTITY(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), bvec3(bvec4(bvec3(bvec3(bvec2(bvec3(_GLF_IDENTITY(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)), bool(bool(_GLF_IDENTITY(true, false || (true)))))))), false || (_GLF_IDENTITY(true, false || (true)))), (injectionSwitch.x < injectionSwitch.y)) && ((false))) || _GLF_IDENTITY(false, (false) && true)))), false), bvec2(bvec4(bvec2(! ((! (_GLF_IDENTITY((false), _GLF_TRUE(_GLF_IDENTITY(true, false || (true)), (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (injectionSwitch.x < injectionSwitch.y)))) && true))) && _GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), (_GLF_IDENTITY(((false)), true && (((false))))) || false)) || false)) || _GLF_IDENTITY(false, (false) && true)))), false), true, false))), true)), false)), false)))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), false)))))))))))))), false, true)))))))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(4.7, 3.3))), clamp((true ? injectionSwitch : _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, 3.3)), (_GLF_IDENTITY(_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, 3.3)), _GLF_IDENTITY((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(vec2(-0.7, 546.285)) : _GLF_IDENTITY((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(7.3), ((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(-6.9)), bvec2(true, false)))))) : _GLF_FUZZED(vec2(-7.5, -5.6)), min(true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, 3.3)), (true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-7.5, -5.6)), true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, 3.3)), (true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-7.5, -5.6)))), (_GLF_IDENTITY(true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, 3.3)), _GLF_IDENTITY((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)), (false ? _GLF_FUZZED(vec2(-0.7, 546.285)) : _GLF_IDENTITY((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)), mix(vec2(_GLF_FUZZED(7.3), ((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)))[1]), vec2(((true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch)))[0], _GLF_FUZZED(-6.9)), bvec2(true, false)))))) : _GLF_FUZZED(vec2(-7.5, -5.6)), min(true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, 3.3)), (true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-7.5, -5.6)), true ? _GLF_IDENTITY(_GLF_FUZZED(vec2(4.7, 3.3)), (true ? _GLF_FUZZED(vec2(4.7, 3.3)) : _GLF_FUZZED(injectionSwitch))) : _GLF_FUZZED(vec2(-7.5, -5.6))))) * mat2(1.0))))), (true ? injectionSwitch : _GLF_FUZZED(vec2(4.7, _GLF_IDENTITY(3.3, mix(float(3.3), float(_GLF_FUZZED(float(-1640))), bool(false)))))), _GLF_IDENTITY((true ? injectionSwitch : _GLF_FUZZED(vec2(4.7, _GLF_IDENTITY(3.3, clamp(3.3, 3.3, 3.3))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec2(-472.602, 5311.4531)) : (true ? injectionSwitch : _GLF_FUZZED(vec2(4.7, 3.3)))))))).x < injectionSwitch.y))))))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)) && true), false, true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) && _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat4(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), cos(0.0), 1.0, 1.0, 1.0, 1.0, 1.0, abs(1.0), 1.0, sqrt(1.0), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 0.0, 0.0))).x < injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), false || (bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true && (false), _GLF_IDENTITY(bool(bool(true && (false))), false || (bool(bool(_GLF_IDENTITY(true && (false), ! (_GLF_IDENTITY(! (true && (false)), _GLF_IDENTITY(bool(bvec4(! (true && (false)), true, true, false)), true && (bool(bvec4(! (true && (false)), true, true, false)))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(true, false || (true)) && (false), _GLF_IDENTITY(_GLF_IDENTITY(bool(bool(true && (false))), false || (bool(bool(_GLF_IDENTITY(true && (false), ! (! (true && (false)))))))), false || (_GLF_IDENTITY(bool(bool(true && (false))), false || (bool(bool(_GLF_IDENTITY(true && _GLF_IDENTITY((false), ! (_GLF_IDENTITY(! ((false)), (! ((false))) || false))), ! (! (true && (false)))))))))))) && true)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (injectionSwitch.x > injectionSwitch.y))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bool(false))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))), false, false))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), true && _GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), false || (_GLF_IDENTITY((bool(bvec2(_GLF_DEAD(false), false))), ! (! ((bool(bvec2(_GLF_DEAD(false), false)))))))))) && true)))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat2x3(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(sqrt(1.0), abs(0.0)), vec2(1.0, log(1.0))), dot(vec2(sqrt(1.0), abs(0.0)), vec2(1.0, log(1.0)))), 0.0, 1.0, cos(0.0), sin(0.0))))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))) || false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_base = _GLF_struct_replacement_7._f2.workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_32._f1._f0.workgroup_id, min(_GLF_struct_replacement_32._f1._f0.workgroup_id, _GLF_struct_replacement_32._f1._f0.workgroup_id));
 uint subgroup_base = _GLF_struct_replacement_23._f0.subgroup_id * _GLF_IDENTITY(subgroup_size, (subgroup_size) - (1u ^ 1u));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), bvec2(bvec4(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), false, false)))))) || false), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), (_GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), min(_GLF_IDENTITY(uint(uvec4(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, clamp(1u, 1u, 1u))) - 0u)) | (_GLF_IDENTITY(1u, ~ (~ (1u))))) * (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u)), _GLF_IDENTITY((uint(uvec4(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) + 0u, max((uint(uvec4(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) + 0u, (uint(uvec4(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))) + 0u))), uint(uvec4(workgroup_base, 0u, (_GLF_IDENTITY((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(subgroup_local_id) : (1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))))) | (uint(uvec4(workgroup_base, 0u, ((1u << _GLF_IDENTITY(uint(6u), _GLF_IDENTITY(uint(6u), 1u * (uint(6u))))) >> _GLF_IDENTITY(uint(6u), uint(6u))), 0u))))) + subgroup_base, _GLF_IDENTITY(workgroup_base + subgroup_base, _GLF_IDENTITY(uint(uvec3(_GLF_IDENTITY(workgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, 0u ^ (subgroup_base)), (true ? subgroup_base : _GLF_FUZZED(subgroup_local_id))), 0u ^ (_GLF_IDENTITY(workgroup_base + subgroup_base, ~ (~ (_GLF_IDENTITY(workgroup_base + subgroup_base, uint(uvec2(_GLF_IDENTITY(workgroup_base + subgroup_base, (_GLF_IDENTITY(workgroup_base, (workgroup_base) << 0u) + subgroup_base) - 0u), 0u)))))))), uint(_GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), mix(float(_GLF_FUZZED(-3.1)), float(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))))), bool(_GLF_IDENTITY(true, ! (! (true))))))), 0u)), max(uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (workgroup_base + subgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u)), uint(uvec3(_GLF_IDENTITY(workgroup_base + subgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, max(workgroup_base, workgroup_base)) + subgroup_base)), uint(_GLF_ONE(1.0, injectionSwitch.y)), 0u))))))) + subgroup_local_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y)), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), (_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false)))) && true), false, false, true))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true, _GLF_IDENTITY(true, ! (! (true))))), ! (! (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true, true)), (_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), ! (! (bool(bvec4(_GLF_DEAD(false), false, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(34.39)), vec2(_GLF_FUZZED(-0.4), (injectionSwitch)[1]), bvec2(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), true))).y)), true)))))), true))), false, true, true))))) || false)) || false))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, (_GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))) / 1u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x))));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), _GLF_IDENTITY(4, (4) | 0), 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
  barrier();
 uint read = atomicLoad(_GLF_IDENTITY(buf[virtual_gid], ~ (~ (buf[virtual_gid]))), 4, 64, 2);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false))))) || false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y))))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[_GLF_IDENTITY(1, (1) | (1))], max(injectionSwitch[1], injectionSwitch[1])))).x > injectionSwitch.y)), bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), bool(bvec4(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y)), false)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false, true)))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, false || (false))) || false)))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), ! (! (_GLF_DEAD(false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y)))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false)), _GLF_IDENTITY(true, bool(bvec2(true, false))) && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, ! (! (true)))))), false)), false)))), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), true && (_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, false, false)))))))), false)), false)), _GLF_IDENTITY(true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false))), ! _GLF_IDENTITY((! (true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false))))), false || ((! (true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false))))))))), bool(bvec4(_GLF_IDENTITY(bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)), _GLF_IDENTITY(false, false || (false)))), true && (bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, true))), false)), false)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, _GLF_IDENTITY(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), (_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), bool(_GLF_IDENTITY(bvec2(bool(bool(false)), false), bvec2(bvec3(bvec2(bool(bool(false)), false), false))))))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && _GLF_IDENTITY(true, ! (! (true)))), false, false)), bool(bvec2(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), ! (! (_GLF_IDENTITY(true, (true) && true)))), false, false)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(true, (true) && true), false, false))))), true))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + _GLF_IDENTITY(dot(vec3(round(length(normalize(_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), (_GLF_IDENTITY(vec3(1.0, 1.0, 1.0), mat3(1.0) * (vec3(1.0, 1.0, 1.0)))) + vec3(0.0, 0.0, 0.0))))), 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(vec3(26.34, -722.383, -9892.8947)) : vec3(0.0, 0.0, 0.0)))))) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / sqrt(vec2(1.0, 1.0))))).x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(83.31, -37.73)))).y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat4(1.0, 1.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0)), min(_GLF_IDENTITY(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(_GLF_IDENTITY(1.0, max(1.0, 1.0)), injectionSwitch.y), 1.0, 0.0, determinant(mat4(1.0, 1.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0)), float(vec2(float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat4(1.0, 1.0, sqrt(1.0), tan(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), _GLF_IDENTITY(sqrt(0.0), (sqrt(0.0)) * 1.0), 0.0)), 0.0))), float(mat3x4(injectionSwitch.y, sqrt(1.0), 0.0, 1.0, 1.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, determinant(mat4(1.0, 1.0, sqrt(1.0), tan(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (_GLF_IDENTITY(1.0, (_GLF_IDENTITY(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-851.055))), mix(float(_GLF_FUZZED(-8868.7884)), float(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(-851.055)))), bool(true)))) / _GLF_IDENTITY(1.0, float(mat2x3(1.0, determinant(mat2(_GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 1.0)), 1.0, 1.0, 0.0, 0.0)))))), 1.0, 0.0, 0.0, determinant(mat4(1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 0.0, 1.0)), sqrt(0.0), 0.0)))))))))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, ! (! (false))))) || (false))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-29.58) : injectionSwitch.y))), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - length(vec4(0.0, 0.0, 0.0, 0.0))))))))), false, false, false))))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) - uint(_GLF_ZERO(0.0, injectionSwitch.x))), 4, 64, _GLF_IDENTITY(4, clamp(_GLF_IDENTITY(4, min(_GLF_IDENTITY(4, ~ (~ (4))), _GLF_IDENTITY(4, 0 + (4)))), 4, 4)));
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
