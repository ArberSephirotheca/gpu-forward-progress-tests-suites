#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   else
    {
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(true))
    {
     return;
    }
   else
    {
    }
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = _GLF_IDENTITY(gl_NumWorkGroups.x, max(_GLF_IDENTITY(_GLF_IDENTITY(gl_NumWorkGroups, min(gl_NumWorkGroups, gl_NumWorkGroups)).x, max(gl_NumWorkGroups.x, _GLF_IDENTITY(gl_NumWorkGroups.x, _GLF_IDENTITY((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x), ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)) | ((gl_NumWorkGroups.x) | (gl_NumWorkGroups.x)))))), _GLF_IDENTITY(gl_NumWorkGroups, (uvec3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) << _GLF_IDENTITY(uvec3(2u), uvec3(2u))) ^ (gl_NumWorkGroups)).x));
 if(_GLF_DEAD(false))
  {
   if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    {
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   else
    {
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 & -94469)); _injected_loop_counter --)
    {
     return;
    }
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY(1, (1) | 0), (1) | (1)); _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 << _GLF_IDENTITY(int(8), _GLF_IDENTITY(int(8), (int(8)) | (0 | 0))))); _injected_loop_counter --)
  {
   do
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      break;
     if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
      }
     else
      {
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED((9.4 - vec2(5800.2712, 29.23))))).y))))
            {
             if(_GLF_DEAD(false))
              {
               for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != (0 >> _GLF_IDENTITY(int(1), int(1)))); _injected_loop_counter --)
                {
                 return;
                }
              }
             return;
            }
          }
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter > (0 | 0)); _injected_loop_counter --)
            {
             barrier();
            }
          }
        }
       else
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
              barrier();
             break;
            }
           if(_GLF_WRAPPED_IF_FALSE(false))
            {
            }
           else
            {
             for(int _injected_loop_counter = _GLF_IDENTITY(_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ~ (~ (_GLF_IDENTITY((0 >> _GLF_IDENTITY(int(0), int(0))), ((0 >> _GLF_IDENTITY(int(0), int(0)))) / (1 | 1))))), 0 | ((0 >> _GLF_IDENTITY(int(0), int(0))))); _GLF_WRAPPED_LOOP(_injected_loop_counter != ((1 << _GLF_IDENTITY(int(6), int(6))) >> _GLF_IDENTITY(int(6), int(6)))); _injected_loop_counter ++)
              {
               if(_GLF_DEAD(false))
                break;
               if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
                {
                 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
                  barrier();
                 if(_GLF_DEAD(false))
                  {
                   if(_GLF_DEAD(false))
                    barrier();
                   return;
                  }
                 barrier();
                }
               barrier();
              }
            }
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
          }
        }
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  return;
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, uvec3(gl_WorkGroupSize[0], _GLF_IDENTITY(gl_WorkGroupSize[1], ~ (~ (gl_WorkGroupSize[1]))), gl_WorkGroupSize[2])).x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   for(int _injected_loop_counter = 0; _GLF_WRAPPED_LOOP(_injected_loop_counter != 1); _injected_loop_counter ++)
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       continue;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), vec2(0.0, 0.0) + ((injectionSwitch) * mat2(1.0))))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(79.38)), bvec2(false, false)))).x > injectionSwitch.y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(79.38)), bvec2(false, false)))).x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), max(_GLF_IDENTITY((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), _GLF_IDENTITY(vec2(mat4x3((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), max(vec2(mat4x3((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), vec2(mat4x3((_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch))))), 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0))))), (_GLF_IDENTITY((injectionSwitch) * mat2(1.0), _GLF_IDENTITY(((injectionSwitch) * mat2(1.0)) * mat2(1.0), (true ? ((injectionSwitch) * mat2(1.0)) * mat2(1.0) : _GLF_FUZZED(injectionSwitch)))))))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(79.38)), bvec2(false, false)))).x > injectionSwitch.y), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec2(bvec2(bvec2((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(79.38)), bvec2(false, false)))).x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(79.38)), bvec2(false, false)))).x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(vec2(((injectionSwitch) * mat2(1.0))[0], ((injectionSwitch) * mat2(1.0))[1]), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(79.38)), bvec2(false, false)))).x > injectionSwitch.y) && true)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * mat2(1.0), mix(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), 1.0) : _GLF_FUZZED(mat2(426.432, 1434.1873, 9.9, -8.6))))))) / mat2(1.0, 1.0, 1.0, 1.0))))) * mat2(1.0))[1]), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((true ? _GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 0.0, 0.0, 0.0))), -0.9, -0.9)), _GLF_IDENTITY(-0.9, min(-0.9, -0.9)), _GLF_IDENTITY(-0.9, max(-0.9, -0.9)))) : 770.392), 0.0 + ((true ? _GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 0.0, 0.0, 0.0))), -0.9, -0.9)), _GLF_IDENTITY(-0.9, min(-0.9, -0.9)), _GLF_IDENTITY(-0.9, max(-0.9, -0.9)))) : 770.392)))), _GLF_FUZZED(-3.9)), vec2((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-4.7)), bool(false))), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), sqrt(0.0), 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))) * mat2(1.0))[1]))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1])), ((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1]))) * vec2(1.0, 1.0))[1], min(_GLF_IDENTITY((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1])), ((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1]))) * vec2(1.0, 1.0))[1], _GLF_IDENTITY((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1])), ((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1]))) * vec2(1.0, 1.0))[1]))), bvec2(_GLF_IDENTITY(true, false || (true)), true))), vec2(_GLF_FUZZED(1.1), _GLF_FUZZED(79.38)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), false)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0)))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) * _GLF_IDENTITY(mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))), mat2(1.0) * (mat2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))))), mix(_GLF_IDENTITY(vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0) : _GLF_FUZZED(mat2(426.432, 1434.1873, 9.9, -8.6))))))) / mat2(1.0, 1.0, 1.0, 1.0))))) * mat2(1.0))[1]), mix(vec2(_GLF_FUZZED(_GLF_IDENTITY((true ? _GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1352.5581)))) / 1.0)))), -0.9, -0.9)), _GLF_IDENTITY(-0.9, min(-0.9, -0.9)), _GLF_IDENTITY(-0.9, max(-0.9, -0.9)))) : 770.392), 0.0 + ((true ? _GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, clamp(_GLF_IDENTITY(-0.9, float(mat2x3(-0.9, 1.0, 1.0, 0.0, 0.0, 0.0))), -0.9, -0.9)), _GLF_IDENTITY(-0.9, min(-0.9, -0.9)), _GLF_IDENTITY(-0.9, max(-0.9, -0.9)))) : 770.392)))), _GLF_FUZZED(-3.9)), vec2((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-4.7)), bool(false))), 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)), (_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69))) + mat2(0.0, 0.0, 0.0, 0.0)) : mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), sqrt(0.0), 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))), clamp(vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-4.7)), bool(false))), 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)), (_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69))) + mat2(0.0, 0.0, 0.0, 0.0)) : mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), sqrt(0.0), 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-4.7)), bool(false))), 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)), (_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69))) + mat2(0.0, 0.0, 0.0, 0.0)) : mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), sqrt(0.0), 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))), vec2(_GLF_IDENTITY(mat2(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), mix(float(sqrt(0.0)), float(_GLF_FUZZED(-4.7)), bool(false))), 1.0), (false ? _GLF_IDENTITY(_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)), (_GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69))) + mat2(0.0, 0.0, 0.0, 0.0)) : mat2(_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)), sqrt(0.0), 1.0)))) / mat2(1.0, 1.0, 1.0, 1.0))))))) * mat2(1.0))[1]))[0], _GLF_IDENTITY(_GLF_IDENTITY((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), _GLF_IDENTITY(transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0))), (_GLF_IDENTITY(transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0))), (transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))) * mat2(1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(mat3x4(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-46.34)), float(1.0), bool(true))), 1.0)), 1.0, _GLF_IDENTITY(1.0, min(1.0, 1.0)))))))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1])), ((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(_GLF_IDENTITY(-75.03, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))), min(float(_GLF_IDENTITY(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))), clamp(float(_GLF_IDENTITY(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))), float(_GLF_IDENTITY(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)))))), float(_GLF_IDENTITY(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0)), transpose(transpose(mat2x3(-75.03, 1.0, 0.0, 0.0, 0.0, cos(0.0))))))))))), -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, 1.0 * (1.0)), float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 0.0, 1.0, 0.0)), (transpose(mat2(1.0, 0.0, 1.0, 0.0))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))) / _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (mat2(1.0, 1.0, 1.0, 1.0)) / mat2(1.0, 1.0, 1.0, 1.0)), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))), (_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(_GLF_IDENTITY(transpose(mat2(1.0, 1.0, 1.0, 1.0)), (transpose(mat2(1.0, 1.0, 1.0, 1.0))) / mat2(1.0, 1.0, 1.0, 1.0))))) - mat2(0.0, 0.0, 0.0, 0.0)))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, float(vec2(1.0, 1.0))))), 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1]))) * vec2(1.0, 1.0))[1], min(_GLF_IDENTITY((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), _GLF_IDENTITY((_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))), (_GLF_IDENTITY((_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))), transpose(transpose((_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) / mat2(1.0, 1.0, 1.0, 1.0)))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1])), _GLF_IDENTITY(((vec2((_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec4(3.3, -3124.1037, 318.296, 3075.5776).q / 1.7))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true)))), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-1873.6460, 1002.3217, 181.498, -0.2), (_GLF_IDENTITY(mat2(-1873.6460, 1002.3217, 181.498, -0.2), mat2(mat3x2(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, _GLF_IDENTITY(65.72, float(mat3x2(65.72, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), (true ? dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-346.245)))), 1.0))))) : _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(1628.5234, -7.9, 276.458, 6734.9856)))))[1]))), (_GLF_IDENTITY(((vec2((_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec4(3.3, -3124.1037, 318.296, 3075.5776).q / 1.7))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true)))), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-1873.6460, 1002.3217, 181.498, -0.2), (_GLF_IDENTITY(mat2(-1873.6460, 1002.3217, 181.498, -0.2), mat2(mat3x2(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, _GLF_IDENTITY(65.72, float(mat3x2(65.72, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), (true ? dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-346.245)))), 1.0))))) : _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(1628.5234, -7.9, 276.458, 6734.9856)))))[1]))), (((vec2((_GLF_IDENTITY((injectionSwitch), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? (injectionSwitch) : _GLF_FUZZED(injectionSwitch))) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((vec4(3.3, -3124.1037, 318.296, 3075.5776).q / 1.7))), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true)))), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(_GLF_IDENTITY(mat2(-1873.6460, 1002.3217, 181.498, -0.2), (_GLF_IDENTITY(mat2(-1873.6460, 1002.3217, 181.498, -0.2), mat2(mat3x2(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))) * _GLF_IDENTITY(_GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, _GLF_IDENTITY(65.72, float(mat3x2(65.72, 1.0, 0.0, abs(1.0), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)), (true ? dot(vec3(0.0, 1.0, 1.0), vec3(1.0, abs(0.0), 0.0)) : _GLF_FUZZED(-346.245)))), 1.0))))) : _GLF_IDENTITY(mat2(1.0), mat2(0.0, 0.0, 0.0, 0.0) + (mat2(1.0))))) : _GLF_FUZZED(mat2(1628.5234, -7.9, 276.458, 6734.9856)))))[1])))) * mat2(1.0))) - vec2(0.0, 0.0)) * vec2(1.0, 1.0))[1], _GLF_IDENTITY((vec2(((injectionSwitch) * mat2(_GLF_IDENTITY(1.0, (1.0) - sin(0.0))))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), _GLF_IDENTITY(sqrt(0.0), max(sqrt(0.0), sqrt(0.0))))), 1.0), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0))))))), _GLF_IDENTITY(mat2(mat4x2(false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0))))))))), (mat2(mat4x2(false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))) - mat2(0.0, 0.0, 0.0, 0.0)))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat2(-1873.6460, 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, -67.49, 8.3, 65.72)) : mat2(1.0))))[1])), ((vec2(((injectionSwitch) * mat2(1.0))[0], ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (_GLF_IDENTITY(mat2(injectionSwitch, sqrt(0.0), 1.0), (false ? _GLF_FUZZED(mat2(-75.03, -3.3, -10.66, -20.69)) : mat2(injectionSwitch, sqrt(0.0), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))), clamp(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))), float(mat2x4(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, exp(0.0)))), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat2(1.0, 0.0, 1.0, 0.0), transpose(transpose(mat2(1.0, 0.0, 1.0, 0.0)))))))))))) / _GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(mat2(1.0, 1.0, 1.0, 1.0)))))), (true ? _GLF_IDENTITY(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (mat2(1.0, 1.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))) - mat2(0.0, 0.0, 0.0, 0.0))))))), mat2(mat3x2(mat2(mat2x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), transpose(transpose(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), mat2(mat4x3(_GLF_IDENTITY(mat2(1.0, 1.0, 1.0, 1.0), (mat2(1.0, 1.0, 1.0, 1.0)) - mat2(0.0, 0.0, 0.0, 0.0)))))) - mat2(0.0, 0.0, 0.0, 0.0)))))))))) : _GLF_FUZZED(mat2(_GLF_IDENTITY(-1873.6460, mix(float(-1873.6460), float(_GLF_FUZZED(2.4)), bool(false))), 1002.3217, 181.498, -0.2))))))))) * _GLF_IDENTITY(mat2(1.0), (false ? _GLF_FUZZED(mat2(6.0, _GLF_IDENTITY(-67.49, (-67.49) * 1.0), 8.3, 65.72)) : mat2(1.0))))[1]))) * vec2(1.0, 1.0))[1]))), bvec2(_GLF_IDENTITY(true, false || (true)), true))), vec2(_GLF_IDENTITY(_GLF_FUZZED(1.1), (_GLF_IDENTITY(_GLF_FUZZED(1.1), clamp(_GLF_FUZZED(1.1), _GLF_FUZZED(1.1), _GLF_FUZZED(1.1)))) + 0.0), _GLF_FUZZED(79.38)), bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch), (mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)) * mat2(1.0))).x > injectionSwitch.y))), _GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), bvec3(bvec4(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false)))), false))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bool(false)))), true && ((_GLF_IDENTITY(false, bool(bool(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))), (bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false))))))), false, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false)), (bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, true, false))) || false))))), bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bool(false))))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bvec3(_GLF_IDENTITY(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), bvec3(bvec3(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(false), (bool(false)) || false))))), false || (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, bool(bool(false))))))), false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))))))) && true)), false)))).x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))) / 1.0))))))))) && true))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_GLF_IDENTITY(_injected_loop_counter, clamp(_injected_loop_counter, _injected_loop_counter, _GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) | (_GLF_IDENTITY(_injected_loop_counter, (_injected_loop_counter) << 0))))) != int(_GLF_ZERO(0.0, injectionSwitch.x))); _injected_loop_counter --)
    {
     do
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))
          barrier();
         barrier();
        }
      }
     while(_GLF_WRAPPED_LOOP(false));
     if(_GLF_DEAD(false))
      continue;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), ! (! (_GLF_IDENTITY(false, false || (false)))))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        continue;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     do
      {
       barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (false ? _GLF_FUZZED(4.6) : _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, vec2(mat4(injectionSwitch, 0.0, round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0)))), 0.0, 0.0, abs(0.0), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, sqrt(0.0), tan(0.0), _GLF_ONE(1.0, injectionSwitch.y)))).y))))), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false, false)), bool(bvec4(bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y))))))), false, false, false)), true, true, true)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) || false)));
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_base, 0u, _GLF_IDENTITY(1u, (_GLF_IDENTITY(1u, 0u | (1u))) ^ 0u), 1u), (uvec4(workgroup_base, 0u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(workgroup_base, 0u, 1u, 1u), (uvec4(workgroup_base, 0u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u))), (uint(_GLF_IDENTITY(uvec4(workgroup_base, 0u, 1u, _GLF_IDENTITY(1u, min(_GLF_IDENTITY(1u, 0u | (1u)), 1u))), (uvec4(workgroup_base, 0u, 1u, 1u)) + uvec4(0u, 0u, 0u, 0u)))) | (uint(_GLF_IDENTITY(uvec4(workgroup_base, 0u, 1u, 1u), _GLF_IDENTITY((uvec4(workgroup_base, 0u, 1u, 1u)), clamp((uvec4(workgroup_base, 0u, 1u, 1u)), (uvec4(workgroup_base, 0u, 1u, 1u)), _GLF_IDENTITY((uvec4(workgroup_base, 0u, 1u, 1u)), ((uvec4(workgroup_base, 0u, 1u, 1u))) + uvec4(0u, 0u, 0u, 0u)))) + uvec4(0u, 0u, 0u, _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, 0u ^ (0u))) + 0u))))))) | (uint(_GLF_IDENTITY(uvec4(workgroup_base, 0u, 1u, 1u), _GLF_IDENTITY((uvec4(workgroup_base, 0u, 1u, 1u)), (_GLF_IDENTITY((uvec4(workgroup_base, 0u, 1u, 1u)), ((uvec4(workgroup_base, 0u, 1u, 1u))) >> uvec4(0u, 0u, 0u, 0u))) >> uvec4(0u, 0u, 0u, 0u)) + uvec4(0u, 0u, 0u, 0u)))))) + subgroup_base + subgroup_local_id;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), workgroup_base), min(max(_GLF_IDENTITY(workgroup_base, _GLF_IDENTITY(uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u))), (uint(uvec3(workgroup_base, 1u, _GLF_IDENTITY(_GLF_IDENTITY(0u, min(0u, 0u)), (_GLF_IDENTITY(0u, min(0u, 0u))) | 0u)))) | 0u)), workgroup_base), max(_GLF_IDENTITY(workgroup_base, uint(uvec3(workgroup_base, 1u, 0u))), workgroup_base)))) + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, 0u ^ (_GLF_IDENTITY(subgroup_size, (subgroup_size) * 1u))), (_GLF_IDENTITY(subgroup_size, 0u ^ (subgroup_size))) + 0u));
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     do
      {
       return;
      }
     while(_GLF_WRAPPED_LOOP(false));
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec3((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false, false))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, false)))))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   do
    {
     if(_GLF_WRAPPED_IF_FALSE(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        continue;
      }
     else
      {
       barrier();
       if(_GLF_DEAD(false))
        barrier();
       do
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           return;
          }
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))));
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, true && (false))))))
        continue;
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_WRAPPED_IF_FALSE(false))
    {
    }
   else
    {
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[next_virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint read = atomicLoad(buf[_GLF_IDENTITY(virtual_gid, clamp(virtual_gid, virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | 0u)))], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * round(length(normalize(vec3(1.0, 1.0, 1.0)))))))))
  barrier();
 if(_GLF_WRAPPED_IF_TRUE(true))
  {
   subgroupBarrier();
  }
 else
  {
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 for(int _injected_loop_counter = _GLF_IDENTITY(int(_GLF_ONE(1.0, injectionSwitch.y)), (int(_GLF_ONE(1.0, injectionSwitch.y))) - 0); _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   do
    {
     atomicStore(checker[virtual_gid], _GLF_IDENTITY(read, (read) * (0u | 1u)), 4, 64, 4);
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), (injectionSwitch) - vec2(0.0, 0.0)), injectionSwitch)).x > injectionSwitch.y))))
      continue;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         continue;
         if(_GLF_DEAD(false))
          barrier();
        }
       barrier();
      }
    }
   while(_GLF_WRAPPED_LOOP(_GLF_IDENTITY(false, true && (false))));
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     do
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       do
        {
         return;
        }
       while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-2.6) : injectionSwitch.x)) > injectionSwitch.y))));
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))) / 1.0) > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true), _GLF_IDENTITY(((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true) && true)))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          continue;
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            barrier();
           if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, bool(bvec2(false, false)))))))
            {
             if(_GLF_DEAD(false))
              barrier();
             continue;
            }
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
      }
     while(_GLF_WRAPPED_LOOP(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))));
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
    }
   else
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, false || (false)), true, true)))) || false)))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_WRAPPED_IF_TRUE(true))
        {
         barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
          return;
        }
       else
        {
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
    }
   do
    {
     barrier();
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 do
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_WRAPPED_IF_TRUE(_GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x < injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) + 0.0) < injectionSwitch.y)))))))
      {
       barrier();
      }
     else
      {
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    continue;
  }
 while(_GLF_WRAPPED_LOOP(false));
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
