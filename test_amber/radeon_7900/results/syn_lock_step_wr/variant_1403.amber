#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(set = 0, binding = 2) buffer Checker {
 uint checker[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (bool(bvec2(_GLF_DEAD(false), false))) || false))))), bool(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec2(_GLF_IDENTITY(bvec2(_GLF_DEAD(false), false), bvec2(bvec4(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true), false), false, true)))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, float(mat4(injectionSwitch.x, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, 0.0))), _GLF_IDENTITY(dot(vec2(0.0, 1.0), vec2(0.0, 1.0)), dot(vec2(0.0, 1.0), vec2(0.0, 1.0)))))) > injectionSwitch.y) && _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), false || (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), true && (_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) < injectionSwitch.y), ((injectionSwitch.x < injectionSwitch.y)) || false))))))))) && true)))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec4(! (false), true, false, true)))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! _GLF_IDENTITY((false), ((false)) || false), bool(bvec3(! (false), false, false)))))))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (bool(bool(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false)))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      return;
     return;
    }
  }
 uint subgroup_id = gl_SubgroupID;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true && (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false)))))), ! (! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(false, true && (false)))), (! (! (_GLF_IDENTITY(false, true && (false))))) && true)))))))))))), true, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(false))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))), (_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(false))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))) || false))))))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ! (! (bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(false))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(false))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y))))), true)))))))), false, false, _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))) && true))), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).x < injectionSwitch.y)))), ! (! (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(false, true && (false))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(5.7)), bool(false))), injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))))))))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))), true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(7.0)), float(injectionSwitch.x), bool(true))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / cos(vec2(0.0, 0.0))))).y)), _GLF_IDENTITY(bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec4(bool(bvec2(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(1.2), _GLF_FUZZED(3831.5527)), bvec2(false, false))))))).y))))))), true, _GLF_IDENTITY(true, (_GLF_IDENTITY(true, (true) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))) || false), false))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))), ! (! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0))), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3(injectionSwitch.y, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, sin(0.0), 0.0)))) || false))))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, _GLF_IDENTITY(false, false || (false)), false), bvec3(bvec4(bvec3(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, true))))), bool(bvec2(bool(_GLF_IDENTITY(bvec3(false, true, true), bvec3(bvec3(bvec3(false, true, _GLF_IDENTITY(true, ! (! (true)))))))), false)))), false, false), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(bool(_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))))))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, true && (false)))))))))
    return;
   return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), (_GLF_IDENTITY((bool(bvec2(false, false))), true && (_GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY(true, true && (true)) && ((bool(bvec2(false, false)))))))) && true), false || (_GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) && true)), true && ((bool(bvec2(false, false)))))) && true, ! (! ((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && true)))) && true)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))), true && ((bool(bvec2(false, false)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))), true && ((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))))) && true)))) && true))))))))))), ((! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(false, false))), (_GLF_IDENTITY((bool(bvec2(false, false))), true && (_GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY(true, true && (true)) && ((bool(bvec2(false, false)))))))) && true), false || (_GLF_IDENTITY((bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && true, ! (_GLF_IDENTITY(! (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && _GLF_IDENTITY(true, ! (! (true))), (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(false, false)), (_GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false)))))) && true)), true && ((bool(bvec2(false, false)))))) && true, ! (! ((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && true)))) && true)), ! (! (! (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))) && true, (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, bool(bvec3(false, false, false))), false))), true && ((bool(bvec2(false, false)))))) && true, ! (! (_GLF_IDENTITY((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))), true && ((_GLF_IDENTITY((bool(bvec2(false, false))), true && ((bool(bvec2(false, false)))))))) && true)))) && true)))))))))))) && true)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
        return;
       return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
        return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && true), false))), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID)), (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, uvec3(gl_WorkGroupID[0], gl_WorkGroupID[1], gl_WorkGroupID[2])), clamp(gl_WorkGroupID, gl_WorkGroupID, gl_WorkGroupID))) ^ (uvec3(_GLF_IDENTITY(0u, (0u) * 1u), 0u, 0u) >> _GLF_IDENTITY(uvec3(6u), uvec3(_GLF_IDENTITY(6u, max(_GLF_IDENTITY(6u, ~ (~ (6u))), 6u)))))), _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) | (gl_WorkGroupID)), gl_WorkGroupID))) << uvec3(0u, 0u, 0u)), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, 175580u)), ~ (~ ((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, _GLF_IDENTITY(175580u, ~ (~ (175580u))))))))) : uvec3(gl_WorkGroupID)))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), clamp((uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u)))), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, 175580u)), ~ (~ ((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, _GLF_IDENTITY(175580u, ~ (~ (175580u))))))))) : uvec3(gl_WorkGroupID)))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), clamp((uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, 175580u)), ~ (~ ((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, _GLF_IDENTITY(175580u, ~ (~ (175580u))))))))) : uvec3(gl_WorkGroupID)))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), clamp((uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(uvec3(gl_WorkGroupID), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(_GLF_IDENTITY((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, 175580u)), ~ (~ ((mat2x3(-6.6, 4.8, 4.3, -2.4, -8.9, -0.8) , uvec3(155847u, 80647u, _GLF_IDENTITY(175580u, ~ (~ (175580u))))))))) : uvec3(gl_WorkGroupID)))), _GLF_IDENTITY((uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), clamp((uvec3(uvec3(_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec3(gl_WorkGroupID)))))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u), (uvec3(uvec3(gl_WorkGroupID))) - uvec3(0u, 0u, 0u))))))).x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec3(false, false, true), bvec3(bvec3(bvec3(false, false, true))))))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, false))), _GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), bool(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))), ! (! ((_GLF_IDENTITY(false, bool(bvec2(false, false))))))), true))) && true, true))), false), false)))), _GLF_IDENTITY((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, true))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, _GLF_IDENTITY(true, bool(bvec3(true, true, true)))))), false), false))))), bool(bool((bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, true))), _GLF_IDENTITY(false, ! (! (false))) || (_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, true))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, bool(bvec2((_GLF_IDENTITY(false, bool(bvec2(false, false)))) && true, _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec3(true, _GLF_IDENTITY(true, true && (true)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, true && (true)), true))), bvec3(bvec4(_GLF_IDENTITY(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, true && (true)), true))), bvec3(bvec3(bvec3(bvec3(bvec3(true, _GLF_IDENTITY(true, true && (true)), true)))))), true))))))))), false), false)))))))) || false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(true, (true) || false) ? _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], min(injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1])))))) : _GLF_FUZZED(injectionSwitch)))) * vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, abs(1.0)))) > injectionSwitch.y), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(abs(0.0), float(_GLF_IDENTITY(vec2(abs(0.0), 1.0), max(vec2(abs(0.0), 1.0), vec2(abs(0.0), 1.0))))))))), false))))), _GLF_IDENTITY(bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(abs(0.0), float(_GLF_IDENTITY(vec2(abs(0.0), 1.0), max(vec2(abs(0.0), 1.0), vec2(abs(0.0), 1.0))))))))), false))))))), ! (! (bool(bool(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) - _GLF_IDENTITY(abs(0.0), float(_GLF_IDENTITY(vec2(abs(0.0), 1.0), max(vec2(abs(0.0), 1.0), vec2(abs(0.0), 1.0))))))))), false)))))))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))), bool(_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), (bool(bvec3(false, false, true))) || false)), (injectionSwitch.x > injectionSwitch.y)))), (_GLF_IDENTITY(bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y)))), false || (bool(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, false, true))), (injectionSwitch.x > injectionSwitch.y))))))) || false))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, clamp(_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY(uint(uvec2(workgroup_size, (_GLF_IDENTITY((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u, ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u) | ((0u >> _GLF_IDENTITY(uint(4u), uint(4u))) | 0u))))), (uint(uvec2(workgroup_size, ((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, (4u) / 1u)), uint(_GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, clamp(4u, _GLF_IDENTITY(4u, 0u ^ (4u)), 4u))) << (0u >> _GLF_IDENTITY(uint(5u), _GLF_IDENTITY(uint(5u), 0u | (uint(5u))))))))) | 0u)))) | (uint(uvec2(workgroup_size, _GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) ^ 0u)) + (0u | 0u))))), uint(4u))) | 0u), ~ (~ (_GLF_IDENTITY(((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) ^ 0u)) + (0u | 0u))))), uint(4u))) | 0u), (((0u >> _GLF_IDENTITY(uint(_GLF_IDENTITY(4u, max(4u, _GLF_IDENTITY(4u, (_GLF_IDENTITY(4u, (4u) ^ 0u)) + (0u | 0u))))), uint(4u))) | 0u)) * 1u))))))))))), workgroup_size, workgroup_size)) * workgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, (false) && true) || (_GLF_DEAD(false))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y), _GLF_IDENTITY(false || ((injectionSwitch.x > injectionSwitch.y)), (false || ((injectionSwitch.x > injectionSwitch.y))) || false)))))
    return;
  }
 uint subgroup_base = _GLF_IDENTITY(subgroup_id, _GLF_IDENTITY(uint(uint(subgroup_id)), _GLF_IDENTITY(0u ^ _GLF_IDENTITY((uint(_GLF_IDENTITY(uint(subgroup_id), ~ (~ (uint(subgroup_id)))))), uint(uvec4((uint(_GLF_IDENTITY(uint(subgroup_id), ~ (~ (uint(subgroup_id)))))), 0u, (1u | 0u), 1u))), 0u ^ (0u ^ (uint(_GLF_IDENTITY(_GLF_IDENTITY(uint(subgroup_id), (true ? uint(subgroup_id) : _GLF_FUZZED(_GLF_IDENTITY(subgroup_size, (subgroup_size) >> (0u & 119947u))))), ~ (~ (uint(subgroup_id)))))))))) * subgroup_size;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), true, false, true)), ! (! (bool(bvec4(_GLF_DEAD(false), true, false, true)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true)), (bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))) && true)))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 uint virtual_gid = _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + _GLF_IDENTITY(subgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED(packUnorm4x8(smoothstep(5.3, -59.99, vec4(_GLF_IDENTITY(83.53, min(83.53, _GLF_IDENTITY(_GLF_IDENTITY(83.53, (83.53) - 0.0), float(mat3(_GLF_IDENTITY(83.53, _GLF_IDENTITY((83.53), min((83.53), (83.53))) - 0.0), 0.0, 1.0, 0.0, 1.0, 1.0, determinant(mat2(0.0, 1.0, 0.0, 0.0)), 1.0, 1.0))))), 2.7, 0.6, -818.949)))) : _GLF_IDENTITY(_GLF_IDENTITY(subgroup_base, (subgroup_base) << 0u), min(subgroup_base, subgroup_base)), (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, -818.949)))) : subgroup_base, clamp(false ? _GLF_IDENTITY(_GLF_FUZZED(packUnorm4x8(_GLF_IDENTITY(_GLF_IDENTITY(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)), mix(vec4(_GLF_FUZZED(-5.7), _GLF_FUZZED(6.9), _GLF_FUZZED(-85.53), _GLF_FUZZED((8.0))), vec4((smoothstep(5.3, -59.99, _GLF_IDENTITY(vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3362.3834), max(_GLF_FUZZED(-3362.3834), _GLF_FUZZED(-3362.3834))) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949), (vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3362.3834), max(_GLF_FUZZED(-3362.3834), _GLF_FUZZED(-3362.3834))) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)) / vec4(1.0, 1.0, 1.0, 1.0))))[0], _GLF_IDENTITY((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[1], _GLF_IDENTITY(float(mat2((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[1], 1.0, 0.0, determinant(mat4(0.0, 1.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-5.6)), bool(false))), 0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (float(mat2((smoothstep(5.3, _GLF_IDENTITY(-59.99, _GLF_IDENTITY(float(mat4x3(-59.99, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 1.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0, 1.0)), (false ? _GLF_FUZZED(-5432.6232) : float(mat4x3(-59.99, 0.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 0.0, 0.0, sqrt(0.0), _GLF_ZERO(0.0, injectionSwitch.x), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 0.0)), 1.0, 1.0, tan(0.0), 1.0, 1.0))))), vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * _GLF_IDENTITY((_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7))), max((_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7))), _GLF_IDENTITY((_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7))), float(mat3((_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7))), 1.0, determinant(mat2(1.0, 0.0, 1.0, 1.0)), 1.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[1], 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0))))) / 1.0)), (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(_GLF_IDENTITY(2.7, 1.0 * (_GLF_IDENTITY(2.7, (2.7) + 0.0))), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[2], (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2.7, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-666.823) : _GLF_IDENTITY(2.7, max(2.7, 2.7)))), _GLF_IDENTITY(float(mat4(2.7, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0)), max(float(mat4(2.7, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)), sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(57.09) : 0.0)))), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(258.998) : 1.0)), 0.0)))), 1.0)), float(mat4(2.7, cos(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, exp(0.0), 0.0, 0.0, 1.0, sqrt(_GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)), dot(vec3(0.0, 0.0, 1.0), vec3(1.0, 1.0, 0.0)))), 1.0))))), clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[3]), bvec4(true, true, true, true))), max(_GLF_IDENTITY(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)), mix(vec4(_GLF_FUZZED(-5.7), _GLF_FUZZED(6.9), _GLF_FUZZED(-85.53), _GLF_FUZZED((8.0))), vec4((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, _GLF_IDENTITY(2.7, (_GLF_IDENTITY(2.7, min(2.7, 2.7))) - 0.0), 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[0], _GLF_IDENTITY((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[1], _GLF_IDENTITY(float(mat2((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[1], 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (float(mat2((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[1], 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0))))) / 1.0)), (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_IDENTITY(_GLF_FUZZED(-3362.3834), mix(float(_GLF_FUZZED(-3362.3834)), float(_GLF_FUZZED(110.048)), bool(false))) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[2], (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(_GLF_IDENTITY(radians(-292.104), _GLF_IDENTITY(float(mat2(radians(-292.104), 0.0, 0.0, 0.0)), float(mat3x2(float(mat2(radians(-292.104), 0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0))))) : 0.6)), -818.949)))[3]), bvec4(true, true, true, true))), _GLF_IDENTITY(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, _GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)), 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)), mix(vec4(_GLF_FUZZED(-5.7), _GLF_FUZZED(6.9), _GLF_FUZZED(-85.53), _GLF_FUZZED((8.0))), vec4((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(_GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(min(-5096.8564, 121.676)) : _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(_GLF_IDENTITY(radians(-292.104), clamp(radians(-292.104), _GLF_IDENTITY(radians(-292.104), (radians(-292.104)) - 0.0), radians(-292.104)))) : 0.6)))), -818.949)))[0], _GLF_IDENTITY((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, _GLF_IDENTITY(2.7, max(2.7, 2.7)), 2.7)))), _GLF_IDENTITY(0.6, (_GLF_IDENTITY(false ? _GLF_FUZZED(radians(-292.104)) : 0.6, (true ? _GLF_IDENTITY(false ? _GLF_FUZZED(radians(-292.104)) : 0.6, (true ? false ? _GLF_FUZZED(radians(-292.104)) : 0.6 : _GLF_FUZZED(9960.7475))) : _GLF_FUZZED(1927.6021))))), -818.949)))[1], _GLF_IDENTITY(float(mat2((_GLF_IDENTITY(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)), clamp(_GLF_IDENTITY(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)), mix(vec4(_GLF_FUZZED(599.127), (smoothstep(5.3, -59.99, _GLF_IDENTITY(vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949), mat4(_GLF_ONE(1.0, injectionSwitch.y)) * (vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))))[1], (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)), (_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0))) / 1.0) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[2], _GLF_FUZZED(-5.5)), vec4((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[0], _GLF_FUZZED(-190.700), _GLF_FUZZED(-75.32), (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[3]), bvec4(true, false, false, true))), smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, _GLF_IDENTITY(2.7, round(length(normalize(1.0))) * (2.7)), 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)), smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(_GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), tan(0.0) + (_GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))))[1], 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0)))), (float(mat2((smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[1], 1.0, 0.0, determinant(mat4(0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - _GLF_ZERO(0.0, injectionSwitch.x)), 0.0, 0.0))))) / 1.0)), (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, 2.7)))), _GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), -818.949)))[2], (smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-3362.3834) : 1.0)) * (_GLF_IDENTITY(2.7, clamp(2.7, 2.7, _GLF_IDENTITY(2.7, (true ? _GLF_IDENTITY(2.7, max(2.7, 2.7)) : _GLF_FUZZED(7766.2573))))))), _GLF_IDENTITY(_GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6)), mix(float(_GLF_FUZZED(-2138.3095)), float(_GLF_IDENTITY(0.6, (false ? _GLF_FUZZED(radians(-292.104)) : 0.6))), bool(true))), -818.949)))[3]), bvec4(true, true, true, true))))))), _GLF_IDENTITY((_GLF_FUZZED(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, -818.949))))), 0u ^ (_GLF_IDENTITY((_GLF_FUZZED(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, -818.949))))), ((_GLF_FUZZED(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, -818.949)))))) ^ (0u | 0u)))) << _GLF_IDENTITY(0u, ~ (~ (0u)))) : subgroup_base, _GLF_IDENTITY(false ? _GLF_FUZZED(packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-59.99, (_GLF_IDENTITY(-59.99, min(-59.99, _GLF_IDENTITY(-59.99, (-59.99) / 1.0)))) - 0.0), mix(float(_GLF_IDENTITY(_GLF_FUZZED((670.975)), _GLF_IDENTITY(float(mat4(_GLF_FUZZED((670.975)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0))), (float(mat4(_GLF_FUZZED((670.975)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 1.0, 1.0, cos(0.0), 0.0, 0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), sin(0.0)))) / 1.0))), float(_GLF_IDENTITY(-59.99, (_GLF_IDENTITY(-59.99, min(-59.99, _GLF_IDENTITY(-59.99, (-59.99) / 1.0)))) - 0.0)), bool(true))), float(mat2x3(-59.99, 0.0, 0.0, abs(0.0), 1.0, 0.0)))) + 0.0), vec4(83.53, 2.7, 0.6, -818.949)))) : subgroup_base, (_GLF_IDENTITY(false ? _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))), _GLF_IDENTITY(-818.949, (-818.949) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)))))), (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))), _GLF_IDENTITY(-818.949, (-818.949) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))))))) | (_GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))), _GLF_IDENTITY(-818.949, (-818.949) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)))))))) : subgroup_base, min(_GLF_IDENTITY(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))), _GLF_IDENTITY(-818.949, (-818.949) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))))), uint(uvec4(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))), _GLF_IDENTITY(-818.949, (-818.949) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))))), 1u, 0u, 0u)))) : subgroup_base, max(false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), min(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), _GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(_GLF_IDENTITY(5.3, float(_GLF_IDENTITY(mat4x2(5.3, 1.0, sqrt(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0), mat4x2(mat4x2(mat4x2(5.3, 1.0, sqrt(0.0), 0.0, sqrt(0.0), 0.0, 0.0, 1.0)))))), -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, _GLF_IDENTITY((true ? -818.949 : _GLF_FUZZED(tanh(-7.0))), float(_GLF_IDENTITY(float(_GLF_IDENTITY((true ? -818.949 : _GLF_FUZZED(tanh(-7.0))), min((true ? -818.949 : _GLF_FUZZED(tanh(-7.0))), (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))))), max(float(_GLF_IDENTITY((true ? -818.949 : _GLF_FUZZED(tanh(-7.0))), min((true ? -818.949 : _GLF_FUZZED(tanh(-7.0))), (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))))), float(_GLF_IDENTITY((true ? -818.949 : _GLF_FUZZED(tanh(-7.0))), min((true ? -818.949 : _GLF_FUZZED(tanh(-7.0))), (true ? -818.949 : _GLF_FUZZED(tanh(-7.0))))))))))), _GLF_IDENTITY(-818.949, (-818.949) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)), max(mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)), mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949)))))) | 0u))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)))))) : subgroup_base, false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))), _GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, min(-818.949, _GLF_IDENTITY(-818.949, float(mat3(-818.949, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0, 0.0)))))) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)), (clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))) | (_GLF_IDENTITY(clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)), min(clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)))))))))) : subgroup_base)), false ? _GLF_FUZZED(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), uint(uvec2(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, float(float(-818.949)))) + 0.0), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), ((1u << _GLF_IDENTITY(uint(5u), uint(5u))) >> _GLF_IDENTITY(uint(5u), uint(5u)))))), uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, clamp(_GLF_IDENTITY(-818.949, (true ? -818.949 : _GLF_FUZZED(tanh(-7.0)))), _GLF_IDENTITY(-818.949, (-818.949) - _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-252.349)), bool(false)))))))), _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED(7.4)), float(-818.949), bool(true))))), 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), clamp(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0)) + (-818.949))))))), 0u, 0u), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, _GLF_IDENTITY(2.7, clamp(_GLF_IDENTITY(2.7, float(mat4x3(2.7, 1.0, sqrt(0.0), 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0))), 2.7, 2.7)), 0.6, _GLF_IDENTITY(-818.949, 0.0 + _GLF_IDENTITY((-818.949), (_GLF_IDENTITY((-818.949), clamp((-818.949), (-818.949), (-818.949)))) - 0.0))))), 0u + (packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u), uvec3(0u, 0u, 0u) | (uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(_GLF_IDENTITY(5.3, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 5.3 : _GLF_FUZZED(injectionSwitch[0]))), -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u))), uvec3(_GLF_IDENTITY(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))), 0u + (packUnorm4x8(smoothstep(5.3, _GLF_IDENTITY(-59.99, max(-59.99, -59.99)), vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, 0.0 + (-818.949))))))), 0u, 0u)))))) : subgroup_base))) ^ 0u), _GLF_IDENTITY(false ? _GLF_FUZZED(packUnorm4x8(smoothstep(5.3, -59.99, vec4(83.53, 2.7, 0.6, _GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED((- 8.2))), float(-818.949), bool(true))))))) : subgroup_base, ~ (~ (false ? _GLF_FUZZED(packUnorm4x8(smoothstep(5.3, -59.99, vec4(_GLF_IDENTITY(83.53, max(_GLF_IDENTITY(83.53, clamp(83.53, _GLF_IDENTITY(83.53, (83.53) / 1.0), 83.53)), 83.53)), 2.7, 0.6, _GLF_IDENTITY(_GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED((- 8.2))), float(-818.949), bool(true))), (_GLF_IDENTITY(-818.949, mix(float(_GLF_FUZZED((- 8.2))), float(_GLF_IDENTITY(-818.949, (_GLF_IDENTITY(-818.949, clamp(-818.949, -818.949, -818.949))) - 0.0)), bool(true)))) / 1.0))))) : subgroup_base))))) : _GLF_FUZZED(subgroup_local_id))))), _GLF_IDENTITY(workgroup_base + subgroup_base, clamp(workgroup_base + subgroup_base, workgroup_base + subgroup_base, workgroup_base + subgroup_base)), _GLF_IDENTITY(workgroup_base, (workgroup_base) | (workgroup_base)) + subgroup_base)) + _GLF_IDENTITY(subgroup_local_id, (false ? _GLF_FUZZED((subgroup_base << subgroup_local_id)) : _GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) >> 0u)));
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, true && (false)))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (false))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bool((injectionSwitch.x > injectionSwitch.y)))))))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, true && (false))))))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           return;
          }
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            return;
           return;
          }
         return;
        }
       return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
          return;
         return;
        }
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), false), bvec2(bvec3(bvec2(! (false), false), true)))))))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (! (! (false))) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec3((! (false)), _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), false || ((injectionSwitch.x < injectionSwitch.y)))) && true)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false))), true && _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), (_GLF_IDENTITY(! (! (false)), bool(bvec4(! (! (false)), true, false, true)))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false)))), true, false)))))))), ! (! (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), bool(bvec2(_GLF_IDENTITY(false, ! (! (false))), false)))))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
        return;
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), (injectionSwitch.x > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), bool(bool(_GLF_DEAD(false)))))))) || false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, ! (! (false)))) || false), ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(false, (false) || false)), ! (! (bool(_GLF_IDENTITY(false, _GLF_IDENTITY((false), false || ((false))) || false)))))))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), vec2(mat4x2(injectionSwitch, 1.0, 0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0))).x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y), ! (! _GLF_IDENTITY(((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)), (((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(_GLF_IDENTITY(injectionSwitch[0], mix(float(injectionSwitch[0]), float(_GLF_FUZZED(-55.20)), bool(false))), _GLF_IDENTITY(injectionSwitch[0], clamp(injectionSwitch[0], injectionSwitch[0], injectionSwitch[0])))), injectionSwitch[1])).y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint next_virtual_gid = workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, (subgroup_size) >> _GLF_IDENTITY(0u, (0u) - 0u)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)), injectionSwitch)), min(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec3(_GLF_IDENTITY(! (false), ! (! (! (false)))), _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(vec4(injectionSwitch, 1.0, 0.0))).y)), false)))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
        return;
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(6.0)), float(injectionSwitch.x), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(mat2x4(injectionSwitch.x, 1.0, log(1.0), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0), 0.0, 0.0, 0.0, 0.0))) > injectionSwitch.y)))))))), _GLF_IDENTITY(_GLF_IDENTITY(false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), ! (! (false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), (false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec2(false, true))))))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(asin(injectionSwitch)))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))) / vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)), injectionSwitch)).y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(false, true))), ! (! (false)))) || false)))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  return;
 uint read = atomicLoad(buf[virtual_gid], 4, 64, 2);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), false))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))))))), (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, false, true)), bool(bvec2(bool(bvec3(false, false, true)), false))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))), ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true)))))) && true), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((! (_GLF_IDENTITY(false, bool(bvec3(false, false, true))))))))))) && true))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), bvec2(bvec3(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y)))), ! (! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), true && (! (false))))), (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), false), true))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))), false || (! (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false))))))))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 subgroupBarrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (false)))), bvec3(bvec3(bvec3(_GLF_IDENTITY((false), ((false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), true, _GLF_IDENTITY(false, ! (! (false)))))))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(checker[_GLF_IDENTITY(virtual_gid, min(virtual_gid, _GLF_IDENTITY(virtual_gid, (virtual_gid) | (virtual_gid))))], read, 4, 64, 4);
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END
BUFFER checker DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected_checker DATA_TYPE uint32 SIZE 8388096 FILL 1

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 
  BIND BUFFER checker AS storage DESCRIPTOR_SET 0 BINDING 2 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT checker EQ_BUFFER expected_checker
