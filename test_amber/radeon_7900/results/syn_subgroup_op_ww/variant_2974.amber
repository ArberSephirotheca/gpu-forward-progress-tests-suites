#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec4 GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)), injectionSwitch)).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uvec2 GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id;
 GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.xy = GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false)), ! (! (bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, true, false))))))), true && (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.w = subgroup_id;
 GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.xy.y = GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.w;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), bvec3(bvec4(bvec3((injectionSwitch.x > injectionSwitch.y), true, true), true))))), false, true, false))))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
    }
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (injectionSwitch)))).y))))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y = subgroup_size;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), _GLF_IDENTITY(! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)).y)))))), ! (! (! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))), ((! _GLF_IDENTITY((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && ((_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0) > injectionSwitch.y), false, false))), bool(bool((injectionSwitch.x > injectionSwitch.y))))) || (false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.xy.x = num_workgroup;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true), _GLF_IDENTITY(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), bvec3(bvec4(bvec3(bvec3(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))), true)))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.w = workgroup_size;
 if(_GLF_DEAD(false))
  barrier();
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.w * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(1.0))))))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(mat3x4(injectionSwitch.y, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0, log(_GLF_IDENTITY(1.0, (1.0) + 0.0))))))))) && true), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! ((_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), false || (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))), ((_GLF_IDENTITY(! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) && true))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y), bool(bvec2((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * _GLF_IDENTITY((injectionSwitch), clamp((injectionSwitch), (injectionSwitch), (injectionSwitch)))).y), false))))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           barrier();
          }
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y, injectionSwitch.y)))) && true))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), (_GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), _GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), ! (! (_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false)), false || (bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false))))), ! (! (bool(bool(_GLF_IDENTITY(((injectionSwitch.x < injectionSwitch.y)), (((injectionSwitch.x < injectionSwitch.y))) || false)))))))))) && true)) && true)) && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)))), bool(bool(bool(_GLF_IDENTITY(bvec2(injectionSwitch.x > injectionSwitch.y, false), bvec2(bvec3(bvec2(injectionSwitch.x > injectionSwitch.y, false), false)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), ! _GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), bool(bvec3((_GLF_IDENTITY(! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))), ! (! (! (_GLF_DEAD(_GLF_IDENTITY(false, false || (false)))))))), true, true)))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec2(false, true))), (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, false || (false)), (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true))))), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(0.3)), bool(false)))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, true)), false || (bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(-547.998))) > injectionSwitch.y))), _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y)))), true, true))))), true, true, false))), true && (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.z = workgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)))) || false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bvec2(false, false))), false)))))
  barrier();
 uint subgroup_base = GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.xy.y * _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))).y)), clamp(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))).y)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[3]))) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))).y)), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, max(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) >> (uvec4(0u, 0u, 0u, 0u) >> _GLF_IDENTITY(uvec4(4u), uvec4(4u)))).y))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false)))))) || (false))))
  barrier();
 GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.z = subgroup_base;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 uint virtual_gid = _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, (GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size) >> uvec4(0u, 0u, 0u, 0u)).z + GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.z + subgroup_local_id;
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u), min(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, _GLF_IDENTITY(1u, (1u) | (_GLF_IDENTITY(1u, (1u) >> 0u)))), _GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u), clamp(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u), min(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u))), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u), uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u))))), _GLF_IDENTITY(uvec3(1u, 1u, 1u), clamp(uvec3(1u, 1u, 1u), uvec3(1u, 1u, 1u), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u, 1u, 1u), (uvec3(1u, 1u, 1u)) | (uvec3(1u, 1u, 1u))), uvec3(0u, 0u, 0u) + (uvec3(1u, 1u, 1u))))) * (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u))), (_GLF_IDENTITY(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u), (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u)) | (uvec3(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, 0u, 1u))), uvec3(_GLF_IDENTITY(1u, 0u ^ (_GLF_IDENTITY(1u, min(1u, 1u)))), 1u, 1u) * (uvec3(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, clamp(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, uvec4(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[0], GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[1], GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[2], GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size[3])), GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)))).z, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)))).z), ~ (~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size))), ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)))) << uvec4(0u, 0u, 0u, 0u)) | (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)))).z)))))), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z)), _GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z, (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z) | 0u), _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size, GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size)).z)), 0u, 1u)))) / uvec3(1u, 1u, 1u)))) + GLF_merged3_0_2_49_2_1_13_3_1_11GLF_merged2_0_1_13_1_1_11num_workgroupsubgroup_idsubgroup_basesubgroup_id.z + ((subgroup_local_id + 1) % GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.y);
 if(_GLF_DEAD(false))
  barrier();
 GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(28.19)), float(injectionSwitch.y), bool(true))), injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.3)), float(injectionSwitch.y), bool(true)))))))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), false || (_GLF_IDENTITY((false), bool(bool(_GLF_IDENTITY((false), bool(bvec3((false), true, false))))))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > injectionSwitch.y)))))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (uint(1)) | (uint(1))), 4, 64, 4);
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(6.5) : injectionSwitch.x))), float(_GLF_FUZZED(4.1)), bool(_GLF_IDENTITY(false, (false) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))) > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (injectionSwitch.x)) > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, _GLF_IDENTITY(~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, 0)))))), ((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, 0))))))) ^ 0), int(int(~ (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), clamp((_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))))))), max(~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, 0)))))), ((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, 0))))))) ^ 0), int(int(~ (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), clamp((_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))))))), ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ _GLF_IDENTITY((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, 0)))))), ((_GLF_IDENTITY(2, (2) | (_GLF_IDENTITY(2, int(ivec2(2, 0))))))) ^ 0), int(int(~ (2))))) | _GLF_IDENTITY((_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), clamp((_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))), (_GLF_IDENTITY(~ (2), min(~ (2), ~ (2)))))))))))), min((_GLF_IDENTITY(subgroup_local_id, uint(_GLF_IDENTITY(uvec3(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id, 0u ^ (subgroup_local_id)), (subgroup_local_id) * 1u), 1u, 1u), ~ (_GLF_IDENTITY(~ (uvec3(_GLF_IDENTITY(subgroup_local_id, _GLF_IDENTITY((subgroup_local_id) * 1u, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) << 0u)), clamp(_GLF_IDENTITY(~ (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) << 0u)), (~ (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) << 0u))) | (~ (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) << 0u)))), ~ (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) << 0u)), ~ (_GLF_IDENTITY((subgroup_local_id) * 1u, ((subgroup_local_id) * 1u) << _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, ~ (~ (0u)))) * 1u)))))))), 1u, 1u)), (~ (uvec3(_GLF_IDENTITY(subgroup_local_id, (subgroup_local_id) * 1u), 1u, 1u))) / uvec3(1u, 1u, 1u)))))) % _GLF_IDENTITY(2, ~ _GLF_IDENTITY((_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), int(int(~ (2))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760))))))))), _GLF_IDENTITY(int(ivec2((_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), int(int(~ (2))))) | (_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760)))))), min(_GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760)))))), max(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760)))))), _GLF_IDENTITY(~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760)))))), (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760))))))) ^ 0))), ~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760))))))))))), 0)), (int(ivec2((_GLF_IDENTITY(~ (2), _GLF_IDENTITY((_GLF_IDENTITY(~ (2), int(int(~ (2))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760))))))), (_GLF_IDENTITY((_GLF_IDENTITY(~ (2), int(int(~ (2))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760))))))), ((_GLF_IDENTITY(~ (2), int(int(~ (2))))) | (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2))) | (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)), (true ? _GLF_IDENTITY(_GLF_IDENTITY(2, clamp(2, 2, 2)), (2) | (2)) : _GLF_FUZZED(-4760)))))))) / 1)) << 0))), 0))) / 1)))), _GLF_IDENTITY((subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), int(int(~ (2))))) | (_GLF_IDENTITY(~ (2), ~ (~ (~ (2))))))))), _GLF_IDENTITY(~ (~ ((subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), int(int(_GLF_IDENTITY(~ (2), (-21786 & 0) + (_GLF_IDENTITY(~ (2), ~ (~ (_GLF_IDENTITY(~ (2), (~ (2)) << 0)))))))))) | (~ (2)))))))), (_GLF_IDENTITY(~ (~ ((subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), int(int(_GLF_IDENTITY(~ (2), (-21786 & 0) + (_GLF_IDENTITY(~ (2), ~ (~ (_GLF_IDENTITY(~ (2), (~ (2)) << 0)))))))))) | (~ (2)))))))), uint(uvec4(~ (~ ((subgroup_local_id % _GLF_IDENTITY(2, ~ (_GLF_IDENTITY(~ (2), (_GLF_IDENTITY(~ (2), int(int(_GLF_IDENTITY(~ (2), (-21786 & 0) + (_GLF_IDENTITY(~ (2), ~ (~ (_GLF_IDENTITY(~ (2), (~ (2)) << 0)))))))))) | (~ (2)))))))), ((1u << _GLF_IDENTITY(uint(4u), uint(4u))) >> _GLF_IDENTITY(uint(4u), uint(4u))), 0u, uint(_GLF_ZERO(0.0, injectionSwitch.x)))))) - 0u)))) == 0)
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > injectionSwitch.y))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), ! (! (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0) > _GLF_IDENTITY(injectionSwitch, vec2(vec4(_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)), 1.0, 0.0))).y)))))))
    barrier();
   subgroupAll(true);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (! (! (false))))), ! (! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, (false) && true)), ! (! (! (false)))))))))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), bool(bvec3(_GLF_DEAD(false), false, true))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))) || false)))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x, (false ? _GLF_FUZZED(atomicMax(workgroup_base, subgroup_local_id)) : GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x))], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4((injectionSwitch.x > injectionSwitch.y), false, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(false), false, false, false)), bool(bvec4(bool(bvec4(_GLF_DEAD(false), false, false, false)), false, true, true)))))
        barrier();
       barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 else
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bool(false)))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), true && (bool(bvec2(false, false)))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))))))
        barrier();
       barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        barrier();
       if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(vec2(-499.500, -9.6)) : injectionSwitch)).x)) > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_14_3_1_14next_virtual_gidsubgroup_sizeworkgroup_baseworkgroup_size.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), false, true))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
            barrier();
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0), max(vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0), vec2(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), 1.0))))) > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          {
           if(_GLF_DEAD(false))
            barrier();
           barrier();
          }
         barrier();
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) + 0.0)))))
            barrier();
           barrier();
          }
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), 0.0, 0.0, 0.0))).y))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x, mix(float(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x), float(_GLF_FUZZED(-700.747)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(65.88)), bool(false))), 0.0, 0.0))).y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), bool(false))), 1.0, 0.0)), (false ? _GLF_FUZZED(-4.8) : float(mat4x3(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))))).y, false || (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), injectionSwitch)).x > _GLF_IDENTITY(injectionSwitch, vec2(mat3x2(injectionSwitch, sin(0.0), 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4x3(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-4.6)), bool(false))), 1.0, 0.0)), (false ? _GLF_FUZZED(-4.8) : float(mat4x3(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0)))))))))).y))))))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(true, ! (! (true))) && (_GLF_DEAD(false))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, true)))), false || (bool(_GLF_IDENTITY(bvec2((false) && true, true), bvec2(bvec4(bvec2((false) && true, true), true, true))))))))) && true)) && true)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, false))), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
