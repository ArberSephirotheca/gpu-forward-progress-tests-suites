#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_1 {
 ivec2 _f0;
 uint virtual_gid;
 ivec2 _f1;
 mat3x4 _f2;
 uvec4 _f3;
} ;

struct _GLF_struct_2 {
 bool _f0;
 uvec4 _f1;
 _GLF_struct_1 _f2;
 vec3 _f3;
 mat2 _f4;
} ;

struct _GLF_struct_0 {
 bvec3 _f0;
 uvec2 _f1;
 mat3x2 _f2;
 mat4x2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_0 _f0;
 _GLF_struct_2 _f1;
 ivec3 _f2;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))).y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec3 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), bool(bvec2(_GLF_IDENTITY(false, (false) && true), false))), _GLF_IDENTITY(true, (true) || false))), _GLF_IDENTITY(! (! _GLF_IDENTITY((_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)), false)))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))), (! (! _GLF_IDENTITY(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))))))), ! (! (bool(_GLF_IDENTITY((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true))), ! (! ((bool(bvec2(_GLF_IDENTITY(false, (false) && true), true)))))))))))))) || false)))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / cos(0.0)) > injectionSwitch.y))) && true)))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! (false)))))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), true, false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, bool(bvec2((false) && true, false))))))
  return;
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.x = _GLF_IDENTITY(subgroup_id, (subgroup_id) | (subgroup_id));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), (bool(bvec3(((injectionSwitch.x > injectionSwitch.y)), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y, _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).y)))), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, _GLF_IDENTITY(false, bool(bvec4(false, true, true, _GLF_IDENTITY(false, (false) || false)))), true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acos(-974.992))))), ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(acos(-974.992)))))) || false), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true, false || ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, float(vec2(injectionSwitch.y, 0.0))), _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y)))), true, false, true)))) && true))))), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-980.004)), float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0)))), bool(true))) > injectionSwitch.y)) || (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), ! (! (! ((injectionSwitch.x > injectionSwitch.y)))))) || false), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)), bool(bool((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)))))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))))) * (injectionSwitch)).x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))))) * (injectionSwitch)).x > injectionSwitch.y), true, false))))), true && (bool(_GLF_IDENTITY(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))))) * (injectionSwitch)).x > injectionSwitch.y), true, false), bvec3(bvec3(bvec3((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0), mat2(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), transpose(transpose(_GLF_IDENTITY(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))), mat4x3(mat4x3(mat4x3(_GLF_IDENTITY(mat2(1.0), (mat2(1.0)) + mat2(0.0, 0.0, 0.0, 0.0))))))))))) * (injectionSwitch)).x > injectionSwitch.y), true, false))))))))))) && true))))))), (_GLF_IDENTITY(_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) * ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-56.75)), float((injectionSwitch)[0]), bool(true))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))))) - 0.0), _GLF_FUZZED(-443.285)), bvec2(true, false))).y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)), ((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(-5.1), (_GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)))[_GLF_IDENTITY(1, (1) * ((((1 << _GLF_IDENTITY(int(4), int(4))) >> _GLF_IDENTITY(int(4), int(4))) << _GLF_IDENTITY(int(2), int(2))) >> _GLF_IDENTITY(int(2), int(2))))]), vec2(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))))[0], (_GLF_IDENTITY((injectionSwitch)[0], max(_GLF_IDENTITY((injectionSwitch)[0], mix(float(_GLF_FUZZED(-56.75)), float((injectionSwitch)[0]), bool(true))), _GLF_IDENTITY((injectionSwitch)[0], min((injectionSwitch)[0], (injectionSwitch)[0]))))) - 0.0), _GLF_FUZZED(-443.285)), bvec2(true, false))).y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true))) || false)), bool(bvec3((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, (0.0) + 0.0)) - 0.0)) + (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))[1])))).y), true, false)))))))), (_GLF_WRAPPED_IF_FALSE(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), ! (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true)) || false)))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true, true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED((- -916.951))), bool(false))) > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true, true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))) > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)))), ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true, true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), max(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), min(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), max(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), max(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))) > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true))))) || false)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), true && (_GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) && true)))), ! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) || false)), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(24.14), _GLF_FUZZED(28.25)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true)))))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), (! (! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(true, (true) && true), false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))))) && true))), ! (_GLF_IDENTITY(! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true)) || false)), ! (! (! (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true, ! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true)))))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec2(! ((injectionSwitch.x > injectionSwitch.y)), false))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) / 1.0))) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y), true, false))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 0.0))), injectionSwitch.x)) > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) && true)) || false))))))), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, 0.0 + (injectionSwitch.y)))), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true, true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), float(injectionSwitch.x), float(injectionSwitch.x))), float(_GLF_FUZZED((- -916.951))), bool(false))) > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(-3711.8584)), bool(false))))), true, false, true)))) && true)))), true && (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, _GLF_IDENTITY(true, (true) || false))))) && true, true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))) > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true)))), ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)), true && (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), (_GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)), true && (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))), ! (! ((_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)), true && (bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))))))))) && true) && true, true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), _GLF_IDENTITY(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED((- -916.951))), clamp(float(_GLF_FUZZED((- -916.951))), _GLF_IDENTITY(float(_GLF_FUZZED((- -916.951))), mix(float(_GLF_FUZZED(344.774)), float(float(_GLF_FUZZED((- -916.951)))), bool(true))), float(_GLF_FUZZED((- -916.951))))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), max(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), min(float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(- -916.951, min(- -916.951, - -916.951))))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), max(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), _GLF_IDENTITY(bool(false), (bool(false)) || false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(249.380))), 1.0)))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))), vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)))))))), float(_GLF_IDENTITY(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(1940.4256) : 1.0))), vec4(0.0, 0.0, 0.0, 1.0))))), max(vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(float(true))), bool(false))), 1.0))))), vec4(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((- -916.951))), bool(false))), 1.0, 1.0, abs(_GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) - 0.0))))), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))))))))) > injectionSwitch.y)), bool(bvec4(! ((injectionSwitch.x > injectionSwitch.y)), true, false, true)))) && true))))) || false)))), _GLF_IDENTITY(bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y))))))), true, false)), (bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))) && true)))), ! (_GLF_IDENTITY(! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) || false)), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(24.14), _GLF_FUZZED(28.25)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true))), ! (! (! _GLF_IDENTITY((_GLF_IDENTITY(! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)), (bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true))) || false))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false))), (! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false)))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, true, false))))))) || ((injectionSwitch.x > injectionSwitch.y))), ! (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)).x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), float(mat4x3(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), abs(0.0), 0.0, 0.0, 1.0, 0.0, 1.0, 1.0))) > injectionSwitch.y)), _GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(true, bool(bvec4(true, false, true, true)))))), false, true)))) && true), (_GLF_IDENTITY(_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true), (_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && _GLF_IDENTITY(true, (true) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) || _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).y)))) || false))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))) || false)), bool(bvec2((! _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))), _GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y)) || _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((injectionSwitch.x > injectionSwitch.y)))))), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(mat4x3(_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(24.14), _GLF_FUZZED(28.25)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))), 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, 1.0, 1.0)))) - vec2(0.0, 0.0)).x > injectionSwitch.y)), (_GLF_IDENTITY(! ((injectionSwitch.x > injectionSwitch.y)), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), true, false, true)))) && true))), bool(bvec3((injectionSwitch.x > injectionSwitch.y), true, false)))), true)))))))))))) || false))))))) || false)) && true))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), _GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (_GLF_IDENTITY(! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true), ! (! (! _GLF_IDENTITY((! (false)), ((! _GLF_IDENTITY((false), (_GLF_IDENTITY((false), ! (! ((false))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) && true))))))))))
    return;
   GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w = subgroup_size;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), ! (! (! (false))))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, float(mat3x2(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), 0.0, 1.0, 0.0, 0.0, 1.0)))) - 0.0)))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(false, false || (false)), true, true)), bool(bvec3(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), true, true)), false, true)))))), true && (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(false, false || (false)), true, true)), bool(bvec3(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), true, true)), false, true)))))), _GLF_IDENTITY(bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(false, false || (false)), true, true)), bool(bvec3(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), true, true)), false, true)))))), false, false, false)), false || (bool(bvec4(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), _GLF_IDENTITY(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(false, false || (false)), true, true)), bool(bvec3(bool(bvec4(bool(bvec3(false, true, true)), _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), false || (false)), true, true)), false, true)))))), false, false, false))))))))
  return;
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.y = num_workgroup;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-4.8)), vec2(_GLF_FUZZED(-4909.1445), (injectionSwitch)[1]), bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false, false || (false)))), _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)) > injectionSwitch.y) && true)), bool(bvec4((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)), true, true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u), min(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u), (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u)) / 1u), _GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u)))) / 1u), max(_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(num_workgroup) : workgroup_size)))), (_GLF_IDENTITY(workgroup_size, min(workgroup_size, workgroup_size))) / 1u), (true ? workgroup_size : _GLF_FUZZED(num_workgroup)))) / 1u)) / 1u), _GLF_IDENTITY(workgroup_size, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(num_workgroup)), ~ (~ ((true ? workgroup_size : _GLF_FUZZED(num_workgroup))))))) / 1u)), ((_GLF_IDENTITY(workgroup_size, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) / 1u), _GLF_IDENTITY((true ? workgroup_size : _GLF_FUZZED(num_workgroup)), ~ (~ ((true ? workgroup_size : _GLF_FUZZED(num_workgroup))))))) / 1u))) >> uint(_GLF_ZERO(0.0, injectionSwitch.x))) / 1u))) * workgroup_id;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uaddCarry(subgroup_size, workgroup_size, subgroup_size)) : workgroup_base)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uaddCarry(subgroup_size, workgroup_size, subgroup_size)) : workgroup_base)), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(uaddCarry(subgroup_size, workgroup_size, subgroup_size)) : workgroup_base))) | 0u) : _GLF_FUZZED(99759u)))) | (workgroup_base)), max(workgroup_base, workgroup_base));
 if(_GLF_DEAD(false))
  return;
 uint subgroup_base = GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.x * GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.2)), bool(false))))), bool(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(4.2)), bool(false))))), false, _GLF_IDENTITY(true, bool(bvec3(true, false, false)))))), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), bvec3(bvec4(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z = subgroup_base;
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_0(bvec3(_GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_IDENTITY(bool(bool(true)), bool(bvec2(bool(bool(true)), false))))))), uvec2(1u), mat3x2(1.0), mat4x2(1.0)), _GLF_struct_2(true, uvec4(1u), _GLF_struct_1(_GLF_IDENTITY(_GLF_IDENTITY(ivec2(1), clamp(ivec2(1), ivec2(1), ivec2(1))), (_GLF_IDENTITY(ivec2(1), ivec2(_GLF_IDENTITY(0, max(0, _GLF_IDENTITY(0, min(0, 0)))), 0) ^ (ivec2(1)))) | (ivec2(1))), GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z + _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y, _GLF_IDENTITY(0u, clamp(0u, 0u, _GLF_IDENTITY(0u, 0u ^ (0u)))) | (GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y)), ivec2(1), mat3x4(1.0), uvec4(1u)), vec3(1.0), mat2(1.0)), ivec3(1));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0))) * vec2(1.0, 1.0)).y))))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), bool(bvec3((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x)))) > injectionSwitch.y), false, false))))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         return;
        }
      }
     if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, false || (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(atan(vec2(7.7, 0.7))) : _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(31.35, 9.2)))))), (_GLF_IDENTITY(injectionSwitch, max(_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(_GLF_IDENTITY(vec2(7.7, 5.2), min(_GLF_IDENTITY(vec2(7.7, 5.2), max(vec2(7.7, 5.2), vec2(7.7, 5.2))), _GLF_IDENTITY(vec2(7.7, 5.2), max(vec2(7.7, 5.2), vec2(7.7, 5.2)))))))), injectionSwitch))) / vec2(1.0, 1.0)).x > injectionSwitch.y))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_IDENTITY(bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false))))))), (bool(_GLF_IDENTITY(bool((! (false))), ! (! (bool((! (false)))))))) || false)))))
      return;
     return;
    }
  }
 uint next_virtual_gid = _GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z + _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, clamp(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, ~ (~ (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size))), GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)).z, 0u ^ (GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.z + GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.z)) + (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base))) << uvec3(0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base))) << uvec3(0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, clamp((_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base))) << uvec3(0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base))) << uvec3(0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, (_GLF_IDENTITY(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, max(GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base, GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base))) << uvec3(0u, 0u, 0u)).y + 1) % GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.w))) ^ 0u));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((injectionSwitch.x > injectionSwitch.y)))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))), true && (_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false))))), true && (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, (false) || false), true, false, false))), true && (_GLF_IDENTITY(false, bool(bvec4(false, true, false, false)))))))) || false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, false, false)))) || false)))
          return;
         return;
        }
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec2(! (false), true), bvec2(bvec2(bvec2(! (false), true))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))), true && (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bool(! (false)))))))), false, true, false)))) && true)))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, false || (false)), true)))))
    return;
  }
 GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x = next_virtual_gid;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 for(int _injected_loop_counter = 1; _GLF_WRAPPED_LOOP(_injected_loop_counter != 0); _injected_loop_counter --)
  {
   if(_GLF_DEAD(false))
    break;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
    continue;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y))))
        break;
       continue;
      }
     return;
    }
   atomicStore(buf[_GLF_struct_replacement_3._f1._f2.virtual_gid], uint(1), 4, 64, 4);
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    break;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))))), bool(_GLF_IDENTITY(bvec2(! (_GLF_DEAD(false)), true), _GLF_IDENTITY(bvec2(bvec4(bvec2(! (_GLF_DEAD(false)), true), false, false)), bvec2(bvec2(bvec2(bvec4(bvec2(! (_GLF_DEAD(false)), true), false, false)))))))))), false, false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-5.6)), float(injectionSwitch.y), bool(true))), _GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(vec3(-27.50, 1775.8193, 5.2).g)))))))), bool(bvec2(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false))))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_IDENTITY((GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y % 2), ((GLF_merged3_0_1_11_1_1_17_2_1_14subgroup_idsubgroup_local_idworkgroup_base.y % 2)) ^ 0u) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   do
    {
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec2(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(true, (_GLF_IDENTITY(true, ! (! (true)))) || false)))))))
      return;
     subgroupAll(true);
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)), false || (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(sinh(injectionSwitch)) : (injectionSwitch))) - sin(vec2(0.0, 0.0))).x, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch), (false ? _GLF_FUZZED(sinh(injectionSwitch)) : (injectionSwitch))) - sin(vec2(0.0, 0.0))).x) - 0.0) > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) || false)))), ! (! (_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! (bool(bool(! (false))))))))), false || (_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(bool(bool(! (false))), ! (! _GLF_IDENTITY((bool(bool(! (false)))), ! (_GLF_IDENTITY(! ((bool(bool(! (false))))), (! ((bool(bool(! (false)))))) || false)))))))))), _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).y), bool(bvec2((injectionSwitch.x > injectionSwitch.y), false)))), (_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.5, -2283.7624)))).x : _GLF_FUZZED(reflect(-7.1, 101.321)))) > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x, (true ? _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(2.5, -2283.7624)))).x : _GLF_FUZZED(reflect(-7.1, 101.321)))) > injectionSwitch.y))))) || false))))))
      {
       if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), true && (_GLF_IDENTITY(bool(bvec3(_GLF_DEAD(false), false, true)), false || (bool(bvec3(_GLF_DEAD(false), false, true))))))))
        return;
       return;
      }
    }
   while(_GLF_WRAPPED_LOOP(false));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(-728.288), _GLF_FUZZED(_GLF_IDENTITY((-6271.0196 - 56.33), (false ? _GLF_FUZZED(0.8) : (-6271.0196 - 56.33))))), bvec2(false, false))).y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(vec3(_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, abs(1.0)), mix(vec3(_GLF_FUZZED(9993.8172), (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, abs(1.0)))[1], (vec3(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), 1.0, abs(1.0)))[2]), vec3((vec3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * abs(vec2(1.0, 1.0))).x) * 1.0), 1.0, abs(1.0)))[0], _GLF_FUZZED(-1.6), _GLF_FUZZED(-5.2)), bvec3(true, false, false))))), 0.0, 1.0))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x], uint(2), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), ! (! (_GLF_IDENTITY(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true, false)))))))))), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY((_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(mat2(1.0) * (injectionSwitch), (mat2(1.0) * (injectionSwitch)) - vec2(0.0, 0.0)))) - abs(vec2(0.0, 0.0))).x, min(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), max(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))), _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))))).x, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x, clamp(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), min((injectionSwitch) - abs(vec2(0.0, 0.0)), _GLF_IDENTITY((injectionSwitch) - abs(vec2(0.0, 0.0)), ((injectionSwitch) - abs(vec2(0.0, 0.0))) - vec2(0.0, 0.0))))).x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) - abs(vec2(0.0, 0.0))).x)))) > injectionSwitch.y))) && true, ! (_GLF_IDENTITY(! ((_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(false))), (injectionSwitch.x > injectionSwitch.y))) && true), _GLF_IDENTITY(true && (! (_GLF_IDENTITY((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true, ! (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), (! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) && true)))), _GLF_IDENTITY(bool(bvec4(! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), (! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)), false || (bool(bvec4(! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))))), (! (_GLF_IDENTITY(true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)), ! (! (true && (! ((_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true))))))) && true)))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, false)))))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, true)))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(injectionSwitch.x > injectionSwitch.y)))))), (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bool(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch), ((false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) * mat2(1.0))).y, (injectionSwitch.x > injectionSwitch.y) && true)), ! (! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && true)))))))))))))) && true))
    return;
   atomicStore(buf[_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, ~ (~ _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x : _GLF_FUZZED(packUnorm4x8(vec4(-6628.7643, -1.8, 62.71, 6.5))))), uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ~ (~ ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)).x, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))))), (false ? _GLF_FUZZED(subgroup_local_id) : _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x : _GLF_FUZZED(packUnorm4x8(vec4(-6628.7643, -1.8, 62.71, 6.5))))), uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ~ (~ ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)).x, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))))), 0u ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x : _GLF_FUZZED(packUnorm4x8(vec4(-6628.7643, -1.8, 62.71, 6.5))))), uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ~ (~ ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)).x, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))))), (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x : _GLF_FUZZED(packUnorm4x8(vec4(-6628.7643, -1.8, 62.71, 6.5))))), uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ~ (~ ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)).x, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u)))))))))))) | (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), 0u | ((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))))), max((_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, (_GLF_IDENTITY(true, false || (true)) ? GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x : _GLF_FUZZED(packUnorm4x8(vec4(-6628.7643, -1.8, 62.71, 6.5))))), uint(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))))))), (_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, uint(uint(_GLF_IDENTITY(_GLF_IDENTITY(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size, _GLF_IDENTITY((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size), ~ (~ ((GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)))) | (GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size)).x, uint(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(_GLF_IDENTITY(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), min(uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u))), uvec3(GLF_merged4_0_1_16_1_1_13_2_1_13_3_1_13next_virtual_gidnum_workgroupsubgroup_basesubgroup_size.x, 1u, 1u)))))))))))))))))))], _GLF_IDENTITY(_GLF_IDENTITY(uint(2), (uint(2)) | (uint(2))), _GLF_IDENTITY(_GLF_IDENTITY(~ (~ (uint(2))), clamp(~ (~ (uint(2))), ~ (~ (uint(2))), ~ (~ (uint(2))))), (~ (~ (uint(2)))) | (_GLF_IDENTITY(~ (~ (uint(2))), uint(uvec2(_GLF_IDENTITY(~ _GLF_IDENTITY((~ (uint(2))), max((~ (uint(2))), (~ (uint(2))))), _GLF_IDENTITY(_GLF_IDENTITY((~ (~ (uint(2)))) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((~ (~ (uint(2)))) / _GLF_IDENTITY(1u, max(1u, 1u)))), (_GLF_IDENTITY((~ (~ (uint(2)))) / 1u, uint(_GLF_ZERO(0.0, injectionSwitch.x)) + ((~ (~ (uint(2)))) / _GLF_IDENTITY(1u, max(1u, 1u))))) << 0u)), 1u)))))), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) || false), true))))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, false))))), bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(dot(vec2(0.0, 0.0), vec2(1.0, 1.0)), dot(vec2(0.0, 0.0), vec2(1.0, 1.0))) + (injectionSwitch.y))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, true))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (_GLF_IDENTITY(bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), (bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - _GLF_ZERO(0.0, injectionSwitch.x)))).y, (true ? _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - _GLF_ZERO(0.0, injectionSwitch.x)))).y, (false ? _GLF_FUZZED(-70.43) : _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], (injectionSwitch[1]) - _GLF_ZERO(0.0, injectionSwitch.x)))).y)) : _GLF_FUZZED(-3368.3049))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), _GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, false, false, true)))) || false)))) && true)) && true))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, _GLF_IDENTITY(bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) + vec2(0.0, 0.0))) - vec2(0.0, 0.0)).y)), false)), ! (! (bool(bvec3(injectionSwitch.x > injectionSwitch.y, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(_GLF_IDENTITY(mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0), (mat2x4(injectionSwitch.y, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 0.0)) - mat2x4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))))), false))))))))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bool(_GLF_IDENTITY(false, ! (! (false)))))), (_GLF_IDENTITY(injectionSwitch.x, float(mat2x3(_GLF_IDENTITY(injectionSwitch.x, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-24.25) : injectionSwitch.x)), cos(0.0), 1.0, 0.0, 1.0, 0.0))) > injectionSwitch.y))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! _GLF_IDENTITY((false), bool(bool((false))))) || false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
