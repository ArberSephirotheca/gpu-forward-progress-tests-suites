#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_19 {
 bool _f0;
 mat4x3 _f1;
 mat3 _f2;
 int _f3;
 mat4 _f4;
} ;

struct _GLF_struct_18 {
 uvec4 _f0;
 vec2 _f1;
 vec4 _f2;
 bvec4 _f3;
 bool _f4;
 ivec2 _f5;
} ;

struct _GLF_struct_20 {
 _GLF_struct_18 _f0;
 bool _f1;
 _GLF_struct_19 _f2;
 ivec4 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_16 {
 mat4 _f0;
 mat2x4 _f1;
 mat4x2 _f2;
 uint subgroup_size;
 uint _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_17 {
 mat2x3 _f0;
 _GLF_struct_16 _f1;
 mat2 _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_15 {
 mat3x4 _f0;
} ;

struct _GLF_struct_13 {
 uint _f0;
 bvec2 _f1;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 bvec2 _f1;
 bvec2 _f2;
} ;

struct _GLF_struct_11 {
 mat2 _f0;
 ivec2 _f1;
 uvec2 _f2;
 mat2x3 _f3;
 mat3x2 _f4;
 int _f5;
} ;

struct _GLF_struct_10 {
 mat4 _f0;
 mat3 _f1;
 vec2 _f2;
 int _f3;
 mat3 _f4;
 mat3x2 _f5;
 int _f6;
} ;

struct _GLF_struct_9 {
 int _f0;
 mat3x4 _f1;
} ;

struct _GLF_struct_14 {
 _GLF_struct_9 _f0;
 bvec4 _f1;
 _GLF_struct_10 _f2;
 _GLF_struct_11 _f3;
 _GLF_struct_12 _f4;
 _GLF_struct_13 _f5;
} ;

struct _GLF_struct_7 {
 mat3x4 _f0;
} ;

struct _GLF_struct_6 {
 vec4 _f0;
} ;

struct _GLF_struct_5 {
 ivec3 _f0;
} ;

struct _GLF_struct_8 {
 ivec2 _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_6 _f2;
 _GLF_struct_7 _f3;
} ;

struct _GLF_struct_21 {
 _GLF_struct_8 _f0;
 bvec3 _f1;
 _GLF_struct_14 _f2;
 mat4 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_17 _f5;
 _GLF_struct_20 _f6;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 bvec2 _f1;
 vec3 _f2;
 mat3x2 _f3;
 mat3x2 _f4;
} ;

struct _GLF_struct_1 {
 mat3x2 _f0;
 uvec4 _f1;
 vec3 _f2;
 mat2x4 _f3;
} ;

struct _GLF_struct_0 {
 float _f0;
 bvec3 _f1;
 uint _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_3 {
 uint workgroup_size;
 _GLF_struct_0 _f0;
 mat2x4 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat2 _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_4 {
 uint _f0;
 mat2 _f1;
 _GLF_struct_3 _f2;
 mat2x3 _f3;
 mat2x3 _f4;
 mat2x3 _f5;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid;
 uvec3 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id;
 uvec2 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, false), bvec2(bvec3(bvec2(false, false), true)))))))
  return;
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x = subgroup_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 _GLF_struct_21 _GLF_struct_replacement_21 = _GLF_struct_21(_GLF_struct_8(ivec2(1), _GLF_struct_5(ivec3(1)), _GLF_struct_6(vec4(1.0)), _GLF_struct_7(mat3x4(1.0))), bvec3(true), _GLF_struct_14(_GLF_struct_9(1, mat3x4(1.0)), bvec4(true), _GLF_struct_10(mat4(1.0), mat3(1.0), vec2(1.0), 1, mat3(1.0), mat3x2(1.0), 1), _GLF_struct_11(mat2(1.0), ivec2(1), uvec2(1u), mat2x3(1.0), mat3x2(1.0), 1), _GLF_struct_12(mat2x3(1.0), bvec2(true), bvec2(true)), _GLF_struct_13(1u, bvec2(true))), mat4(1.0), _GLF_struct_15(mat3x4(1.0)), _GLF_struct_17(mat2x3(1.0), _GLF_struct_16(mat4(1.0), mat2x4(1.0), mat4x2(1.0), gl_SubgroupSize, 1u, mat3x2(1.0)), mat2(1.0), mat4x3(1.0)), _GLF_struct_20(_GLF_struct_18(uvec4(1u), vec2(1.0), vec4(1.0), bvec4(true), true, ivec2(1)), true, _GLF_struct_19(true, mat4x3(1.0), mat3(1.0), 1, mat4(1.0)), ivec4(1), bvec4(true)));
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x = subgroup_local_id;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(1u, mat2(1.0), _GLF_struct_3(gl_WorkGroupSize.x, _GLF_struct_0(1.0, bvec3(true), 1u, mat3x2(1.0)), mat2x4(1.0), _GLF_struct_1(mat3x2(1.0), uvec4(1u), vec3(1.0), mat2x4(1.0)), _GLF_struct_2(vec4(1.0), bvec2(true), vec3(1.0), mat3x2(1.0), mat3x2(1.0)), mat2(1.0), mat2x4(1.0)), mat2x3(1.0), mat2x3(1.0), mat2x3(1.0));
 uint workgroup_id = gl_WorkGroupID.x;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z = workgroup_id;
 uint workgroup_base = _GLF_struct_replacement_4._f2.workgroup_size * GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.z;
 GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y = workgroup_base;
 uint subgroup_base = GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.x * _GLF_struct_replacement_21._f5._f1.subgroup_size;
 uint virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + subgroup_base + GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x;
 GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y = virtual_gid;
 GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y = GLF_merged2_0_1_17_1_1_11subgroup_local_idvirtual_gid.y;
 uint next_virtual_gid = GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.y + subgroup_base + ((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x + 1) % _GLF_struct_replacement_21._f5._f1.subgroup_size);
 atomicStore(buf[GLF_merged2_0_1_11_1_1_11subgroup_idvirtual_gid.y], uint(1), 4, 64, 4);
 if((GLF_merged3_0_1_17_1_1_14_2_1_12subgroup_local_idworkgroup_baseworkgroup_id.x % 2) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
