#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))) || ((injectionSwitch.x > injectionSwitch.y))))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))) - 0.0)), _GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (false))), ! (! (false)))))) || ((injectionSwitch.x > injectionSwitch.y))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true))))
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), bool(bvec4(_GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true)), ! (! (bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), false, false, true))))), false, true, true)))), (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false))) || false))), _GLF_IDENTITY(bool(bvec3(false, true, false)), ! (! _GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false)), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true, false))), (_GLF_IDENTITY((bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false)), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true, false))), true && ((bool(bvec3(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) || _GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec3(injectionSwitch.x > injectionSwitch.y, false, false)))) || false)), bool(bool((injectionSwitch.x > injectionSwitch.y)))))), true, false)))))) || false))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y))))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), bool(bool(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))))) && true))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), bool(_GLF_IDENTITY(bvec3(bool(_GLF_IDENTITY(bvec2(false, false), _GLF_IDENTITY(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, false), false), false)), false))))), bvec2(bvec2(bvec2(_GLF_IDENTITY(bvec3(bvec2(false, false), false), _GLF_IDENTITY(bvec3(bvec4(bvec3(bvec2(false, false), false), false)), bvec3(bvec4(bvec3(bvec4(bvec3(bvec2(false, false), false), false)), false)))))))))), false, true), bvec3(bvec3(bvec3(bool(bvec2(false, false)), false, true)))))))))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), true, _GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), (! (true)) || false))), true)))) && true))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) && true)) && true)))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, false)))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), false, _GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), (! (false)) && true))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec4(injectionSwitch.x > injectionSwitch.y, true, false, false)))))))))
  return;
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   return;
  }
 uint workgroup_id = gl_WorkGroupID.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 uint workgroup_base = workgroup_size * workgroup_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
  return;
 uint subgroup_base = subgroup_id * subgroup_size;
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 uint next_virtual_gid = _GLF_IDENTITY(workgroup_base, _GLF_IDENTITY((workgroup_base) ^ 0u, clamp((workgroup_base) ^ _GLF_IDENTITY(0u, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 0u : _GLF_FUZZED(subgroup_id))), (_GLF_IDENTITY(workgroup_base, (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(true ? workgroup_base : _GLF_FUZZED(subgroup_local_id), (true ? workgroup_base : _GLF_FUZZED(subgroup_local_id)) | 0u)))))) ^ 0u, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_base, 0u ^ (_GLF_IDENTITY(workgroup_base, (_GLF_IDENTITY(workgroup_base, 0u ^ (workgroup_base))) + 0u)))) ^ 0u, 0u + _GLF_IDENTITY(((workgroup_base) ^ 0u), (_GLF_IDENTITY(((workgroup_base) ^ 0u), (((workgroup_base) ^ 0u)) ^ 0u)) >> 0u))))) + subgroup_base + ((subgroup_local_id + 1) % subgroup_size);
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(float(float(injectionSwitch.x)), clamp(_GLF_IDENTITY(float(float(injectionSwitch.x)), min(float(float(injectionSwitch.x)), float(float(injectionSwitch.x)))), float(float(injectionSwitch.x)), _GLF_IDENTITY(float(float(injectionSwitch.x)), (float(float(injectionSwitch.x))) - 0.0)))), min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-5277.7087) : _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)) > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! _GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY(_GLF_IDENTITY((false), ! (! ((false)))), ! (! (_GLF_IDENTITY((false), ! (! ((false))))))))))), bool(bvec4((! _GLF_IDENTITY((false), ! (! ((false))))), true, true, true)))), _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-31.41)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(6607.2752, -4646.7614, 143.840, -1.3, -57.05, -9.8, 7.7, 831.959, -58.31, -6.1, 3.7, -751.625, -2234.4427, 76.64, -5.4, -496.566)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat4(799.415, -3000.2073, -8.9, -4.9, 6.1, 235.179, 1323.6893, -6964.4201, 0.0, -9293.9145, 19.06, 519.236, -0.9, 93.23, 4704.3107, 707.410))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0)))) / 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), float(mat3x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bool(_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-31.41)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(6607.2752, -4646.7614, 143.840, -1.3, -57.05, -9.8, 7.7, 831.959, -58.31, -6.1, 3.7, -751.625, -2234.4427, 76.64, -5.4, -496.566)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat4(799.415, -3000.2073, -8.9, -4.9, 6.1, 235.179, 1323.6893, -6964.4201, 0.0, -9293.9145, 19.06, 519.236, -0.9, 93.23, 4704.3107, 707.410))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0)))) / 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), float(mat3x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), true && (_GLF_IDENTITY((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-31.41)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(6607.2752, -4646.7614, 143.840, -1.3, -57.05, -9.8, 7.7, 831.959, -58.31, -6.1, 3.7, -751.625, -2234.4427, 76.64, -5.4, -496.566)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat4(799.415, -3000.2073, -8.9, -4.9, 6.1, 235.179, 1323.6893, -6964.4201, 0.0, -9293.9145, 19.06, 519.236, -0.9, 93.23, 4704.3107, 707.410))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0)))) / 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), float(mat3x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), bool(bvec3((_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x))) - 0.0), clamp(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-31.41)), bool(false))))), 0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, 0.0 + (1.0))))))), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bool(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (true ? _GLF_IDENTITY(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0), (false ? _GLF_FUZZED(mat4(6607.2752, -4646.7614, 143.840, -1.3, -57.05, -9.8, 7.7, 831.959, -58.31, -6.1, 3.7, -751.625, -2234.4427, 76.64, -5.4, -496.566)) : mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(_GLF_IDENTITY(1.0, clamp(1.0, _GLF_IDENTITY(1.0, (true ? _GLF_IDENTITY(1.0, max(1.0, 1.0)) : _GLF_FUZZED(7.2))), _GLF_IDENTITY(1.0, 0.0 + (1.0))))), _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-288.522)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0))) : _GLF_FUZZED(mat4(799.415, -3000.2073, -8.9, -4.9, 6.1, 235.179, 1323.6893, -6964.4201, 0.0, -9293.9145, 19.06, 519.236, -0.9, 93.23, 4704.3107, 707.410))))), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x))) - 0.0), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x, max(_GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), clamp(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), _GLF_IDENTITY(float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0))), (float(_GLF_IDENTITY(mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0), (mat3x4(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(7902.9554)), bool(false))), 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), 1.0, sin(0.0), length(vec4(0.0, 0.0, 0.0, 0.0)), length(vec3(0.0, 0.0, 0.0)), 1.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0, 0.0)) * mat3(1.0)))) / 1.0)))), 1.0, 0.0, 0.0, 1.0, 1.0)), mix(vec2(_GLF_FUZZED(-2.0), _GLF_FUZZED(-39.40)), vec2((vec2(mat4(injectionSwitch, 0.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[0], (vec2(mat4(injectionSwitch, _GLF_IDENTITY(0.0, float(mat3(0.0, 1.0, 0.0, 1.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, sqrt(1.0)))), 1.0, 1.0, _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(0.0, float(mat4(0.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ZERO(0.0, injectionSwitch.x), tan(0.0), abs(1.0), 1.0, 0.0, 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 0.0))), 1.0), vec3(0.0, 0.0, 1.0)), dot(vec3(0.0, 0.0, 1.0), vec3(0.0, 0.0, 1.0))), _GLF_IDENTITY(sqrt(1.0), clamp(_GLF_IDENTITY(sqrt(1.0), float(mat3x2(sqrt(1.0), 1.0, 1.0, 0.0, 1.0, 0.0))), sqrt(1.0), sqrt(1.0))), 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0)))[1]), bvec2(true, true)))))).x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)), injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y, true))))))), ((injectionSwitch.x > injectionSwitch.y)) || false)), false, true)))))))) && true))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)), false || (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * exp(vec2(0.0, 0.0))).y)), true)), false || (bool(bvec4(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(_GLF_IDENTITY(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y, true, false), bvec3(bvec4(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y, true, false), bvec3(bvec4(bvec3(_GLF_IDENTITY(injectionSwitch, cos(vec2(0.0, 0.0)) * (injectionSwitch)).x > injectionSwitch.y, true, false), true))), false))), _GLF_IDENTITY(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))), bvec3(bvec3(bvec3(bvec3(bvec3(injectionSwitch.x > injectionSwitch.y, true, false))))))))))), true, _GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y)), true)))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 atomicStore(buf[virtual_gid], uint(1), _GLF_IDENTITY(4, 0 ^ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) >> 0))), 1 * (_GLF_IDENTITY(4, int(_GLF_IDENTITY(int(4), (int(4)) >> 0))))), (true ? 4 : _GLF_FUZZED(-91309))))), 64, _GLF_IDENTITY(4, (_GLF_IDENTITY(4, int(ivec2(4, 0)))) / 1));
 if(_GLF_IDENTITY((subgroup_local_id % 2) == 0, ! (! ((subgroup_local_id % 2) == 0))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true)) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, _GLF_IDENTITY((4) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-71567) : 4))), max(_GLF_IDENTITY((4) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(_GLF_IDENTITY(-71567, max(-71567, _GLF_IDENTITY(-71567, ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY(-71567, (-71567) / 1)), (false ? _GLF_FUZZED(-41993) : ~ (_GLF_IDENTITY(-71567, (-71567) / 1))))))))) : 4))), max((4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-71567) : 4)), (false ? _GLF_FUZZED(45881) : _GLF_IDENTITY(4, (false ? _GLF_FUZZED(-71567) : _GLF_IDENTITY(4, (_GLF_IDENTITY(4, ~ (~ (4)))) - 0)))))), (4) | (_GLF_IDENTITY(4, (false ? _GLF_FUZZED(-71567) : 4))))), (4) | (_GLF_IDENTITY(_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-71567), (_GLF_FUZZED(-71567)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : 4)), int(int(_GLF_IDENTITY(4, (false ? _GLF_IDENTITY(_GLF_FUZZED(-71567), (_GLF_FUZZED(-71567)) << int(_GLF_ZERO(0.0, injectionSwitch.x))) : 4))))))))), 64, 4);
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, true, true)), false || (bool(bvec3(false, true, true)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(0.9) : injectionSwitch.x)) > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         return;
        }
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-3915.4762) : _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(exp2(3.6)) : injectionSwitch.y))))))) || false)))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED((_GLF_IDENTITY(_GLF_IDENTITY(22.81, mix(float(22.81), float(_GLF_FUZZED(-0.9)), bool(_GLF_IDENTITY(false, ! (! (false)))))), clamp(22.81, 22.81, 22.81)) - _GLF_IDENTITY(-6.2, _GLF_IDENTITY(float(vec2(-6.2, 1.0)), clamp(float(vec2(-6.2, 1.0)), float(vec2(-6.2, 1.0)), float(vec2(-6.2, 1.0)))))))), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), _GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(3.8)), bool(false)))))) > injectionSwitch.y, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(3.8)), bool(false)))))) > injectionSwitch.y, true && (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(3.8)), bool(false)))))) > injectionSwitch.y, bool(bvec3(_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(min(injectionSwitch.x, injectionSwitch.x), mix(float(min(injectionSwitch.x, injectionSwitch.x)), float(_GLF_FUZZED(3.8)), bool(false)))))) > injectionSwitch.y, false, false))))))))), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(vec2(139.474, 26.20)) : injectionSwitch)).x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), max(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(vec2(139.474, 26.20)) : injectionSwitch)).x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(false, bool(bvec4(false, true, false, true))) ? _GLF_FUZZED(vec2(139.474, 26.20)) : injectionSwitch)).x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), mix(float(_GLF_FUZZED(9.5)), float(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x))), bool(true))))) > injectionSwitch.y)) || false), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))), bool(bvec4(_GLF_IDENTITY(! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, (true ? _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))), float(_GLF_FUZZED(-452.673)), bool(false))) : _GLF_FUZZED(4.0)))), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], (injectionSwitch)[1]), vec2(_GLF_FUZZED(7.1), _GLF_FUZZED(-1.5)), bvec2(false, _GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(bvec4(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))), false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))) / vec2(1.0, 1.0)).x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))) || false), true && ((_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0)))) / vec2(1.0, 1.0)).x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x, float(mat2x4(_GLF_IDENTITY(injectionSwitch, vec2(vec3(injectionSwitch, 0.0))).x, cos(0.0), 1.0, tan(log(1.0)), _GLF_ONE(1.0, injectionSwitch.y), 1.0, 0.0, 1.0)))), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), clamp(_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false), _GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y)), bool(bvec3(_GLF_IDENTITY(true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y)), ! (! (true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch))), (max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))) / vec2(1.0, 1.0))).y))))), false, false))))))))), false || (! (_GLF_IDENTITY(! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7.9)), float(_GLF_IDENTITY(_GLF_IDENTITY(float(injectionSwitch.x), clamp(float(injectionSwitch.x), _GLF_IDENTITY(float(injectionSwitch.x), float(vec2(float(injectionSwitch.x), 0.0))), float(injectionSwitch.x))), (float(injectionSwitch.x)) - length(0.0))), bool(true))), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), float(_GLF_FUZZED(6682.5580)), bool(false))), min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y))))), false || (! (_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5))), mix(float(_GLF_FUZZED(1.8)), float(_GLF_FUZZED(_GLF_IDENTITY(3.5, clamp(3.5, 3.5, 3.5)))), _GLF_IDENTITY(bool(true), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))), ! (! (! (_GLF_IDENTITY(bool(true), ! (! (bool(true))))))))))))), _GLF_IDENTITY(float(injectionSwitch.x), mix(float(_GLF_FUZZED(7.9)), float(float(injectionSwitch.x)), bool(true))), bool(true))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - 0.0))), injectionSwitch.x)), min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch.x, max(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(3.5)), float(injectionSwitch.x), bool(true))), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y)) || false), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, max(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).y)))))))))), false, _GLF_IDENTITY(true, bool(bvec4(_GLF_IDENTITY(true, false || (true)), false, false, true))), false))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! ((injectionSwitch.x > injectionSwitch.y)))))))))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[_GLF_IDENTITY(next_virtual_gid, (next_virtual_gid) << 0u)], _GLF_IDENTITY(uint(_GLF_IDENTITY(2, (2) * 1)), (_GLF_IDENTITY(uint(2), (uint(2)) << 0u)) | (uint(2))), 4, 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false)))), (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, false))))) || false)))))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false)), (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, false, false))) || false))))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(false, true, true, true)))) && _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, false), bvec2(bvec4(bvec2(true, false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))))), (injectionSwitch.x > injectionSwitch.y))))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
