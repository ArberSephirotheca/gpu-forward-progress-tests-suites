#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460
struct _GLF_struct_17 {
 vec2 _f0;
 mat4x2 _f1;
 mat2x4 _f2;
 vec3 _f3;
 uvec4 _f4;
 bvec3 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_16 {
 int _f0;
 mat4x3 _f1;
 mat2 _f2;
 bool _f3;
 vec3 _f4;
 uvec4 _f5;
} ;

struct _GLF_struct_15 {
 mat3x2 _f0;
 bvec4 _f1;
 mat4 _f2;
 uvec2 _f3;
 uvec3 _f4;
 ivec4 _f5;
 bvec3 _f6;
} ;

struct _GLF_struct_14 {
 uint _f0;
 ivec2 _f1;
 int _f2;
} ;

struct _GLF_struct_13 {
 mat2x4 _f0;
 ivec2 _f1;
 ivec2 _f2;
 mat4 _f3;
 uint _f4;
 mat2x4 _f5;
} ;

struct _GLF_struct_18 {
 _GLF_struct_13 _f0;
 _GLF_struct_14 _f1;
 uvec3 _f2;
 vec3 _f3;
 _GLF_struct_15 _f4;
 _GLF_struct_16 _f5;
 _GLF_struct_17 _f6;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 mat4x2 _f1;
 mat2 _f2;
 uint _f3;
 vec2 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_12 {
 mat2x3 _f0;
 mat2x3 _f1;
 vec2 _f2;
 uint _f3;
 _GLF_struct_11 _f4;
 uint _f5;
 mat2x3 _f6;
} ;

struct _GLF_struct_19 {
 uvec2 _f0;
 _GLF_struct_12 _f1;
 _GLF_struct_18 _f2;
 uint workgroup_id;
 bvec2 _f3;
} ;

struct _GLF_struct_8 {
 float _f0;
 float _f1;
 float _f2;
 float _f3;
} ;

struct _GLF_struct_7 {
 bvec3 _f0;
} ;

struct _GLF_struct_9 {
 _GLF_struct_7 _f0;
 float _f1;
 mat2 _f2;
 _GLF_struct_8 _f3;
 mat4 _f4;
} ;

struct _GLF_struct_10 {
 uvec2 GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid;
 _GLF_struct_9 _f0;
 mat3 _f1;
} ;

struct _GLF_struct_5 {
 vec3 _f0;
} ;

struct _GLF_struct_3 {
 ivec4 _f0;
 uint _f1;
 float _f2;
 bvec4 _f3;
 ivec2 _f4;
} ;

struct _GLF_struct_2 {
 mat2x3 _f0;
} ;

struct _GLF_struct_1 {
 uvec2 _f0;
 uvec3 _f1;
 vec3 _f2;
 mat4 _f3;
} ;

struct _GLF_struct_0 {
 int _f0;
} ;

struct _GLF_struct_4 {
 _GLF_struct_0 _f0;
 vec3 _f1;
 float _f2;
 _GLF_struct_1 _f3;
 _GLF_struct_2 _f4;
 _GLF_struct_3 _f5;
} ;

struct _GLF_struct_6 {
 uvec2 GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size;
 int _f0;
 _GLF_struct_4 _f1;
 bvec2 _f2;
 uint _f3;
 mat4x3 _f4;
 ivec4 _f5;
 _GLF_struct_5 _f6;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 uvec2 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base;
 uvec4 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base;
 uvec2 GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.xy = GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_size;
 uvec3 GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base;
 uvec4 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id;
 _GLF_struct_6 _GLF_struct_replacement_6;
 _GLF_struct_10 _GLF_struct_replacement_10;
 uint subgroup_id = gl_SubgroupID;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.z = subgroup_id;
 uint subgroup_size = gl_SubgroupSize;
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.xy.x = subgroup_size;
 _GLF_struct_replacement_10.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x = GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.xy.x;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.y = subgroup_local_id;
 uint num_workgroup = gl_NumWorkGroups.x;
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.z = num_workgroup;
 GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.x = GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.z;
 uint workgroup_size = gl_WorkGroupSize.x;
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.xy.y = workgroup_size;
 _GLF_struct_replacement_6.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y = GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.xy.y;
 _GLF_struct_19 _GLF_struct_replacement_19 = _GLF_struct_19(uvec2(1u), _GLF_struct_12(mat2x3(1.0), mat2x3(1.0), vec2(1.0), 1u, _GLF_struct_11(mat4(1.0), mat4x2(1.0), mat2(1.0), 1u, vec2(1.0), mat3x2(1.0)), 1u, mat2x3(1.0)), _GLF_struct_18(_GLF_struct_13(mat2x4(1.0), ivec2(1), ivec2(1), mat4(1.0), 1u, mat2x4(1.0)), _GLF_struct_14(1u, ivec2(1), 1), uvec3(1u), vec3(1.0), _GLF_struct_15(mat3x2(1.0), bvec4(true), mat4(1.0), uvec2(1u), uvec3(1u), ivec4(1), bvec3(true)), _GLF_struct_16(1, mat4x3(1.0), mat2(1.0), true, vec3(1.0), uvec4(1u)), _GLF_struct_17(vec2(1.0), mat4x2(1.0), mat2x4(1.0), vec3(1.0), uvec4(1u), bvec3(true), mat4x2(1.0))), gl_WorkGroupID.x, bvec2(true));
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.w = _GLF_struct_replacement_19.workgroup_id;
 _GLF_struct_replacement_6.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.w;
 uint workgroup_base = _GLF_struct_replacement_6.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.y * _GLF_struct_replacement_6.GLF_merged2_0_1_12_1_1_14workgroup_idworkgroup_size.x;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y = workgroup_base;
 GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.z = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.y;
 uint subgroup_base = GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.z * _GLF_struct_replacement_10.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x;
 GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.w = subgroup_base;
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.y = GLF_merged3_0_2_52_2_1_13_3_1_13GLF_merged2_0_1_13_1_1_14subgroup_sizeworkgroup_sizenum_workgroupsubgroup_base.w;
 uint virtual_gid = GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.y + GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.y;
 GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x = virtual_gid;
 _GLF_struct_replacement_10.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y = GLF_merged2_0_1_11_1_1_14virtual_gidworkgroup_base.x;
 uint next_virtual_gid = GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.z + GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.y + ((GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.y + 1) % _GLF_struct_replacement_10.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.x);
 GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.x = next_virtual_gid;
 atomicStore(buf[_GLF_struct_replacement_10.GLF_merged2_0_1_13_1_1_11subgroup_sizevirtual_gid.y], uint(1), 4, 64, 4);
 if((GLF_merged3_0_1_13_1_1_17_2_1_14num_workgroupsubgroup_local_idworkgroup_base.y % 2) == 0)
  {
   subgroupAll(true);
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.x], uint(2), 4, 64, 4);
  }
 else
  {
   subgroupAll(false);
   atomicStore(buf[GLF_merged4_0_1_16_1_1_13_2_1_11_3_1_12next_virtual_gidsubgroup_basesubgroup_idworkgroup_id.x], uint(2), 4, 64, 4);
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
