#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y))))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (! (_GLF_FALSE(_GLF_IDENTITY(false, (false) || false), (injectionSwitch.x > injectionSwitch.y))))))))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, _GLF_TRUE(true, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) < injectionSwitch.y), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(-8877.9769)), float(injectionSwitch.x), _GLF_IDENTITY(bool(true), true && (bool(true))))) < injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((injectionSwitch.x < injectionSwitch.y))))))) && _GLF_IDENTITY((false), bool(_GLF_IDENTITY(bool((false)), _GLF_IDENTITY(bool(bvec3(bool((false)), false, true)), bool(bvec4(bool(bvec3(_GLF_IDENTITY(bool((false)), true && (_GLF_IDENTITY(bool((false)), (bool((false))) && true))), false, true)), true, false, false)))))))) && true)))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(false, bool(bool(false)))), ! (! (! (_GLF_IDENTITY(false, bool(bool(false)))))))))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, true, true))), (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY(exp(0.0), float(vec4(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) * 1.0), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0))))) * (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, bool(bvec3(false, _GLF_IDENTITY(true, bool(bool(true))), true))), (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(937.662)), vec2(_GLF_FUZZED(-9.2), (injectionSwitch)[1]), bvec2(false, true))).y)), true))), bool(_GLF_IDENTITY(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(false, ! (! (false)))), bvec2(bvec2(bvec2(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(7.6)), bool(false))), ! (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (_GLF_IDENTITY(! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))))))) || false))), false))))))))
  barrier();
 uint workgroup_size = _GLF_IDENTITY(gl_WorkGroupSize, min(gl_WorkGroupSize, _GLF_IDENTITY(gl_WorkGroupSize, ~ (~ (_GLF_IDENTITY(gl_WorkGroupSize, max(gl_WorkGroupSize, gl_WorkGroupSize))))))).x;
 uint workgroup_id = _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x, clamp(_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x, _GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupID, clamp(_GLF_IDENTITY(gl_WorkGroupID, (_GLF_IDENTITY(gl_WorkGroupID, uvec3(uvec4(gl_WorkGroupID, 0u)))) + uvec3(0u, 0u, 0u)), gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x, (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x) | (_GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x)), _GLF_IDENTITY(gl_WorkGroupID, clamp(gl_WorkGroupID, gl_WorkGroupID, _GLF_IDENTITY(gl_WorkGroupID, (gl_WorkGroupID) / uvec3(1u, 1u, 1u)))).x));
 if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, true && (false))) && true)))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(workgroup_size, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u), (_GLF_IDENTITY(workgroup_size, (workgroup_size) | _GLF_IDENTITY(0u, (0u) | (0u)))) | (_GLF_IDENTITY(workgroup_size, (workgroup_size) | 0u)))))) * workgroup_id;
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)))).x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) * 1.0), max(_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((injectionSwitch.x), float(_GLF_IDENTITY(float((injectionSwitch.x)), max(float((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))), mix(float(_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0)))), float(_GLF_FUZZED(6.2)), bool(false))), 1.0, 0.0, abs(sqrt(1.0)), _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7784.4803)), float(0.0), bool(true))), 0.0, abs(0.0)))))), _GLF_IDENTITY(float((injectionSwitch.x)), (_GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), clamp(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), _GLF_IDENTITY(float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x)), 0.0 + (float((_GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))).x))))))) - 0.0))))) - 0.0), _GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)))) > _GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], (injectionSwitch[0]) - 0.0), injectionSwitch[1]))) / vec2(1.0, 1.0)).y)), true && (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(injectionSwitch))), injectionSwitch)).x > injectionSwitch.y))))) && _GLF_IDENTITY(true, (true) && true))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, (false) && true), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / 1.0), injectionSwitch.y))))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, (false) && true), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) && true), false))))))))), _GLF_IDENTITY(bool(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) && true), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3((_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, _GLF_IDENTITY(true, (true) && true), false))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(false || (false), false || (false || (false))))))), ((_GLF_IDENTITY(false, false || (false)))) && true))) && true))))), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY((false) && true, ! (_GLF_IDENTITY(! ((false) && true), (! ((false) && true)) && true)))), ! _GLF_IDENTITY(_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false)))))))))), false || (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false)))))))))), ! (! ((! (_GLF_IDENTITY(false, false || (_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false), bvec2(bvec2(bvec2(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, bool(bvec4(false, false, true, false)))))), false))))))))))))))), true && (_GLF_IDENTITY((! (_GLF_IDENTITY(false, false || (false)))), ((! _GLF_IDENTITY((_GLF_IDENTITY(false, false || (false))), ((_GLF_IDENTITY(false, false || _GLF_IDENTITY((false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((false)))))) && true))) && true))))), _GLF_IDENTITY(true, (true) && true), false))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 uint virtual_gid = workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 uint next_virtual_gid = workgroup_base + subgroup_base + _GLF_IDENTITY(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0)) * 1)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(subgroup_local_id))), min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u)))), (false ? _GLF_FUZZED(workgroup_id) : ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | 0u, (false ? _GLF_FUZZED(min(workgroup_base, subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(79902u)))) - 0u) | 0u))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))) : _GLF_FUZZED(subgroup_local_id))))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) / 1u) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u)))))), clamp(_GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0)) * 1)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(subgroup_local_id))), min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u)))), (false ? _GLF_FUZZED(workgroup_id) : ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | 0u, (false ? _GLF_FUZZED(min(workgroup_base, subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(79902u)))) - 0u) | 0u))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))) : _GLF_FUZZED(subgroup_local_id))))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) / 1u) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u)))))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0)) * 1)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(subgroup_local_id))), min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u)))), (false ? _GLF_FUZZED(workgroup_id) : ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | 0u, (false ? _GLF_FUZZED(min(workgroup_base, subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(79902u)))) - 0u) | 0u))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))) : _GLF_FUZZED(subgroup_local_id))))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) / 1u) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u)))))), _GLF_IDENTITY(((subgroup_local_id + _GLF_IDENTITY(1, (_GLF_IDENTITY(1, (_GLF_IDENTITY(1, (1) / 1)) >> 0)) * 1)) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, (true ? _GLF_IDENTITY(subgroup_size, (subgroup_size) >> 0u) : _GLF_FUZZED(subgroup_local_id))), min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | _GLF_IDENTITY(0u, uint(uvec3(0u, 1u, 1u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), min(uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))), uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u)))), (false ? _GLF_FUZZED(workgroup_id) : ((subgroup_local_id + 1) % _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, _GLF_IDENTITY(min(subgroup_size, subgroup_size), 0u | (min(subgroup_size, subgroup_size)))), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))) | 0u, ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u)))) - 0u) | 0u, (false ? _GLF_FUZZED(min(workgroup_base, subgroup_size)) : _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) : _GLF_FUZZED(79902u))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (true ? (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))))) : _GLF_FUZZED(79902u)))) - 0u) | 0u))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), _GLF_IDENTITY(uint(1u), (true ? _GLF_IDENTITY(uint(1u), (uint(1u)) | (uint(1u))) : _GLF_FUZZED(subgroup_local_id))))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))), (false ? _GLF_FUZZED(subgroup_local_id) : (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)))))) / 1u) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u), (0u ^ 0u) + (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), _GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u, (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), ((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))) | (_GLF_IDENTITY((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), max((_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - uvec3(0u, 0u, 0u))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u)))))), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, _GLF_IDENTITY(subgroup_size, uint(_GLF_IDENTITY(uvec3(subgroup_size, 1u, 0u), (uvec3(subgroup_size, 1u, 0u)) - _GLF_IDENTITY(uvec3(0u, 0u, 0u), (uvec3(0u, 0u, 0u)) / uvec3(1u, 1u, 1u)))))))) | _GLF_IDENTITY(0u, uint(uvec2(0u, (0u >> _GLF_IDENTITY(uint(2u), uint(2u))))))))))) ^ (0u >> _GLF_IDENTITY(uint(1u), uint(1u))))) >> 0u)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u), 0u + (_GLF_IDENTITY(_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size)), (_GLF_IDENTITY(subgroup_size, min(subgroup_size, subgroup_size))) | 0u)))) - 0u))))))));
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), _GLF_TRUE(true, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x < injectionSwitch.y, false || (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(_GLF_ONE(1.0, injectionSwitch.y))).y)))) && (_GLF_IDENTITY((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), bool(bvec4(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), (_GLF_IDENTITY(false, bool(bool(false)))) && true), false, true, false))), true))), bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false))), bool(bool(false))), true))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))), ((_GLF_IDENTITY(! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)))), (! (_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bvec2(_GLF_IDENTITY(false, bool(bool(false))), true))), bool(bvec4(false, _GLF_IDENTITY(false, ! (! (false))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false))))) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) && true))))))
  barrier();
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y))))
  barrier();
 if((_GLF_IDENTITY(subgroup_local_id % 2, clamp(_GLF_IDENTITY(subgroup_local_id % 2, (false ? _GLF_FUZZED(subgroup_base) : subgroup_local_id % _GLF_IDENTITY(2, clamp(2, 2, 2)))), _GLF_IDENTITY(_GLF_IDENTITY(subgroup_local_id % 2, (subgroup_local_id % 2) | (subgroup_local_id % 2)), (subgroup_local_id % 2) - 0u), subgroup_local_id % 2))) == 0)
  {
   if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bool(false)), ! (! (bool(bool(false)))))), false || (false)), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x > _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) / sqrt(1.0)), _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], clamp(injectionSwitch[_GLF_IDENTITY(1, 0 ^ (1))], injectionSwitch[1], _GLF_IDENTITY(injectionSwitch[1], mix(float(_GLF_FUZZED(vec4(19.63, -9523.2401, 4759.6749, 854.882).t)), float(injectionSwitch[1]), bool(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y))))), float(_GLF_FUZZED(0.4)), bool(false)))))))))))).x > injectionSwitch.y), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || ((_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1]))[0], injectionSwitch[1])), _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)), _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)))))), (vec2(_GLF_IDENTITY(vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), clamp(vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))), vec2((injectionSwitch) + vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))))) * mat2(1.0))))))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch))[1], _GLF_IDENTITY(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), float(vec4(clamp(injectionSwitch[1], injectionSwitch[1], injectionSwitch[1]), _GLF_IDENTITY(dot(vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(717.963)), bool(false))), 0.0), vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(_GLF_ZERO(0.0, injectionSwitch.x), float(mat4(_GLF_ZERO(0.0, injectionSwitch.x), exp(0.0), 0.0, 0.0, 1.0, sqrt(1.0), 0.0, 0.0, 1.0, cos(0.0), 1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0))))), clamp(dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))), dot(vec3(0.0, 1.0, 0.0), vec3(0.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x)))))), 1.0, 0.0)))))).x > injectionSwitch.y))) || false)), bool(bool((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * vec2(1.0, 1.0)).x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) || false))))))))
    barrier();
   subgroupAll(_GLF_IDENTITY(_GLF_IDENTITY(true, (true) && true), false || (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_IDENTITY((true), bool(_GLF_IDENTITY(bvec3((true), true, false), bvec3(bvec3(bvec3((true), true, false)))))) && true), (true) && true))));
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(_GLF_IDENTITY(4, int(ivec4(4, 1, 1, int(_GLF_ONE(1.0, injectionSwitch.y))))), (_GLF_IDENTITY(_GLF_IDENTITY(true ? 4 : _GLF_FUZZED(bitCount(atomicMin(num_workgroup, subgroup_local_id))), _GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[_GLF_IDENTITY(1, (false ? _GLF_FUZZED((-9623 + 5283)) : 1))]), float(_GLF_FUZZED(955.377)), bool(false))))), determinant(mat3(_GLF_ONE(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((2.0 - -1.8)) : _GLF_IDENTITY(1.0, max(1.0, 1.0)))), injectionSwitch.y), 0.0, sin(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))) - 0.0), 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, determinant(_GLF_IDENTITY(mat3(1.0, 1.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 1.0), (true ? mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0) : _GLF_FUZZED(mat3(-8669.6463, 9.0, -2.3, -4.8, -455.948, -74.84, 8.1, -6.5, -3.3))))))), 1.0, 1.0, _GLF_IDENTITY(exp(sqrt(0.0)), min(_GLF_IDENTITY(exp(sqrt(0.0)), (false ? _GLF_FUZZED(0.4) : exp(sqrt(0.0)))), exp(sqrt(0.0)))))), vec2(mat3x4(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(955.377)), bool(false))))), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(_GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(317.420) : 0.0))), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(vec3(0.0, 0.0, 0.0))), 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, exp(sqrt(0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), max(_GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), float(mat2(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))).x)), (_GLF_IDENTITY(int(_GLF_ZERO(0.0, _GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(955.377)), bool(false))))), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 1.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) * 1.0), determinant(mat4(_GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, exp(sqrt(0.0)))), vec2(mat3x4(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(955.377)), bool(false))))), determinant(mat3(_GLF_ONE(1.0, _GLF_IDENTITY(injectionSwitch.y, mix(float(_GLF_FUZZED(-11.67)), float(injectionSwitch.y), bool(true)))), 0.0, sin(0.0), 1.0, 1.0, determinant(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, exp(sqrt(0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(faceforward(7.2, 209.153, 78.54)))))), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)))).x)), (int(_GLF_ZERO(0.0, _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x)) + (injectionSwitch)), _GLF_IDENTITY(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], _GLF_IDENTITY(injectionSwitch[1], mix(float(injectionSwitch[1]), float(_GLF_FUZZED(955.377)), bool(false))))), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 1.0, 0.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x)), (mat3x2(1.0, 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x))) - mat3x2(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, exp(sqrt(0.0)))), _GLF_IDENTITY(vec2(mat3x4(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat3x4(injectionSwitch[1], tan(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), mix(float(injectionSwitch[1]), float(_GLF_FUZZED(955.377)), bool(false))))), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, abs(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(8.4)), float(float(mat2(1.0, abs(0.0), 1.0, 0.0))), bool(true)))), max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), max(vec2(0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), (vec2(0.0, round(length(normalize(1.0))))) * mat2(1.0))))), (float(_GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), max(vec2(0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), (vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1467.3468)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), round(length(normalize(1.0))))) * mat2(1.0)))))) * 1.0)), 0.0)), 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, exp(sqrt(0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0)), (vec2(mat3x4(vec2(mat3x2(_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch))[0], _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch[1], float(mat3x4(injectionSwitch[1], tan(tan(0.0)), 1.0, 1.0, 0.0, 1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0))), mix(float(injectionSwitch[1]), float(_GLF_FUZZED(955.377)), bool(false))))), determinant(mat3(_GLF_ONE(1.0, injectionSwitch.y), 0.0, sin(0.0), 1.0, 1.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(1.0, (1.0) * 1.0), _GLF_IDENTITY(1.0, max(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat2(1.0, abs(0.0), 1.0, 0.0)), mix(float(_GLF_FUZZED(8.4)), float(float(mat2(1.0, abs(0.0), 1.0, 0.0))), bool(true)))), max(1.0, 1.0)), _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 0.0, 0.0, 0.0, 1.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), max(vec2(0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), (vec2(0.0, round(length(normalize(1.0))))) * mat2(1.0))))), (float(_GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), max(vec2(0.0, round(length(normalize(1.0)))), _GLF_IDENTITY(vec2(0.0, round(length(normalize(1.0)))), (vec2(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(1467.3468)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))), round(length(normalize(1.0))))) * mat2(1.0)))))) * 1.0)), 0.0)), 1.0, 0.0, determinant(mat3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0)))), 1.0, 1.0, exp(sqrt(0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(1.0, 0.0, 1.0, 1.0))), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0))) * mat2(1.0)))).x))) >> 0)) ^ _GLF_IDENTITY(0, (0) - 0)) ^ (true ? _GLF_IDENTITY(4, (4) ^ 0) : _GLF_FUZZED(bitCount(atomicMin(num_workgroup, subgroup_local_id))))), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED((true ? 7301 : 11902)) : _GLF_IDENTITY(true ? 4 : _GLF_IDENTITY(_GLF_FUZZED(bitCount(atomicMin(num_workgroup, subgroup_local_id))), (true ? _GLF_FUZZED(bitCount(atomicMin(num_workgroup, subgroup_local_id))) : _GLF_FUZZED(57972))), (false ? _GLF_FUZZED(-82570) : true ? 4 : _GLF_FUZZED(bitCount(atomicMin(num_workgroup, subgroup_local_id))))))))), 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), ! (! (bool(bvec2(false, false))))))), _GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), bool(_GLF_IDENTITY(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true), bvec3(bvec4(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), true, true), false))))))))) && true), false)), true))), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))), false)), ! (_GLF_IDENTITY(! (bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(false, ! (! (false))), true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false)))))), _GLF_IDENTITY(bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)), ! (! (bool(bvec4(bool(_GLF_IDENTITY(bvec2(false, true), bvec2(_GLF_IDENTITY(bvec2(bvec2(false, true)), bvec2(bvec3(bvec2(bvec2(false, true)), false)))))), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false)))))))), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), bool(_GLF_IDENTITY(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (_GLF_IDENTITY(! (! (! (false))), ! (! (! (! (! (false))))))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), ! (! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), bvec3(bvec3(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), ! (_GLF_IDENTITY(! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false))))))))), ! (! (! (! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))))))))), true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))))))), bool(bvec4(! (bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(! (_GLF_IDENTITY(! (false), ! (_GLF_IDENTITY(! (! (false)), ! (! (! (! (false)))))))), false || (! (_GLF_IDENTITY(! (false), _GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), ((false)) || false)) && true), bool(bvec2(bool((_GLF_IDENTITY((false), ((false)) || false)) && true), true))))))), ! (! _GLF_IDENTITY((! (! (false))), false || (_GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))))), ! (! (_GLF_IDENTITY(! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), ((false)) || false)) && true), bool(bvec2(bool((_GLF_IDENTITY((false), ((false)) || false)) && true), true))))))), ! (! _GLF_IDENTITY((! (! (false))), false || (_GLF_IDENTITY((! (! (false))), true && ((! (! (false)))))))))), true && (! (_GLF_IDENTITY(! (! _GLF_IDENTITY((false), _GLF_IDENTITY((_GLF_IDENTITY((false), ((false)) || false)) && true, bool(_GLF_IDENTITY(bool((_GLF_IDENTITY((false), ((false)) || false)) && true), bool(bvec2(bool((_GLF_IDENTITY((false), ((false)) || false)) && true), true))))))), ! (! _GLF_IDENTITY(_GLF_IDENTITY((! (! (false))), bool(bvec2((! (! (false))), false))), false || (_GLF_IDENTITY((! (! (false))), true && ((! (! (false))))))))))))))))))))))), false, true, false))))))))) || _GLF_IDENTITY(false, true && (false))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), _GLF_IDENTITY(false, false || (false)))), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, false || (false)), (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))), (! (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)))) && true))), (_GLF_IDENTITY(_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true)), (_GLF_IDENTITY(true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (true))) || false)) || false))))), false)), true))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (true)))))), false)), true))), false || (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && _GLF_IDENTITY(true, false || (_GLF_IDENTITY(true, _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)) || (true)))))), false)), _GLF_IDENTITY(true, bool(bvec4(true, true, false, true)))))))))), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false))))))))) || _GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), ! (! (_GLF_IDENTITY(_GLF_IDENTITY(false, true && (false)), true && (false)))))), ! (! (_GLF_IDENTITY(bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))), ! (! (_GLF_IDENTITY(! (_GLF_DEAD(false)), _GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), true && (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[_GLF_IDENTITY(0, (true ? 0 : _GLF_FUZZED(36005)))], injectionSwitch[1])))).x > injectionSwitch.y)))), ! (! (bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)), _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).x > injectionSwitch.y))))))), true && (bool(bvec2(! (_GLF_DEAD(false)), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))))))), false)), (_GLF_IDENTITY(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), bool(bvec2(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)), false)), true))), bool(bool(_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! _GLF_IDENTITY((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false)))), _GLF_IDENTITY(false || ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! _GLF_IDENTITY((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), bool(bvec4(! ((_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))), false, false, true))))))), false))))), _GLF_IDENTITY(bool(bvec3(false || ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false || (_GLF_IDENTITY(bool(bvec3(false || ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false)))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), bool(bvec3(bool(bvec3(false || ((! (bool(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)), (_GLF_DEAD(false)) || false)))), false))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false)), false, false)))))))))))) || _GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), ! (! (true && (false)))))))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(false, (false) && true) || (_GLF_IDENTITY(false, ! _GLF_IDENTITY((! (false)), bool(bvec4((! _GLF_IDENTITY((false), ((false)) || false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, true)))))), (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bvec3(true && (false), false, true))))))
      barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - tan(0.0)) > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, ! (! (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), bool(bvec2(_GLF_TRUE(true, (injectionSwitch.x < _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0), (false ? _GLF_FUZZED(mat2(60.94, -472.279, 1849.1828, 3.3)) : mat2(injectionSwitch.y, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0)))), min(float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0), (false ? _GLF_FUZZED(mat2(60.94, -472.279, 1849.1828, 3.3)) : mat2(injectionSwitch.y, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0)))), float(_GLF_IDENTITY(mat2(injectionSwitch.y, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0), (false ? _GLF_FUZZED(mat2(60.94, -472.279, 1849.1828, 3.3)) : mat2(injectionSwitch.y, 0.0, cos(_GLF_ZERO(0.0, injectionSwitch.x)), 1.0))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), true, true)))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 else
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y), ((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - sin(vec2(0.0, 0.0))).x > injectionSwitch.y)) && true))))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_DEAD(false), false, false, true))))
      barrier();
     barrier();
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, (injectionSwitch) - vec2(0.0, 0.0)).x) + 0.0, abs(0.0) + ((_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY((injectionSwitch) - vec2(0.0, 0.0), (false ? _GLF_FUZZED(vec2(34.64, 5952.3291)) : _GLF_IDENTITY((injectionSwitch) - _GLF_IDENTITY(vec2(0.0, 0.0), mix(vec2(_GLF_FUZZED(549.257), (vec2(0.0, 0.0))[1]), vec2((vec2(0.0, 0.0))[0], _GLF_FUZZED(943.920)), bvec2(true, false))), mix(vec2(((injectionSwitch) - vec2(0.0, 0.0))[0], _GLF_FUZZED(-2779.1994)), vec2(_GLF_FUZZED(58.49), ((injectionSwitch) - vec2(0.0, 0.0))[1]), bvec2(false, true)))))).x) + 0.0))) > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (! (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) || false)))), ((injectionSwitch.x > injectionSwitch.y)) || false))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, true, true)))), ! (! (_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))))))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), _GLF_IDENTITY(bool(bvec2(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(bvec2(! (false), true)))))), false)), (_GLF_IDENTITY(bool(bvec2(_GLF_DEAD(false), false)), ! (! (bool(bvec2(_GLF_DEAD(false), false)))))) && true)))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, float(_GLF_IDENTITY(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0), mat2x4(mat3x4(mat2x4(_GLF_IDENTITY(injectionSwitch.x, clamp(injectionSwitch.x, injectionSwitch.x, injectionSwitch.x)), 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, 1.0)))))) > injectionSwitch.y)))))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false || (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), _GLF_IDENTITY(! (! ((injectionSwitch.x > injectionSwitch.y))), ! (! (! (! ((injectionSwitch.x > injectionSwitch.y))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-6.7, -7.2).g)), bool(false)))), false || (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-6.7, -7.2).g)), bool(false)))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(vec2(-6.7, -7.2).g)), bool(false)))))))))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   subgroupAll(false);
   atomicStore(buf[next_virtual_gid], _GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(28813) : 2)), ~ (~ (2)))), (_GLF_IDENTITY(uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(28813) : 2)), ~ (~ (2)))), 0u | (uint(_GLF_IDENTITY(_GLF_IDENTITY(2, (false ? _GLF_FUZZED(28813) : 2)), ~ (~ (2))))))) | (uint(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(2, clamp(_GLF_IDENTITY(2, min(2, 2)), 2, 2)), (2) - int(_GLF_ZERO(0.0, injectionSwitch.x))), (false ? _GLF_FUZZED(28813) : 2)), ~ (~ (2)))))), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (false)), (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
