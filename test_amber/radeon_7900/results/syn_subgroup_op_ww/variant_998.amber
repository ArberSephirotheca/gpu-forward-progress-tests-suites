#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_12 {
 mat4x3 _f0;
 mat4x2 _f1;
} ;

struct _GLF_struct_10 {
 mat2 _f0;
 mat2 _f1;
 mat2 _f2;
 vec4 _f3;
} ;

struct _GLF_struct_11 {
 mat4 _f0;
 vec4 _f1;
 bvec4 _f2;
 _GLF_struct_10 _f3;
} ;

struct _GLF_struct_8 {
 bvec4 _f0;
} ;

struct _GLF_struct_9 {
 ivec2 _f0;
 _GLF_struct_8 _f1;
} ;

struct _GLF_struct_6 {
 bvec3 _f0;
 vec3 _f1;
 uint _f2;
 ivec3 _f3;
 mat4x3 _f4;
 ivec3 _f5;
} ;

struct _GLF_struct_7 {
 _GLF_struct_6 _f0;
} ;

struct _GLF_struct_4 {
 bvec4 _f0;
 vec2 _f1;
 uint _f2;
 mat4x3 _f3;
} ;

struct _GLF_struct_3 {
 float _f0;
 mat4 _f1;
 ivec3 _f2;
} ;

struct _GLF_struct_2 {
 vec4 _f0;
 int _f1;
 vec4 _f2;
 bool _f3;
 uvec4 _f4;
 mat3x2 _f5;
} ;

struct _GLF_struct_1 {
 mat4x3 _f0;
 uvec4 _f1;
 ivec2 _f2;
 mat4 _f3;
 bvec3 _f4;
 bvec4 _f5;
 mat4x2 _f6;
} ;

struct _GLF_struct_0 {
 mat2x4 _f0;
 mat4 _f1;
} ;

struct _GLF_struct_5 {
 _GLF_struct_0 _f0;
 mat2x3 _f1;
 _GLF_struct_1 _f2;
 _GLF_struct_2 _f3;
 mat3 _f4;
 _GLF_struct_3 _f5;
 _GLF_struct_4 _f6;
} ;

struct _GLF_struct_13 {
 int _f0;
 _GLF_struct_5 _f1;
 _GLF_struct_7 _f2;
 _GLF_struct_9 _f3;
 _GLF_struct_11 _f4;
 bvec2 _f5;
 _GLF_struct_12 _f6;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_IDENTITY(_GLF_DEAD(false), true && (_GLF_DEAD(false)))) && true))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, clamp(_GLF_IDENTITY(injectionSwitch.y, clamp(injectionSwitch.y, injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, (injectionSwitch.y) * exp(0.0)), injectionSwitch.y))))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (_GLF_IDENTITY(false, (false) || false)) || false)))), (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x))), float(_GLF_FUZZED(3.1)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))) > injectionSwitch.y)), false || (_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_IDENTITY(injectionSwitch.x, mix(float(_GLF_FUZZED(4.3)), float(_GLF_IDENTITY(injectionSwitch.x, min(_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(-256.720) : injectionSwitch.x)), injectionSwitch.x))), bool(true)))), float(_GLF_FUZZED(39.53)), bool(false))) > injectionSwitch.y))))))
  return;
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), (bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))) && true)))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
    return;
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
  {
   if(_GLF_DEAD(false))
    barrier();
   barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
  }
 uint workgroup_size = gl_WorkGroupSize.x;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(_GLF_IDENTITY(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false)))))), bool(bool(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))))))))))
    barrier();
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), bool(_GLF_IDENTITY(bvec2((injectionSwitch.x > injectionSwitch.y), true), bvec2(bvec4(bvec2((injectionSwitch.x > injectionSwitch.y), true), false, false))))))))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(_GLF_IDENTITY(bvec2(false, true), bvec2(bvec2(bvec2(false, true))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), 1.0)), 0.0, round(length(_GLF_IDENTITY(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec3(_GLF_FUZZED(2.9), (normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[1], _GLF_IDENTITY((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], clamp((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], (normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], _GLF_IDENTITY((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], 0.0 + ((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2]))))), vec3((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(17.47), _GLF_FUZZED(-6.0)), bvec3(true, false, false))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), (_GLF_IDENTITY(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), 1.0)), 0.0, round(length(_GLF_IDENTITY(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec3(_GLF_FUZZED(2.9), (normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[1], _GLF_IDENTITY((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], clamp((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], (normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], _GLF_IDENTITY((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], 0.0 + ((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2]))))), vec3((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(17.47), _GLF_FUZZED(-6.0)), bvec3(true, false, false))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0), mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0) + (mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, _GLF_IDENTITY(cos(0.0), min(cos(0.0), cos(0.0))), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) / round(length(normalize(vec4(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), 1.0)), 0.0, round(length(_GLF_IDENTITY(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), mix(vec3(_GLF_FUZZED(2.9), (normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[1], _GLF_IDENTITY((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], clamp((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], (normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], _GLF_IDENTITY((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2], 0.0 + ((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[2]))))), vec3((normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))[0], _GLF_FUZZED(17.47), _GLF_FUZZED(-6.0)), bvec3(true, false, false))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))) * mat4(1.0)), transpose(transpose(mat4(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)), 0.0, 0.0, 1.0, cos(_GLF_IDENTITY(0.0, (0.0) / 1.0)), 1.0, 0.0, round(length(normalize(vec3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), 1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)))))).x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), bool(_GLF_IDENTITY(bvec3(! (false), true, false), bvec3(bvec3(bvec3(! (false), true, false))))))))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
        }
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))) && true)))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), false, false)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (injectionSwitch.x > injectionSwitch.y) && _GLF_IDENTITY(true, ! (! (true))))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
        {
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
    }
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])).x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), bool(_GLF_IDENTITY(bool(_GLF_DEAD(false)), (bool(_GLF_DEAD(false))) || false))))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      {
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec3(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))))))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (_GLF_IDENTITY(! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), false || (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, _GLF_IDENTITY(injectionSwitch.x, max(injectionSwitch.x, injectionSwitch.x)))) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(false))
      barrier();
    }
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         return;
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, vec2(injectionSwitch[0], injectionSwitch[1])))).y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && true))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), _GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), (_GLF_IDENTITY(bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), false || (bool(bool(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))) || false)))
    return;
   barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! _GLF_IDENTITY((false), ! (! ((false))))))))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
      return;
     barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       barrier();
      }
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 _GLF_struct_13 _GLF_struct_replacement_13 = _GLF_struct_13(1, _GLF_struct_5(_GLF_struct_0(mat2x4(1.0), _GLF_IDENTITY(_GLF_IDENTITY(mat4(1.0), (true ? mat4(1.0) : _GLF_FUZZED(mat4(1.8, 4467.6388, 5.9, -3.5, -47.31, 3.7, -1124.9946, -6.1, -4.6, -8.2, -6380.8449, -5.4, 5.6, -8053.4928, 0.3, -1.5)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(4896.0375, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(_GLF_IDENTITY(4896.0375, float(_GLF_IDENTITY(mat4x3(4896.0375, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0), (mat4x3(4896.0375, round(length(normalize(vec3(1.0, 1.0, 1.0)))), determinant(mat3(1.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)), 1.0, 0.0, 0.0, 1.0, cos(_GLF_IDENTITY(dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, 1.0, 1.0), vec3(0.0, 0.0, 0.0)))), 0.0, 1.0, determinant(mat3(1.0, 1.0, 1.0, 0.0, 1.0, determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 0.0)) + mat4x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), max(4896.0375, 4896.0375)), 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(float(1.0), clamp(float(1.0), float(1.0), float(1.0)))))), vec3(_GLF_IDENTITY(0.0, (0.0) * 1.0), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), clamp(dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(dot(injectionSwitch, vec2(17.20, -0.3))))), 0.0)), dot(vec3(1.0, sqrt(1.0), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), clamp(vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0))), vec3(0.0, 0.0, 0.0), vec3(0.0, 0.0, 0.0)))), dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, 1.0 * (1.0))) / 1.0), 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), float(mat4x2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-1.9)), float(0.0), bool(true))), 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), (float(mat4(_GLF_IDENTITY(4896.0375, max(4896.0375, 4896.0375)), 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), 1.0 * (dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)))), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(804.845)), (false ? _GLF_FUZZED(acosh(-467.902)) : _GLF_IDENTITY((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(804.845)), min((_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(804.845)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(804.845)))))))))), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(24.01) : _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(3935.1305) : 1.0))))), vec3(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 0.0)))), clamp(dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(_GLF_IDENTITY(1.0, float(mat2(1.0, 0.0, 1.0, determinant(mat4(0.0, 0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 0.0, 0.0, 0.0, tan(0.0), 1.0, abs(0.0), 0.0, 0.0))))), float(mat4x3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(90.76))), 1.0))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0)))), float(mat4x2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (0.0) - abs(0.0))), float(_GLF_FUZZED(1581.7811)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))) - _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x4(0.0, 1.0, 1.0, 0.0, 1.0, 1.0, 0.0, 0.0))), 0.0))))), 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(log(1.0), (true ? _GLF_IDENTITY(log(1.0), float(mat2x4(log(1.0), 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, sqrt(0.0)))) : _GLF_FUZZED(length(-6.1)))), 0.0, 1.0))) - 0.0)), -8.7, 717.815, -6.7, 2881.2019, 502.874, -3.0, 831.230, -2448.0165, 62.55, -9.7, 3679.6328, 13.00, -1.6, 719.892, -222.208)) : mat4(1.0), (false ? _GLF_FUZZED(mat4(_GLF_IDENTITY(4896.0375, _GLF_IDENTITY(_GLF_IDENTITY(float(mat4(_GLF_IDENTITY(4896.0375, max(4896.0375, 4896.0375)), 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-34.16)), float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))), bool(true)))))), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-59.38)), bool(false))), sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 0.0, 0.0)), clamp(dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), vec4(1.0, 0.0, 1.0, 0.0)), float(mat4x2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), (float(mat4(_GLF_IDENTITY(4896.0375, max(4896.0375, 4896.0375)), 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, 1.0, 1.0)), vec3(0.0, 0.0, 0.0)))), clamp(dot(vec3(1.0, _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(8.7) : sqrt(1.0))), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))), 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(90.76))), 1.0))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))), (false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? dot(vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(588.100) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(719.074))))), float(mat4x2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))) - 0.0), (false ? _GLF_FUZZED(-18.62) : _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(4896.0375, max(4896.0375, 4896.0375)), 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, min(_GLF_IDENTITY(0.0, float(vec2(0.0, 1.0))), 0.0)), 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, log(1.0), 0.0, _GLF_IDENTITY(0.0, _GLF_IDENTITY(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0))), mix(float(_GLF_FUZZED(-34.16)), float(float(_GLF_IDENTITY(mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)))), cos(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(4940.2318)), float(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0))), bool(true)))), 0.0, _GLF_ONE(1.0, injectionSwitch.y)), (mat2(_GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, clamp(_GLF_IDENTITY(0.0, log(1.0) + (0.0)), 0.0, 0.0)))), cos(0.0), 0.0, _GLF_ONE(1.0, injectionSwitch.y))) / mat2(1.0, 1.0, 1.0, 1.0)))), bool(true)))))), 0.0, _GLF_IDENTITY(dot(vec3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-59.38)), bool(false))), sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, (1.0) / 1.0)), vec3(0.0, 0.0, 0.0)), clamp(dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, _GLF_IDENTITY(sqrt(1.0), (sqrt(1.0)) + 0.0), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(_GLF_IDENTITY(1.0, 0.0 + (1.0)), sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED((-4323.1230 * 2443.4708))), float(0.0), bool(true))))), _GLF_IDENTITY(dot(vec4(0.0, 1.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 1.0), vec4(1.0, 0.0, 1.0, 0.0)), float(mat4x2(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(2538.7766)), float(1.0), bool(true))), 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0)), (float(mat4(_GLF_IDENTITY(4896.0375, max(4896.0375, 4896.0375)), 1.0, determinant(mat4(0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat2x3(1.0, 1.0, 0.0, 1.0, exp(0.0), 0.0)))) * 1.0), mix(float(1.0), float(_GLF_FUZZED(-5.7)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 0.0, 0.0, 0.0, log(1.0), 0.0, 0.0)), 0.0, _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0)), _GLF_IDENTITY(dot(vec3(1.0, sqrt(1.0), 1.0), _GLF_IDENTITY(vec3(0.0, 0.0, 0.0), min(_GLF_IDENTITY(vec3(0.0, 0.0, 0.0), (vec3(0.0, 0.0, 0.0)) * vec3(1.0, _GLF_IDENTITY(1.0, (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? 1.0 : _GLF_FUZZED(6.1))), 1.0)), vec3(0.0, 0.0, 0.0)))), clamp(dot(vec3(1.0, _GLF_IDENTITY(sqrt(1.0), (false ? _GLF_FUZZED(8.7) : sqrt(1.0))), 1.0), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, sqrt(1.0), _GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, float(mat4x3(1.0, _GLF_IDENTITY(dot(vec3(0.0, 0.0, 0.0), vec3(1.0, 1.0, 1.0)), dot(vec3(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(1139.7604))) : _GLF_FUZZED(inversesqrt(-9.0)))), mix(float(_GLF_FUZZED(-0.3)), float(0.0), bool(true))), 0.0), vec3(1.0, 1.0, 1.0))), 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0, 0.0))), _GLF_IDENTITY(1.0, (true ? 1.0 : _GLF_FUZZED(90.76))), 1.0))), vec3(0.0, 0.0, 0.0)), dot(vec3(1.0, sqrt(1.0), 1.0), vec3(0.0, 0.0, 0.0))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), min(dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)))), _GLF_IDENTITY(_GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))), (_GLF_IDENTITY(false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(588.100) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(719.074))), (false ? _GLF_FUZZED(-7.0) : _GLF_IDENTITY(dot(vec4(0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, min(1.0, 1.0))) - 0.0), 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? dot(vec4(0.0, _GLF_IDENTITY(1.0, (1.0) - abs(0.0)), 0.0, 1.0), _GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), vec4(mat4x2(_GLF_IDENTITY(vec4(1.0, 0.0, 1.0, 0.0), clamp(vec4(1.0, 0.0, 1.0, 0.0), vec4(_GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(588.100) : _GLF_IDENTITY(1.0, (1.0) - 0.0))), 0.0, 1.0, 0.0), vec4(1.0, 0.0, 1.0, 0.0))), 1.0, 1.0, 0.0, 1.0)))) : _GLF_FUZZED(719.074)))) - 0.0))), float(mat4x2(dot(vec4(0.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 0.0, 1.0), vec4(1.0, 0.0, 1.0, 0.0)), 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (0.0) - 0.0), 0.0, 1.0, 0.0)))), 1.0, 1.0, 0.0, 1.0, 0.0, log(1.0), 0.0, 1.0))) - 0.0)))), -8.7, 717.815, -6.7, 2881.2019, 502.874, -3.0, 831.230, -2448.0165, 62.55, -9.7, 3679.6328, 13.00, -1.6, 719.892, -222.208)) : mat4(1.0)) - mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0))))), mat2x3(1.0), _GLF_struct_1(mat4x3(_GLF_IDENTITY(1.0, mix(float(1.0), float(_GLF_FUZZED(-1172.7756)), bool(false)))), uvec4(1u), ivec2(1), mat4(1.0), bvec3(true), bvec4(true), mat4x2(1.0)), _GLF_struct_2(vec4(1.0), 1, vec4(1.0), true, uvec4(1u), mat3x2(1.0)), mat3(1.0), _GLF_struct_3(_GLF_IDENTITY(1.0, float(_GLF_IDENTITY(_GLF_IDENTITY(mat3(1.0, determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), _GLF_IDENTITY(0.0, (0.0) * 1.0), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, _GLF_IDENTITY(1.0, max(1.0, 1.0)))), 1.0)), _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))) * 1.0)), bool(true)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))) * 1.0)), bool(true))))), float(_GLF_FUZZED((359.098 + 3.0))), bool(false))), 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, min(0.0, 0.0)), 0.0, 0.0, 1.0, tan(0.0)), _GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), (_GLF_IDENTITY(mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0), _GLF_IDENTITY((false ? _GLF_FUZZED(mat3(3.2, 105.536, -3.0, 71.49, 1029.4498, 7950.3645, 7043.7765, 433.569, 7049.4662)) : mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), mat3(mat4(_GLF_IDENTITY((false ? _GLF_FUZZED(mat3(3.2, 105.536, -3.0, 71.49, 1029.4498, 7950.3645, 7043.7765, 433.569, 7049.4662)) : mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0)), ((false ? _GLF_IDENTITY(_GLF_FUZZED(mat3(3.2, 105.536, -3.0, 71.49, 1029.4498, 7950.3645, 7043.7765, 433.569, 7049.4662)), transpose(_GLF_IDENTITY(transpose(_GLF_FUZZED(mat3(3.2, 105.536, -3.0, 71.49, 1029.4498, 7950.3645, 7043.7765, 433.569, 7049.4662))), (_GLF_IDENTITY(transpose(_GLF_FUZZED(mat3(3.2, 105.536, -3.0, 71.49, 1029.4498, 7950.3645, 7043.7765, 433.569, 7049.4662))), transpose(transpose(transpose(_GLF_FUZZED(mat3(3.2, 105.536, -3.0, 71.49, 1029.4498, 7950.3645, 7043.7765, 433.569, 7049.4662))))))) - mat3(_GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x), _GLF_ZERO(0.0, injectionSwitch.x))))) : mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0))) * mat3(1.0))))))) - mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, (true ? _GLF_IDENTITY(0.0, max(0.0, 0.0)) : _GLF_FUZZED(pow(9482.9853, -8.7)))))) + _GLF_IDENTITY((mat3(1.0, determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0)), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0))), ((mat3(1.0, determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0)))) * mat3(1.0))), (_GLF_IDENTITY(mat3(1.0, determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), _GLF_IDENTITY(min(1.0, 1.0), mix(float(_GLF_FUZZED(-4.1)), float(_GLF_IDENTITY(min(1.0, 1.0), (_GLF_IDENTITY(min(1.0, 1.0), min(min(1.0, 1.0), min(1.0, 1.0)))) * 1.0)), bool(true)))), 0.0, 0.0)), 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, tan(0.0)), mat3(0.0, 0.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_IDENTITY(_GLF_FUZZED(3.3), (_GLF_IDENTITY(_GLF_FUZZED(3.3), (_GLF_FUZZED(3.3)) * _GLF_IDENTITY(dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0)), dot(vec4(1.0, 0.0, 0.0, 0.0), vec4(1.0, 0.0, 0.0, 0.0))))) / 1.0)), bool(false))), 0.0, 0.0, 1.0, 1.0, 1.0), (mat2x3(_GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), float(_GLF_FUZZED(3.3)), bool(false))), 0.0, 0.0, 1.0, 1.0, 1.0)) - mat2x3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0)))), 0.0, 0.0) + (mat3(1.0, determinant(mat3(0.0, determinant(mat2(0.0, 0.0, 0.0, 0.0)), 0.0, 1.0, sqrt(0.0), 0.0, _GLF_IDENTITY(_GLF_IDENTITY(1.0, min(1.0, 1.0)), min(1.0, 1.0)), 0.0, 0.0)), 0.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0, tan(0.0))))) / mat3(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))))), mat4(1.0), ivec3(1)), _GLF_struct_4(bvec4(true), vec2(_GLF_IDENTITY(1.0, max(1.0, 1.0))), 1u, mat4x3(_GLF_IDENTITY(1.0, (1.0) - _GLF_ZERO(0.0, injectionSwitch.x))))), _GLF_struct_7(_GLF_struct_6(bvec3(true), vec3(1.0), 1u, ivec3(1), mat4x3(1.0), ivec3(_GLF_IDENTITY(1, (1) | (_GLF_IDENTITY(1, min(1, 1))))))), _GLF_struct_9(_GLF_IDENTITY(ivec2(_GLF_IDENTITY(1, int(ivec4(1, 1, 1, (1 & 1))))), clamp(ivec2(1), _GLF_IDENTITY(ivec2(1), (false ? _GLF_FUZZED(ivec2(-69939, -81574)) : ivec2(_GLF_IDENTITY(1, min(1, 1))))), _GLF_IDENTITY(ivec2(1), _GLF_IDENTITY(ivec2(ivec3(ivec2(1), (0 << _GLF_IDENTITY(_GLF_IDENTITY(int(3), min(_GLF_IDENTITY(int(3), 0 | (int(3))), _GLF_IDENTITY(int(3), (_GLF_IDENTITY(int(3), 1 * (int(3)))) ^ 0))), int(3))))), (ivec2(ivec3(ivec2(1), (0 << _GLF_IDENTITY(int(3), int(3)))))) / ivec2(1, 1))))), _GLF_struct_8(bvec4(true))), _GLF_struct_11(mat4(1.0), vec4(1.0), bvec4(_GLF_IDENTITY(true, ! (_GLF_IDENTITY(! (true), bool(bvec3(! (true), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))), _GLF_struct_10(mat2(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, 0.0 + _GLF_IDENTITY((1.0), ((1.0)) * 1.0))))), mat2(_GLF_IDENTITY(1.0, float(vec3(1.0, 1.0, _GLF_ZERO(0.0, injectionSwitch.x))))), mat2(1.0), _GLF_IDENTITY(vec4(_GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, float(mat3x2(1.0, 0.0, 0.0, 0.0, 1.0, 1.0)))) - abs(0.0))), min(_GLF_IDENTITY(vec4(1.0), (false ? _GLF_FUZZED(mix(vec4(-6.5, 72.77, 769.810, _GLF_IDENTITY(-439.395, float(mat4(-439.395, 1.0, 1.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0), vec4(0.0, 1.0, 1.0, 0.0)), dot(vec4(1.0, 0.0, _GLF_IDENTITY(dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0)), dot(vec3(1.0, 0.0, 0.0), vec3(0.0, 1.0, 1.0))), 1.0), vec4(0.0, 1.0, 1.0, 0.0))), 1.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0)))), vec4(9.7, 64.67, 5.8, -71.63), bvec4(true, false, true, false))) : vec4(_GLF_IDENTITY(1.0, (1.0) - _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), vec4(1.0))))), bvec2(true), _GLF_struct_12(mat4x3(_GLF_IDENTITY(1.0, max(1.0, 1.0))), mat4x2(1.0)), _GLF_IDENTITY(gl_WorkGroupID.x, clamp(gl_WorkGroupID.x, _GLF_IDENTITY(gl_WorkGroupID.x, (gl_WorkGroupID.x) / 1u), _GLF_IDENTITY(gl_WorkGroupID.x, ~ (~ (gl_WorkGroupID.x))))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint workgroup_base = _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, ~ (_GLF_IDENTITY(_GLF_IDENTITY(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))), uint(uvec3(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))), 1u, 1u))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))), 1u, 1u, 1u), (_GLF_IDENTITY(uvec4(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))), 1u, 1u, 1u), (uvec4(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))), 1u, 1u, 1u)) | (uvec4(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))), 1u, 1u, 1u)))) ^ uvec4(0u, 0u, 0u, 0u))), (uint(uvec4(~ (_GLF_IDENTITY(workgroup_size, (false ? _GLF_FUZZED(workgroup_size) : workgroup_size))), 1u, 1u, 1u))) | 0u)))) * _GLF_struct_replacement_13.workgroup_id, clamp(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY(_GLF_IDENTITY(workgroup_size, (workgroup_size) - 0u) * _GLF_struct_replacement_13.workgroup_id, ~ (_GLF_IDENTITY(~ (workgroup_size * _GLF_struct_replacement_13.workgroup_id), (~ (workgroup_size * _GLF_struct_replacement_13.workgroup_id)) | (~ (workgroup_size * _GLF_struct_replacement_13.workgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (workgroup_size) + _GLF_IDENTITY(0u, (_GLF_IDENTITY(0u, max(0u, 0u))) | (0u))) * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(workgroup_size, (true ? workgroup_size : _GLF_FUZZED((workgroup_size | subgroup_id)))) * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), 0u)))), ((workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id), ((false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)) - 0u)), 0u))))) << 0u)) | 0u) | 0u), max(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_struct_replacement_13.workgroup_id) | 0u), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), 1u * (_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u))), (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), clamp(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), ~ (~ (_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id))))), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), (_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id))) << uint(_GLF_ZERO(0.0, injectionSwitch.x))), _GLF_IDENTITY(max(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)))), _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id))), (max(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)))), _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)))) - 0u)))), 0u)))) | 0u), _GLF_IDENTITY(max(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_struct_replacement_13.workgroup_id) | 0u), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), _GLF_IDENTITY(1u, max(1u, 1u)) * (_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u)), (max(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_struct_replacement_13.workgroup_id) | 0u), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), 1u * (_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u))) | (max(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), min(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), clamp((_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, 0u | (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), (workgroup_size * _GLF_struct_replacement_13.workgroup_id), (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), (workgroup_size * _GLF_struct_replacement_13.workgroup_id))) | 0u), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), 1u * (_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), 0u)))) | 0u), max(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id) | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (0u)), max((workgroup_size * _GLF_struct_replacement_13.workgroup_id) | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (0u)), (workgroup_size * _GLF_struct_replacement_13.workgroup_id) | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(7u))) >> _GLF_IDENTITY(uint(7u), uint(7u))) * (0u))))), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), 1u * _GLF_IDENTITY((_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), min((_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))))) | 0u)))), (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), 0u)))) | 0u), max(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_struct_replacement_13.workgroup_id) | _GLF_IDENTITY(0u, ((_GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (false ? _GLF_FUZZED(subgroup_id) : _GLF_IDENTITY(1u << _GLF_IDENTITY(uint(7u), uint(7u)), (false ? _GLF_FUZZED(96038u) : 1u << _GLF_IDENTITY(uint(7u), _GLF_IDENTITY(uint(7u), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? _GLF_IDENTITY(uint(7u), uint(uvec2(uint(7u), 1u))) : _GLF_FUZZED(clamp(num_workgroup, 153539u, num_workgroup)))))))))) >> _GLF_IDENTITY(_GLF_IDENTITY(uint(7u), (_GLF_IDENTITY(uint(7u), (uint(7u)) | (uint(7u)))) | uint(_GLF_ZERO(0.0, injectionSwitch.x))), uint(7u))) * (_GLF_IDENTITY(0u, 0u | (0u))))), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, ~ (~ (_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, ~ (~ (workgroup_size * _GLF_struct_replacement_13.workgroup_id))))))), 1u * _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), ~ (_GLF_IDENTITY(~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), min((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(subgroup_size)))))), 0u ^ (~ (_GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), min((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))), (true ? (_GLF_IDENTITY(_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), (false ? _GLF_FUZZED(workgroup_size) : (workgroup_size * _GLF_struct_replacement_13.workgroup_id))), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u))))) : _GLF_FUZZED(subgroup_size))))))))))) | 0u)))), 1u * ((_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, uint(uvec2(_GLF_IDENTITY(_GLF_struct_replacement_13.workgroup_id, (false ? _GLF_FUZZED(num_workgroup) : _GLF_struct_replacement_13.workgroup_id)), 0u)))) | 0u), max(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, (workgroup_size * _GLF_struct_replacement_13.workgroup_id) | _GLF_IDENTITY(0u, ((1u << _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, min(7u, _GLF_IDENTITY(7u, max(7u, 7u))))))) >> _GLF_IDENTITY(uint(7u), uint(_GLF_IDENTITY(7u, 1u * (7u))))) * (0u))), _GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_13.workgroup_id, _GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), 1u * (_GLF_IDENTITY((workgroup_size * _GLF_struct_replacement_13.workgroup_id), ((workgroup_size * _GLF_struct_replacement_13.workgroup_id)) << (0u << _GLF_IDENTITY(uint(1u), uint(1u)))))) | 0u))))))) | 0u) ^ 0u)) - uint(_GLF_ZERO(0.0, injectionSwitch.x)))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(false))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_IDENTITY(true, bool(bvec4(true, true, true, true))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, true, false)))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(false))
          barrier();
         return;
         if(_GLF_DEAD(false))
          return;
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      return;
     barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
       if(_GLF_DEAD(false))
        barrier();
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
       if(_GLF_DEAD(false))
        return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     return;
    }
   if(_GLF_DEAD(false))
    barrier();
   barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
  }
 uint subgroup_base = subgroup_id * subgroup_size;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 uint virtual_gid = workgroup_base + _GLF_IDENTITY(subgroup_base, _GLF_IDENTITY(uint(uint(subgroup_base)), (uint(uint(subgroup_base))) - 0u)) + subgroup_local_id;
 uint next_virtual_gid = workgroup_base + subgroup_base + (_GLF_IDENTITY((subgroup_local_id + 1) % subgroup_size, (false ? _GLF_FUZZED(num_workgroup) : (subgroup_local_id + 1) % subgroup_size)));
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) && true))))))
  return;
 atomicStore(buf[virtual_gid], uint(1), 4, 64, 4);
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     barrier();
    }
   return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec2(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false))))))), ! (_GLF_IDENTITY(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec3(! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, clamp(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)), _GLF_IDENTITY(injectionSwitch, (true ? _GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)) : _GLF_FUZZED(vec2(1.1, 5.3)))), injectionSwitch)).y)))), false, true))))))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (false) || false)))
    return;
  }
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
  barrier();
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (_GLF_IDENTITY(! (false), false || (! _GLF_IDENTITY((false), ! (! (_GLF_IDENTITY((false), ((false)) && true))))))))))
    barrier();
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     barrier();
    }
  }
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(true);
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (_GLF_IDENTITY(! (_GLF_DEAD(false)), ! (! (! (_GLF_DEAD(false))))))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     barrier();
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_DEAD(false))
      barrier();
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec3(false, true, false)))) || false)))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          barrier();
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), bool(bvec2(_GLF_IDENTITY(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))), false || (bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true))))))
          {
           if(_GLF_DEAD(false))
            return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            barrier();
           if(_GLF_DEAD(false))
            return;
           return;
          }
         barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          barrier();
         if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
          return;
        }
       if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          return;
         barrier();
         if(_GLF_DEAD(false))
          barrier();
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          barrier();
         return;
        }
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, vec2(_GLF_IDENTITY(injectionSwitch[0], max(injectionSwitch[0], injectionSwitch[0])), injectionSwitch[1])).x > injectionSwitch.y))))
              {
               if(_GLF_DEAD(false))
                barrier();
               return;
              }
             barrier();
            }
           if(_GLF_DEAD(false))
            {
             if(_GLF_DEAD(false))
              return;
             barrier();
            }
           return;
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           if(_GLF_DEAD(false))
            return;
          }
         return;
         if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), false, true, false)))))
          barrier();
        }
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, _GLF_IDENTITY(injectionSwitch, clamp(injectionSwitch, injectionSwitch, injectionSwitch)))).x, float(_GLF_IDENTITY(mat3x2(injectionSwitch.x, 0.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, _GLF_IDENTITY(0.0, (false ? _GLF_FUZZED(sinh(400.798)) : 0.0)), 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0), transpose(transpose(mat3x2(injectionSwitch.x, 0.0, sqrt(0.0), 0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 1.0, tan(0.0), 1.0, 0.0, 1.0, 0.0, 1.0, 1.0)), 1.0)))))) > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        {
         if(_GLF_DEAD(false))
          {
           if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
            return;
           barrier();
          }
         barrier();
        }
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        barrier();
       if(_GLF_DEAD(false))
        return;
       if(_GLF_DEAD(false))
        barrier();
       return;
      }
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(false, (false) && true)))
      barrier();
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), (_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), _GLF_IDENTITY(bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false)), false || (bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, true && (false))), true, false)))))) || false))
      {
       if(_GLF_DEAD(false))
        barrier();
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false), bvec3(bvec3(bvec3(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true, false))))))))
      barrier();
     barrier();
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, mix(float(injectionSwitch.x), _GLF_IDENTITY(float(_GLF_FUZZED(4812.6657)), float(mat4(float(_GLF_FUZZED(4812.6657)), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, abs(1.0), length(vec2(0.0, 0.0)), round(length(normalize(1.0))), 1.0, 0.0, 0.0, 0.0, 0.0, 0.0))), bool(false))) > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      barrier();
     barrier();
    }
   subgroupAll(false);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec3(false, false, false)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    barrier();
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     barrier();
     if(_GLF_DEAD(false))
      barrier();
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true)), (bool(bvec4(false, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true))) || false)))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(false))
        return;
       return;
       if(_GLF_DEAD(false))
        barrier();
      }
     return;
    }
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, mat2(1.0) * (injectionSwitch)).y))))
    barrier();
   if(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, (false) && true)))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      barrier();
     return;
    }
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      barrier();
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec4(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec2(_GLF_DEAD(false), true))), false, _GLF_IDENTITY(true, ! (! (true))), true))))
    barrier();
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && (_GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), false || ((injectionSwitch.x > injectionSwitch.y))))))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    barrier();
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)))))))
      {
       if(_GLF_DEAD(false))
        return;
       barrier();
      }
     barrier();
    }
   if(_GLF_DEAD(false))
    barrier();
   if(_GLF_DEAD(false))
    return;
   barrier();
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  barrier();
 if(_GLF_DEAD(false))
  return;
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
