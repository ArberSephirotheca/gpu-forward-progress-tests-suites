#!amber

DEVICE_FEATURE SubgroupSizeControl.subgroupSizeControl

SET ENGINE_DATA fence_timeout_ms 10000

SHADER compute test GLSL
#version 460

#ifndef REDUCER
#define _GLF_ZERO(X, Y)                   (Y)
#define _GLF_ONE(X, Y)                    (Y)
#define _GLF_FALSE(X, Y)                  (Y)
#define _GLF_TRUE(X, Y)                   (Y)
#define _GLF_IDENTITY(X, Y)               (Y)
#define _GLF_DEAD(X)                      (X)
#define _GLF_FUZZED(X)                    (X)
#define _GLF_WRAPPED_LOOP(X)              X
#define _GLF_WRAPPED_IF_TRUE(X)           X
#define _GLF_WRAPPED_IF_FALSE(X)          X
#define _GLF_SWITCH(X)                    X
#define _GLF_MAKE_IN_BOUNDS_INT(IDX, SZ)  clamp(IDX, 0, SZ - 1)
#define _GLF_MAKE_IN_BOUNDS_UINT(IDX, SZ) clamp(IDX, 0u, SZ - 1u)
#endif


struct _GLF_struct_4 {
 uint workgroup_base;
 bvec2 _f0;
} ;

struct _GLF_struct_1 {
 float _f0;
 uvec2 _f1;
 ivec4 _f2;
 uvec4 _f3;
 bvec4 _f4;
 ivec4 _f5;
 uvec3 _f6;
} ;

struct _GLF_struct_0 {
 mat3x4 _f0;
 uvec4 _f1;
 mat4 _f2;
 uvec3 _f3;
 bvec4 _f4;
} ;

struct _GLF_struct_2 {
 vec3 _f0;
 _GLF_struct_0 _f1;
 _GLF_struct_1 _f2;
 mat3x2 _f3;
} ;

struct _GLF_struct_3 {
 _GLF_struct_2 _f0;
 uint workgroup_id;
} ;

layout(set = 0, binding = 1) uniform buf1 {
 vec2 injectionSwitch;
};
#extension GL_KHR_shader_subgroup_vote : enable
#extension GL_KHR_shader_subgroup_basic : enable
#extension GL_KHR_memory_scope_semantics : enable
#extension GL_EXT_maximal_reconvergence : enable
layout(set = 0, binding = 0) buffer Buf {
 uint buf[];
};
layout(local_size_x = 128, local_size_y = 1, local_size_z = 1) in;
void main()
{
 if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(! (! (_GLF_DEAD(false))), bool(_GLF_IDENTITY(bvec3(! (! (_GLF_DEAD(false))), true, true), bvec3(bvec4(bvec3(! (! (_GLF_DEAD(false))), true, true), true)))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_id = gl_SubgroupID;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3078.3760) : injectionSwitch.y))), true && ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(3078.3760) : injectionSwitch.y))))))))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) || false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, min(injectionSwitch.y, injectionSwitch.y)), injectionSwitch.y))))))
  return;
 if(_GLF_DEAD(false))
  return;
 uint subgroup_size = gl_SubgroupSize;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true && (_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ! (_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, min(injectionSwitch.x, injectionSwitch.x)) > injectionSwitch.y)), ! (! (! _GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), (_GLF_IDENTITY(((injectionSwitch.x > injectionSwitch.y)), ! (! (((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, ! (! (injectionSwitch.x > injectionSwitch.y))))))))) || false)))))))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, ! (! (false))))))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), ((injectionSwitch.x > injectionSwitch.y)) && true))))
    return;
  }
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, _GLF_IDENTITY(_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y))), ! (! ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, false || (injectionSwitch.x > injectionSwitch.y)))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(3.7)), bool(false))), float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(-0.2))), injectionSwitch.y)), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, vec2(vec2(injectionSwitch))).y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y)))), mix(float(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, max(injectionSwitch, injectionSwitch)).y, max(injectionSwitch.y, injectionSwitch.y)), 0.0 + (_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, _GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch)).y))))), float(_GLF_FUZZED(-19.24)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, _GLF_IDENTITY(1.0, min(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-6682.4911) : 1.0))))))))), _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))), clamp(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))), max(_GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))), _GLF_IDENTITY(injectionSwitch.y, min(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), _GLF_IDENTITY(injectionSwitch.y, float(mat2(injectionSwitch.y, 0.0, 1.0, 1.0))))))))), 1.0, 1.0, 0.0, 0.0, 1.0)))))))), bool(bvec4(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch, mix(vec2((injectionSwitch)[0], _GLF_FUZZED(-68.37)), vec2(_GLF_FUZZED(-9.1), (injectionSwitch)[1]), bvec2(false, _GLF_TRUE(true, _GLF_IDENTITY((injectionSwitch.x < injectionSwitch.y), ! (! ((injectionSwitch.x < injectionSwitch.y)))))))).x > _GLF_IDENTITY(injectionSwitch.y, float(mat4x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), float(mat4x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(_GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)))))), (true ? _GLF_IDENTITY(vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)))), mat2(_GLF_ONE(1.0, injectionSwitch.y)) * (vec2(mat4x2(injectionSwitch, 1.0, 1.0, 0.0, 1.0, 0.0, determinant(mat3(0.0, 1.0, 1.0, 0.0, determinant(mat4(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, 0.0 + (_GLF_IDENTITY(0.0, min(0.0, 0.0)))), 0.0, 0.0, 0.0)), 1.0, 0.0, 0.0, 0.0)))))) : _GLF_FUZZED(injectionSwitch)))).y, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x2(0.0, 0.0, 0.0, 1.0, 1.0, sin(0.0)))), 0.0, 0.0))), 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 0.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), clamp(float(mat3(1.0, 0.0, abs(abs(0.0)), 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(_GLF_IDENTITY(0.0, 0.0 + (0.0)), 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, max(0.0, 0.0))))))), float(mat3(1.0, 0.0, abs(abs(0.0)), 0.0, 1.0, _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, (0.0) / 1.0))), 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))))), float(mat3(1.0, 0.0, _GLF_IDENTITY(abs(abs(0.0)), (abs(abs(0.0))) - 0.0), 0.0, 1.0, 0.0, 0.0, abs(0.0), _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)))))))), abs(_GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), _GLF_IDENTITY(exp(0.0), float(mat3x4(_GLF_IDENTITY(exp(0.0), clamp(_GLF_IDENTITY(exp(0.0), (exp(0.0)) * _GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(-1.0)), float(_GLF_IDENTITY(1.0, (1.0) * 1.0)), bool(true)))), exp(0.0), exp(0.0))), 0.0, 1.0, 1.0, _GLF_IDENTITY(0.0, float(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(0.0, cos(0.0) * (0.0)), (_GLF_IDENTITY(false, (false) || false) ? _GLF_FUZZED(8914.6148) : 0.0)), determinant(mat4(1.0, 0.0, 1.0, length(vec4(0.0, 0.0, 0.0, 0.0)), _GLF_IDENTITY(0.0, (0.0) / 1.0), 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 0.0, log(1.0), 1.0)), sqrt(1.0), 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, _GLF_IDENTITY(1.0, float(_GLF_IDENTITY(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), 1.0 * (_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))))), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4304.2398)))), float(_GLF_FUZZED(8.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0))), transpose(transpose(mat4(1.0, 1.0, 1.0, 0.0, 1.0, 0.0, 0.0, 0.0, abs(1.0), 0.0, 0.0, 0.0, _GLF_IDENTITY(sin(0.0), 1.0 * (_GLF_IDENTITY(sin(0.0), clamp(sin(0.0), sin(0.0), sin(0.0))))), 1.0, _GLF_IDENTITY(0.0, 0.0 + (0.0)), determinant(mat4(1.0, 0.0, 1.0, 0.0, 0.0, round(length(normalize(vec2(1.0, 1.0)))), abs(0.0), 1.0, 0.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0)), dot(vec4(0.0, 1.0, 0.0, 0.0), vec4(0.0, 1.0, 0.0, 0.0))), 0.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(mat2x3(0.0, 1.0, 0.0, 0.0, 0.0, 0.0))), 0.0)), 0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(4304.2398)))), float(_GLF_FUZZED(8.6)), bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), 1.0)))))))), 0.0))), 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(0.0, mix(float(_GLF_IDENTITY(0.0, _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), (true ? _GLF_IDENTITY(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), clamp(float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)), float(mat4(_GLF_IDENTITY(0.0, min(0.0, 0.0)), 1.0, 1.0, 1.0, tan(0.0), 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0, 0.0, 1.0, 1.0, 0.0)))) : _GLF_FUZZED(-833.806))))), float(_GLF_FUZZED(996.810)), bool(false))), _GLF_IDENTITY(1.0, float(mat3x4(_GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), 0.0, 1.0, 1.0, abs(0.0), 0.0, 1.0, _GLF_IDENTITY(1.0, determinant(mat2(1.0, 0.0, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0))) + length(vec4(0.0, 0.0, 0.0, 0.0))), _GLF_IDENTITY(dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 0.0, 0.0, 1.0), vec4(0.0, 0.0, 0.0, 1.0))))) * (1.0)), 0.0, round(length(normalize(vec3(1.0, 1.0, 1.0)))), 0.0, 0.0)))))))), exp(0.0), _GLF_IDENTITY(exp(0.0), clamp(exp(0.0), exp(0.0), exp(0.0)))))), 1.0, 0.0)))), ! _GLF_IDENTITY((_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), min(_GLF_IDENTITY(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), max(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), _GLF_IDENTITY(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0))), mix(float(min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), float(_GLF_FUZZED(-6595.8575)), bool(false))))), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 1.0)), (true ? float(vec2(_GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), min(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))), 1.0)) : _GLF_FUZZED(-2.0)))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), max(_GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, max(0.0, 0.0)))))), 0.0, 1.0)), exp(0.0) * (float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).y) / 1.0), 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, mix(float(0.0), float(_GLF_FUZZED(-6632.7630)), bool(false))), 0.0)), 0.0, 1.0))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, determinant(mat4(1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0)) * (0.0)), 0.0)), 0.0, 1.0))))))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) ? _GLF_FUZZED(-5.5) : 1.0)))), _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, float(mat3x4(0.0, 1.0, determinant(mat4(1.0, 0.0, 0.0, _GLF_IDENTITY(1.0, 1.0 * (1.0)), 0.0, 1.0, 1.0, 1.0, 0.0, 0.0, 1.0, 0.0, _GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), 0.0, 0.0, 1.0)), 1.0, _GLF_IDENTITY(0.0, float(vec2(0.0, _GLF_ZERO(0.0, injectionSwitch.x)))), 1.0, abs(0.0), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0))), 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, _GLF_IDENTITY(1.0, (1.0) / 1.0))), exp(0.0) * (_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))))))), false, false, false))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, (false ? _GLF_FUZZED(1.8) : injectionSwitch.x)) > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), (true ? float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)) : _GLF_FUZZED(-390.353))), _GLF_IDENTITY(exp(0.0), (exp(0.0)) / 1.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))))), bool(bvec4(! ((_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))), ! (! (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(float(true))), float(_GLF_IDENTITY(0.0, 1.0 * (0.0))), bool(true))), min(0.0, 0.0)), 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))))))))))), _GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, bool(bool(false))), true, false, false))), _GLF_IDENTITY(false, true && (false)), false))), true, false))), false || (! (bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED((-4261.5129)) : 1.0)), 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), (true ? _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(46.22)), float(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))), bool(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec3(2524.1881, -89.64, -0.1).z))), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))))), (true ? _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, _GLF_IDENTITY(1.0, (_GLF_IDENTITY(false, false || (false)) ? _GLF_FUZZED((-4261.5129)) : 1.0)), 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(-7.4)), float(_GLF_IDENTITY(0.0, min(0.0, 0.0))), bool(true))))), _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), (true ? _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), mix(float(_GLF_FUZZED(46.22)), float(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))), bool(_GLF_TRUE(_GLF_IDENTITY(true, true && (_GLF_IDENTITY(true, bool(bvec4(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), (injectionSwitch.x < injectionSwitch.y))))) : _GLF_FUZZED(vec3(2524.1881, -89.64, -0.1).z))), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))))) : _GLF_FUZZED(-271.313)))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(-97.04)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 1.0)), (_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(-97.04)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(-97.04)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), mix(float(_GLF_FUZZED(-97.04)), float(_GLF_IDENTITY(0.0, max(0.0, 0.0))), bool(true))), 0.0, 1.0))))) - 0.0), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, min(0.0, 0.0)), _GLF_IDENTITY(0.0, (_GLF_IDENTITY(0.0, max(0.0, 0.0))) / 1.0))), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))))), false, false, false))), true, false))))))))), true && ((_GLF_IDENTITY(! ((_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, 0.0 + (injectionSwitch.x)))) > _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, min(0.0, 0.0)), max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (_GLF_IDENTITY(injectionSwitch, vec2(1.0, 1.0) * (injectionSwitch))) - vec2(0.0, 0.0)).y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, max(0.0, 0.0)), (_GLF_IDENTITY(0.0, max(0.0, 0.0))) + sin(0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(! (_GLF_IDENTITY((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(26.57, -4935.8577).y)), float(0.0), bool(true))), 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0))))))), ! (! ((injectionSwitch.x > _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) * mat2(1.0)).y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), _GLF_IDENTITY(0.0, mix(float(_GLF_FUZZED(vec2(26.57, -4935.8577).y)), float(0.0), bool(true))), 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))), float(_GLF_IDENTITY(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))), 0.0, 0.0, _GLF_ONE(1.0, injectionSwitch.y), 0.0, 1.0, 0.0, 1.0, 0.0), transpose(transpose(mat3(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), max(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)))), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))), 0.0, 0.0, _GLF_IDENTITY(_GLF_ONE(1.0, injectionSwitch.y), max(_GLF_ONE(1.0, injectionSwitch.y), _GLF_ONE(1.0, injectionSwitch.y))), 0.0, 1.0, 0.0, 1.0, 0.0))))))))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, _GLF_IDENTITY(vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(1.0, 1.0) * (vec2(injectionSwitch)))), vec2(mat3(vec2(_GLF_IDENTITY(vec2(injectionSwitch), vec2(1.0, 1.0) * (vec2(injectionSwitch)))), 0.0, 1.0, 0.0, _GLF_ZERO(0.0, injectionSwitch.x), 1.0, 0.0, 1.0)))).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)), (true ? _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)) : _GLF_FUZZED(-62.13))), 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))))), false, false, false))), true, false)), ! (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(_GLF_IDENTITY(injectionSwitch, (injectionSwitch) / vec2(1.0, 1.0)).y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), clamp(float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), float(mat3x2(injectionSwitch.y, 1.0, _GLF_IDENTITY(1.0, max(1.0, _GLF_IDENTITY(1.0, float(vec2(_GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)), 1.0))))), _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, clamp(0.0, 0.0, 0.0)), max(0.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), (_GLF_IDENTITY(0.0, (0.0) + 0.0)) / determinant(mat4(1.0, 0.0, 0.0, length(vec3(0.0, 0.0, 0.0)), 0.0, 1.0, 1.0, 0.0, 0.0, tan(0.0), 1.0, 0.0, _GLF_IDENTITY(dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0)), dot(vec4(0.0, 1.0, 1.0, 0.0), vec4(1.0, 0.0, 0.0, 1.0))), 0.0, 0.0, 1.0))))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, (true ? 0.0 : _GLF_FUZZED(-461.053))), 0.0)), 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0))))))))), false, false, false))), true, false))), false || (_GLF_IDENTITY(! (bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)) : _GLF_FUZZED(mix(524.589, -2418.1670, 124.510)))), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), max(0.0, 0.0)), 0.0, 1.0))))))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), 0.0)), 0.0, 1.0))))))))), false, false, false))), true, false))), ! (! (! (bool(bvec3(_GLF_IDENTITY(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(_GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) ? float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)) : _GLF_FUZZED(mix(524.589, -2418.1670, 124.510)))), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(_GLF_IDENTITY(0.0, (0.0) + 0.0), max(0.0, 0.0)), 0.0, 1.0))))))))), bool(bvec4(! ((injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, _GLF_IDENTITY(0.0, (0.0) + 0.0))), 0.0, 1.0)), min(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), _GLF_IDENTITY(float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(0.0, 0.0)), 0.0, 1.0)), exp(0.0) * (float(mat3x2(injectionSwitch.y, 1.0, 1.0, _GLF_IDENTITY(0.0, max(_GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), clamp(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), _GLF_IDENTITY(_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))), (_GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0))))))) / abs(1.0)), _GLF_IDENTITY(0.0, float(_GLF_IDENTITY(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0), transpose(transpose(mat3x4(0.0, sin(abs(0.0)), _GLF_IDENTITY(dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0)), dot(vec3(0.0, 1.0, 0.0), vec3(sin(0.0), 1.0, 0.0))), determinant(mat3(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1.0, 1.0, 0.0)), 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 0.0, 1.0)))))))), 0.0)), 0.0, 1.0))))))))), false, false, false))), true, false)))))))))))))))), true, _GLF_TRUE(_GLF_IDENTITY(true, _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch, mix(vec2(_GLF_FUZZED(7472.5922), _GLF_FUZZED(-2343.3211)), vec2((injectionSwitch)[0], (injectionSwitch)[1]), bvec2(true, true))).x < _GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))) + 0.0)), 1.0 * (_GLF_IDENTITY(injectionSwitch.y, _GLF_IDENTITY((injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, 0.0)), ((injectionSwitch.y) - _GLF_IDENTITY(0.0, min(0.0, _GLF_IDENTITY(0.0, float(vec2(0.0, 0.0)))))) + 0.0)))))) && (_GLF_IDENTITY(true, bool(_GLF_IDENTITY(bool(true), ! (! (bool(true)))))))), (injectionSwitch.x < injectionSwitch.y)), false)))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 if(_GLF_IDENTITY(_GLF_DEAD(false), ! _GLF_IDENTITY((! _GLF_IDENTITY((_GLF_DEAD(false)), _GLF_IDENTITY(((_GLF_DEAD(false))) || false, (((_GLF_DEAD(false))) || false) || false))), ! (! ((! _GLF_IDENTITY((_GLF_DEAD(false)), ((_GLF_DEAD(false))) || false)))))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 uint subgroup_local_id = gl_SubgroupInvocationID;
 uint num_workgroup = gl_NumWorkGroups.x;
 uint workgroup_size = _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), 0u + (gl_WorkGroupSize.x)), min(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), 0u + (gl_WorkGroupSize.x)), _GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), 0u + (gl_WorkGroupSize.x)), 0u | (_GLF_IDENTITY(_GLF_IDENTITY(gl_WorkGroupSize.x, 0u ^ (gl_WorkGroupSize.x)), 0u + (gl_WorkGroupSize.x))))));
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (_GLF_IDENTITY(false, (false) || false)))))))) || _GLF_IDENTITY(false, bool(bvec4(false, false, false, false)))))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, false || (false))))), (_GLF_DEAD(_GLF_IDENTITY(false, true && (_GLF_IDENTITY(false, _GLF_IDENTITY(false || (false), bool(bvec3(false || (false), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))))) && true))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), _GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false))))))), ! (_GLF_IDENTITY(! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false)))))))) && true)), (! (_GLF_IDENTITY(bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false))))))), (bool(_GLF_IDENTITY(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_IDENTITY(false, _GLF_IDENTITY(bool(bvec2(false, false)), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (bool(bvec2(false, false))))) || (_GLF_DEAD(_GLF_IDENTITY(false, _GLF_IDENTITY(! (! (false)), false || (! (! (false)))))))), true), bvec2(_GLF_IDENTITY(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false), bvec3(bvec3(bvec3(bvec2(_GLF_IDENTITY(_GLF_DEAD(false), false || (_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))), true), false)))))))) && true))) || false)))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, _GLF_IDENTITY(true && (false), bool(bool(_GLF_IDENTITY(true && (false), bool(bool(true && (false)))))))), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))), _GLF_IDENTITY(bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)))))))), (bool(bool(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))), ! (! (_GLF_DEAD(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y))))))))) || _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))
    return;
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), ! (! (_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_IDENTITY(_GLF_DEAD(false), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)) || (_GLF_DEAD(false))))
    return;
   return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
  }
 _GLF_struct_3 _GLF_struct_replacement_3 = _GLF_struct_3(_GLF_struct_2(vec3(_GLF_IDENTITY(_GLF_IDENTITY(1.0, (1.0) - abs(0.0)), mix(float(_GLF_FUZZED(-5644.7736)), float(_GLF_IDENTITY(1.0, clamp(_GLF_IDENTITY(1.0, mix(float(_GLF_FUZZED(52.50)), float(1.0), bool(true))), 1.0, 1.0))), bool(true)))), _GLF_struct_0(mat3x4(_GLF_IDENTITY(_GLF_IDENTITY(1.0, _GLF_IDENTITY((false ? _GLF_FUZZED(-33.65) : 1.0), float(mat2((false ? _GLF_IDENTITY(_GLF_FUZZED(-33.65), (_GLF_IDENTITY(_GLF_FUZZED(-33.65), clamp(_GLF_FUZZED(-33.65), _GLF_FUZZED(-33.65), _GLF_FUZZED(-33.65)))) + 0.0) : 1.0), 1.0, 0.0, 0.0)))), (true ? _GLF_IDENTITY(1.0, (false ? _GLF_FUZZED(-33.65) : 1.0)) : _GLF_IDENTITY(_GLF_FUZZED(_GLF_IDENTITY(0.2, clamp(_GLF_IDENTITY(0.2, min(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_IDENTITY(0.2, 1.0 * (0.2)), (_GLF_IDENTITY(0.2, 1.0 * (0.2))) / abs(1.0)), clamp(_GLF_IDENTITY(_GLF_IDENTITY(0.2, 1.0 * (0.2)), (_GLF_IDENTITY(0.2, 1.0 * (0.2))) / abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.2, 1.0 * (0.2)), (_GLF_IDENTITY(0.2, 1.0 * (0.2))) / abs(1.0)), _GLF_IDENTITY(_GLF_IDENTITY(0.2, 1.0 * (0.2)), (_GLF_IDENTITY(0.2, 1.0 * (0.2))) / abs(1.0)))), 0.2)), 0.2, _GLF_IDENTITY(0.2, (false ? _GLF_FUZZED(57.03) : _GLF_IDENTITY(_GLF_IDENTITY(0.2, 1.0 * (0.2)), (true ? 0.2 : _GLF_IDENTITY(_GLF_FUZZED(6.3), max(_GLF_FUZZED(6.3), _GLF_IDENTITY(_GLF_FUZZED(6.3), 0.0 + (_GLF_FUZZED(6.3)))))))))))), mix(float(_GLF_FUZZED(_GLF_IDENTITY(0.2, clamp(_GLF_IDENTITY(0.2, min(_GLF_IDENTITY(_GLF_IDENTITY(0.2, 1.0 * (0.2)), (_GLF_IDENTITY(_GLF_IDENTITY(0.2, 1.0 * (0.2)), min(_GLF_IDENTITY(0.2, 1.0 * (0.2)), _GLF_IDENTITY(0.2, 1.0 * (0.2))))) / abs(_GLF_IDENTITY(1.0, min(1.0, _GLF_IDENTITY(1.0, clamp(1.0, 1.0, 1.0)))))), 0.2)), 0.2, _GLF_IDENTITY(0.2, (false ? _GLF_FUZZED(57.03) : _GLF_IDENTITY(0.2, (true ? 0.2 : _GLF_FUZZED(6.3))))))))), float(_GLF_FUZZED(8.0)), bool(false)))))), uvec4(_GLF_IDENTITY(1u, max(1u, _GLF_IDENTITY(1u, min(1u, 1u))))), _GLF_IDENTITY(mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(84.57)), min(float(_GLF_FUZZED(84.57)), float(_GLF_FUZZED(84.57)))), float(0.0), bool(true))), 1.0, 1.0, 1.0, 1.0)), max(_GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), min(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), (float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))))) / 1.0))), float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))), (true ? mat4(_GLF_IDENTITY(1.0, _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, _GLF_IDENTITY(0.0, mix(_GLF_IDENTITY(float(_GLF_FUZZED(84.57)), min(float(_GLF_FUZZED(84.57)), float(_GLF_FUZZED(84.57)))), float(0.0), bool(true))), 1.0, 1.0, 1.0, 1.0)), max(_GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), min(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), _GLF_IDENTITY(float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0))))), (float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, _GLF_IDENTITY(1.0, float(mat2(1.0, 1.0, 1.0, 1.0)))))) / 1.0))), float(mat3(1.0, 1.0, 0.0, 0.0, 0.0, 1.0, 1.0, 1.0, 1.0)))))) : _GLF_FUZZED(mat4(-7.6, 947.022, 63.16, 2.8, 1080.7581, -97.69, -322.551, -50.66, -25.60, -1439.1001, 99.65, 1598.3603, 42.63, -5.4, 8800.0143, 9.2)))), _GLF_IDENTITY(_GLF_IDENTITY(uvec3(1u), _GLF_IDENTITY(max(uvec3(1u), uvec3(1u)), max(max(uvec3(1u), uvec3(1u)), max(uvec3(1u), uvec3(1u))))), uvec3(0u, 0u, _GLF_IDENTITY(0u, ~ (_GLF_IDENTITY(~ (0u), _GLF_IDENTITY((~ (0u)) - 0u, ~ (~ ((~ (0u)) - 0u))))))) | (uvec3(1u))), bvec4(true)), _GLF_struct_1(1.0, uvec2(1u), ivec4(1), uvec4(1u), bvec4(_GLF_IDENTITY(true, ! (! (_GLF_IDENTITY(_GLF_IDENTITY(true, bool(bvec4(true, false, true, true))), bool(bvec2(true, true))))))), ivec4(1), uvec3(1u)), mat3x2(1.0)), gl_WorkGroupID.x);
 _GLF_struct_4 _GLF_struct_replacement_4 = _GLF_struct_4(_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3.workgroup_id, (_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3.workgroup_id, max(workgroup_size * _GLF_struct_replacement_3.workgroup_id, workgroup_size * _GLF_struct_replacement_3.workgroup_id))) | (0u & 15107u)), ~ (~ (_GLF_IDENTITY(_GLF_IDENTITY(workgroup_size * _GLF_struct_replacement_3.workgroup_id, (workgroup_size * _GLF_struct_replacement_3.workgroup_id) | (0u & 15107u)), (_GLF_IDENTITY(workgroup_size * _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_id, clamp(_GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_id, (false ? _GLF_FUZZED(workgroup_size) : _GLF_struct_replacement_3.workgroup_id)), _GLF_struct_replacement_3.workgroup_id, _GLF_IDENTITY(_GLF_struct_replacement_3.workgroup_id, 0u | (_GLF_struct_replacement_3.workgroup_id)))), (workgroup_size * _GLF_struct_replacement_3.workgroup_id) | (0u & 15107u))) - 0u)))), _GLF_IDENTITY(bvec2(true), bvec2(bvec2(bvec2(true)))));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(false), (_GLF_DEAD(false)) && _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint subgroup_base = subgroup_id * _GLF_IDENTITY(subgroup_size, min(_GLF_IDENTITY(subgroup_size, (subgroup_size) / 1u), subgroup_size));
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_IDENTITY(_GLF_DEAD(false), ! (! (_GLF_DEAD(false)))))
    return;
   return;
   if(_GLF_DEAD(false))
    return;
  }
 uint virtual_gid = _GLF_struct_replacement_4.workgroup_base + subgroup_base + subgroup_local_id;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(_GLF_IDENTITY(false, false || (_GLF_IDENTITY(false, ! (! (false)))))))
  return;
 if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
  {
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))))
      return;
     return;
    }
   return;
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 uint next_virtual_gid = _GLF_IDENTITY(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), _GLF_IDENTITY(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u), min(uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u), uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u)))), min(uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u), min(uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u), uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u)))), uint(_GLF_IDENTITY(uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u), min(uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u), uvec4(_GLF_struct_replacement_4.workgroup_base + subgroup_base + ((subgroup_local_id + 1) % _GLF_IDENTITY(subgroup_size, clamp(subgroup_size, subgroup_size, subgroup_size))), 0u, 1u, 1u)))))));
 if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(_GLF_IDENTITY(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)))))), true && (_GLF_IDENTITY(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : injectionSwitch)).x > injectionSwitch.y))), bool(bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))))))))))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_IDENTITY(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), bool(bvec4(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))), true, false, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))))))
  {
   if(_GLF_DEAD(false))
    return;
   return;
  }
 if(_GLF_DEAD(false))
  return;
 atomicStore(buf[virtual_gid], _GLF_IDENTITY(uint(1), (_GLF_IDENTITY(0u | 0u, (0u | 0u) | (_GLF_IDENTITY(0u | 0u, min(0u | 0u, 0u | 0u))))) | (uint(1))), _GLF_IDENTITY(_GLF_IDENTITY(4, (_GLF_IDENTITY(4, _GLF_IDENTITY(_GLF_IDENTITY(clamp(4, _GLF_IDENTITY(4, (4) / 1), _GLF_IDENTITY(_GLF_IDENTITY(4, int(_GLF_IDENTITY(ivec2(4, int(_GLF_ONE(1.0, injectionSwitch.y))), (ivec2(4, int(_GLF_ONE(1.0, injectionSwitch.y)))) | (ivec2(4, int(_GLF_ONE(1.0, injectionSwitch.y))))))), (4) >> _GLF_IDENTITY(0, max(_GLF_IDENTITY(0, 0 ^ (_GLF_IDENTITY(0, (0) + 0))), 0)))), (_GLF_IDENTITY(false, ! (! (false))) ? _GLF_FUZZED(67567) : _GLF_IDENTITY(clamp(4, 4, _GLF_IDENTITY(4, (4) >> 0)), 1 * (clamp(4, 4, _GLF_IDENTITY(4, (4) >> 0)))))), _GLF_IDENTITY((clamp(4, 4, _GLF_IDENTITY(4, (4) >> 0))), ((clamp(4, 4, _GLF_IDENTITY(4, (4) >> 0)))) - 0) | 0))) * 1), clamp(4, _GLF_IDENTITY(4, (4) * 1), 4)), 64, 4);
 if((subgroup_local_id % 2) == 0)
  {
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   subgroupAll(true);
   atomicStore(buf[next_virtual_gid], uint(2), 4, 64, 4);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, mix(float(injectionSwitch.y), float(_GLF_FUZZED(865.713)), bool(false)))))))
      return;
     return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_IDENTITY(_GLF_DEAD(_GLF_IDENTITY(false, false || (false))), _GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), false))), (_GLF_DEAD(false)) && true)), bool(_GLF_IDENTITY(bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), false))), (_GLF_DEAD(false)) && true)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), false))), (_GLF_DEAD(false)) && true))))), ! (! (bool(_GLF_IDENTITY(_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(false), _GLF_IDENTITY(false, true && (false)), false))), (_GLF_DEAD(false)) && true)), true && (_GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)) && (_GLF_IDENTITY(_GLF_IDENTITY(_GLF_DEAD(false), bool(bvec3(_GLF_DEAD(_GLF_IDENTITY(false, (_GLF_IDENTITY(false, bool(bvec4(_GLF_IDENTITY(false, false || (false)), true, _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), true)))) || false)), _GLF_IDENTITY(false, true && (false)), false))), (_GLF_DEAD(false)) && true))))))))))))
    {
     if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bool(false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x, (injectionSwitch.x) - sin(0.0)) > injectionSwitch.y))))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        {
         if(_GLF_DEAD(_GLF_IDENTITY(false, ! (! (false)))))
          return;
         return;
        }
       return;
      }
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
  }
 else
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   subgroupAll(false);
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      {
       if(_GLF_DEAD(false))
        return;
       return;
      }
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      {
       if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
        return;
       return;
      }
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     return;
    }
   atomicStore(buf[next_virtual_gid], uint(2), _GLF_IDENTITY(4, 0 ^ (4)), 64, 4);
   if(_GLF_DEAD(_GLF_IDENTITY(false, bool(bvec2(false, true)))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(_GLF_IDENTITY(false, bool(bool(false))), false || (_GLF_IDENTITY(false, bool(bool(false))))), (injectionSwitch.x > injectionSwitch.y)), bool(_GLF_IDENTITY(bvec3(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, max(injectionSwitch.y, injectionSwitch.y)))), true, true), bvec3(bvec4(bvec3(_GLF_FALSE(false, _GLF_IDENTITY((injectionSwitch.x > injectionSwitch.y), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, float(float(_GLF_IDENTITY(injectionSwitch.y, (true ? injectionSwitch.y : _GLF_FUZZED(1532.6351)))))), bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))) || false))))), true, true), _GLF_IDENTITY(true, bool(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(_GLF_IDENTITY(bvec3(bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false), bvec3(bvec3(bvec3(bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), false))))))), true, true)), bvec2(bvec2(bvec2(bvec4(_GLF_IDENTITY(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), false)), bvec2(bvec3(bvec2(bvec3(bvec2(true, _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y))), _GLF_IDENTITY(false, ! (! (false))))), false)))), true, true))))))))))))), _GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.y)), (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7.6) : injectionSwitch.y, clamp(false ? _GLF_FUZZED(-7.6) : injectionSwitch.y, _GLF_IDENTITY(false ? _GLF_FUZZED(-7.6) : injectionSwitch.y, (_GLF_IDENTITY(false ? _GLF_FUZZED(-7.6) : injectionSwitch.y, (false ? _GLF_FUZZED(-7.6) : injectionSwitch.y) + 0.0)) - 0.0), false ? _GLF_FUZZED(-7.6) : injectionSwitch.y))))) || false))), false)))))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
     if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
      return;
    }
   if(_GLF_DEAD(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), _GLF_IDENTITY(bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(_GLF_IDENTITY(false, true && (false)), (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, min(injectionSwitch, injectionSwitch)).x > injectionSwitch.y))))), _GLF_TRUE(true, (_GLF_IDENTITY(injectionSwitch.x, 1.0 * (_GLF_IDENTITY(injectionSwitch.x, float(vec2(injectionSwitch.x, 1.0))))) < injectionSwitch.y)), true, true)), true && (bool(bvec4(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))), _GLF_TRUE(true, (injectionSwitch.x < injectionSwitch.y)), true, true))))), _GLF_IDENTITY(bool(bvec3(_GLF_IDENTITY(_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))))))))))))), (_GLF_IDENTITY(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, _GLF_IDENTITY((_GLF_IDENTITY(_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true))), true && (_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(_GLF_IDENTITY(injectionSwitch.x, (true ? injectionSwitch.x : _GLF_FUZZED(5.8))) > injectionSwitch.y, true)))))), ! (! (_GLF_IDENTITY((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))), true && ((_GLF_IDENTITY(injectionSwitch.x > injectionSwitch.y, bool(bvec2(injectionSwitch.x > injectionSwitch.y, true)))))))))))))) && true), false, false)), ! (! (bool(bvec3(_GLF_IDENTITY(_GLF_FALSE(false, (_GLF_IDENTITY(injectionSwitch, (false ? _GLF_FUZZED(injectionSwitch) : _GLF_IDENTITY(injectionSwitch, vec2(0.0, 0.0) + (injectionSwitch)))).x > injectionSwitch.y)), bool(bool(_GLF_FALSE(false, (injectionSwitch.x > _GLF_IDENTITY(injectionSwitch, (true ? injectionSwitch : _GLF_FUZZED(vec2(-266.952, -970.783)))).y))))), false, false))))))))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     if(_GLF_DEAD(false))
      return;
     return;
    }
   if(_GLF_DEAD(_GLF_FALSE(false, (injectionSwitch.x > injectionSwitch.y))))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    {
     if(_GLF_DEAD(false))
      return;
     return;
    }
  }
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  return;
 if(_GLF_DEAD(false))
  {
   if(_GLF_DEAD(false))
    return;
   if(_GLF_DEAD(false))
    return;
   return;
  }
}

END

BUFFER tester DATA_TYPE uint32 SIZE 8388096 FILL 0
BUFFER expected DATA_TYPE uint32 SIZE 8388096 FILL 2
BUFFER injection DATA_TYPE vec2<float> DATA
 0.0 1.0
END

PIPELINE compute test_pipe
  ATTACH test
  BIND BUFFER tester AS storage DESCRIPTOR_SET 0 BINDING 0 
  BIND BUFFER injection AS uniform DESCRIPTOR_SET 0 BINDING 1 

  SUBGROUP test
	  VARYING_SIZE on
  END
END

RUN test_pipe 65532 1 1
EXPECT tester EQ_BUFFER expected
